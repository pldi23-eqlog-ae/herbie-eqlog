[{"compiler":[[32,26]],"method":["search"],"sampling":[[12,0.42878018121700734,0.13170722289942205,0.4395125958835706],[11,0.4282923766877502,0.1541462312452495,0.41756139206700027],[10,0.3570729154162109,0.2614632276818156,0.3814638569019735],[9,0.3551216972991824,0.30439002625644207,0.3404882764443755],[8,0.21073155663907528,0.5151215828955173,0.27414686046540737],[7,0.20292668417096138,0.5931703075766563,0.20390300825238228],[6,0.0,0.8741457164287567,0.1258542835712433],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":69.98193359375,"type":"analyze"},{"outcomes":[["body",512,"invalid",1.336181640625,8],["body",256,"invalid",67.04638671875,919],["body",1024,"invalid",5.270263671875,20],["body",512,"valid",153.44775390625,1037],["body",1024,"valid",579.953125,2101],["body",2048,"valid",113.013916015625,248],["body",256,"valid",355.223388671875,4870]],"time":1285.284912109375,"type":"sample"},{"compiler":[[31,25]],"egraph":[[0,2,2,2.041e-6],[4,3311,74,0.02261925],[3,1028,74,0.0072976659999999995],[2,299,74,0.002175791],[1,103,90,0.00065125],[0,35,90,0.000175417]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 x)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 x) eps)))) (*.f64 (-.f64 (/.f64 1 x) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 x) eps))))) 2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (*.f64 (neg.f64 (+.f64 1 eps)) x)))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) (neg.f64 x)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) (neg.f64 x)) (+.f64 (neg.f64 (/.f64 1 eps)) 1))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x)))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))) 2)","(*.f64 1/2 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))))","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 x)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 x) eps)))) (*.f64 (-.f64 (/.f64 1 x) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 x) eps))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 x)) (exp.f64 (*.f64 (-.f64 1 x) (neg.f64 eps)))) (*.f64 (+.f64 (/.f64 1 x) -1) (exp.f64 (*.f64 (+.f64 1 x) (neg.f64 eps))))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 x)) (pow.f64 (exp.f64 (-.f64 1 x)) (neg.f64 eps)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 x)) (neg.f64 eps)) (+.f64 (neg.f64 (/.f64 1 x)) 1))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 x)) (pow.f64 (exp.f64 eps) (+.f64 x -1)) (/.f64 (+.f64 1 (/.f64 -1 x)) (exp.f64 (fma.f64 eps x eps)))) 2)","(*.f64 1/2 (fma.f64 (+.f64 1 (/.f64 1 x)) (pow.f64 (exp.f64 eps) (+.f64 x -1)) (/.f64 (+.f64 1 (/.f64 -1 x)) (exp.f64 (fma.f64 eps x eps)))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":47.108154296875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,1697,37,0.016561291],[3,541,37,0.003827166],[2,159,37,0.001200625],[1,57,45,0.000368875],[0,20,45,0.0001115]],"inputs":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (exp.f64 (*.f64 (+.f64 1 eps) (neg.f64 x))))) 2)","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) (neg.f64 x))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (neg.f64 (+.f64 1 eps))) x))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (+.f64 eps -1)) x) (/.f64 (-.f64 1 (/.f64 1 eps)) (exp.f64 (fma.f64 eps x x)))) 2)","(/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))) 2)","(*.f64 1/2 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))))"]],"stop":[["node limit",1]],"time":27.760009765625,"type":"simplify"},{"compiler":[[56,43]],"time":0.781982421875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","next",30.27462146584641],["(*.f64 1/2 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))))","fresh",30.98289379066391]],"compiler":[[31,25],[27,20],[31,25],[27,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[30.23890389914705],"time":2.005859375,"type":"prune"},{"compiler":[[143,106]],"locations":[["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))",0.01171875,true],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))",0.01596665172363414,true],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))",0.01596665172363414,true],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.3566874811442404,true]],"time":34.378173828125,"type":"localize"},{"count":[[4,84]],"series":[["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","-inf",0.164794921875],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","inf",0.18505859375],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","x","0",0.287841796875],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","-inf",0.214111328125],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","inf",0.190185546875],["(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))","eps","0",0.31494140625],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","-inf",0.633056640625],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","inf",0.171875],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","x","0",0.595947265625],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","-inf",0.31005859375],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","inf",0.151123046875],["(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","eps","0",0.2529296875],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","-inf",0.14794921875],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","inf",0.14990234375],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","x","0",0.234130859375],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","-inf",0.154052734375],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","inf",0.169921875],["(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","eps","0",0.26904296875],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","-inf",0.68212890625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","inf",0.791015625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","x","0",0.840087890625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","-inf",0.89208984375],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","inf",0.592041015625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","eps","0",1.837890625]],"time":10.656982421875,"type":"series"},{"count":[[4,166]],"egraph":[[2,5981,73,0.038089873999999996],[1,412,73,0.007875123999999999],[0,18,84,0.000439916]],"inputs":[["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))","(*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (+.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) 1 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2)) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (*.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (+.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 2) (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 3) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3)) (/.f64 1 (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (*.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2)) (/.f64 1 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (sqrt.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (-.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (sqrt.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (*.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 3) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 3) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3)) (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (*.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2)) (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 3) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3))) (neg.f64 (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (*.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2))) (neg.f64 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 3) (pow.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) 3)) (+.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (-.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1)))) (*.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 3) (pow.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 3)) (+.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 2) (-.f64 (*.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (*.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2) (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))) (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 2) (*.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (-.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))) (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (+.f64 1 (expm1.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))) (+.f64 1 (expm1.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))) (exp.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (/.f64 1 (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))) (/.f64 1 (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (exp.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (exp.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (+.f64 1 (expm1.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1)))) (exp.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (exp.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1)))) (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (-.f64 1 eps)) x) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (+.f64 1 (/.f64 1 eps)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (+.f64 1 (/.f64 1 eps)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 1 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 1 (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 2) (cbrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2)) (cbrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) 2)) (cbrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 1 eps)) 2)) (*.f64 (cbrt.f64 (+.f64 1 (/.f64 1 eps))) (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 1 eps)) 2)) (*.f64 (cbrt.f64 (+.f64 1 (/.f64 1 eps))) (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (+.f64 1 (/.f64 1 eps))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (+.f64 1 (/.f64 1 eps))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (sqrt.f64 (-.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps)))) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (sqrt.f64 (exp.f64 (+.f64 (*.f64 (-.f64 1 eps) x) (log1p.f64 (/.f64 1 eps))))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (pow.f64 eps -1/2)) (*.f64 (hypot.f64 1 (pow.f64 eps -1/2)) (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (pow.f64 eps -1/2)) (*.f64 (hypot.f64 1 (pow.f64 eps -1/2)) (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (+.f64 1 (/.f64 1 eps))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (+.f64 1 (/.f64 1 eps))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2)) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2)) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x))) (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x))) (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 1 eps)) 2))) (cbrt.f64 (+.f64 1 (/.f64 1 eps))) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 1 eps)) 2))) (cbrt.f64 (+.f64 1 (/.f64 1 eps))) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (hypot.f64 1 (pow.f64 eps -1/2))) (hypot.f64 1 (pow.f64 eps -1/2)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (neg.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) (hypot.f64 1 (pow.f64 eps -1/2))) (hypot.f64 1 (pow.f64 eps -1/2)) (neg.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (fma.f64 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (/.f64 1 eps) -1) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 (-.f64 1 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (exp.f64 (-.f64 1 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (-.f64 1 eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (-.f64 1 eps)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (-.f64 1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (-.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (neg.f64 (-.f64 1 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 eps) x)) 2)) (cbrt.f64 (*.f64 (-.f64 1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (*.f64 (-.f64 1 eps) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (*.f64 (-.f64 1 eps) x))) (sqrt.f64 (*.f64 (-.f64 1 eps) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 (-.f64 1 eps)) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2) (cbrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (sqrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (+.f64 x (*.f64 eps x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (+.f64 1 eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (+.f64 1 eps)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (+.f64 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (+.f64 x (*.f64 eps x)))) (sqrt.f64 (+.f64 x (*.f64 eps x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (+.f64 -1 (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (+.f64 x (*.f64 eps x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x (*.f64 eps x))) 2)) (cbrt.f64 (+.f64 x (*.f64 eps x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 eps) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (neg.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (/.f64 1 eps)) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 eps -3) -1) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (+.f64 (+.f64 (pow.f64 eps -2) 1) (/.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 eps -2) -1) (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (+.f64 1 (/.f64 1 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 eps -3) -1) 1) (*.f64 (+.f64 (+.f64 (pow.f64 eps -2) 1) (/.f64 1 eps)) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 eps -2) -1) 1) (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 eps -3) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 (+.f64 (pow.f64 eps -2) 1) (/.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 eps -2) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) (+.f64 1 (/.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (+.f64 (pow.f64 eps -3) -1)) (+.f64 (+.f64 (pow.f64 eps -2) 1) (/.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 1 eps)) x) (+.f64 (pow.f64 eps -2) -1)) (+.f64 1 (/.f64 1 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 (/.f64 1 eps) -1)) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (exp.f64 (+.f64 1 eps)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (+.f64 x (*.f64 eps x)) (log.f64 (+.f64 (/.f64 1 eps) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (+.f64 x (*.f64 eps x)) (log.f64 (+.f64 (/.f64 1 eps) -1))) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",28],["egg-rr",28],["egg-rr",86]],"stop":[["node limit",1]],"time":75.27783203125,"type":"rewrite"},{"count":[[250,245]],"egraph":[[2,2827,2100,0.018236624],[1,784,2503,0.005481249],[0,226,2808,0.001120083]],"inputs":[["(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))) (*.f64 1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)))) (+.f64 (*.f64 -1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7))) (*.f64 -1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))))) (pow.f64 eps 6)) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","2","(+.f64 2 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2))))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (+.f64 (*.f64 (-.f64 (*.f64 1/6 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 3))) (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 3)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","1","(+.f64 1 (*.f64 (-.f64 eps 1) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (-.f64 eps 1) x)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (-.f64 eps 1) x) (*.f64 1/6 (*.f64 (pow.f64 (-.f64 eps 1) 3) (pow.f64 x 3))))))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 eps 1) x)))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (pow.f64 (+.f64 eps 1) 3) (pow.f64 x 3))))))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(/.f64 (exp.f64 (neg.f64 x)) eps)","(+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))))))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (/.f64 1 eps) 1)","(-.f64 (+.f64 (/.f64 1 eps) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))) 1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x))))) 1)","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 3) (pow.f64 x 3)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))))) 1)","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (exp.f64 (neg.f64 x)) (-.f64 (*.f64 x (exp.f64 (neg.f64 x))) (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x)))))))","(-.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))) (neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))","(*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1)))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)))) (fma.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) -1/6))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))) (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))))","(-.f64 (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 (/.f64 1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x)))) (fma.f64 (/.f64 -1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 -1/6 (exp.f64 x))))) (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))) (neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))","(fma.f64 (*.f64 eps eps) (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (+.f64 (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x))) (*.f64 (*.f64 x (/.f64 x (exp.f64 x))) 1))) (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (fma.f64 (pow.f64 eps 4) (-.f64 (fma.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (fma.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)) (*.f64 (*.f64 -1/120 (exp.f64 (neg.f64 x))) (pow.f64 x 5)))) (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)))) (fma.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) -1/6))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x)))))) (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))))","(-.f64 (fma.f64 (pow.f64 eps 4) (-.f64 (fma.f64 (/.f64 1/120 (exp.f64 x)) (pow.f64 x 5) (*.f64 (pow.f64 x 4) (/.f64 1/24 (exp.f64 x)))) (fma.f64 (/.f64 -1/24 (exp.f64 x)) (pow.f64 x 4) (*.f64 (pow.f64 x 5) (/.f64 -1/120 (exp.f64 x))))) (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 (/.f64 1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x)))) (fma.f64 (/.f64 -1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 -1/6 (exp.f64 x))))) (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))))) (neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))","(fma.f64 (pow.f64 eps 4) (fma.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)) (+.f64 (*.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x))) (*.f64 (/.f64 (pow.f64 x 4) (exp.f64 x)) 1/12))) (fma.f64 (*.f64 eps eps) (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (+.f64 (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x))) (*.f64 (*.f64 x (/.f64 x (exp.f64 x))) 1))) (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1)))))","(-.f64 (+.f64 (*.f64 (pow.f64 eps 4) (-.f64 (+.f64 (*.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5))) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (+.f64 (*.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4))) (*.f64 -1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)))))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))) (*.f64 1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)))) (+.f64 (*.f64 -1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7))) (*.f64 -1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6))))) (pow.f64 eps 6)) (+.f64 (*.f64 (pow.f64 eps 2) (-.f64 (+.f64 (*.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(-.f64 (fma.f64 (pow.f64 eps 4) (-.f64 (fma.f64 1/120 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 5)) (*.f64 1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)))) (fma.f64 -1/24 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 4)) (*.f64 (*.f64 -1/120 (exp.f64 (neg.f64 x))) (pow.f64 x 5)))) (fma.f64 (-.f64 (fma.f64 1/720 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6)) (*.f64 1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)))) (fma.f64 -1/5040 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 7)) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 6)) -1/720))) (pow.f64 eps 6) (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)))) (fma.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) -1/6))) (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))))) (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))))","(-.f64 (fma.f64 (pow.f64 eps 4) (-.f64 (fma.f64 (/.f64 1/120 (exp.f64 x)) (pow.f64 x 5) (*.f64 (pow.f64 x 4) (/.f64 1/24 (exp.f64 x)))) (fma.f64 (/.f64 -1/24 (exp.f64 x)) (pow.f64 x 4) (*.f64 (pow.f64 x 5) (/.f64 -1/120 (exp.f64 x))))) (fma.f64 (-.f64 (fma.f64 (/.f64 1/720 (exp.f64 x)) (pow.f64 x 6) (*.f64 (pow.f64 x 7) (/.f64 1/5040 (exp.f64 x)))) (fma.f64 (/.f64 -1/5040 (exp.f64 x)) (pow.f64 x 7) (*.f64 (pow.f64 x 6) (/.f64 -1/720 (exp.f64 x))))) (pow.f64 eps 6) (fma.f64 (*.f64 eps eps) (-.f64 (fma.f64 (/.f64 1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x)))) (fma.f64 (/.f64 -1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 -1/6 (exp.f64 x))))) (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))) (neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))))","(+.f64 (fma.f64 (pow.f64 eps 4) (fma.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x)) (+.f64 (*.f64 1/120 (/.f64 (pow.f64 x 5) (exp.f64 x))) (*.f64 (/.f64 (pow.f64 x 4) (exp.f64 x)) 1/12))) (*.f64 (fma.f64 1/720 (/.f64 (pow.f64 x 6) (exp.f64 x)) (+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 6) (exp.f64 x))) (*.f64 (/.f64 (pow.f64 x 7) (exp.f64 x)) 1/2520))) (pow.f64 eps 6))) (fma.f64 (*.f64 eps eps) (fma.f64 1/6 (/.f64 (pow.f64 x 3) (exp.f64 x)) (+.f64 (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x))) (*.f64 (*.f64 x (/.f64 x (exp.f64 x))) 1))) (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1)))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))))","(-.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) (neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x)))))","(+.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(+.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x))) eps) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) (neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x)))))","(+.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(+.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x))))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (neg.f64 (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x)))))","(+.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) (-.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (/.f64 (fma.f64 -1 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (exp.f64 (neg.f64 (fma.f64 x eps x)))) eps)))","(+.f64 (+.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) (/.f64 (-.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) eps))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x))))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (neg.f64 (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x)))))","(+.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) (-.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (/.f64 (fma.f64 -1 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (exp.f64 (neg.f64 (fma.f64 x eps x)))) eps)))","(+.f64 (+.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) (/.f64 (-.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) eps))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))) eps)) (exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x))))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (neg.f64 (exp.f64 (*.f64 (-.f64 1 (neg.f64 eps)) (neg.f64 x)))))","(+.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) (-.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (/.f64 (fma.f64 -1 (pow.f64 (exp.f64 (-.f64 eps 1)) x) (exp.f64 (neg.f64 (fma.f64 x eps x)))) eps)))","(+.f64 (+.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) (/.f64 (-.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (pow.f64 (exp.f64 x) (-.f64 -1 eps))) eps))","2","(+.f64 2 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x))","(+.f64 2 (*.f64 x (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1)) (neg.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 eps 1))))))","(fma.f64 x (fma.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1) (*.f64 (+.f64 -1 (/.f64 1 eps)) (+.f64 eps 1))) 2)","(fma.f64 x (fma.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 eps 1) (+.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 -1 eps))) 2)","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2))))","(+.f64 2 (fma.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1)) (neg.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 eps 1)))) x (*.f64 (*.f64 x x) (*.f64 1/2 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 2)) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (+.f64 eps 1) 2)))))))","(+.f64 2 (fma.f64 x (fma.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1) (*.f64 (+.f64 -1 (/.f64 1 eps)) (+.f64 eps 1))) (*.f64 (*.f64 x x) (*.f64 1/2 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 2)) (*.f64 (+.f64 -1 (/.f64 1 eps)) (pow.f64 (+.f64 eps 1) 2)))))))","(+.f64 2 (*.f64 x (+.f64 (fma.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 eps 1) (+.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 -1 eps))) (*.f64 (-.f64 (*.f64 (pow.f64 (-.f64 eps 1) 2) (+.f64 1/2 (/.f64 1/2 eps))) (*.f64 (pow.f64 (+.f64 eps 1) 2) (+.f64 -1/2 (/.f64 1/2 eps)))) x))))","(+.f64 2 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (-.f64 eps 1)) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (+.f64 1 eps)))) x) (+.f64 (*.f64 (-.f64 (*.f64 1/6 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 3))) (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 3)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) 1) (pow.f64 (-.f64 eps 1) 2))) (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (pow.f64 (+.f64 1 eps) 2)))) (pow.f64 x 2)))))","(+.f64 2 (fma.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1)) (neg.f64 (*.f64 (+.f64 (/.f64 1 eps) -1) (+.f64 eps 1)))) x (fma.f64 (+.f64 (*.f64 1/6 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 3))) (*.f64 1/6 (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (+.f64 eps 1) 3)))) (pow.f64 x 3) (*.f64 (*.f64 x x) (*.f64 1/2 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 2)) (*.f64 (+.f64 (/.f64 1 eps) -1) (pow.f64 (+.f64 eps 1) 2))))))))","(+.f64 2 (fma.f64 x (fma.f64 (+.f64 1 (/.f64 1 eps)) (-.f64 eps 1) (*.f64 (+.f64 -1 (/.f64 1 eps)) (+.f64 eps 1))) (fma.f64 (pow.f64 x 3) (*.f64 1/6 (+.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 3)) (*.f64 (+.f64 -1 (/.f64 1 eps)) (pow.f64 (+.f64 eps 1) 3)))) (*.f64 (*.f64 x x) (*.f64 1/2 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (-.f64 eps 1) 2)) (*.f64 (+.f64 -1 (/.f64 1 eps)) (pow.f64 (+.f64 eps 1) 2))))))))","(+.f64 (fma.f64 x (fma.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 eps 1) (+.f64 (/.f64 (+.f64 eps 1) eps) (-.f64 -1 eps))) 2) (*.f64 (*.f64 x x) (+.f64 (-.f64 (*.f64 (pow.f64 (-.f64 eps 1) 2) (+.f64 1/2 (/.f64 1/2 eps))) (*.f64 (pow.f64 (+.f64 eps 1) 2) (+.f64 -1/2 (/.f64 1/2 eps)))) (*.f64 (fma.f64 (pow.f64 (-.f64 eps 1) 3) (+.f64 1/6 (/.f64 1/6 eps)) (*.f64 (pow.f64 (+.f64 eps 1) 3) (+.f64 -1/6 (/.f64 1/6 eps)))) x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (-.f64 (*.f64 eps x) x))) (*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1)))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(-.f64 (*.f64 (+.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))","(-.f64 (+.f64 (/.f64 (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x))) eps) (exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))) (fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps)))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (-.f64 eps 1)) x) eps) (pow.f64 (exp.f64 (-.f64 eps 1)) x)) (-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x)))))","(fma.f64 (pow.f64 (exp.f64 x) (-.f64 eps 1)) (/.f64 (+.f64 eps 1) eps) (/.f64 (/.f64 (-.f64 eps 1) eps) (exp.f64 (fma.f64 x eps x))))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (exp.f64 (neg.f64 x)))","(fma.f64 eps (*.f64 x (exp.f64 (neg.f64 x))) (exp.f64 (neg.f64 x)))","(fma.f64 (/.f64 eps (exp.f64 x)) x (exp.f64 (neg.f64 x)))","(*.f64 (+.f64 (*.f64 x eps) 1) (exp.f64 (neg.f64 x)))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(fma.f64 eps (*.f64 x (exp.f64 (neg.f64 x))) (fma.f64 1/2 (*.f64 (*.f64 eps eps) (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x))) (exp.f64 (neg.f64 x))))","(fma.f64 (/.f64 eps (exp.f64 x)) x (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 eps (/.f64 eps (exp.f64 x)))) (exp.f64 (neg.f64 x))))","(fma.f64 (/.f64 x (exp.f64 x)) eps (*.f64 (+.f64 (*.f64 (*.f64 (*.f64 eps eps) 1/2) (*.f64 x x)) 1) (exp.f64 (neg.f64 x))))","(+.f64 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (exp.f64 (neg.f64 x)))))","(fma.f64 eps (*.f64 x (exp.f64 (neg.f64 x))) (fma.f64 1/2 (*.f64 (*.f64 eps eps) (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x))) (fma.f64 1/6 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) (pow.f64 eps 3)) (exp.f64 (neg.f64 x)))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 eps (/.f64 eps (exp.f64 x)))) (*.f64 (*.f64 (pow.f64 x 3) (/.f64 1/6 (exp.f64 x))) (pow.f64 eps 3))) (fma.f64 (/.f64 eps (exp.f64 x)) x (exp.f64 (neg.f64 x))))","(fma.f64 (/.f64 x (exp.f64 x)) eps (fma.f64 1/2 (*.f64 eps (*.f64 eps (*.f64 x (/.f64 x (exp.f64 x))))) (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 eps 3) (pow.f64 x 3)) (exp.f64 x)) (exp.f64 (neg.f64 x)))))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (neg.f64 (*.f64 (+.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","1","(+.f64 1 (*.f64 (-.f64 eps 1) x))","(+.f64 1 (*.f64 x (-.f64 eps 1)))","(fma.f64 x (-.f64 eps 1) 1)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (*.f64 (-.f64 eps 1) x)))","(fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (-.f64 eps 1) 2)) (+.f64 1 (*.f64 x (-.f64 eps 1))))","(fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (-.f64 eps 1) 2)) (fma.f64 x (-.f64 eps 1) 1))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 eps 1) 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 (-.f64 eps 1) x) (*.f64 1/6 (*.f64 (pow.f64 (-.f64 eps 1) 3) (pow.f64 x 3))))))","(fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (-.f64 eps 1) 2)) (+.f64 1 (fma.f64 (-.f64 eps 1) x (*.f64 1/6 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 eps 1) 3))))))","(+.f64 (fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (-.f64 eps 1) 2)) (fma.f64 x (-.f64 eps 1) 1)) (*.f64 1/6 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 eps 1) 3))))","(+.f64 (fma.f64 x (-.f64 eps 1) 1) (*.f64 (*.f64 x x) (+.f64 (*.f64 (*.f64 1/6 (pow.f64 (-.f64 eps 1) 3)) x) (*.f64 1/2 (pow.f64 (-.f64 eps 1) 2)))))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (-.f64 (*.f64 eps x) x))","(exp.f64 (*.f64 (-.f64 1 eps) (neg.f64 x)))","(pow.f64 (exp.f64 (-.f64 eps 1)) x)","(pow.f64 (exp.f64 x) (-.f64 eps 1))","(exp.f64 (neg.f64 x))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (exp.f64 (neg.f64 x)))","(fma.f64 -1 (*.f64 (*.f64 x (exp.f64 (neg.f64 x))) eps) (exp.f64 (neg.f64 x)))","(-.f64 (exp.f64 (neg.f64 x)) (*.f64 x (/.f64 eps (exp.f64 x))))","(-.f64 (exp.f64 (neg.f64 x)) (*.f64 (/.f64 x (exp.f64 x)) eps))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x))))","(fma.f64 -1 (*.f64 (*.f64 x (exp.f64 (neg.f64 x))) eps) (fma.f64 1/2 (*.f64 (*.f64 eps eps) (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x))) (exp.f64 (neg.f64 x))))","(-.f64 (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 eps (/.f64 eps (exp.f64 x)))) (exp.f64 (neg.f64 x))) (*.f64 x (/.f64 eps (exp.f64 x))))","(-.f64 (*.f64 (+.f64 (*.f64 (*.f64 (*.f64 eps eps) 1/2) (*.f64 x x)) 1) (exp.f64 (neg.f64 x))) (*.f64 (/.f64 x (exp.f64 x)) eps))","(+.f64 (*.f64 -1 (*.f64 eps (*.f64 (exp.f64 (neg.f64 x)) x))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 eps 3) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 eps 2) (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) (exp.f64 (neg.f64 x)))))","(fma.f64 -1 (*.f64 (*.f64 x (exp.f64 (neg.f64 x))) eps) (fma.f64 -1/6 (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) (pow.f64 eps 3)) (fma.f64 1/2 (*.f64 (*.f64 eps eps) (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x))) (exp.f64 (neg.f64 x)))))","(-.f64 (+.f64 (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 eps (/.f64 eps (exp.f64 x)))) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 (pow.f64 x 3) (/.f64 -1/6 (exp.f64 x))) (pow.f64 eps 3))) (*.f64 x (/.f64 eps (exp.f64 x))))","(-.f64 (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 eps 3) (pow.f64 x 3)) (exp.f64 x)) (*.f64 (+.f64 (*.f64 (*.f64 (*.f64 eps eps) 1/2) (*.f64 x x)) 1) (exp.f64 (neg.f64 x)))) (*.f64 (/.f64 x (exp.f64 x)) eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 eps 1) x)))","(+.f64 1 (neg.f64 (fma.f64 eps x x)))","(-.f64 1 (fma.f64 x eps x))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 -1 (fma.f64 eps x x) (*.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (+.f64 eps 1) 2)))))","(+.f64 1 (-.f64 (*.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x))) (fma.f64 x eps x)))","(+.f64 1 (fma.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)) (*.f64 x (-.f64 -1 eps))))","(+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 eps 1) x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 eps 1) 2) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (pow.f64 (+.f64 eps 1) 3) (pow.f64 x 3))))))","(+.f64 1 (fma.f64 -1 (fma.f64 eps x x) (fma.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (+.f64 eps 1) 2)) (*.f64 -1/6 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 eps 1) 3))))))","(+.f64 1 (-.f64 (fma.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)) (*.f64 (pow.f64 (+.f64 eps 1) 3) (*.f64 (pow.f64 x 3) -1/6))) (fma.f64 x eps x)))","(+.f64 (-.f64 1 (fma.f64 x eps x)) (fma.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)) (*.f64 (pow.f64 (+.f64 eps 1) 3) (*.f64 (pow.f64 x 3) -1/6))))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))","(exp.f64 (neg.f64 (fma.f64 eps x x)))","(exp.f64 (neg.f64 (fma.f64 x eps x)))","(pow.f64 (exp.f64 x) (-.f64 -1 eps))","(/.f64 (exp.f64 (neg.f64 x)) eps)","(+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x)))))","(+.f64 (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))) (/.f64 (exp.f64 (neg.f64 x)) eps))","(fma.f64 -1 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))) (/.f64 (exp.f64 (neg.f64 x)) eps))","(+.f64 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x)) (/.f64 (exp.f64 (neg.f64 x)) eps))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))))","(fma.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)))) eps (+.f64 (*.f64 -1 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x))))) (/.f64 (exp.f64 (neg.f64 x)) eps)))","(fma.f64 eps (fma.f64 x (exp.f64 (neg.f64 x)) (*.f64 (*.f64 x x) (/.f64 1/2 (exp.f64 x)))) (fma.f64 -1 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))) (/.f64 (exp.f64 (neg.f64 x)) eps)))","(+.f64 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x)) (fma.f64 eps (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x (*.f64 1/2 (*.f64 x x)))) (/.f64 (exp.f64 (neg.f64 x)) eps)))","(+.f64 (*.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) x) (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2)))) eps) (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 2))) (*.f64 -1/6 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)))))))))","(fma.f64 (fma.f64 (exp.f64 (neg.f64 x)) x (*.f64 1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)))) eps (+.f64 (/.f64 (exp.f64 (neg.f64 x)) eps) (fma.f64 -1 (*.f64 x (exp.f64 (neg.f64 x))) (fma.f64 -1 (exp.f64 (neg.f64 x)) (*.f64 (*.f64 eps eps) (fma.f64 -1/2 (*.f64 (exp.f64 (neg.f64 x)) (*.f64 x x)) (*.f64 (*.f64 (exp.f64 (neg.f64 x)) (pow.f64 x 3)) -1/6)))))))","(+.f64 (fma.f64 eps (fma.f64 x (exp.f64 (neg.f64 x)) (*.f64 (*.f64 x x) (/.f64 1/2 (exp.f64 x)))) (fma.f64 -1 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))) (/.f64 (exp.f64 (neg.f64 x)) eps))) (*.f64 (*.f64 eps eps) (fma.f64 (/.f64 -1/2 (exp.f64 x)) (*.f64 x x) (*.f64 (pow.f64 x 3) (/.f64 -1/6 (exp.f64 x))))))","(+.f64 (+.f64 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x)) (fma.f64 eps (*.f64 (exp.f64 (neg.f64 x)) (+.f64 x (*.f64 1/2 (*.f64 x x)))) (/.f64 (exp.f64 (neg.f64 x)) eps))) (*.f64 (*.f64 eps eps) (*.f64 (exp.f64 (neg.f64 x)) (+.f64 (*.f64 -1/2 (*.f64 x x)) (*.f64 -1/6 (pow.f64 x 3))))))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))))","(neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))))","(/.f64 -1 (exp.f64 (fma.f64 x eps x)))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(+.f64 (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x)))) (/.f64 (exp.f64 (neg.f64 (*.f64 (+.f64 eps 1) x))) eps))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))))","(neg.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))))","(/.f64 -1 (exp.f64 (fma.f64 x eps x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x))) eps) (*.f64 -1 (exp.f64 (neg.f64 (*.f64 (-.f64 1 (*.f64 -1 eps)) x)))))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(-.f64 (/.f64 1 eps) 1)","(+.f64 (/.f64 1 eps) -1)","(+.f64 -1 (/.f64 1 eps))","(-.f64 (+.f64 (/.f64 1 eps) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))) 1)","(+.f64 (+.f64 (/.f64 1 eps) (neg.f64 (*.f64 (fma.f64 eps x x) (+.f64 (/.f64 1 eps) -1)))) -1)","(+.f64 -1 (-.f64 (/.f64 1 eps) (*.f64 (fma.f64 x eps x) (+.f64 -1 (/.f64 1 eps)))))","(*.f64 (+.f64 -1 (/.f64 1 eps)) (-.f64 1 (fma.f64 x eps x)))","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x))))) 1)","(+.f64 (/.f64 1 eps) (-.f64 (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) -1) (*.f64 (*.f64 x x) (pow.f64 (+.f64 eps 1) 2))) (neg.f64 (*.f64 (fma.f64 eps x x) (+.f64 (/.f64 1 eps) -1)))) 1))","(+.f64 -1 (+.f64 (/.f64 1 eps) (-.f64 (*.f64 1/2 (*.f64 (+.f64 -1 (/.f64 1 eps)) (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)))) (*.f64 (fma.f64 x eps x) (+.f64 -1 (/.f64 1 eps))))))","(+.f64 (/.f64 1 eps) (+.f64 (*.f64 (+.f64 -1 (/.f64 1 eps)) (fma.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)) (*.f64 x (-.f64 -1 eps)))) -1))","(-.f64 (+.f64 (/.f64 1 eps) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 2) (pow.f64 x 2)))) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (pow.f64 (+.f64 1 eps) 3) (pow.f64 x 3)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 eps) 1) (*.f64 (+.f64 1 eps) x)))))) 1)","(+.f64 (+.f64 (/.f64 1 eps) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 eps) -1) (*.f64 (*.f64 x x) (pow.f64 (+.f64 eps 1) 2))) (fma.f64 -1/6 (*.f64 (+.f64 (/.f64 1 eps) -1) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 eps 1) 3))) (neg.f64 (*.f64 (fma.f64 eps x x) (+.f64 (/.f64 1 eps) -1)))))) -1)","(+.f64 -1 (+.f64 (/.f64 1 eps) (fma.f64 1/2 (*.f64 (+.f64 -1 (/.f64 1 eps)) (*.f64 (fma.f64 x eps x) (fma.f64 x eps x))) (-.f64 (*.f64 -1/6 (*.f64 (+.f64 -1 (/.f64 1 eps)) (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 eps 1) 3)))) (*.f64 (fma.f64 x eps x) (+.f64 -1 (/.f64 1 eps)))))))","(+.f64 (*.f64 (+.f64 -1 (/.f64 1 eps)) (fma.f64 1/2 (*.f64 (fma.f64 x eps x) (fma.f64 x eps x)) (*.f64 (pow.f64 (+.f64 eps 1) 3) (*.f64 (pow.f64 x 3) -1/6)))) (*.f64 (+.f64 -1 (/.f64 1 eps)) (-.f64 1 (fma.f64 x eps x))))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))","(*.f64 (exp.f64 (neg.f64 (+.f64 (*.f64 eps x) x))) (-.f64 (/.f64 1 eps) 1))","(fma.f64 -1 (exp.f64 (neg.f64 (fma.f64 eps x x))) (/.f64 (exp.f64 (neg.f64 (fma.f64 eps x x))) eps))","(-.f64 (/.f64 (exp.f64 (neg.f64 (fma.f64 x eps x))) eps) (exp.f64 (neg.f64 (fma.f64 x eps x))))","(/.f64 (+.f64 -1 (/.f64 1 eps)) (exp.f64 (fma.f64 x eps x)))"]],"stop":[["node limit",1]],"time":50.4140625,"type":"simplify"},{"compiler":[[10167,7622]],"time":105.98193359375,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641],["(/.f64 (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1))) 2)","fresh",0.1939096239033163],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","next",0.1939096239033163],["(/.f64 2 2)","fresh",14.82749664449937]],"compiler":[[31,25],[13,11],[27,14],[5,5],[13,11],[27,14],[5,5]],"count":[[247,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[245,3],"picked":[1,1]}],"min-error":[0.0078125],"time":46.949951171875,"type":"prune"},{"compiler":[[97,31]],"locations":[["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))",0.015625,true],["(+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))",0.015625,true]],"time":13.5341796875,"type":"localize"},{"count":[[2,18]],"series":[["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","x","-inf",0.2109375],["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","x","inf",0.197021484375],["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))","x","0",0.19384765625],["(+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))","x","-inf",0.408935546875],["(+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))","x","inf",0.43212890625],["(+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))","x","0",0.337890625]],"time":1.873046875,"type":"series"},{"count":[[2,108]],"egraph":[[2,3481,18,0.018792125],[1,220,18,0.004287666999999999],[0,10,36,0.00027375]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))","(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x))) (/.f64 (pow.f64 (exp.f64 x) 2) (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (exp.f64 x) 2) (*.f64 (exp.f64 x) (+.f64 1 x))) (/.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (/.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)) (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (/.f64 1 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (*.f64 x (exp.f64 x)))) (-.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (*.f64 x (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (exp.f64 x))) (-.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2))) (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x)))) (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)) (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))) (neg.f64 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)) (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (exp.f64 x)) 3) (pow.f64 (exp.f64 x) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (exp.f64 x) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) -1 (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) x (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (exp.f64 x)) -1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2)) (cbrt.f64 (*.f64 x (exp.f64 x))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (*.f64 x (exp.f64 x))) (exp.f64 x))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x))) (/.f64 (pow.f64 (exp.f64 x) 2) (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (exp.f64 x) 2) (*.f64 (exp.f64 x) (+.f64 1 x))) (/.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 x) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (/.f64 1 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)) (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (/.f64 1 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (*.f64 x (exp.f64 x)))) (-.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (*.f64 x (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (exp.f64 x))) (-.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2))) (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x)))) (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)) (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))) (neg.f64 (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2)) (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (exp.f64 x)) 3) (pow.f64 (exp.f64 x) 3)) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (exp.f64 x) 3) (pow.f64 (*.f64 x (exp.f64 x)) 3))) (-.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2) (*.f64 (pow.f64 (exp.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (exp.f64 x) (+.f64 1 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (exp.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (exp.f64 x) (+.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (exp.f64 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (exp.f64 x) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) -1 (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 x) x (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (exp.f64 x)) -1 (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 x) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (exp.f64 x)) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) (cbrt.f64 (exp.f64 x)) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (exp.f64 x)) 2)) (cbrt.f64 (*.f64 x (exp.f64 x))) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 x)) (sqrt.f64 (exp.f64 x)) (*.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (exp.f64 x))) (sqrt.f64 (*.f64 x (exp.f64 x))) (exp.f64 x))))))"]],"rules":[["egg-rr",54],["egg-rr",54]],"stop":[["node limit",1]],"time":41.452880859375,"type":"rewrite"},{"count":[[126,78]],"egraph":[[5,6106,162,0.029476125],[4,3014,162,0.015200208],[3,846,162,0.00642275],[2,258,187,0.0020200419999999997],[1,113,202,0.000738458],[0,44,225,0.000226708]],"inputs":[["-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x))","(*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(*.f64 (exp.f64 (neg.f64 x)) x)","(*.f64 (exp.f64 (*.f64 -1 x)) x)","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(fma.f64 1/2 (*.f64 x x) -1)","(fma.f64 x (*.f64 1/2 x) -1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(+.f64 (fma.f64 1/2 (*.f64 x x) (*.f64 -1/3 (pow.f64 x 3))) -1)","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/3 (pow.f64 x 3) -1))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) -1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 1/8 (pow.f64 x 4) (fma.f64 1/2 (*.f64 x x) (*.f64 -1/3 (pow.f64 x 3)))) -1)","(fma.f64 1/8 (pow.f64 x 4) (fma.f64 1/2 (*.f64 x x) (fma.f64 -1/3 (pow.f64 x 3) -1)))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) (fma.f64 1/8 (pow.f64 x 4) -1))","(*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x))","(neg.f64 (*.f64 x (exp.f64 (neg.f64 x))))","(*.f64 x (/.f64 -1 (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x))","(neg.f64 (*.f64 x (exp.f64 (neg.f64 x))))","(*.f64 x (/.f64 -1 (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","(*.f64 -1 (fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x))))","(neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","(*.f64 -1 (fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x))))","(neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -1 x)) x)) (*.f64 -1 (exp.f64 (*.f64 -1 x))))","(*.f64 -1 (fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x))))","(neg.f64 (*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x))))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(/.f64 (-.f64 -1 x) (exp.f64 x))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (*.f64 (*.f64 x x) -1/2))","(fma.f64 (*.f64 x x) -1/2 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 3))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (*.f64 (pow.f64 x 3) 1/3)))","(+.f64 1 (fma.f64 (*.f64 x x) -1/2 (*.f64 (pow.f64 x 3) 1/3)))","(fma.f64 (pow.f64 x 3) 1/3 (fma.f64 (*.f64 x x) -1/2 1))","(fma.f64 x (*.f64 x (fma.f64 x 1/3 -1/2)) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/3 (pow.f64 x 3) (*.f64 (pow.f64 x 4) -1/8))))","(+.f64 1 (fma.f64 (*.f64 x x) -1/2 (fma.f64 (pow.f64 x 3) 1/3 (*.f64 (pow.f64 x 4) -1/8))))","(+.f64 1 (fma.f64 (pow.f64 x 4) -1/8 (*.f64 (*.f64 x x) (+.f64 -1/2 (*.f64 x 1/3)))))","(fma.f64 x (*.f64 x (fma.f64 x 1/3 -1/2)) (fma.f64 (pow.f64 x 4) -1/8 1))","(*.f64 (exp.f64 (neg.f64 x)) x)","(*.f64 x (exp.f64 (neg.f64 x)))","(/.f64 x (exp.f64 x))","(*.f64 (exp.f64 (*.f64 -1 x)) x)","(*.f64 x (exp.f64 (neg.f64 x)))","(/.f64 x (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x)))","(*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x)))","(*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","(/.f64 (+.f64 x 1) (exp.f64 x))","(+.f64 (*.f64 (exp.f64 (*.f64 -1 x)) x) (exp.f64 (*.f64 -1 x)))","(fma.f64 (exp.f64 (neg.f64 x)) x (exp.f64 (neg.f64 x)))","(*.f64 (+.f64 x 1) (exp.f64 (neg.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (+.f64 x 1))","(/.f64 (+.f64 x 1) (exp.f64 x))"]],"stop":[["node limit",1]],"time":43.64111328125,"type":"simplify"},{"compiler":[[1917,819]],"time":14.576904296875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","next",0.1860971239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641],["(/.f64 (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1))) 2)","fresh",0.1939096239033163],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","done",0.1939096239033163]],"compiler":[[20,13],[31,25],[13,11],[27,14],[20,13],[13,11]],"count":[[82,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[78,1],"picked":[1,1]}],"min-error":[0],"time":10.257080078125,"type":"prune"},{"compiler":[[69,24]],"locations":[["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))",0.015625,false],["(/.f64 (-.f64 -1 x) (exp.f64 x))",0.015625,true]],"time":11.888916015625,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 (-.f64 -1 x) (exp.f64 x))","x","-inf",0.35693359375],["(/.f64 (-.f64 -1 x) (exp.f64 x))","x","inf",0.510986328125],["(/.f64 (-.f64 -1 x) (exp.f64 x))","x","0",0.2939453125]],"time":1.2109375,"type":"series"},{"count":[[1,33]],"egraph":[[2,1863,9,0.018393292],[1,131,9,0.002374709],[0,6,9,0.000183667]],"inputs":[["(/.f64 (-.f64 -1 x) (exp.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (exp.f64 x)) (neg.f64 (/.f64 x (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (-.f64 -1 x) (exp.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (exp.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 2) (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 x)) 2) (*.f64 (cbrt.f64 (-.f64 -1 x)) (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) (sqrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 -1 x)) (*.f64 (sqrt.f64 (-.f64 -1 x)) (exp.f64 (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 -1 x)) (/.f64 -1 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (exp.f64 x))) (/.f64 (-.f64 -1 x) (sqrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 -1 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 x)) 1) (/.f64 (sqrt.f64 (-.f64 -1 x)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 x)) 2) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 x)) (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (sqrt.f64 (-.f64 -1 x)) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 x)) 2) (sqrt.f64 (exp.f64 x))) (/.f64 (cbrt.f64 (-.f64 -1 x)) (sqrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 x) (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (neg.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 3) (pow.f64 (exp.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (-.f64 -1 x)) x))))))"]],"rules":[["egg-rr",33]],"stop":[["node limit",1]],"time":36.080078125,"type":"rewrite"},{"count":[[45,44]],"egraph":[[6,7360,107,0.032192708],[5,3958,107,0.019117458000000004],[4,1416,125,0.008495833000000001],[3,441,140,0.003231208],[2,146,146,0.001178708],[1,67,152,0.000465625],[0,26,156,0.000148542]],"inputs":[["-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(*.f64 -1 (/.f64 x (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(*.f64 -1 (/.f64 x (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(fma.f64 1/2 (*.f64 x x) -1)","(fma.f64 x (*.f64 1/2 x) -1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(+.f64 (fma.f64 1/2 (*.f64 x x) (*.f64 -1/3 (pow.f64 x 3))) -1)","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/3 (pow.f64 x 3) -1))","(fma.f64 -1/3 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x x) -1))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) -1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 1/8 (pow.f64 x 4) (fma.f64 1/2 (*.f64 x x) (*.f64 -1/3 (pow.f64 x 3)))) -1)","(fma.f64 1/8 (pow.f64 x 4) (fma.f64 1/2 (*.f64 x x) (fma.f64 -1/3 (pow.f64 x 3) -1)))","(fma.f64 1/8 (pow.f64 x 4) (fma.f64 -1/3 (pow.f64 x 3) (fma.f64 1/2 (*.f64 x x) -1)))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) (fma.f64 1/8 (pow.f64 x 4) -1))","(fma.f64 x (*.f64 x (fma.f64 x (fma.f64 x 1/8 -1/3) 1/2)) -1)","(*.f64 -1 (/.f64 x (exp.f64 x)))","(neg.f64 (/.f64 x (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(*.f64 -1 (/.f64 x (exp.f64 x)))","(neg.f64 (/.f64 x (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (+.f64 x 1) (/.f64 -1 (exp.f64 x)))","(/.f64 (-.f64 -1 x) (exp.f64 x))"]],"stop":[["node limit",1]],"time":45.64306640625,"type":"simplify"},{"compiler":[[1207,576]],"time":10.161865234375,"type":"eval"},{"alts":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))) 2)","next",0.18838213367175835],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","done",0.1860971239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","done",0.1939096239033163]],"compiler":[[29,19],[20,13],[31,25],[27,14],[29,19]],"count":[[60,4]],"kept":[{"done":[2,2],"fresh":[1,0],"new":[56,1],"picked":[1,1]}],"min-error":[0],"time":11.068115234375,"type":"prune"},{"compiler":[[119,50]],"locations":[["(/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))",0.0078125,true],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))",0.0078125,true],["(pow.f64 (cbrt.f64 (exp.f64 x)) 2)",0.01171875,true],["(+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x))",0.015625,false]],"time":20.453857421875,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))","x","-inf",2.1669921875],["(/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))","x","inf",1.02587890625],["(/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))","x","0",0.2470703125],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))","x","-inf",0.300048828125],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))","x","inf",0.635009765625],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))","x","0",0.2490234375],["(pow.f64 (cbrt.f64 (exp.f64 x)) 2)","x","-inf",1.14013671875],["(pow.f64 (cbrt.f64 (exp.f64 x)) 2)","x","inf",1.344970703125],["(pow.f64 (cbrt.f64 (exp.f64 x)) 2)","x","0",0.343994140625]],"time":7.592041015625,"type":"series"},{"count":[[3,178]],"egraph":[[2,3400,26,0.027833041],[1,259,28,0.004672749],[0,12,28,0.000376833]],"inputs":[["(pow.f64 (cbrt.f64 (exp.f64 x)) 2)","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))","(/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (*.f64 2/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 x))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 x)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 2/3 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (*.f64 2/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) 4) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 x)) (pow.f64 (exp.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) 1/6) (sqrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (exp.f64 x)) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (cbrt.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (exp.f64 x)) (exp.f64 (*.f64 -1/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (*.f64 2/3 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (exp.f64 (*.f64 -2/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) 4) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (*.f64 2/3 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (*.f64 2/3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 x) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 -1 x) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (exp.f64 (*.f64 2/3 x))) (/.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (exp.f64 (*.f64 2/3 x)) (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (exp.f64 x) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (exp.f64 (*.f64 2/3 x)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (exp.f64 x)) (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (*.f64 -2/3 x)) (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (exp.f64 (*.f64 2/3 x))) (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) (neg.f64 (exp.f64 (*.f64 2/3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 x) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (exp.f64 (*.f64 2/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) 2) (/.f64 (exp.f64 (*.f64 2/3 x)) (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (/.f64 (exp.f64 x) (cbrt.f64 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (exp.f64 (*.f64 2/3 x)) (sqrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 -1 x)) (/.f64 (exp.f64 x) (sqrt.f64 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 -1 x)) (neg.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 -1 x)) (*.f64 (neg.f64 (exp.f64 (*.f64 2/3 x))) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 -1 x)) (*.f64 (exp.f64 (*.f64 2/3 x)) (neg.f64 (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 x 3)) (*.f64 (exp.f64 x) (fma.f64 x (+.f64 x -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 x x)) (*.f64 (exp.f64 x) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x)) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) (neg.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x))) (neg.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 -1 x)) 1) (*.f64 (neg.f64 (cbrt.f64 (exp.f64 x))) (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (-.f64 -1 x))) (*.f64 (neg.f64 (exp.f64 (*.f64 2/3 x))) (neg.f64 (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 -1 x) -1) (*.f64 (cbrt.f64 (exp.f64 x)) (neg.f64 (exp.f64 (*.f64 2/3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 -1 x)) -1) (*.f64 (neg.f64 (cbrt.f64 (exp.f64 x))) (neg.f64 (exp.f64 (*.f64 2/3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) (sqrt.f64 (exp.f64 x))) (sqrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x))) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 -1 x) 1) (exp.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) 1) (exp.f64 (*.f64 2/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 x))) 4)) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x)) 1) (cbrt.f64 (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x)) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (cbrt.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x)) (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) (neg.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 -1 x)) (exp.f64 (*.f64 -2/3 x))) (neg.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (exp.f64 (*.f64 -2/3 x)) (neg.f64 (-.f64 -1 x))) (neg.f64 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) -1) (neg.f64 (exp.f64 (*.f64 2/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 -1 x) 3) (pow.f64 (exp.f64 x) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) -3) (pow.f64 (exp.f64 x) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (exp.f64 (*.f64 2/3 x)) (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) (exp.f64 (*.f64 2/3 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 x) (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 (*.f64 2/3 x)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (*.f64 (exp.f64 (*.f64 -2/3 x)) (-.f64 -1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (exp.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 3) (pow.f64 (exp.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) -3) (pow.f64 (exp.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (-.f64 -1 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 (-.f64 -1 x)) x) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x))))) (sqrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (pow.f64 (exp.f64 x) 1/6))) (/.f64 (sqrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (exp.f64 (*.f64 -1/3 x)) x))) (fma.f64 (neg.f64 (exp.f64 (*.f64 -1/3 x))) x (*.f64 (exp.f64 (*.f64 -1/3 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (exp.f64 (*.f64 -1/3 x)) x))) (fma.f64 (neg.f64 (exp.f64 (*.f64 -1/3 x))) x (*.f64 (exp.f64 (*.f64 -1/3 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (exp.f64 (*.f64 -1/3 x)) x))) (fma.f64 (neg.f64 (exp.f64 (*.f64 -1/3 x))) x (*.f64 (exp.f64 (*.f64 -1/3 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (exp.f64 (*.f64 -1/3 x)) x))) (fma.f64 (neg.f64 (exp.f64 (*.f64 -1/3 x))) x (*.f64 (exp.f64 (*.f64 -1/3 x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 1 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 1 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 1 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 1 (*.f64 (/.f64 x (cbrt.f64 (exp.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x)))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))) (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x)))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))) (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x)))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))) (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x)))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))) (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (cbrt.f64 (exp.f64 (*.f64 -2/3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6)))) (fma.f64 (neg.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6))) (pow.f64 (exp.f64 x) -1/6) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6)))) (fma.f64 (neg.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6))) (pow.f64 (exp.f64 x) -1/6) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6)))) (fma.f64 (neg.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6))) (pow.f64 (exp.f64 x) -1/6) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6)))) (fma.f64 (neg.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6))) (pow.f64 (exp.f64 x) -1/6) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) 1/6)) (pow.f64 (exp.f64 x) -1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (pow.f64 (cbrt.f64 x) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 x))) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x))))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x))))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))) (/.f64 (sqrt.f64 x) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)) (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)) (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)) (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)) (*.f64 (/.f64 (cbrt.f64 x) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (exp.f64 x) 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (/.f64 x (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 x) (exp.f64 (*.f64 -1/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 -2/3 x))) (/.f64 (-.f64 -1 x) (cbrt.f64 (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (*.f64 (cbrt.f64 (-.f64 -1 x)) (exp.f64 (*.f64 -1/3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 -1/3 x)) (-.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 -1 x)) (*.f64 (exp.f64 (*.f64 -1/3 x)) (sqrt.f64 (-.f64 -1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 -1 x)) (/.f64 -1 (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) 1) (cbrt.f64 (/.f64 (-.f64 -1 x) (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 x)) 1) (/.f64 (sqrt.f64 (-.f64 -1 x)) (cbrt.f64 (exp.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 x)) (cbrt.f64 (exp.f64 (*.f64 2/3 x)))) (/.f64 (sqrt.f64 (-.f64 -1 x)) (cbrt.f64 (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) -1/6) (/.f64 (-.f64 -1 x) (pow.f64 (exp.f64 x) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 -1 x) 2)) (pow.f64 (exp.f64 x) 1/6)) (/.f64 (cbrt.f64 (-.f64 -1 x)) (pow.f64 (exp.f64 x) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 -1 x) 3) (exp.f64 x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 x) (neg.f64 (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (exp.f64 x)) (-.f64 -1 x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 x) 3) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (-.f64 -1 x)) (*.f64 -1/3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log.f64 (-.f64 -1 x)) (*.f64 -1/3 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (cbrt.f64 (exp.f64 x))) (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (exp.f64 (*.f64 -1/3 x)) (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) 2) (cbrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (sqrt.f64 (/.f64 -1 (cbrt.f64 (exp.f64 x)))) (neg.f64 (/.f64 x (cbrt.f64 (exp.f64 x)))))))))"]],"rules":[["egg-rr",87],["egg-rr",66],["egg-rr",25]],"stop":[["node limit",1]],"time":63.8330078125,"type":"rewrite"},{"count":[[214,207]],"egraph":[[4,3892,349,0.019555749],[3,1193,368,0.008380041000000001],[2,373,386,0.002891874],[1,155,408,0.001019208],[0,58,458,0.000285416]],"inputs":[["1","(+.f64 (*.f64 2/3 x) 1)","(+.f64 (*.f64 2/3 x) (+.f64 1 (*.f64 2/9 (pow.f64 x 2))))","(+.f64 (*.f64 2/3 x) (+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 x 2)) (*.f64 4/81 (pow.f64 x 3)))))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(*.f64 -1 (/.f64 x (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(*.f64 -1 (/.f64 x (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","-1","(-.f64 (*.f64 -2/3 x) 1)","(-.f64 (+.f64 (*.f64 -2/3 x) (*.f64 5/18 (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -4/81 (pow.f64 x 3)) (*.f64 5/18 (pow.f64 x 2)))) 1)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 2/3 x) 1)","(fma.f64 2/3 x 1)","(+.f64 (*.f64 2/3 x) (+.f64 1 (*.f64 2/9 (pow.f64 x 2))))","(+.f64 (fma.f64 2/3 x 1) (*.f64 2/9 (*.f64 x x)))","(fma.f64 2/3 x (fma.f64 2/9 (*.f64 x x) 1))","(fma.f64 2/3 x (fma.f64 x (*.f64 x 2/9) 1))","(fma.f64 x (fma.f64 x 2/9 2/3) 1)","(+.f64 (*.f64 2/3 x) (+.f64 1 (+.f64 (*.f64 2/9 (pow.f64 x 2)) (*.f64 4/81 (pow.f64 x 3)))))","(+.f64 (fma.f64 2/3 x 1) (fma.f64 2/9 (*.f64 x x) (*.f64 4/81 (pow.f64 x 3))))","(+.f64 (fma.f64 2/3 x 1) (fma.f64 4/81 (pow.f64 x 3) (*.f64 x (*.f64 x 2/9))))","(fma.f64 2/3 x (fma.f64 x (*.f64 x 2/9) (fma.f64 4/81 (pow.f64 x 3) 1)))","(fma.f64 (*.f64 x x) (fma.f64 x 4/81 2/9) (fma.f64 2/3 x 1))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","(pow.f64 (pow.f64 (exp.f64 x) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 x) 2))","-1","(-.f64 (*.f64 1/2 (pow.f64 x 2)) 1)","(fma.f64 1/2 (*.f64 x x) -1)","(fma.f64 (*.f64 x x) 1/2 -1)","(fma.f64 x (*.f64 x 1/2) -1)","(-.f64 (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3))) 1)","(+.f64 (fma.f64 1/2 (*.f64 x x) (*.f64 (pow.f64 x 3) -1/3)) -1)","(fma.f64 (*.f64 x x) 1/2 (fma.f64 (pow.f64 x 3) -1/3 -1))","(fma.f64 x (*.f64 x 1/2) (fma.f64 (pow.f64 x 3) -1/3 -1))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) -1)","(-.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/3 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 1/8 (pow.f64 x 4) (fma.f64 1/2 (*.f64 x x) (*.f64 (pow.f64 x 3) -1/3))) -1)","(fma.f64 1/8 (pow.f64 x 4) (fma.f64 (*.f64 x x) 1/2 (fma.f64 (pow.f64 x 3) -1/3 -1)))","(fma.f64 1/8 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/2) (fma.f64 (pow.f64 x 3) -1/3 -1)))","(fma.f64 x (*.f64 x (fma.f64 x -1/3 1/2)) (fma.f64 1/8 (pow.f64 x 4) -1))","(fma.f64 (*.f64 x x) (fma.f64 x -1/3 1/2) (fma.f64 1/8 (pow.f64 x 4) -1))","(*.f64 -1 (/.f64 x (exp.f64 x)))","(neg.f64 (/.f64 x (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(*.f64 -1 (/.f64 x (exp.f64 x)))","(neg.f64 (/.f64 x (exp.f64 x)))","(/.f64 (neg.f64 x) (exp.f64 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","(-.f64 (*.f64 -1 (/.f64 x (exp.f64 x))) (/.f64 1 (exp.f64 x)))","(-.f64 (neg.f64 (/.f64 x (exp.f64 x))) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 (neg.f64 x) (exp.f64 x)) (exp.f64 (neg.f64 x)))","(-.f64 (/.f64 -1 (exp.f64 x)) (/.f64 x (exp.f64 x)))","(*.f64 (exp.f64 (neg.f64 x)) (-.f64 -1 x))","-1","(-.f64 (*.f64 -2/3 x) 1)","(fma.f64 -2/3 x -1)","(fma.f64 x -2/3 -1)","(-.f64 (+.f64 (*.f64 -2/3 x) (*.f64 5/18 (pow.f64 x 2))) 1)","(+.f64 (fma.f64 -2/3 x (*.f64 (*.f64 x x) 5/18)) -1)","(fma.f64 x -2/3 (fma.f64 (*.f64 x x) 5/18 -1))","(fma.f64 x (*.f64 x 5/18) (fma.f64 x -2/3 -1))","(fma.f64 x (fma.f64 x 5/18 -2/3) -1)","(-.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -4/81 (pow.f64 x 3)) (*.f64 5/18 (pow.f64 x 2)))) 1)","(+.f64 (fma.f64 -2/3 x (fma.f64 -4/81 (pow.f64 x 3) (*.f64 (*.f64 x x) 5/18))) -1)","(+.f64 (fma.f64 (*.f64 x x) 5/18 (*.f64 (pow.f64 x 3) -4/81)) (fma.f64 x -2/3 -1))","(fma.f64 x -2/3 (fma.f64 (*.f64 x x) 5/18 (fma.f64 (pow.f64 x 3) -4/81 -1)))","(fma.f64 x -2/3 (fma.f64 x (*.f64 x (fma.f64 x -4/81 5/18)) -1))","(fma.f64 x (+.f64 (*.f64 x (fma.f64 x -4/81 5/18)) -2/3) -1)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x))","(neg.f64 (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (neg.f64 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x))","(neg.f64 (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (neg.f64 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))","(+.f64 (*.f64 -1 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3)) (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 (exp.f64 x)) 1/3) x)))","(*.f64 -1 (+.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (*.f64 x (cbrt.f64 (exp.f64 (neg.f64 x))))))","(neg.f64 (*.f64 (+.f64 x 1) (cbrt.f64 (exp.f64 (neg.f64 x)))))","(*.f64 (cbrt.f64 (exp.f64 (neg.f64 x))) (-.f64 -1 x))"]],"stop":[["node limit",1]],"time":37.4970703125,"type":"simplify"},{"compiler":[[7911,3710]],"time":61.875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))) 2)","done",0.18838213367175835],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","done",0.1860971239033163],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)","done",30.27462146584641],["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","done",0.1939096239033163]],"compiler":[[29,19],[20,13],[31,25],[27,14]],"count":[[223,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[219,0],"picked":[1,1]}],"min-error":[0],"time":81.41796875,"type":"prune"},{"accuracy":[0.1860971239033163],"baseline":[0.1860971239033163],"branch":[["x",0.1860971239033163,1],["eps",0.1860971239033163,1],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",0.1860971239033163,1],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",0.1860971239033163,1],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",0.1860971239033163,1],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",0.1860971239033163,1]],"compiler":[[3,2],[3,2],[31,25],[31,25],[29,23],[29,23],[140,83]],"count":[[7,1]],"inputs":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (exp.f64 x)) 2)) (/.f64 (-.f64 -1 x) (cbrt.f64 (exp.f64 x))))) 2)","(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","(/.f64 (*.f64 2 (*.f64 (exp.f64 (neg.f64 x)) (-.f64 x -1))) 2)","(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (neg.f64 x)) x)) (*.f64 -1 (exp.f64 (neg.f64 x))))) 2)","(/.f64 2 2)","(*.f64 1/2 (fma.f64 (+.f64 1 (/.f64 1 eps)) (pow.f64 (exp.f64 x) (+.f64 eps -1)) (/.f64 (+.f64 1 (/.f64 -1 eps)) (exp.f64 (fma.f64 eps x x)))))","(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)"]],"link":["."],"name":["NMSE Section 6.1 mentioned, A"],"oracle":[44.34207600638566],"outputs":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)"]],"time":18.6708984375,"times":[["x",3.7939453125],["eps",3.843994140625],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",2.114013671875],["(/.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x))))) 2)",2.260009765625],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.075927734375],["(-.f64 (*.f64 (+.f64 1 (/.f64 1 eps)) (exp.f64 (neg.f64 (*.f64 (-.f64 1 eps) x)))) (*.f64 (-.f64 (/.f64 1 eps) 1) (exp.f64 (neg.f64 (*.f64 (+.f64 1 eps) x)))))",2.081787109375]],"type":"regimes"},{"compiler":[[20,13]],"egraph":[[14,185,29,0.0025537499999999996],[13,184,29,0.002279042],[12,176,29,0.001999],[11,161,29,0.001695042],[10,147,29,0.0014243749999999999],[9,126,29,0.001163917],[8,107,29,0.0009313339999999999],[7,92,29,0.000722459],[6,78,29,0.0005416679999999999],[5,68,29,0.000413584],[4,54,29,0.000301251],[3,39,29,0.000192751],[2,29,29,0.000122043],[1,21,29,6.9459e-5],[0,13,29,3.2667e-5]],"inputs":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 (exp.f64 (neg.f64 x)) x)) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","(/.f64 (-.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x)))) (/.f64 (-.f64 -1 x) (exp.f64 x))) 2)","(/.f64 (+.f64 (+.f64 (exp.f64 (neg.f64 x)) (*.f64 x (exp.f64 (neg.f64 x)))) (/.f64 (+.f64 x 1) (exp.f64 x))) 2)"]],"stop":[["done",1],["saturated",1]],"time":11.6630859375,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[20,13]],"remove-preprocessing":[[]],"time":9.781005859375,"type":"end"}]