[{"compiler":[[18,12]],"method":["search"],"sampling":[[12,0.5733780198993372,0.42515785148998475,0.0014641286106780171],[11,0.4914668741994319,0.5070689971898901,0.0014641286106780171],[10,0.4212573207423702,0.5772785506469518,0.0014641286106780171],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":117.550048828125,"type":"analyze"},{"outcomes":[["body",256,"valid",448.852783203125,8256]],"time":457.301025390625,"type":"sample"},{"compiler":[[17,11]],"egraph":[[1,3,3,1.5751000000000002e-5],[0,3,3,1.4834e-5],[2,40,68,0.000257208],[1,35,68,0.000171583],[0,24,76,8.3042e-5]],"inputs":[["0","1","2"],["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 y y) (*.f64 x x)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x x)) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 z z)) (*.f64 y y)) 3))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","0"],["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (+.f64 (*.f64 x x) (fma.f64 z z (*.f64 y y))) 3))","(sqrt.f64 (/.f64 (fma.f64 x x (fma.f64 y y (*.f64 z z))) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 y y) (*.f64 x x)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (+.f64 (*.f64 x x) (fma.f64 z z (*.f64 y y))) 3))","(sqrt.f64 (/.f64 (fma.f64 x x (fma.f64 y y (*.f64 z z))) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x x)) 3))","(sqrt.f64 (/.f64 (+.f64 (*.f64 x x) (fma.f64 z z (*.f64 y y))) 3))","(sqrt.f64 (/.f64 (fma.f64 x x (fma.f64 y y (*.f64 z z))) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 z z)) (*.f64 y y)) 3))","(sqrt.f64 (/.f64 (+.f64 (*.f64 x x) (fma.f64 z z (*.f64 y y))) 3))","(sqrt.f64 (/.f64 (fma.f64 x x (fma.f64 y y (*.f64 z z))) 3))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort x y z)"]],"time":27.01806640625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[3,34,17,0.000314918],[2,28,17,0.000225834],[1,17,17,0.000128],[0,12,19,5.6708e-5]],"inputs":[["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (+.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z z)) 3))","(sqrt.f64 (/.f64 (fma.f64 x x (fma.f64 y y (*.f64 z z))) 3))","(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))"]],"stop":[["saturated",1]],"time":11.843017578125,"type":"simplify"},{"compiler":[[29,16]],"time":0.452880859375,"type":"eval"},{"alts":[["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","next",39.95306546081924]],"compiler":[[15,9],[15,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[39.95306546081924],"time":1.02001953125,"type":"prune"},{"compiler":[[48,12]],"locations":[["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)",0.30737107828260746,true],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))",36.8068926104541,true]],"time":8.632080078125,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","x","-inf",0.2080078125],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","x","inf",0.35498046875],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","x","0",0.373779296875],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","z","-inf",0.3740234375],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","z","inf",1.14404296875],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","z","0",0.4521484375],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","y","-inf",0.385009765625],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","y","inf",0.470947265625],["(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)","y","0",0.510009765625],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","x","-inf",0.43798828125],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","x","inf",0.675048828125],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","x","0",0.762939453125],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","z","-inf",0.39794921875],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","z","inf",0.873046875],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","z","0",0.758056640625],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","y","-inf",0.55908203125],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","y","inf",0.803955078125],["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","y","0",1.133056640625]],"time":11.255859375,"type":"series"},{"count":[[2,56]],"egraph":[[2,2422,25,0.024613125],[1,207,25,0.004106084],[0,10,32,0.000335834]],"inputs":[["(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","(/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (hypot.f64 z x)) (pow.f64 1/3 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (hypot.f64 z x)) (/.f64 1 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 2)) (sqrt.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (/.f64 3 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 3) (hypot.f64 y (hypot.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (neg.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2))) (sqrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 y (hypot.f64 z x))) (neg.f64 (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 2) (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2)) 2) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (hypot.f64 z x)) (*.f64 (hypot.f64 y (hypot.f64 z x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)))) (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3))) (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 2) 1/9) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 3 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) -3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 2) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 1/3)))))))"]],"rules":[["egg-rr",28],["egg-rr",28]],"stop":[["node limit",1]],"time":51.05615234375,"type":"rewrite"},{"count":[[128,144]],"egraph":[[2,1881,2041,0.017532624],[1,583,2061,0.004890208],[0,192,2384,0.001019708]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 y 6) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(*.f64 y (sqrt.f64 1/3))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 y (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1 (*.f64 y (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (*.f64 (pow.f64 z 6) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(*.f64 z (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 z (sqrt.f64 1/3)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))))))","(*.f64 -1 (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(*.f64 (sqrt.f64 1/3) x)","(+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3) (sqrt.f64 1/3)) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))))","(*.f64 -1 (*.f64 (sqrt.f64 1/3) x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3) (sqrt.f64 1/3)) (pow.f64 x 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))))","(*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (pow.f64 y 2))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (pow.f64 y 2))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (pow.f64 z 2))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (pow.f64 z 2))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 1/3 (pow.f64 x 2))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (pow.f64 x 2))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3))","(*.f64 (hypot.f64 z x) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(fma.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x)))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3)))","(fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))) (*.f64 (*.f64 1/2 (sqrt.f64 1/3)) (*.f64 y y))))","(fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (*.f64 (sqrt.f64 1/3) (*.f64 y y)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x)))))) (fma.f64 -1/8 (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 y 4)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3)))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))) (*.f64 -1/8 (*.f64 (sqrt.f64 1/3) (pow.f64 y 4))))))","(fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 y 4)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))) -1/8))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 y 6) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x)))))) (fma.f64 -1/8 (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 y 4)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3)))) (fma.f64 1/16 (*.f64 (pow.f64 y 6) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 5))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 y 4) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5))) (*.f64 1/16 (*.f64 (sqrt.f64 1/3) (pow.f64 y 6)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 y 4) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))))) (*.f64 (pow.f64 y 6) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5))) (*.f64 (sqrt.f64 1/3) 1/16))))))","(*.f64 y (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) y)","(+.f64 (*.f64 y (sqrt.f64 1/3)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)))","(fma.f64 y (sqrt.f64 1/3) (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 1/3) y))","(fma.f64 (sqrt.f64 1/3) y (*.f64 (/.f64 1/2 y) (*.f64 (fma.f64 z z (*.f64 x x)) (sqrt.f64 1/3))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(fma.f64 y (sqrt.f64 1/3) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) (/.f64 (*.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) -1/8) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) y) (fma.f64 z z (*.f64 x x))) (fma.f64 (sqrt.f64 1/3) y (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (*.f64 (sqrt.f64 1/3) -1/8))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(fma.f64 y (sqrt.f64 1/3) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (/.f64 (pow.f64 y 5) (sqrt.f64 1/3))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)) (/.f64 (*.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) 1/16) (/.f64 (pow.f64 y 5) (sqrt.f64 1/3))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) y) (fma.f64 z z (*.f64 x x))) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (/.f64 (/.f64 (pow.f64 y 5) (sqrt.f64 1/3)) 1/16)))))","(*.f64 -1 (*.f64 y (sqrt.f64 1/3)))","(neg.f64 (*.f64 (sqrt.f64 1/3) y))","(*.f64 (sqrt.f64 1/3) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1 (*.f64 y (sqrt.f64 1/3))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (neg.f64 (*.f64 (sqrt.f64 1/3) y)))","(fma.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2 (*.f64 (sqrt.f64 1/3) (neg.f64 y)))","(-.f64 (/.f64 (fma.f64 z z (*.f64 x x)) (/.f64 (/.f64 y (sqrt.f64 1/3)) -1/2)) (*.f64 (sqrt.f64 1/3) y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 (sqrt.f64 1/3) y) (/.f64 (*.f64 1/8 (*.f64 (sqrt.f64 1/3) (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2))) (pow.f64 y 3))))","(fma.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 y 3) (*.f64 (sqrt.f64 1/3) (pow.f64 (fma.f64 z z (*.f64 x x)) 2)))) (*.f64 (sqrt.f64 1/3) y)))","(-.f64 (fma.f64 (*.f64 (/.f64 (sqrt.f64 1/3) y) (fma.f64 z z (*.f64 x x))) -1/2 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (/.f64 (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)) 1/8))) (*.f64 (sqrt.f64 1/3) y))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (/.f64 (pow.f64 y 5) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 (sqrt.f64 1/3) y) (/.f64 (*.f64 1/8 (*.f64 (sqrt.f64 1/3) (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2))) (pow.f64 y 3)))))","(fma.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (pow.f64 y 5)) (sqrt.f64 1/3)) -1/16 (fma.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 y 3) (*.f64 (sqrt.f64 1/3) (pow.f64 (fma.f64 z z (*.f64 x x)) 2)))) (*.f64 (sqrt.f64 1/3) y))))","(fma.f64 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 y 5)) (pow.f64 (fma.f64 z z (*.f64 x x)) 3)) -1/16 (-.f64 (fma.f64 (*.f64 (/.f64 (sqrt.f64 1/3) y) (fma.f64 z z (*.f64 x x))) -1/2 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (/.f64 (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)) 1/8))) (*.f64 (sqrt.f64 1/3) y)))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 (sqrt.f64 1/3) (hypot.f64 x y))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 z (*.f64 z (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 1/3) (hypot.f64 x y)))","(*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 x y) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 1/2 (*.f64 z z)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 z (*.f64 z (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 1/3) (hypot.f64 x y))))","(fma.f64 (sqrt.f64 1/3) (hypot.f64 x y) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 1/2 (*.f64 z z))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (*.f64 -1/8 (pow.f64 z 4))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (*.f64 (pow.f64 z 6) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 6))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 z (*.f64 z (sqrt.f64 1/3)))) (fma.f64 (sqrt.f64 1/3) (hypot.f64 x y) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 z 6)) 1/16)))))","(+.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 x y) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (pow.f64 z 6))))) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 1/2 (*.f64 z z))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (*.f64 -1/8 (pow.f64 z 4))))))","(*.f64 z (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3)))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (*.f64 z (sqrt.f64 1/3)))","(fma.f64 z (sqrt.f64 1/3) (/.f64 (*.f64 1/2 (*.f64 (sqrt.f64 1/3) (fma.f64 x x (*.f64 y y)))) z))","(fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3)))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (fma.f64 z (sqrt.f64 1/3) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 2) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))))))","(fma.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (fma.f64 z (sqrt.f64 1/3) (/.f64 (*.f64 -1/8 (pow.f64 (fma.f64 x x (*.f64 y y)) 2)) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3)))))","(fma.f64 z (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (/.f64 -1/8 (/.f64 (/.f64 (pow.f64 z 3) (sqrt.f64 1/3)) (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 z (sqrt.f64 1/3)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (fma.f64 z (sqrt.f64 1/3) (fma.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3) (/.f64 (pow.f64 z 5) (sqrt.f64 1/3))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 2) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3)))))))","(fma.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (fma.f64 z (sqrt.f64 1/3) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2) (pow.f64 z 3)) (sqrt.f64 1/3)) (/.f64 (*.f64 (*.f64 1/16 (sqrt.f64 1/3)) (pow.f64 (fma.f64 x x (*.f64 y y)) 3)) (pow.f64 z 5)))))","(fma.f64 z (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (fma.f64 1/16 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 z 5)) (pow.f64 (fma.f64 x x (*.f64 y y)) 3)) (/.f64 -1/8 (/.f64 (/.f64 (pow.f64 z 3) (sqrt.f64 1/3)) (pow.f64 (fma.f64 x x (*.f64 y y)) 2))))))","(*.f64 -1 (*.f64 z (sqrt.f64 1/3)))","(neg.f64 (*.f64 z (sqrt.f64 1/3)))","(*.f64 z (neg.f64 (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))","(fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3)))))","(fma.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (*.f64 z (neg.f64 (sqrt.f64 1/3))))","(fma.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (*.f64 z (neg.f64 (sqrt.f64 1/3))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z))))","(fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 2) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))))))","(fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2) (pow.f64 z 3)) (sqrt.f64 1/3)) (fma.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (*.f64 z (neg.f64 (sqrt.f64 1/3)))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (/.f64 1/8 (/.f64 (/.f64 (pow.f64 z 3) (sqrt.f64 1/3)) (pow.f64 (fma.f64 x x (*.f64 y y)) 2)))) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))))","(fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 2) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3) (/.f64 (pow.f64 z 5) (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3)))))))","(fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2) (pow.f64 z 3)) (sqrt.f64 1/3)) (-.f64 (fma.f64 -1/16 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 3) (pow.f64 z 5)) (sqrt.f64 1/3)) (*.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))))) (*.f64 z (sqrt.f64 1/3))))","(-.f64 (fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (*.f64 y y)) 2) (pow.f64 z 3)) (sqrt.f64 1/3)) (fma.f64 -1/16 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 z 5)) (pow.f64 (fma.f64 x x (*.f64 y y)) 3)) (*.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y)))))) (*.f64 z (sqrt.f64 1/3)))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))))","(*.f64 (sqrt.f64 1/3) (hypot.f64 z y))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))) (*.f64 x (*.f64 x (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 1/3) (hypot.f64 z y)))","(*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 z y) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))) (*.f64 x x)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(fma.f64 (sqrt.f64 1/3) (hypot.f64 z y) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))) (*.f64 x (*.f64 x (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))) (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)) -1/8))))","(fma.f64 1/2 (*.f64 x (*.f64 (*.f64 x (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))))) (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 z y) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))) (*.f64 -1/8 (pow.f64 x 4))))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 x 6) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 5))))) (fma.f64 (sqrt.f64 1/3) (hypot.f64 z y) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))) (*.f64 x (*.f64 x (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))) (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)) -1/8)))))","(+.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 z y) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))) (*.f64 x x))))) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))) (*.f64 -1/8 (pow.f64 x 4))) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 5))) (pow.f64 x 6))))))","(*.f64 (sqrt.f64 1/3) x)","(*.f64 x (sqrt.f64 1/3))","(+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))","(fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3)))))","(fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (*.f64 1/2 (sqrt.f64 1/3)) (fma.f64 y y (*.f64 z z))) x))","(fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) (*.f64 (sqrt.f64 1/3) 1/2)) x))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x))))","(fma.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 2) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))))))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (*.f64 1/2 (sqrt.f64 1/3)) (fma.f64 y y (*.f64 z z))) x)))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) (*.f64 (sqrt.f64 1/3) 1/2)) x)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3) (sqrt.f64 1/3)) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))))","(fma.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3) (/.f64 (pow.f64 x 5) (sqrt.f64 1/3))) (fma.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 2) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3)))))))","(fma.f64 1/16 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 3) (/.f64 (pow.f64 x 5) (sqrt.f64 1/3))) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (*.f64 1/2 (sqrt.f64 1/3)) (fma.f64 y y (*.f64 z z))) x))))","(fma.f64 1/16 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 x 5)) (pow.f64 (fma.f64 y y (*.f64 z z)) 3)) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (fma.f64 x (sqrt.f64 1/3) (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) (*.f64 (sqrt.f64 1/3) 1/2)) x))))","(*.f64 -1 (*.f64 (sqrt.f64 1/3) x))","(neg.f64 (*.f64 x (sqrt.f64 1/3)))","(*.f64 (sqrt.f64 1/3) (neg.f64 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3))))","(-.f64 (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) -1/2) (/.f64 x (sqrt.f64 1/3))) (*.f64 x (sqrt.f64 1/3)))","(fma.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) x) (fma.f64 y y (*.f64 z z))) (*.f64 (sqrt.f64 1/3) (neg.f64 x)))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x))))","(fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 2) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3)))))","(fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (-.f64 (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) -1/2) (/.f64 x (sqrt.f64 1/3))) (*.f64 x (sqrt.f64 1/3))))","(fma.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) x) (fma.f64 y y (*.f64 z z))) (fma.f64 x (neg.f64 (sqrt.f64 1/3)) (/.f64 1/8 (/.f64 (/.f64 (pow.f64 x 3) (sqrt.f64 1/3)) (pow.f64 (fma.f64 y y (*.f64 z z)) 2)))))","(+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 2) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3) (sqrt.f64 1/3)) (pow.f64 x 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))))","(fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 2) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3) (/.f64 (pow.f64 x 5) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3))))))","(fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 2) (pow.f64 x 3)) (sqrt.f64 1/3)) (-.f64 (fma.f64 -1/16 (/.f64 (pow.f64 (fma.f64 y y (*.f64 z z)) 3) (/.f64 (pow.f64 x 5) (sqrt.f64 1/3))) (/.f64 (*.f64 (fma.f64 y y (*.f64 z z)) -1/2) (/.f64 x (sqrt.f64 1/3)))) (*.f64 x (sqrt.f64 1/3))))","(fma.f64 -1/16 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 x 5)) (pow.f64 (fma.f64 y y (*.f64 z z)) 3)) (fma.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) x) (fma.f64 y y (*.f64 z z))) (fma.f64 x (neg.f64 (sqrt.f64 1/3)) (/.f64 1/8 (/.f64 (/.f64 (pow.f64 x 3) (sqrt.f64 1/3)) (pow.f64 (fma.f64 y y (*.f64 z z)) 2))))))","(*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))","(*.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 1/3)","(*.f64 (fma.f64 z z (*.f64 x x)) 1/3)","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 y 2))","(*.f64 1/3 (*.f64 y y))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 y 2))","(*.f64 1/3 (*.f64 y y))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 x x) (*.f64 y y)))","(*.f64 1/3 (fma.f64 x x (*.f64 y y)))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 1/3)","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 z 2))","(*.f64 (*.f64 z z) 1/3)","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (pow.f64 z 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))","(*.f64 1/3 (+.f64 (*.f64 z z) (*.f64 y y)))","(*.f64 1/3 (fma.f64 y y (*.f64 z z)))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (pow.f64 x 2)) (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 x 2))","(*.f64 (*.f64 x x) 1/3)","(*.f64 x (*.f64 x 1/3))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(*.f64 1/3 (pow.f64 x 2))","(*.f64 (*.f64 x x) 1/3)","(*.f64 x (*.f64 x 1/3))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))","(+.f64 (*.f64 1/3 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (*.f64 1/3 (pow.f64 x 2)))","(*.f64 1/3 (+.f64 (*.f64 y y) (+.f64 (*.f64 z z) (*.f64 x x))))","(*.f64 1/3 (fma.f64 x x (fma.f64 y y (*.f64 z z))))"]],"stop":[["node limit",1]],"time":47.449951171875,"type":"simplify"},{"compiler":[[3256,2176]],"time":40.75390625,"type":"eval"},{"alts":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","next",0.36328125],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","fresh",0.390625]],"compiler":[[11,8],[11,8],[11,8],[11,8]],"count":[[145,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[144,2],"picked":[1,0]}],"min-error":[0],"time":22.426025390625,"type":"prune"},{"compiler":[[25,11]],"locations":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))",0.36328125,true]],"time":6.1220703125,"type":"localize"},{"count":[[1,36]],"series":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","x","-inf",0.4931640625],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","x","inf",1.194091796875],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","x","0",0.51708984375],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","z","-inf",0.429931640625],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","z","inf",0.89013671875],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","z","0",0.718994140625],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","y","-inf",0.282958984375],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","y","inf",0.350830078125],["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","y","0",0.56201171875]],"time":5.781005859375,"type":"series"},{"count":[[1,13]],"egraph":[[2,2003,12,0.021851834],[1,180,12,0.0032094999999999997],[0,9,12,0.00027825]],"inputs":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/3 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 1/3)) (hypot.f64 y (hypot.f64 z x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 3) (*.f64 1/3 (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 1/3 (sqrt.f64 1/3)) (pow.f64 (hypot.f64 y (hypot.f64 z x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))))))))"]],"rules":[["egg-rr",13]],"stop":[["node limit",1]],"time":41.027099609375,"type":"rewrite"},{"count":[[49,84]],"egraph":[[3,7910,1625,0.030920915],[2,2376,1625,0.016756124],[1,650,1686,0.005062958],[0,207,2026,0.001043708]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 y 6) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(*.f64 y (sqrt.f64 1/3))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 y (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1 (*.f64 y (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (*.f64 (pow.f64 z 6) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(*.f64 z (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 z (sqrt.f64 1/3)))))","(*.f64 -1 (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z))))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(*.f64 (sqrt.f64 1/3) x)","(+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))","(+.f64 (*.f64 (sqrt.f64 1/3) x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))) (pow.f64 x 5))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))))))","(*.f64 -1 (*.f64 (sqrt.f64 1/3) x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))) (pow.f64 x 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3))","(*.f64 (hypot.f64 z x) (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 1/3) (*.f64 y y)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3)))","(fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x))))))))","(fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))) (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) 1/2))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 1/3) (*.f64 y y)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x))))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 -1/8 (*.f64 (pow.f64 y 4) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))) (*.f64 (sqrt.f64 1/3) (*.f64 -1/8 (pow.f64 y 4))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 2) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (pow.f64 y 4) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 1/16 (*.f64 (*.f64 (pow.f64 y 6) (sqrt.f64 1/3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (*.f64 (sqrt.f64 1/3) (*.f64 y y)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x))))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3))))) (fma.f64 1/16 (*.f64 (pow.f64 y 6) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 5))))) (*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 1/16 (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 y 6)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (*.f64 (*.f64 y y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))))) (fma.f64 (hypot.f64 z x) (sqrt.f64 1/3) (*.f64 (pow.f64 y 6) (*.f64 1/16 (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5)))))))))","(*.f64 y (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) y)","(+.f64 (*.f64 y (sqrt.f64 1/3)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)))","(fma.f64 y (sqrt.f64 1/3) (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3)))))","(fma.f64 (sqrt.f64 1/3) y (*.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3))))","(fma.f64 (sqrt.f64 1/3) y (*.f64 (/.f64 1/2 y) (*.f64 (fma.f64 z z (*.f64 x x)) (sqrt.f64 1/3))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(fma.f64 y (sqrt.f64 1/3) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (/.f64 (fma.f64 z z (*.f64 x x)) y)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (/.f64 (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)) -1/8))))","(+.f64 (*.f64 y (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(fma.f64 y (sqrt.f64 1/3) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (/.f64 (pow.f64 y 5) (sqrt.f64 1/3))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (pow.f64 y 5)) (sqrt.f64 1/3))))))","(fma.f64 (sqrt.f64 1/3) y (fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (/.f64 (fma.f64 z z (*.f64 x x)) y)) (fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3))) (*.f64 1/16 (*.f64 (sqrt.f64 1/3) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (pow.f64 y 5)))))))","(*.f64 -1 (*.f64 y (sqrt.f64 1/3)))","(neg.f64 (*.f64 (sqrt.f64 1/3) y))","(*.f64 (sqrt.f64 1/3) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (*.f64 -1 (*.f64 y (sqrt.f64 1/3))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (neg.f64 (*.f64 (sqrt.f64 1/3) y)))","(-.f64 (*.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2) (*.f64 (sqrt.f64 1/3) y))","(-.f64 (*.f64 (*.f64 (sqrt.f64 1/3) (/.f64 (fma.f64 z z (*.f64 x x)) y)) -1/2) (*.f64 (sqrt.f64 1/3) y))","(fma.f64 (/.f64 -1/2 y) (*.f64 (fma.f64 z z (*.f64 x x)) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 1/3) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3)))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 (sqrt.f64 1/3) y) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3))) 1/8)))","(fma.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2 (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)) 1/8) (*.f64 (sqrt.f64 1/3) y)))","(fma.f64 (*.f64 (sqrt.f64 1/3) (/.f64 (fma.f64 z z (*.f64 x x)) y)) -1/2 (-.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (/.f64 (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)) 1/8)) (*.f64 (sqrt.f64 1/3) y)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (sqrt.f64 1/3)) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (sqrt.f64 1/3)) y)) (+.f64 (*.f64 -1 (*.f64 y (sqrt.f64 1/3))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (sqrt.f64 1/3)) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (/.f64 (pow.f64 y 5) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (/.f64 y (sqrt.f64 1/3))) (fma.f64 -1 (*.f64 (sqrt.f64 1/3) y) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (/.f64 (pow.f64 y 3) (sqrt.f64 1/3))) 1/8))))","(fma.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (pow.f64 y 5)) (sqrt.f64 1/3)) -1/16 (fma.f64 (*.f64 (/.f64 (fma.f64 z z (*.f64 x x)) y) (sqrt.f64 1/3)) -1/2 (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (sqrt.f64 1/3)) 1/8) (*.f64 (sqrt.f64 1/3) y))))","(fma.f64 (*.f64 (sqrt.f64 1/3) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (pow.f64 y 5))) -1/16 (fma.f64 (*.f64 (sqrt.f64 1/3) (/.f64 (fma.f64 z z (*.f64 x x)) y)) -1/2 (-.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (/.f64 (/.f64 (pow.f64 y 3) (sqrt.f64 1/3)) 1/8)) (*.f64 (sqrt.f64 1/3) y))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 (sqrt.f64 1/3) (hypot.f64 x y))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y)))))","(fma.f64 (sqrt.f64 1/3) (hypot.f64 x y) (*.f64 1/2 (*.f64 (*.f64 z z) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))))))))","(*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 x y) (*.f64 1/2 (*.f64 z (*.f64 z (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (pow.f64 z 4))) (fma.f64 (sqrt.f64 1/3) (hypot.f64 x y) (*.f64 1/2 (*.f64 (*.f64 z z) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (pow.f64 z 4))) (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 x y) (*.f64 1/2 (*.f64 z (*.f64 z (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y))))))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (*.f64 (pow.f64 z 4) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 (pow.f64 z 2) (sqrt.f64 1/3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (*.f64 (pow.f64 z 6) (sqrt.f64 1/3)))) (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (sqrt.f64 1/3)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 4))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 (*.f64 z z) (sqrt.f64 1/3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 6))) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y)))))))","(fma.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3)))) (*.f64 (sqrt.f64 1/3) (pow.f64 z 4)) (fma.f64 1/2 (*.f64 (*.f64 z z) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))))) (fma.f64 (sqrt.f64 1/3) (hypot.f64 x y) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (*.f64 (*.f64 (sqrt.f64 1/3) (pow.f64 z 6)) 1/16)))))","(+.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 x y) (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (pow.f64 z 6))))) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (pow.f64 z 4) (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))))) (*.f64 (*.f64 z z) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))))))))","(*.f64 z (sqrt.f64 1/3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3)))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (*.f64 z (sqrt.f64 1/3)))","(fma.f64 z (sqrt.f64 1/3) (*.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y))))))","(fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (*.f64 z (sqrt.f64 1/3))))","(fma.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (*.f64 z (sqrt.f64 1/3))))","(fma.f64 1/2 (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (sqrt.f64 1/3)) (fma.f64 z (sqrt.f64 1/3) (*.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))))))","(+.f64 (*.f64 z (sqrt.f64 1/3)) (*.f64 1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 z (sqrt.f64 1/3)))))","(fma.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2))))) (/.f64 (pow.f64 z 5) (sqrt.f64 1/3))) (*.f64 z (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (sqrt.f64 1/3)) (fma.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (fma.f64 z (sqrt.f64 1/3) (*.f64 1/2 (*.f64 (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 x x (*.f64 y y)) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)))) (pow.f64 z 5)) (sqrt.f64 1/3))))))","(+.f64 (*.f64 z (sqrt.f64 1/3)) (*.f64 1/2 (+.f64 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (/.f64 1/2 (/.f64 (pow.f64 z 5) (*.f64 (fma.f64 x x (*.f64 y y)) (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)))))))))","(*.f64 -1 (*.f64 z (sqrt.f64 1/3)))","(neg.f64 (*.f64 z (sqrt.f64 1/3)))","(*.f64 (sqrt.f64 1/3) (neg.f64 z))","(*.f64 z (neg.f64 (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))","(fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3)))))","(-.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y))))) (*.f64 z (sqrt.f64 1/3)))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y)))) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z))))","(fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (*.f64 -1/2 (+.f64 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3))))))","(-.f64 (*.f64 -1/2 (+.f64 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (sqrt.f64 1/3)))) (*.f64 z (sqrt.f64 1/3)))","(-.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3))))) (*.f64 z (sqrt.f64 1/3)))","(+.f64 (*.f64 -1 (*.f64 z (sqrt.f64 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (sqrt.f64 1/3)) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (sqrt.f64 1/3)) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (sqrt.f64 1/3)) z)))))","(fma.f64 -1 (*.f64 z (sqrt.f64 1/3)) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (/.f64 (pow.f64 z 3) (sqrt.f64 1/3))) (*.f64 -1/2 (+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2))))) (/.f64 (pow.f64 z 5) (sqrt.f64 1/3))) (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (/.f64 z (sqrt.f64 1/3)))))))","(-.f64 (*.f64 -1/2 (+.f64 (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (sqrt.f64 1/3)) (+.f64 (/.f64 (sqrt.f64 1/3) (/.f64 z (fma.f64 x x (*.f64 y y)))) (*.f64 (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 x x (*.f64 y y)) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)))) (pow.f64 z 5)) (sqrt.f64 1/3))))) (*.f64 z (sqrt.f64 1/3)))","(-.f64 (*.f64 -1/2 (+.f64 (*.f64 (/.f64 (sqrt.f64 1/3) z) (fma.f64 x x (*.f64 y y))) (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)) (/.f64 1/2 (/.f64 (pow.f64 z 5) (*.f64 (fma.f64 x x (*.f64 y y)) (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)))))))) (*.f64 z (sqrt.f64 1/3)))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3))","(*.f64 (sqrt.f64 1/3) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))))","(*.f64 (sqrt.f64 1/3) (hypot.f64 z y))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3)))))","(fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y))))) (*.f64 (*.f64 x x) (sqrt.f64 1/3)) (*.f64 (sqrt.f64 1/3) (hypot.f64 z y)))","(*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 z y) (*.f64 (*.f64 x x) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z))))))))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4))))))","(fma.f64 (sqrt.f64 1/3) (hypot.f64 z y) (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 x 4) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3))))))))","(fma.f64 (sqrt.f64 1/3) (hypot.f64 z y) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (*.f64 x x) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))))) (*.f64 (pow.f64 x 4) (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))))))))","(+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) (sqrt.f64 1/3)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 2)))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 5))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 6))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) (sqrt.f64 1/3) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 (*.f64 x x) (sqrt.f64 1/3))) (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (*.f64 (sqrt.f64 1/3) (pow.f64 x 4)))))))","(fma.f64 1/16 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 x 6) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 5))))) (fma.f64 (sqrt.f64 1/3) (hypot.f64 z y) (fma.f64 1/2 (*.f64 (*.f64 x x) (*.f64 (sqrt.f64 1/3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))))) (*.f64 -1/8 (*.f64 (sqrt.f64 1/3) (*.f64 (pow.f64 x 4) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3)))))))))","(+.f64 (*.f64 (sqrt.f64 1/3) (+.f64 (hypot.f64 z y) (*.f64 (*.f64 x x) (*.f64 1/2 (sqrt.f64 (/.f64 1 (fma.f64 y y (*.f64 z z)))))))) (*.f64 (sqrt.f64 1/3) (+.f64 (*.f64 (pow.f64 x 4) (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 3))))) (*.f64 (pow.f64 x 6) (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 y y (*.f64 z z)) 5))))))))","(*.f64 (sqrt.f64 1/3) x)","(*.f64 x (sqrt.f64 1/3))","(+.f64 (*.f64 (sqrt.f64 1/3) x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)))","(fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3)))))","(fma.f64 x (sqrt.f64 1/3) (*.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y))))))","(fma.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 y y (*.f64 z z)))) (*.f64 x (sqrt.f64 1/3)))","(+.f64 (*.f64 (sqrt.f64 1/3) x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3)))))","(fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (+.f64 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))))))","(fma.f64 x (sqrt.f64 1/3) (*.f64 1/2 (+.f64 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)) (sqrt.f64 1/3)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 y y (*.f64 z z)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2)) (pow.f64 x 3)))) (*.f64 x (sqrt.f64 1/3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))) (pow.f64 x 5))) (+.f64 (*.f64 (sqrt.f64 1/3) x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))))))","(fma.f64 1/2 (/.f64 (sqrt.f64 1/3) (/.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 z 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2))))))) (fma.f64 (sqrt.f64 1/3) x (*.f64 1/2 (+.f64 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3)))))))","(fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 x 5)) (*.f64 -1/2 (*.f64 (fma.f64 z z (*.f64 y y)) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2))))) (fma.f64 x (sqrt.f64 1/3) (*.f64 1/2 (+.f64 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)) (sqrt.f64 1/3))))))","(fma.f64 1/2 (/.f64 -1/2 (/.f64 (/.f64 (pow.f64 x 5) (sqrt.f64 1/3)) (neg.f64 (*.f64 (fma.f64 y y (*.f64 z z)) (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2))))) (fma.f64 1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 y y (*.f64 z z)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2)) (pow.f64 x 3)))) (*.f64 x (sqrt.f64 1/3))))","(*.f64 -1 (*.f64 (sqrt.f64 1/3) x))","(neg.f64 (*.f64 x (sqrt.f64 1/3)))","(*.f64 (sqrt.f64 1/3) (neg.f64 x))","(*.f64 x (neg.f64 (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3))))","(fma.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y)))) (*.f64 (sqrt.f64 1/3) (neg.f64 x)))","(fma.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 y y (*.f64 z z)))) (*.f64 x (neg.f64 (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x))))","(fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3)))))","(-.f64 (*.f64 -1/2 (+.f64 (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)) (sqrt.f64 1/3)))) (*.f64 x (sqrt.f64 1/3)))","(-.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 y y (*.f64 z z)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2)) (pow.f64 x 3))))) (*.f64 x (sqrt.f64 1/3)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (sqrt.f64 1/3)) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 1/3) (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))) (pow.f64 x 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (sqrt.f64 1/3)) x)) (*.f64 -1 (*.f64 (sqrt.f64 1/3) x)))))","(fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (/.f64 (pow.f64 x 3) (sqrt.f64 1/3))) (fma.f64 -1/2 (/.f64 (sqrt.f64 1/3) (/.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 z 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2))))))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (/.f64 x (sqrt.f64 1/3))) (neg.f64 (*.f64 x (sqrt.f64 1/3))))))","(fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)) (sqrt.f64 1/3)) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 (/.f64 (sqrt.f64 1/3) (pow.f64 x 5)) (*.f64 -1/2 (*.f64 (fma.f64 z z (*.f64 y y)) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2))))) (/.f64 (sqrt.f64 1/3) (/.f64 x (fma.f64 z z (*.f64 y y)))))) (*.f64 x (sqrt.f64 1/3))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 1/3) (+.f64 (/.f64 (fma.f64 y y (*.f64 z z)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2)) (pow.f64 x 3))))) (-.f64 (*.f64 -1/2 (/.f64 -1/2 (/.f64 (/.f64 (pow.f64 x 5) (sqrt.f64 1/3)) (neg.f64 (*.f64 (fma.f64 y y (*.f64 z z)) (pow.f64 (*.f64 1/2 (fma.f64 y y (*.f64 z z))) 2)))))) (*.f64 x (sqrt.f64 1/3))))"]],"stop":[["node limit",1]],"time":59.789794921875,"type":"simplify"},{"compiler":[[2727,1936]],"time":31.623046875,"type":"eval"},{"alts":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","done",0.36328125],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","next",0.390625]],"compiler":[[11,8],[11,8],[11,8]],"count":[[86,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[84,0],"picked":[1,1]}],"min-error":[0],"time":9.906982421875,"type":"prune"},{"compiler":[[25,11]],"locations":[["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))",0.390625,true]],"time":5.324951171875,"type":"localize"},{"count":[[1,36]],"series":[["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","x","-inf",0.423828125],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","x","inf",0.967041015625],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","x","0",0.541015625],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","z","-inf",0.4248046875],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","z","inf",0.5810546875],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","z","0",0.553955078125],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","y","-inf",0.342041015625],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","y","inf",0.433837890625],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","y","0",0.656005859375]],"time":5.1240234375,"type":"series"},{"count":[[1,31]],"egraph":[[2,2212,12,0.020352334],[1,186,12,0.0030994589999999997],[0,9,12,0.000236209]],"inputs":[["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (hypot.f64 z x)) (pow.f64 3 -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))) (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 3)) (cbrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) 2) (*.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) (pow.f64 3 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))) (sqrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) (*.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) (pow.f64 3 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (hypot.f64 y (hypot.f64 z x))) (/.f64 1 (neg.f64 (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 3 -1/2) (hypot.f64 y (hypot.f64 z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) 2) 1) (/.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) 1) (/.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) (sqrt.f64 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 3)) (/.f64 (hypot.f64 y (hypot.f64 z x)) (cbrt.f64 (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) 2) (cbrt.f64 3)) (cbrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) (cbrt.f64 3)) (/.f64 (sqrt.f64 (hypot.f64 y (hypot.f64 z x))) (cbrt.f64 (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 3 1/4)) (/.f64 (hypot.f64 y (hypot.f64 z x)) (pow.f64 3 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) 2) (pow.f64 3 1/4)) (/.f64 (cbrt.f64 (hypot.f64 y (hypot.f64 z x))) (pow.f64 3 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 3) (hypot.f64 y (hypot.f64 z x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (neg.f64 (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (hypot.f64 y (hypot.f64 z x)) 3) (*.f64 3 (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))))))))"]],"rules":[["egg-rr",31]],"stop":[["node limit",1]],"time":38.81103515625,"type":"rewrite"},{"count":[[67,100]],"egraph":[[2,2452,1645,0.016220834],[1,636,1695,0.004553625],[0,205,2077,0.00098975]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))))))","(/.f64 y (sqrt.f64 3))","(+.f64 (/.f64 y (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))))","(+.f64 (/.f64 y (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3))))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (*.f64 (pow.f64 y 5) (sqrt.f64 3)))) (+.f64 (/.f64 y (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3)))))))","(*.f64 -1 (/.f64 y (sqrt.f64 3)))","(+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))))","(+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3))))))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (*.f64 (pow.f64 y 5) (sqrt.f64 3)))) (+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3)))))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3)))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3))))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (/.f64 (pow.f64 z 6) (sqrt.f64 3)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3)))))))","(/.f64 z (sqrt.f64 3))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (/.f64 z (sqrt.f64 3)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (/.f64 z (sqrt.f64 3))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (+.f64 (/.f64 z (sqrt.f64 3)) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 z 5)))))))","(*.f64 -1 (/.f64 z (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 z 5)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3))))))","(*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (/.f64 (pow.f64 x 6) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))))","(/.f64 x (sqrt.f64 3))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))))","(+.f64 (/.f64 x (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))))))","(+.f64 (/.f64 x (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))))))","(*.f64 -1 (/.f64 x (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 -1 (/.f64 x (sqrt.f64 3))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 x (sqrt.f64 3)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 x (sqrt.f64 3))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3)))","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (/.f64 1 (sqrt.f64 3)))","(/.f64 (hypot.f64 z x) (sqrt.f64 3))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (/.f64 1 (sqrt.f64 3)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 y y) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x)))))))","(fma.f64 1/2 (/.f64 (*.f64 y y) (/.f64 (sqrt.f64 3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (/.f64 (hypot.f64 z x) (sqrt.f64 3)))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 y (sqrt.f64 3)) y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x))))) (/.f64 (hypot.f64 z x) (sqrt.f64 3)))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2))))))))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3)))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (/.f64 1 (sqrt.f64 3)) (*.f64 1/2 (*.f64 (/.f64 (*.f64 y y) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x))))))))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3)))) (fma.f64 1/2 (/.f64 (*.f64 y y) (/.f64 (sqrt.f64 3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (/.f64 (hypot.f64 z x) (sqrt.f64 3))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 y (sqrt.f64 3)) y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x))))) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3))) (/.f64 (*.f64 -1/8 (pow.f64 y 4)) (sqrt.f64 3)) (/.f64 (hypot.f64 z x) (sqrt.f64 3))))","(+.f64 (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3))))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 y 2) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 x 2)))))) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 5))))))))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3)))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 x x))) (/.f64 1 (sqrt.f64 3)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 y y) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 x x))))) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 5))))))))","(+.f64 (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3)))) (fma.f64 1/2 (/.f64 (*.f64 y y) (/.f64 (sqrt.f64 3) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x)))))) (/.f64 (hypot.f64 z x) (sqrt.f64 3)))) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5))))))","(fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (sqrt.f64 3)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 3)))) (fma.f64 (/.f64 (pow.f64 y 6) (sqrt.f64 3)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 x x)) 5))) 1/16) (fma.f64 1/2 (*.f64 (*.f64 (/.f64 y (sqrt.f64 3)) y) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 x x))))) (/.f64 (hypot.f64 z x) (sqrt.f64 3)))))","(/.f64 y (sqrt.f64 3))","(+.f64 (/.f64 y (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))))","(+.f64 (/.f64 y (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y))))","(fma.f64 1/2 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (/.f64 y (sqrt.f64 3)))","(fma.f64 (/.f64 1/2 (sqrt.f64 3)) (/.f64 (fma.f64 z z (*.f64 x x)) y) (/.f64 y (sqrt.f64 3)))","(+.f64 (/.f64 y (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3))))))","(+.f64 (/.f64 y (sqrt.f64 3)) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))))))","(+.f64 (/.f64 y (sqrt.f64 3)) (fma.f64 1/2 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))))))","(fma.f64 (/.f64 -1/8 (sqrt.f64 3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (fma.f64 (/.f64 1/2 (sqrt.f64 3)) (/.f64 (fma.f64 z z (*.f64 x x)) y) (/.f64 y (sqrt.f64 3))))","(+.f64 (*.f64 1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (*.f64 (pow.f64 y 5) (sqrt.f64 3)))) (+.f64 (/.f64 y (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3)))))))","(fma.f64 1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) (+.f64 (/.f64 y (sqrt.f64 3)) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3)))))))","(+.f64 (fma.f64 1/2 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))))) (fma.f64 1/16 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) (/.f64 y (sqrt.f64 3))))","(fma.f64 1/16 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) (fma.f64 (/.f64 -1/8 (sqrt.f64 3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)) (fma.f64 (/.f64 1/2 (sqrt.f64 3)) (/.f64 (fma.f64 z z (*.f64 x x)) y) (/.f64 y (sqrt.f64 3)))))","(*.f64 -1 (/.f64 y (sqrt.f64 3)))","(neg.f64 (/.f64 y (sqrt.f64 3)))","(/.f64 (neg.f64 y) (sqrt.f64 3))","(+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))))","(fma.f64 -1 (/.f64 y (sqrt.f64 3)) (*.f64 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) -1/2))","(-.f64 (*.f64 (/.f64 -1/2 y) (/.f64 (fma.f64 z z (*.f64 x x)) (sqrt.f64 3))) (/.f64 y (sqrt.f64 3)))","(fma.f64 (/.f64 -1/2 (sqrt.f64 3)) (/.f64 (fma.f64 z z (*.f64 x x)) y) (/.f64 (neg.f64 y) (sqrt.f64 3)))","(+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3))))))","(fma.f64 -1 (/.f64 y (sqrt.f64 3)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))) 1/8)))","(-.f64 (fma.f64 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) -1/2 (*.f64 (/.f64 1/8 (sqrt.f64 3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)))) (/.f64 y (sqrt.f64 3)))","(fma.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))) 1/8 (fma.f64 (/.f64 -1/2 (sqrt.f64 3)) (/.f64 (fma.f64 z z (*.f64 x x)) y) (/.f64 (neg.f64 y) (sqrt.f64 3))))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 3) (*.f64 (pow.f64 y 5) (sqrt.f64 3)))) (+.f64 (*.f64 -1 (/.f64 y (sqrt.f64 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) (*.f64 y (sqrt.f64 3)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 x 2)) 2) (*.f64 (pow.f64 y 3) (sqrt.f64 3)))))))","(fma.f64 -1/16 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) (fma.f64 -1 (/.f64 y (sqrt.f64 3)) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 z z) (*.f64 x x)) 2) (*.f64 (sqrt.f64 3) (pow.f64 y 3))) 1/8))))","(fma.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) -1/16 (-.f64 (fma.f64 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) -1/2 (*.f64 (/.f64 1/8 (sqrt.f64 3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3)))) (/.f64 y (sqrt.f64 3))))","(-.f64 (fma.f64 (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 3) (*.f64 (sqrt.f64 3) (pow.f64 y 5))) -1/16 (fma.f64 (/.f64 (fma.f64 z z (*.f64 x x)) (*.f64 (sqrt.f64 3) y)) -1/2 (*.f64 (/.f64 1/8 (sqrt.f64 3)) (/.f64 (pow.f64 (fma.f64 z z (*.f64 x x)) 2) (pow.f64 y 3))))) (/.f64 y (sqrt.f64 3)))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3)))","(*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))))","(/.f64 (hypot.f64 x y) (sqrt.f64 3))","(+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3)))))","(fma.f64 (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))) (/.f64 1 (sqrt.f64 3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3))) (/.f64 (hypot.f64 x y) (sqrt.f64 3)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (/.f64 z (sqrt.f64 3)) z)) (/.f64 (hypot.f64 x y) (sqrt.f64 3)))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))) (/.f64 1 (sqrt.f64 3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3))) (/.f64 (hypot.f64 x y) (sqrt.f64 3))))","(fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (/.f64 (*.f64 (pow.f64 z 4) -1/8) (sqrt.f64 3)) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (/.f64 z (sqrt.f64 3)) z)) (/.f64 (hypot.f64 x y) (sqrt.f64 3))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) 5))) (/.f64 (pow.f64 z 6) (sqrt.f64 3)))) (+.f64 (*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 1 (sqrt.f64 3))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (/.f64 (pow.f64 z 2) (sqrt.f64 3)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 x x) (*.f64 y y)) 5))) (/.f64 (pow.f64 z 6) (sqrt.f64 3))) (fma.f64 (sqrt.f64 (+.f64 (*.f64 x x) (*.f64 y y))) (/.f64 1 (sqrt.f64 3)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 x x) (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3)))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (/.f64 (pow.f64 z 6) (sqrt.f64 3))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (/.f64 (*.f64 z z) (sqrt.f64 3))) (/.f64 (hypot.f64 x y) (sqrt.f64 3)))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 3))) (/.f64 (pow.f64 z 4) (sqrt.f64 3))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x x (*.f64 y y)))) (*.f64 (/.f64 z (sqrt.f64 3)) z)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 x x (*.f64 y y)) 5))) (*.f64 (/.f64 (pow.f64 z 6) (sqrt.f64 3)) 1/16) (/.f64 (hypot.f64 x y) (sqrt.f64 3)))))","(/.f64 z (sqrt.f64 3))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (/.f64 z (sqrt.f64 3)))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (/.f64 z (sqrt.f64 3)))","(fma.f64 1/2 (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (/.f64 z (sqrt.f64 3)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (/.f64 z (sqrt.f64 3))))","(fma.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (/.f64 z (sqrt.f64 3))))","(fma.f64 1/2 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (fma.f64 1/2 (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (/.f64 z (sqrt.f64 3))))","(+.f64 (/.f64 z (sqrt.f64 3)) (*.f64 (/.f64 1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (+.f64 (/.f64 z (sqrt.f64 3)) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 z 5)))))))","(fma.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (+.f64 (fma.f64 1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (/.f64 z (sqrt.f64 3))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 6) 0) (*.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)))) (*.f64 (sqrt.f64 3) (pow.f64 z 5))))))","(fma.f64 1/2 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (fma.f64 1/2 (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 -1/2 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2))) (fma.f64 x x (*.f64 y y))) (*.f64 (sqrt.f64 3) (pow.f64 z 5))) (/.f64 z (sqrt.f64 3)))))","(+.f64 (+.f64 (/.f64 z (sqrt.f64 3)) (*.f64 (/.f64 1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3))))) (/.f64 (*.f64 (*.f64 (fma.f64 x x (*.f64 y y)) (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) 1/4) (*.f64 (sqrt.f64 3) (pow.f64 z 5))))","(*.f64 -1 (/.f64 z (sqrt.f64 3)))","(neg.f64 (/.f64 z (sqrt.f64 3)))","(/.f64 (neg.f64 z) (sqrt.f64 3))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (neg.f64 (/.f64 z (sqrt.f64 3))))","(-.f64 (*.f64 -1/2 (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3)))) (/.f64 z (sqrt.f64 3)))","(-.f64 (*.f64 (/.f64 -1/2 z) (/.f64 (fma.f64 x x (*.f64 y y)) (sqrt.f64 3))) (/.f64 z (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3)))))","(fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (neg.f64 (/.f64 z (sqrt.f64 3)))))","(-.f64 (*.f64 -1/2 (+.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3))))) (/.f64 z (sqrt.f64 3)))","(-.f64 (*.f64 (/.f64 -1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)))) (/.f64 z (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (*.f64 1/2 (*.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 z 5)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 y 2) (pow.f64 x 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 (sqrt.f64 3) z))) (*.f64 -1 (/.f64 z (sqrt.f64 3))))))","(fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 6) 0) (*.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)))) (*.f64 (sqrt.f64 3) (pow.f64 z 5))) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 x 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 x x) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (fma.f64 -1/2 (/.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z (sqrt.f64 3))) (neg.f64 (/.f64 z (sqrt.f64 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 -1/2 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2))) (fma.f64 x x (*.f64 y y))) (*.f64 (sqrt.f64 3) (pow.f64 z 5))) (-.f64 (*.f64 -1/2 (+.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 z 3))) (/.f64 (fma.f64 x x (*.f64 y y)) (*.f64 z (sqrt.f64 3))))) (/.f64 z (sqrt.f64 3))))","(+.f64 (-.f64 (*.f64 (/.f64 -1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 x x (*.f64 y y)) z) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) (pow.f64 z 3)))) (/.f64 z (sqrt.f64 3))) (/.f64 (*.f64 (*.f64 (fma.f64 x x (*.f64 y y)) (pow.f64 (*.f64 1/2 (fma.f64 x x (*.f64 y y))) 2)) -1/4) (*.f64 (sqrt.f64 3) (pow.f64 z 5))))","(*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))","(*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))))","(/.f64 (hypot.f64 z y) (sqrt.f64 3))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (/.f64 (hypot.f64 z y) (sqrt.f64 3)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 x (sqrt.f64 3)) x)) (/.f64 (hypot.f64 z y) (sqrt.f64 3)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3))) (/.f64 (hypot.f64 z y) (sqrt.f64 3))))","(fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3))) (/.f64 (*.f64 (pow.f64 x 4) -1/8) (sqrt.f64 3)) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 x (sqrt.f64 3)) x)) (/.f64 (hypot.f64 z y) (sqrt.f64 3))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))) (/.f64 (pow.f64 x 2) (sqrt.f64 3)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3)))) (+.f64 (*.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) 5))) (/.f64 (pow.f64 x 6) (sqrt.f64 3)))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z z) (*.f64 y y)) 5))) (/.f64 (pow.f64 x 6) (sqrt.f64 3))) (*.f64 (/.f64 1 (sqrt.f64 3)) (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (/.f64 (*.f64 x x) (sqrt.f64 3))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 5))) (/.f64 (pow.f64 x 6) (sqrt.f64 3))) (/.f64 (hypot.f64 z y) (sqrt.f64 3)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 y y)))) (*.f64 (/.f64 x (sqrt.f64 3)) x)) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 3))) (/.f64 (pow.f64 x 4) (sqrt.f64 3))) (fma.f64 1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 z z (*.f64 y y)) 5))) (/.f64 (pow.f64 x 6) (sqrt.f64 3))) (/.f64 (hypot.f64 z y) (sqrt.f64 3)))))","(/.f64 x (sqrt.f64 3))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3)))))","(fma.f64 1/2 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 x (sqrt.f64 3)))","(fma.f64 1/2 (/.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (sqrt.f64 3)) (/.f64 x (sqrt.f64 3)))","(+.f64 (/.f64 x (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))))))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))))))","(fma.f64 1/2 (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (/.f64 x (sqrt.f64 3)))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 (/.f64 1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)))))","(+.f64 (/.f64 x (sqrt.f64 3)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))))))","(+.f64 (/.f64 x (sqrt.f64 3)) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (pow.f64 z 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5))) (*.f64 1/2 (+.f64 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))))))","(+.f64 (/.f64 x (sqrt.f64 3)) (*.f64 1/2 (+.f64 (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (/.f64 (*.f64 (*.f64 -1/2 (fma.f64 z z (*.f64 y y))) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2))) (*.f64 (sqrt.f64 3) (pow.f64 x 5))))))","(+.f64 (*.f64 (/.f64 1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)))) (+.f64 (/.f64 x (sqrt.f64 3)) (/.f64 (*.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2) (fma.f64 z z (*.f64 y y)))) -1/4) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))))","(*.f64 -1 (/.f64 x (sqrt.f64 3)))","(neg.f64 (/.f64 x (sqrt.f64 3)))","(/.f64 (neg.f64 x) (sqrt.f64 3))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (*.f64 -1 (/.f64 x (sqrt.f64 3))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (neg.f64 (/.f64 x (sqrt.f64 3))))","(-.f64 (*.f64 -1/2 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3)))) (/.f64 x (sqrt.f64 3)))","(fma.f64 -1/2 (/.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (sqrt.f64 3)) (/.f64 (neg.f64 x) (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 x (sqrt.f64 3)))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))) (neg.f64 (/.f64 x (sqrt.f64 3)))))","(-.f64 (*.f64 -1/2 (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))))) (/.f64 x (sqrt.f64 3)))","(-.f64 (*.f64 (/.f64 -1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)))) (/.f64 x (sqrt.f64 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2)) (*.f64 (sqrt.f64 3) x))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 x (sqrt.f64 3))) (*.f64 -1/2 (/.f64 (-.f64 (+.f64 (*.f64 1/8 (pow.f64 z 6)) (*.f64 -1/8 (pow.f64 z 6))) (*.f64 1/2 (*.f64 (-.f64 (+.f64 (*.f64 -1/4 (pow.f64 z 4)) (*.f64 1/4 (pow.f64 z 4))) (pow.f64 (*.f64 1/2 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) 2)) (+.f64 (pow.f64 z 2) (pow.f64 y 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))))))","(fma.f64 -1/2 (/.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))) (fma.f64 -1 (/.f64 x (sqrt.f64 3)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (pow.f64 z 6) 0) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 z z) (*.f64 y y)) (-.f64 (*.f64 (pow.f64 z 4) 0) (pow.f64 (*.f64 1/2 (+.f64 (*.f64 z z) (*.f64 y y))) 2))))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))))))","(fma.f64 -1/2 (/.f64 (fma.f64 z z (*.f64 y y)) (*.f64 x (sqrt.f64 3))) (fma.f64 -1/2 (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (*.f64 (sqrt.f64 3) (pow.f64 x 3))) (-.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 -1/2 (fma.f64 z z (*.f64 y y))) (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2))) (*.f64 (sqrt.f64 3) (pow.f64 x 5)))) (/.f64 x (sqrt.f64 3)))))","(+.f64 (-.f64 (*.f64 (/.f64 -1/2 (sqrt.f64 3)) (+.f64 (/.f64 (fma.f64 z z (*.f64 y y)) x) (/.f64 (neg.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2)) (pow.f64 x 3)))) (/.f64 x (sqrt.f64 3))) (/.f64 (*.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 1/2 (fma.f64 z z (*.f64 y y))) 2) (fma.f64 z z (*.f64 y y)))) 1/4) (*.f64 (sqrt.f64 3) (pow.f64 x 5))))"]],"stop":[["node limit",1]],"time":43.2880859375,"type":"simplify"},{"compiler":[[3039,2099]],"time":35.365966796875,"type":"eval"},{"alts":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","done",0.36328125],["(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","done",0.390625]],"compiler":[[11,8],[11,8]],"count":[[102,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[100,0],"picked":[1,1]}],"min-error":[0],"time":12.844970703125,"type":"prune"},{"accuracy":[0.36328125],"baseline":[0.36328125],"branch":[["x",0.36328125,1],["y",0.36328125,1],["z",0.36328125,1],["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))",0.36328125,1],["(/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3)",0.36328125,1],["(+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z))",0.36328125,1],["(+.f64 (*.f64 x x) (*.f64 y y))",0.36328125,1],["(*.f64 x x)",0.36328125,1],["(*.f64 x x)",0.36328125,1],["(*.f64 y y)",0.36328125,1],["(*.f64 z z)",0.36328125,1]],"compiler":[[4,3],[4,3],[4,3],[17,11],[16,10],[14,8],[10,6],[6,4],[6,4],[6,4],[6,4],[45,24]],"count":[[4,1]],"inputs":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))","(/.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 3))","(sqrt.f64 (/.f64 (fma.f64 y y (fma.f64 z z (*.f64 x x))) 3))","(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))"]],"link":["."],"name":["Data.Array.Repa.Algorithms.Pixel:doubleRmsOfRGB8 from repa-algorithms-3.4.0.1"],"oracle":[40.17962796081924],"outputs":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))"]],"time":32.34912109375,"times":[["x",3.35107421875],["y",3.261962890625],["z",3.257080078125],["(sqrt.f64 (/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3))",2.840087890625],["(/.f64 (+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z)) 3)",2.84912109375],["(+.f64 (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 z z))",2.681884765625],["(+.f64 (*.f64 x x) (*.f64 y y))",2.797119140625],["(*.f64 x x)",2.48095703125],["(*.f64 x x)",2.69091796875],["(*.f64 y y)",2.320068359375],["(*.f64 z z)",2.530029296875]],"type":"regimes"},{"compiler":[[11,8]],"egraph":[[1,10,12,3.1916e-5],[0,9,12,1.9541e-5]],"inputs":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (hypot.f64 y (hypot.f64 z x)) (sqrt.f64 1/3))"]],"stop":[["done",1],["saturated",1]],"time":8.366943359375,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[11,8],[11,8],[11,8]],"remove-preprocessing":[["(sort x y z)"]],"time":9.47509765625,"type":"end"}]