[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":143.3330078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",85.912109375,1595],["body",4096,"valid",95.515869140625,389],["body",1024,"valid",114.844970703125,780],["body",512,"valid",37.322998046875,374],["body",256,"valid",312.935791015625,5562],["body",2048,"valid",222.59619140625,1151]],"time":878.7080078125,"type":"sample"},{"compiler":[[20,14]],"egraph":[[0,3,3,2.292e-6],[6,6572,88,0.042035125000000007],[5,2849,88,0.025619833],[4,1483,88,0.010563666],[3,784,88,0.004597749],[2,308,96,0.001758124],[1,115,96,0.000581249],[0,39,104,0.000167041]],"inputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (/.f64 -1/2 a))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 2 b))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 b 2))","(/.f64 (-.f64 (neg.f64 a) (sqrt.f64 (fma.f64 a a (*.f64 (*.f64 b c) -4)))) (*.f64 b 2))","(*.f64 -1/2 (/.f64 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b))","(*.f64 (/.f64 -1/2 b) (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))))","(*.f64 (+.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) (/.f64 -1/2 b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 c a))))) (*.f64 2 c))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 c 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 c 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 c 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) c))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 a b))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 4 (*.f64 b a))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 c) (sqrt.f64 (fma.f64 c c (*.f64 (*.f64 b a) -4)))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 c (sqrt.f64 (fma.f64 c c (*.f64 (*.f64 b a) -4)))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))))","(*.f64 (+.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))) (/.f64 -1/2 a))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":66.81884765625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,7713,22,0.090244667],[13,7681,22,0.082809667],[12,7586,22,0.07442670800000001],[11,7460,22,0.065938333],[10,6487,22,0.057450957999999996],[9,4757,22,0.044815833],[8,3697,22,0.033699417],[7,3006,22,0.023751958],[6,1793,22,0.015140708],[5,840,22,0.006953249],[4,461,22,0.0031094160000000003],[3,259,22,0.001481291],[2,100,24,0.0006628739999999999],[1,38,24,0.000247999],[0,15,26,8.0833e-5]],"inputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 -4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (*.f64 a 2))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))) a))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 b b)))))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (/.f64 -1/2 a))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))"]],"stop":[["node limit",1]],"time":103.131103515625,"type":"simplify"},{"compiler":[[35,23]],"time":0.510009765625,"type":"eval"},{"alts":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","next",34.0148828873389],["(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))","fresh",34.063683985282246]],"compiler":[[20,14],[18,12],[20,14],[18,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[33.977746485282246],"time":1.572998046875,"type":"prune"},{"compiler":[[73,32]],"locations":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",0.08984375,true],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))",0.6361625099398125,true],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))",0.8046875000000001,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))",24.12928135050271,true]],"time":14.009033203125,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","-inf",0.373046875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","inf",0.60009765625],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","c","0",0.309814453125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","-inf",0.469970703125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","inf",0.757080078125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","a","0",0.283935546875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","-inf",0.47119140625],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","inf",0.39697265625],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))","b","0",0.989013671875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","-inf",0.378173828125],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","inf",0.583984375],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","c","0",0.22216796875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","-inf",0.35791015625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","inf",0.406982421875],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","a","0",0.258056640625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","-inf",0.424072265625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","inf",0.291015625],["(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","b","0",0.343994140625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","-inf",0.202880859375],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","inf",0.294921875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","c","0",0.31494140625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","-inf",0.201904296875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","inf",0.30908203125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","a","0",0.343017578125],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","-inf",0.1669921875],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","inf",0.28515625],["(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","b","0",0.31201171875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","-inf",0.576904296875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","inf",0.677978515625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","c","0",0.691162109375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","-inf",0.431884765625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","inf",0.614013671875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","a","0",0.4189453125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","-inf",0.35107421875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","inf",0.489013671875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","b","0",0.950927734375]],"time":16.096923828125,"type":"series"},{"count":[[4,394]],"egraph":[[2,5126,59,0.034048],[1,347,62,0.0067172080000000006],[0,15,74,0.000423416]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))","(-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))","(-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c)))))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (sqrt.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (hypot.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 4 (*.f64 a c) (*.f64 b b)) (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (fma.f64 4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64))) (neg.f64 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (neg.f64 (fma.f64 4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 a c) -4) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4)) (*.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) (pow.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 3)) (+.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (-.f64 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (*.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 (*.f64 a c) -4) (*.f64 (*.f64 a c) -4))) (-.f64 (*.f64 b b) (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (-.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 c) a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (exp.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (+.f64 1 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a c) -4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 c) a) 4)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (*.f64 a (neg.f64 c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a c) -4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1 (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b b (*.f64 (*.f64 a c) -4)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 a c) -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 2)) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (sqrt.f64 (*.f64 a c))) (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (neg.f64 c)) 4 (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (*.f64 (pow.f64 (*.f64 a c) 3) 64)) (/.f64 1 (fma.f64 (*.f64 4 (*.f64 a c)) (fma.f64 4 (*.f64 a c) (*.f64 b b)) (pow.f64 b 4))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (/.f64 1 (fma.f64 4 (*.f64 a c) (*.f64 b b))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 a c) -4)) (cbrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))) (cbrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (*.f64 a c) -4)) (sqrt.f64 (*.f64 (*.f64 a c) -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (sqrt.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 2 (sqrt.f64 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16))) (cbrt.f64 (*.f64 4 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 4 a)) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 a) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 c) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (sqrt.f64 (*.f64 a c))) (sqrt.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (*.f64 (*.f64 a c) -4) 1 (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 4 (*.f64 a c)))) (cbrt.f64 (*.f64 (pow.f64 (*.f64 a c) 2) 16)) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 a c) -4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 (*.f64 a c) -4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 (*.f64 a c) -4 (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 4 (*.f64 a c)) (fma.f64 (*.f64 a c) -4 (*.f64 4 (*.f64 a c))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (*.f64 (exp.f64 b) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) (neg.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (fma.f64 b b (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c))) (/.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)) 1/4)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 1/2 a)) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) a) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 2) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 1) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) 1) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (cbrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (cbrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 a 2))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (sqrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (sqrt.f64 (*.f64 a 2))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (sqrt.f64 (*.f64 a 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 3) (pow.f64 (*.f64 a 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1/2 a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (cbrt.f64 (*.f64 b (/.f64 1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 b (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a 2))) (/.f64 b (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a 2)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a 2)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 b (cbrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a 2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a 2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (sqrt.f64 (*.f64 a 2))) (/.f64 b (sqrt.f64 (*.f64 a 2))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))))))"]],"rules":[["egg-rr",65],["egg-rr",108],["egg-rr",192],["egg-rr",29]],"stop":[["node limit",1]],"time":85.80908203125,"type":"rewrite"},{"count":[[478,447]],"egraph":[[3,5079,1433,0.021224666],[2,973,1516,0.008622124],[1,288,1609,0.002096666],[0,91,1703,0.000511875]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (/.f64 c (/.f64 b a)) 2) b)","(-.f64 (/.f64 (*.f64 a 2) (/.f64 b c)) b)","(-.f64 (*.f64 (/.f64 2 b) (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))) b)","(-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) b)","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (-.f64 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c)))) b)))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) b))","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)) (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(fma.f64 b b (*.f64 (*.f64 c a) -4))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 (*.f64 -2 a) (/.f64 b c))","(*.f64 (/.f64 -2 b) (*.f64 c a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))))","(*.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -2 (*.f64 c c)) (*.f64 a a)) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 (*.f64 a 2) (/.f64 b c)))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 3) (*.f64 c c))) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 c (/.f64 (pow.f64 b 3) c))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(neg.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(-.f64 (*.f64 a (-.f64 (/.f64 (*.f64 -2 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) a)) (/.f64 c (/.f64 (pow.f64 b 3) c)))) (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -2 (*.f64 c c)) (*.f64 a a)) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b))) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(fma.f64 (/.f64 -1/4 (pow.f64 b 7)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) a) (-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -5) (*.f64 a (pow.f64 b 7)))) (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (/.f64 (neg.f64 b) a) (/.f64 c b)) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)))","(-.f64 (+.f64 (/.f64 c b) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))) (/.f64 b a))","(-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (-.f64 (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b)) (/.f64 b a)))","(fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (-.f64 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) a (/.f64 c b)) (/.f64 b a)))"]],"stop":[["node limit",1]],"time":53.702880859375,"type":"simplify"},{"compiler":[[12736,7125]],"time":121.909912109375,"type":"eval"},{"alts":[["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","fresh",34.046796656875784],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","fresh",34.13146136783383],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","fresh",47.72523078696411],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",50.416469274163745],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","next",33.99581671392451],["(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","fresh",52.00062370746032],["(/.f64 (neg.f64 c) b)","fresh",40.88560856170871],["(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","fresh",59.38397246314769],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(/.f64 (/.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 2 a))","fresh",47.5824726299316],["(*.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))","fresh",47.71513327706766],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526]],"compiler":[[7,5],[27,17],[21,15],[32,22],[14,10],[19,13],[19,14],[7,5],[21,16],[10,6],[31,19],[32,22],[16,10],[7,5],[27,17],[21,15],[32,22],[14,10],[19,13],[19,14],[7,5],[21,16],[10,6],[31,19],[32,22],[16,10]],"count":[[449,13]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[447,13],"picked":[1,0]}],"min-error":[4.933209464644097],"time":128.24609375,"type":"prune"},{"compiler":[[64,31]],"locations":[["(fma.f64 (*.f64 -4 a) c (*.f64 b b))",0.0078125,true],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))",0.08984375,true],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))",0.6361625099398125,true],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))",24.12928135050271,true]],"time":13.655029296875,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","b","-inf",0.14501953125],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","b","inf",0.1630859375],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","b","0",0.22802734375],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","c","-inf",0.293212890625],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","c","inf",0.2509765625],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","c","0",0.215087890625],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","a","-inf",0.26318359375],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","a","inf",0.2451171875],["(fma.f64 (*.f64 -4 a) c (*.f64 b b))","a","0",0.2529296875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","c","-inf",0.287109375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","c","inf",0.27001953125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","c","0",0.205078125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","a","-inf",0.39208984375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","a","inf",0.302001953125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","a","0",0.202880859375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","b","-inf",0.23193359375],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","b","inf",0.22216796875],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","b","0",0.232177734375],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","c","-inf",0.26513671875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","c","inf",0.253173828125],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","c","0",0.211181640625],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","a","-inf",0.2490234375],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","a","inf",0.279052734375],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","a","0",0.197998046875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","b","-inf",0.254150390625],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","b","inf",0.201904296875],["(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","b","0",1.5],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","-inf",0.180908203125],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","inf",0.225830078125],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","b","0",0.304931640625],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","-inf",0.278076171875],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","inf",0.287841796875],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","c","0",0.217041015625],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","-inf",0.298828125],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","inf",0.281982421875],["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","a","0",0.30810546875]],"time":10.6640625,"type":"series"},{"count":[[4,250]],"egraph":[[2,4302,59,0.030108834],[1,305,62,0.0058864170000000006],[0,14,66,0.000384042]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))","(-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b))))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","(fma.f64 (*.f64 -4 a) c (*.f64 b b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 -4 (*.f64 a c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3)) (fma.f64 b b (-.f64 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (*.f64 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (*.f64 (exp.f64 b) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) (neg.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 -4 (*.f64 a c) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b))))) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (/.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) (cbrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (fma.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (-.f64 (sqrt.f64 b) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4)) (+.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 1/2 a)) (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (*.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) a) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 1) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 1) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (sqrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3) (pow.f64 (+.f64 a a) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 2 (/.f64 a (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) 3) (pow.f64 (+.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 1/2 a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b (/.f64 1/2 a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (cbrt.f64 (*.f64 b (/.f64 1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (sqrt.f64 (*.f64 b (/.f64 1/2 a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 a) (/.f64 b 2) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (+.f64 a a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (+.f64 a a)) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 b (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (/.f64 b (cbrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 b (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 b) (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (+.f64 a a))) (/.f64 (sqrt.f64 b) (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 a a))) (/.f64 b (sqrt.f64 (+.f64 a a))) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 -4 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4 (*.f64 a c)) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 2) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4) 3) (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -4 (*.f64 a c)) 3) (pow.f64 (*.f64 b b) 3)) (fma.f64 (*.f64 -4 (*.f64 a c)) (*.f64 -4 (*.f64 a c)) (-.f64 (pow.f64 b 4) (*.f64 (*.f64 -4 (*.f64 a c)) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -4 (*.f64 a c)) (*.f64 -4 (*.f64 a c))) (pow.f64 b 4)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -4 (*.f64 a c))) (exp.f64 (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -4 (*.f64 a c))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b b)) (exp.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 -4 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -4 (*.f64 a c))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) 1))))))"]],"rules":[["egg-rr",37],["egg-rr",70],["egg-rr",113],["egg-rr",30]],"stop":[["node limit",1]],"time":69.226806640625,"type":"rewrite"},{"count":[[334,303]],"egraph":[[3,5087,1433,0.021356416],[2,973,1516,0.008584916],[1,288,1609,0.0020988739999999997],[0,91,1703,0.000513541]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(fma.f64 -2 (*.f64 a (/.f64 c b)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) b)","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (*.f64 (/.f64 c b) a) 2) b)","(-.f64 (*.f64 (*.f64 a (/.f64 c b)) 2) b)","(-.f64 (/.f64 c (/.f64 (/.f64 b a) 2)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)))) b)","(-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) b)","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (-.f64 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3)) b)))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) b))","(-.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 -4 (/.f64 (pow.f64 (*.f64 c a) 3) (pow.f64 b 5)) b))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 c b) a))","(*.f64 (/.f64 c b) (*.f64 -2 a))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))))","(*.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (fma.f64 -2 (*.f64 (/.f64 c b) a) (*.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(+.f64 (fma.f64 -2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))) (*.f64 (/.f64 -4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 a (/.f64 c b)) 2))","(fma.f64 b -2 (/.f64 c (/.f64 (/.f64 b a) 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (/.f64 (*.f64 (*.f64 2 (*.f64 c c)) (*.f64 a a)) (pow.f64 b 3))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))))","(fma.f64 b -2 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (*.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) (*.f64 a a)) (/.f64 (*.f64 4 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))","(+.f64 (*.f64 2 (fma.f64 (/.f64 c b) a (*.f64 (*.f64 a a) (/.f64 (*.f64 c c) (pow.f64 b 3))))) (fma.f64 b -2 (*.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4)))","(+.f64 (*.f64 2 (*.f64 a (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))) (fma.f64 b -2 (*.f64 (/.f64 4 (pow.f64 b 5)) (pow.f64 (*.f64 c a) 3))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)))","(-.f64 (neg.f64 (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(neg.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(-.f64 (*.f64 a (-.f64 (/.f64 (*.f64 -2 (pow.f64 c 3)) (/.f64 (pow.f64 b 5) a)) (/.f64 (*.f64 c c) (pow.f64 b 3)))) (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (-.f64 (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 c b))) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(fma.f64 (/.f64 -1/4 (pow.f64 b 7)) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) a) (-.f64 (/.f64 (pow.f64 c 3) (/.f64 (/.f64 (pow.f64 b 5) (*.f64 a a)) -2)) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -5) (*.f64 a (pow.f64 b 7)))) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (+.f64 (neg.f64 (/.f64 b a)) (/.f64 c b)) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)))","(+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (/.f64 c b)) (/.f64 b a))","(fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 b 3)) (/.f64 c b)) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (neg.f64 (/.f64 b a))))","(+.f64 (/.f64 c b) (+.f64 (-.f64 (*.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))) (/.f64 b a)) (/.f64 a (/.f64 (pow.f64 b 3) (*.f64 c c)))))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(fma.f64 2 (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) a)) a) (fma.f64 (/.f64 (*.f64 c c) (pow.f64 b 3)) a (-.f64 (/.f64 c b) (/.f64 b a))))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 b b) (*.f64 (*.f64 c a) -4))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 (*.f64 c a) -4 (*.f64 b b))"]],"stop":[["node limit",1]],"time":49.877197265625,"type":"simplify"},{"compiler":[[7531,4300]],"time":74.780029296875,"type":"eval"},{"alts":[["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","next",34.13146136783383],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))","fresh",44.47152618038673],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))","fresh",47.683675115332456],["(/.f64 (neg.f64 b) a)","fresh",42.696244571949826],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","fresh",47.72523078696411],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",50.416469274163745],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)))) (*.f64 2 a))","fresh",47.563168406639925],["(/.f64 (/.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (*.f64 2 a))","fresh",46.91355976502609]],"compiler":[[21,15],[39,27],[10,6],[32,22],[7,5],[16,10],[32,22],[19,13],[7,5],[14,10],[19,14],[31,18],[21,15],[39,27],[10,6],[32,22],[7,5],[16,10],[32,22],[7,5],[14,10],[19,14],[31,18]],"count":[[316,12]],"kept":[{"done":[0,0],"fresh":[12,3],"new":[303,8],"picked":[1,1]}],"min-error":[3.157636345942457],"time":67.572998046875,"type":"prune"},{"compiler":[[80,44]],"locations":[["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))",0.0078125,true],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))",0.1875,true],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))",5.318594835137044,true],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))",12.792204809447512,true]],"time":16.69384765625,"type":"localize"},{"count":[[4,11]],"series":[["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","c","-inf",0.7900390625],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","c","inf",0.926025390625],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","c","0",0.409912109375],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","a","-inf",1.626953125],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","a","inf",0.825927734375],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","a","0",0.403076171875],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","b","-inf",0.2900390625],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","b","inf",0.284912109375],["(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))","b","0",0.237060546875],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","c","-inf",0.7041015625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","c","inf",0.799072265625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","c","0",0.3759765625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","a","-inf",0.67822265625],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","a","inf",0.757080078125],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","a","0",0.36083984375],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","b","-inf",0.26318359375],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","b","inf",0.248046875],["(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","b","0",0.490966796875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","c","-inf",2.697998046875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","c","inf",3.7021484375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","c","0",1.113037109375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","a","-inf",2.7880859375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","a","inf",3.337890625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","a","0",0.97412109375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","b","-inf",0.8359375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","b","inf",1.73388671875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","b","0",0.531982421875],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","c","-inf",0.406982421875],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","c","inf",0.380126953125],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","c","0",0.778076171875],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","a","-inf",0.781982421875],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","a","inf",0.3720703125],["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","a","0",0.72705078125]],"time":32.125,"type":"series"},{"count":[[4,322]],"egraph":[[2,4222,64,0.033256832],[1,342,64,0.006255416],[0,16,66,0.000475333]],"inputs":[["(sqrt.f64 (*.f64 -4 (*.f64 a c)))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","(*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))","(hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) (cbrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a c)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -4) (sqrt.f64 (*.f64 a c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -4 a) 1/2) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 -4 a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (*.f64 -1/2 (/.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (/.f64 -1/2 a) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2 (/.f64 b a)) 1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (pow.f64 a -1) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (pow.f64 a -1)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (pow.f64 a -1) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 -1/2 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a)))) (cbrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (sqrt.f64 (*.f64 -1/2 (/.f64 b a))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))) (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 b a) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2) (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/2 (/.f64 b a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3)) (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (-.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (*.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 -1/2 (/.f64 b a)) (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (exp.f64 (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/2 (/.f64 b a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a) (*.f64 -1/2 (/.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3)) (+.f64 0 (fma.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)) (*.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3) (pow.f64 (/.f64 1/2 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 3) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",38],["egg-rr",232],["egg-rr",30]],"stop":[["node limit",1]],"time":113.51416015625,"type":"rewrite"},{"count":[[333,333]],"egraph":[[5,4347,52,0.024169291000000002],[4,954,52,0.010378458],[3,184,52,0.002314041],[2,76,52,0.000625041],[1,38,52,0.00026074999999999997],[0,16,52,9.625e-5]],"inputs":[["(*.f64 -1 (/.f64 b a))","(/.f64 (-.f64 (*.f64 -1/2 b) (*.f64 1/2 b)) a)","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","b","(*.f64 -1 b)","b","b"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(/.f64 (-.f64 (*.f64 -1/2 b) (*.f64 1/2 b)) a)","(/.f64 (neg.f64 b) a)","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(/.f64 (neg.f64 b) a)","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","(*.f64 -1/2 (/.f64 b a))","(*.f64 (/.f64 b a) -1/2)","(*.f64 b (/.f64 -1/2 a))","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","(*.f64 1/2 (/.f64 b a))","(/.f64 (*.f64 b 1/2) a)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 b a) 1/2)","b","(*.f64 -1 b)","(neg.f64 b)","b","b"]],"stop":[["node limit",1]],"time":41.8369140625,"type":"simplify"},{"compiler":[[17675,11339]],"time":170.83203125,"type":"eval"},{"alts":[["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))","fresh",47.683675115332456],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","next",34.24071404209582],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)))) (*.f64 2 a))","fresh",47.563168406639925],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(+.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))","fresh",36.02759475390852],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",50.416469274163745],["(+.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))","fresh",36.11074427999325],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 b (/.f64 1/2 a))))","fresh",42.758744571949826],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))))","fresh",34.642556230883294]],"compiler":[[10,6],[32,22],[24,18],[19,14],[19,13],[7,5],[80,57],[14,10],[67,45],[16,10],[14,10],[23,17],[10,6],[32,22],[24,18],[19,14],[7,5],[80,57],[14,10],[67,45],[16,10],[14,10],[23,17]],"count":[[345,12]],"kept":[{"done":[1,1],"fresh":[10,6],"new":[333,5],"picked":[1,0]}],"min-error":[3.157636345942457],"time":56.98681640625,"type":"prune"},{"compiler":[[109,76]],"locations":[["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))",0.1875,true],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)",0.4825364258319565,true],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))",5.318594835137044,true],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))",12.792204809447512,true]],"time":26.92822265625,"type":"localize"},{"count":[[4,27]],"series":[["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","a","-inf",0.216796875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","a","inf",0.248046875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","a","0",0.20703125],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","c","-inf",0.218994140625],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","c","inf",0.217041015625],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","c","0",0.242919921875],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","b","-inf",0.26611328125],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","b","inf",0.2900390625],["(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))","b","0",0.615966796875],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","a","-inf",0.20703125],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","a","inf",0.215087890625],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","a","0",0.170166015625],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","c","-inf",0.210205078125],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","c","inf",0.213134765625],["(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","c","0",0.2080078125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","c","-inf",2.241943359375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","c","inf",6.027099609375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","c","0",20.517822265625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","a","-inf",2.903076171875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","a","inf",12.02294921875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","a","0",19.01806640625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","b","-inf",3.9560546875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","b","inf",0.791015625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","b","0",1.330810546875],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","a","-inf",0.27197265625],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","a","inf",0.224853515625],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","a","0",0.259033203125],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","c","-inf",0.34814453125],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","c","inf",0.26416015625],["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","c","0",0.287841796875]],"time":74.781005859375,"type":"series"},{"count":[[4,341]],"egraph":[[2,4733,61,0.034306500000000004],[1,412,61,0.007229915999999999],[0,19,63,0.000581208]],"inputs":[["(sqrt.f64 (*.f64 c (*.f64 -4 a)))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","(pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)","(*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6) (cbrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6)) (cbrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) (*.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) (cbrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 c) (sqrt.f64 (*.f64 -4 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2)) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c -4) 1/2) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a)))) 3) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) 3) (pow.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 1) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))))) (cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6)) (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 -4 a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (/.f64 (*.f64 -1/2 b) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (/.f64 1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (/.f64 -1/2 a) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 -1/2 b) a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 -1/2 b) a) 1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) 1/2 (*.f64 (*.f64 (/.f64 1 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (cbrt.f64 (/.f64 1/4 (*.f64 a a))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 -1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (sqrt.f64 (/.f64 1/2 a)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (*.f64 (/.f64 1 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1)))) (fma.f64 (/.f64 -1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1) (*.f64 (/.f64 1/2 a) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 1/2 (sqrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)) (*.f64 (/.f64 1/2 (sqrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (neg.f64 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) (*.f64 (/.f64 1 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1)))) (fma.f64 (/.f64 -1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 (/.f64 1/2 a) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (cbrt.f64 (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (cbrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (*.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) (*.f64 -1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))) (*.f64 (cbrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (cbrt.f64 (/.f64 1/4 (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (*.f64 -1/2 b) a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a))) (cbrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (sqrt.f64 (/.f64 (*.f64 -1/2 b) a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 b a)) 2)) (cbrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 b a))) (sqrt.f64 (/.f64 b a)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 a))) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))) (*.f64 (sqrt.f64 (/.f64 1/2 a)) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (sqrt.f64 (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -1/2 b) a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 b a) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 2) (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 -1/2 b) a) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3)) (fma.f64 (/.f64 (*.f64 -1/2 b) a) (/.f64 (*.f64 -1/2 b) a) (-.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))) (*.f64 (/.f64 (*.f64 -1/2 b) a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (*.f64 -1/2 b) a) (/.f64 (*.f64 -1/2 b) a) (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (*.f64 -1/2 b) a)) (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (*.f64 -1/2 b) a)) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (exp.f64 (/.f64 (*.f64 -1/2 b) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) (exp.f64 (/.f64 (*.f64 -1/2 b) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (*.f64 -1/2 b) a)) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/2 (/.f64 b a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6) (cbrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a)))) (*.f64 (cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6)) (cbrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) (*.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) (cbrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 c) (sqrt.f64 (*.f64 -4 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2)) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c -4) 1/2) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a)))) 3) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) 3) (pow.f64 (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) 1) (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (cbrt.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))))) (cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 -4 a))) (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6)) (pow.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 c (*.f64 -4 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (*.f64 -4 a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 c (*.f64 -4 a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3)) (+.f64 0 (fma.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)) (*.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b)))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) -1/2) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1/2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) 1) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 1/4 (*.f64 a a)) (fma.f64 c (*.f64 -4 a) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3) (pow.f64 (/.f64 1/2 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1/2 a) 3) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (/.f64 1/2 a))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",33],["egg-rr",232],["egg-rr",38]],"stop":[["node limit",1]],"time":114.454833984375,"type":"rewrite"},{"count":[[368,324]],"egraph":[[4,3753,500,0.021421583],[3,1235,604,0.009185166000000002],[2,396,692,0.0031280830000000003],[1,149,780,0.001041166],[0,55,892,0.000314791]],"inputs":[["(*.f64 -1 (/.f64 b a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 1/2 b) (*.f64 -1/2 (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6)))))) a))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(-.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6)))))))","(neg.f64 (/.f64 (-.f64 (*.f64 b 1/2) (*.f64 -1/2 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 c) (neg.f64 (log.f64 (/.f64 -1 a))))) 6)))))) a))","(/.f64 (neg.f64 (*.f64 1/2 (+.f64 b (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 c) (log.f64 (/.f64 -1 a)))) 6) (*.f64 b b)))))) a)","(/.f64 (*.f64 -1/2 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 c 1/6) (pow.f64 (/.f64 -1 a) -1/6)) 6)))))) a)","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3))))))","(*.f64 (/.f64 -1/2 a) (+.f64 b (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b)))))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 3))","(*.f64 2 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 3))","(*.f64 2 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 3))","(*.f64 2 (pow.f64 (pow.f64 (/.f64 a (/.f64 -1 c)) 1/6) 3))","(*.f64 2 (pow.f64 (*.f64 a (*.f64 -1 c)) 1/2))","(*.f64 1/2 (/.f64 b a))","(*.f64 (/.f64 b a) 1/2)","(/.f64 b (/.f64 a 1/2))","(*.f64 b (/.f64 1/2 a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 (/.f64 b a) -1/2)","(*.f64 b (/.f64 -1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (pow.f64 b 2) (*.f64 4 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 c) (*.f64 -1 (log.f64 (/.f64 -1 a)))))) 6))))))","(*.f64 1/2 (*.f64 (/.f64 1 a) (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -1 (log.f64 (/.f64 -1 c)) (log.f64 a))) 6))))))","(*.f64 (sqrt.f64 (fma.f64 4 (pow.f64 (pow.f64 (exp.f64 1/6) (-.f64 (log.f64 a) (log.f64 (/.f64 -1 c)))) 6) (*.f64 b b))) (/.f64 1/2 a))","(*.f64 1/2 (/.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 c) -1/6) (pow.f64 a 1/6)) 6)))) a))","(*.f64 (sqrt.f64 (fma.f64 b b (*.f64 4 (pow.f64 (cbrt.f64 (/.f64 a (/.f64 -1 c))) 3)))) (/.f64 1/2 a))","(*.f64 (sqrt.f64 (fma.f64 4 (*.f64 a (*.f64 -1 c)) (*.f64 b b))) (/.f64 1/2 a))"]],"stop":[["node limit",1]],"time":46.590087890625,"type":"simplify"},{"compiler":[[17734,11760]],"time":169.903076171875,"type":"eval"},{"alts":[["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",42.832209063377846],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))","fresh",47.683675115332456],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","done",33.99581671392451],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))) 3)) (/.f64 1/2 a))))","fresh",46.52113656689647],["(neg.f64 (/.f64 c b))","fresh",40.88560856170871],["(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))","fresh",36.11074427999325],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))","fresh",36.02759475390852],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))) (/.f64 1/2 a))))","fresh",47.323566581299964],["(/.f64 (-.f64 (neg.f64 b) (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)))) (*.f64 2 a))","fresh",47.563168406639925],["(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","fresh",42.893314866714526],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 c) (sqrt.f64 (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","fresh",48.49211481774626],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))))","fresh",34.642556230883294]],"compiler":[[10,6],[32,22],[19,13],[25,19],[7,5],[67,45],[80,57],[31,25],[19,14],[16,10],[25,19],[23,17]],"count":[[336,12]],"kept":[{"done":[1,1],"fresh":[10,6],"new":[324,5],"picked":[1,0]}],"min-error":[0.1581130858237756],"time":51.428955078125,"type":"prune"},{"accuracy":[9.167358440729588],"baseline":[33.99581671392451],"branch":[["a",24.23407132162761,6],["b",9.167358440729588,3],["c",21.677393385353398,11],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",11.825136959103697,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[813,493]],"count":[[33,3]],"inputs":[["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 c -4)) (sqrt.f64 a))) 3)) (/.f64 1/2 a))))","(+.f64 (fma.f64 (*.f64 -1/2 b) (/.f64 1 a) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))) (fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))) (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (/.f64 1/2 a) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (*.f64 2 (pow.f64 (exp.f64 (*.f64 1/6 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 c))) (log.f64 a)))) 3))) (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 c) (sqrt.f64 (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a)))) 3)) (/.f64 1/2 a))))","(+.f64 (fma.f64 (/.f64 b a) -1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (*.f64 (*.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)) (/.f64 1/2 a)) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b)))))","(+.f64 (fma.f64 (*.f64 -1/2 b) (pow.f64 a -1) (neg.f64 (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 1/2 (cbrt.f64 a))) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 1/2 (cbrt.f64 a)) (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) (pow.f64 (cbrt.f64 a) 2)))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 b (/.f64 1/2 a))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 1 (/.f64 a (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 -4 a))) b) 1/2)))))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) (/.f64 1/2 a))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) (pow.f64 (cbrt.f64 (+.f64 a a)) 2)) (cbrt.f64 (/.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))) b) (*.f64 a -2))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) 2) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) a))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(neg.f64 (/.f64 c b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 -4 a)) (sqrt.f64 c)))) (*.f64 2 a))","(/.f64 (/.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 -4 (*.f64 a c) (*.f64 b b)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 -4 (*.f64 a c)))))) (*.f64 2 a))","(/.f64 (neg.f64 b) a)","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 (pow.f64 (cbrt.f64 (*.f64 a c)) 2)) (cbrt.f64 (*.f64 a c)) (*.f64 b b)))) (*.f64 2 a))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))) (/.f64 1/2 a))))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (/.f64 1/2 a)))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","(expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a))))","(/.f64 (neg.f64 c) b)","(pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) (/.f64 1/2 a)) 3) 1/3)","(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (/.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 4 (*.f64 a c)))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) (*.f64 2 a))","(*.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4)))) 2)) 2) (/.f64 (cbrt.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a c) -4))))) a))","(*.f64 (/.f64 c b) (-.f64 -1 (/.f64 (*.f64 c a) (*.f64 b b))))","(*.f64 (+.f64 b (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4))))) (/.f64 -1/2 a))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))"]],"link":["."],"name":["quadm (p42, negative)"],"oracle":[64.0],"outputs":[["(neg.f64 (/.f64 c b))","(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a))","(/.f64 (neg.f64 b) a)"]],"time":240.947021484375,"times":[["a",63.203125],["b",28.362060546875],["c",106.343017578125],["(/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 2 a))",28.549072265625]],"type":"regimes"},{"bstep":[[2.329454310736128e+91,1.8504212049992524e+92,27.2490234375],[-6.127554384708505e-102,-6.631186446250369e-112,34.43896484375]],"compiler":[[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[20,14],[8,6],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":62.030029296875,"type":"bsearch"},{"compiler":[[35,22]],"egraph":[[6,77,48,0.0006010009999999999],[5,76,48,0.0005066669999999999],[4,73,48,0.00040275099999999997],[3,66,48,0.000308126],[2,51,48,0.000217126],[1,38,48,0.000127209],[0,24,48,6.2667e-5]],"inputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a)) (/.f64 (neg.f64 b) a)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 2 a)) (/.f64 (neg.f64 b) a)))","(if (<=.f64 b -1814149116270455/2707685248164858261307045101702230179137145581421695874189921465443966120903931272499975005961073806735733604454495675614232576) (neg.f64 (/.f64 c b)) (if (<=.f64 b 23999999999999998290993008004600824449156145842508731967840435135103407572234726474654941184) (/.f64 (-.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 -4 a) c (*.f64 b b)))) (*.f64 a 2)) (/.f64 (neg.f64 b) a)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.90087890625,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[35,22]],"remove-preprocessing":[[]],"time":12.985107421875,"type":"end"}]