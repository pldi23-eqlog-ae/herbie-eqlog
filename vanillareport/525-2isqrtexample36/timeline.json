[{"compiler":[[13,11]],"method":["search"],"sampling":[[2,0.499755859375,0.0,0.500244140625],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":0.25,"type":"analyze"},{"outcomes":[["body",1024,"valid",267.661865234375,2318],["body",512,"valid",80.14111328125,1033],["body",256,"valid",203.18310546875,4905]],"time":558.962890625,"type":"sample"},{"compiler":[[12,10]],"egraph":[[0,1,1,1.084e-6],[11,235,17,0.0036252910000000005],[10,233,17,0.0031178330000000004],[9,207,17,0.0025939580000000004],[8,171,17,0.0019957490000000002],[7,127,17,0.001436666],[6,93,17,0.0009920830000000002],[5,56,17,0.0005880410000000001],[4,38,17,0.000357958],[3,28,17,0.00024324900000000002],[2,20,17,0.000153416],[1,14,17,9.1624e-5],[0,9,17,4.4791e-5]],"inputs":[["0"],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 1 x))))","(+.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":25.906005859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,235,17,0.0036211259999999997],[10,233,17,0.003113834],[9,207,17,0.002589251],[8,171,17,0.001972376],[7,127,17,0.001414334],[6,93,17,0.000976584],[5,56,17,0.000576084],[4,38,17,0.000349918],[3,28,17,0.000236876],[2,20,17,0.00014779299999999999],[1,14,17,8.7251e-5],[0,9,17,4.1209e-5]],"inputs":[["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 1 x))))","(+.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))"]],"stop":[["saturated",1]],"time":14.152099609375,"type":"simplify"},{"compiler":[[23,18]],"time":0.406982421875,"type":"eval"},{"alts":[["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","next",19.043520886594113]],"compiler":[[12,10],[12,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[19.043520886594113],"time":1.341064453125,"type":"prune"},{"compiler":[[33,23]],"locations":[["(sqrt.f64 (+.f64 x 1))",0.00390625,true],["(/.f64 1 (sqrt.f64 (+.f64 x 1)))",0.11328125,true],["(/.f64 1 (sqrt.f64 x))",0.23046875,true],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))",2.051618840490516,true]],"time":8.1748046875,"type":"localize"},{"count":[[4,8]],"series":[["(sqrt.f64 (+.f64 x 1))","x","-inf",0.299072265625],["(sqrt.f64 (+.f64 x 1))","x","inf",0.40185546875],["(sqrt.f64 (+.f64 x 1))","x","0",0.18603515625],["(/.f64 1 (sqrt.f64 (+.f64 x 1)))","x","-inf",0.3388671875],["(/.f64 1 (sqrt.f64 (+.f64 x 1)))","x","inf",0.299072265625],["(/.f64 1 (sqrt.f64 (+.f64 x 1)))","x","0",0.197998046875],["(/.f64 1 (sqrt.f64 x))","x","-inf",0.433837890625],["(/.f64 1 (sqrt.f64 x))","x","inf",0.234130859375],["(/.f64 1 (sqrt.f64 x))","x","0",0.25],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","x","-inf",0.911865234375],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","x","inf",1.239990234375],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","x","0",0.583984375]],"time":5.541015625,"type":"series"},{"count":[[4,229]],"egraph":[[2,2980,30,0.025209500000000003],[1,207,30,0.00402925],[0,9,38,0.000264833]],"inputs":[["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))","(/.f64 1 (sqrt.f64 x))","(/.f64 1 (sqrt.f64 (+.f64 x 1)))","(sqrt.f64 (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 -1 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (pow.f64 (+.f64 1 x) -1/6) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (pow.f64 x -1/2) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/2) 1 (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/6) (cbrt.f64 (/.f64 1 x)) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (neg.f64 (sqrt.f64 x))) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1))) (fma.f64 (neg.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) -1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (pow.f64 x -1/2) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/2) 1 (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/6) (cbrt.f64 (/.f64 1 x)) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (neg.f64 (sqrt.f64 x))) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (/.f64 1 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (*.f64 x (+.f64 1 x))) (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)) (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (sqrt.f64 (*.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x))) (neg.f64 (sqrt.f64 (*.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (neg.f64 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (sqrt.f64 (+.f64 1 x))) (*.f64 (neg.f64 (sqrt.f64 x)) 1)) (*.f64 (neg.f64 (sqrt.f64 x)) (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (sqrt.f64 (+.f64 1 x))) (*.f64 (sqrt.f64 x) -1)) (*.f64 (sqrt.f64 x) (neg.f64 (sqrt.f64 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1 x)))) (*.f64 (neg.f64 (sqrt.f64 x)) -1)) (*.f64 (neg.f64 (sqrt.f64 x)) (neg.f64 (sqrt.f64 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x -3/2) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 3)) (+.f64 (/.f64 1 x) (-.f64 (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2) (*.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 x) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2)) (-.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (sqrt.f64 x)) (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (*.f64 x (+.f64 1 x))) (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)) (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (exp.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (pow.f64 x -1/2)) (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (exp.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (/.f64 1 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (exp.f64 (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (+.f64 1 (expm1.f64 (pow.f64 x -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (pow.f64 (+.f64 1 x) -1/2))) (+.f64 1 (expm1.f64 (pow.f64 x -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/6) (cbrt.f64 (/.f64 1 x)) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/6) (cbrt.f64 (/.f64 1 x)) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 x -1/6) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 x -1/6) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/4) (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (neg.f64 (sqrt.f64 x))) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (neg.f64 (sqrt.f64 x))) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (sqrt.f64 (+.f64 1 x)) (sqrt.f64 x)) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (/.f64 1 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (/.f64 1 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (/.f64 1 (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) 2) (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (sqrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (*.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (fma.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (+.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x)))) (pow.f64 (+.f64 1 x) -1/6) (pow.f64 x -1/2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 x -1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 x -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 x -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/6) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (pow.f64 x -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/4) (pow.f64 x -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x x) -1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 3/2) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x -1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 1/6) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x -1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 1/4) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x -3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 3) -1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (sqrt.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 x -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 1 x) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/6) (cbrt.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 2) -1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 3) -1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 3/2) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 1/6) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 x)) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 1/4) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (sqrt.f64 (+.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log1p.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 1 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) 1/6) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 x)) (pow.f64 (+.f64 1 x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) 1/4) (pow.f64 (+.f64 1 x) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 1 x)) (pow.f64 (+.f64 1 x) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 x) 1/4) (pow.f64 (+.f64 1 x) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 1 (pow.f64 x 3/2)) (hypot.f64 x (sqrt.f64 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x x -1)) (sqrt.f64 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/6) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 x)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/4) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3/2) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 1 (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",34],["egg-rr",34],["egg-rr",122]],"stop":[["node limit",1]],"time":59.357177734375,"type":"rewrite"},{"count":[[237,242]],"egraph":[[18,7849,56,0.114630751],[17,7513,56,0.104287209],[16,7147,56,0.093039626],[15,6746,56,0.082555793],[14,5918,56,0.072382668],[13,5256,56,0.06183746],[12,4729,56,0.052940876],[11,4320,56,0.045093626],[10,3667,56,0.037681416999999995],[9,3412,58,0.030689458999999995],[8,3225,58,0.024840791999999997],[7,3071,58,0.019818457999999997],[6,2938,58,0.015268499999999999],[5,2416,58,0.010682958999999999],[4,1390,58,0.006763],[3,546,62,0.0032235],[2,180,74,0.0012885],[1,75,76,0.00047916599999999995],[0,30,80,0.000139833]],"inputs":[["1","(+.f64 (*.f64 -1/2 x) 1)","(+.f64 (*.f64 -1/2 x) (+.f64 1 (*.f64 3/8 (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 x) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 -5/16 (pow.f64 x 3)))))","1","(+.f64 (*.f64 1/2 x) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1/2 x) 1)","(fma.f64 -1/2 x 1)","(+.f64 (*.f64 -1/2 x) (+.f64 1 (*.f64 3/8 (pow.f64 x 2))))","(+.f64 (fma.f64 -1/2 x 1) (*.f64 3/8 (*.f64 x x)))","(fma.f64 -1/2 x (fma.f64 3/8 (*.f64 x x) 1))","(fma.f64 x (*.f64 x 3/8) (fma.f64 -1/2 x 1))","(fma.f64 x (fma.f64 x 3/8 -1/2) 1)","(+.f64 (*.f64 -1/2 x) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 -5/16 (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/2 x 1) (fma.f64 3/8 (*.f64 x x) (*.f64 -5/16 (pow.f64 x 3))))","(fma.f64 -1/2 x (fma.f64 x (*.f64 x 3/8) (fma.f64 -5/16 (pow.f64 x 3) 1)))","(fma.f64 -1/2 x (fma.f64 x (*.f64 x (fma.f64 x -5/16 3/8)) 1))","(fma.f64 x (fma.f64 x (fma.f64 x -5/16 3/8) -1/2) 1)","1","(+.f64 (*.f64 1/2 x) 1)","(fma.f64 1/2 x 1)","(fma.f64 x 1/2 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 1))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 x 1/2 1))","(fma.f64 x 1/2 (fma.f64 x (*.f64 x -1/8) 1))","(fma.f64 x (fma.f64 x -1/8 1/2) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 1) (*.f64 (pow.f64 x 3) 1/16)))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 x 1/2 (fma.f64 (pow.f64 x 3) 1/16 1)))","(fma.f64 x (*.f64 x -1/8) (fma.f64 (pow.f64 x 3) 1/16 (fma.f64 x 1/2 1)))","(fma.f64 x 1/2 (fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) 1))","(fma.f64 x (+.f64 1/2 (*.f64 x (fma.f64 x 1/16 -1/8))) 1)","(fma.f64 x (fma.f64 x (fma.f64 x 1/16 -1/8) 1/2) 1)"]],"stop":[["node limit",1]],"time":130.796875,"type":"simplify"},{"compiler":[[4484,3575]],"time":63.373046875,"type":"eval"},{"alts":[["(/.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)))","fresh",30.979182440496],["(+.f64 (fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))","fresh",21.00294057032027],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) 2) (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (pow.f64 x -1/2))","fresh",28.85208763572508],["(*.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)))","fresh",19.15132609712489],["(fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))","fresh",29.011753505702586],["(-.f64 (/.f64 1 (sqrt.f64 x)) (pow.f64 (cbrt.f64 (+.f64 1 x)) -3/2))","fresh",22.307391753627638],["(fma.f64 (pow.f64 (+.f64 1 x) -1/4) (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 x -1/2))","fresh",28.770286957708247],["(/.f64 (-.f64 (/.f64 1 x) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2)) (-.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))","fresh",24.408025348389636],["(/.f64 (+.f64 (pow.f64 x -3/2) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 3)) (+.f64 (/.f64 1 x) (-.f64 (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2) (*.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))))","fresh",31.176588035303777],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","next",19.063364774866283]],"compiler":[[28,22],[48,40],[21,18],[20,16],[14,11],[12,10],[16,13],[24,20],[37,31],[20,16],[28,22],[48,40],[21,18],[20,16],[14,11],[12,10],[16,13],[24,20],[37,31],[20,16]],"count":[[243,10]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[242,10],"picked":[1,0]}],"min-error":[18.416525638301046],"time":69.305908203125,"type":"prune"},{"compiler":[[60,46]],"locations":[["(pow.f64 (+.f64 1 x) -1/2)",0.00390625,true],["(/.f64 1 (+.f64 1 x))",0.0390625,true],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))",0.24609375,true],["(-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))",2.196820966569304,true]],"time":26.91796875,"type":"localize"},{"count":[[4,48]],"series":[["(pow.f64 (+.f64 1 x) -1/2)","x","-inf",0.784912109375],["(pow.f64 (+.f64 1 x) -1/2)","x","inf",0.569091796875],["(pow.f64 (+.f64 1 x) -1/2)","x","0",0.169189453125],["(/.f64 1 (+.f64 1 x))","x","-inf",0.1728515625],["(/.f64 1 (+.f64 1 x))","x","inf",0.22607421875],["(/.f64 1 (+.f64 1 x))","x","0",0.177001953125],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","-inf",0.856201171875],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","inf",1.119873046875],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","0",1.1591796875],["(-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))","x","-inf",0.47314453125],["(-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))","x","inf",0.248779296875],["(-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))","x","0",0.283203125]],"time":6.462158203125,"type":"series"},{"count":[[4,334]],"egraph":[[2,4663,40,0.032510875],[1,296,40,0.006181792],[0,12,55,0.000393125]],"inputs":[["(-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))","(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(/.f64 1 (+.f64 1 x))","(pow.f64 (+.f64 1 x) -1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 x) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (-.f64 x x)) (/.f64 1 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x x) (+.f64 1 (-.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x))) (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (-.f64 x x)) (fma.f64 x x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3)) (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (-.f64 x x))) (neg.f64 (fma.f64 x x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3))) (neg.f64 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2))) (neg.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 -1 x -1) (*.f64 (neg.f64 x) 1)) (*.f64 (neg.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 -1 x -1) (*.f64 x -1)) (*.f64 x (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (fma.f64 -1 x -1)) (*.f64 (neg.f64 x) -1)) (*.f64 (neg.f64 x) (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x -3) (pow.f64 (/.f64 -1 (+.f64 1 x)) 3)) (+.f64 (pow.f64 x -2) (-.f64 (*.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 -1 (+.f64 1 x))) (*.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x -2) (*.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 -1 (+.f64 1 x)))) (-.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 x))) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 1 x)) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 x))) (exp.f64 (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 x)) (/.f64 1 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 x))) (/.f64 1 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (+.f64 1 x))) (exp.f64 (/.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 1 (+.f64 1 x)))) (exp.f64 (/.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (+.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 1 (+.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 (-.f64 x x)) (log.f64 (fma.f64 x x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 (-.f64 x x)) (log.f64 (fma.f64 x x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 x) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (+.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) 1 (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) 1 (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 1 (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 1 (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 1 (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) (pow.f64 x -1/2) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) (pow.f64 x -1/2) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -2)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (*.f64 (cbrt.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 1 (cbrt.f64 x)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 1 (cbrt.f64 x)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (neg.f64 x)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (neg.f64 x)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (-.f64 x x)) (/.f64 1 (fma.f64 x x x)) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (-.f64 x x)) (/.f64 1 (fma.f64 x x x)) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (-.f64 x x)) (/.f64 1 (fma.f64 x x x)) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x)))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x)))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (+.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (fma.f64 x x x)))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) (fma.f64 (/.f64 -1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) (+.f64 (/.f64 -1 (+.f64 1 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (*.f64 (pow.f64 x -1/4) (pow.f64 x -1/2)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (*.f64 (pow.f64 x -1/4) (pow.f64 x -1/2)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 x -1/4)) (pow.f64 x -1/4) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 x -1/4)) (pow.f64 x -1/4) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -1 (+.f64 1 x))) (cbrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (/.f64 -1 (+.f64 1 x))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (+.f64 1 x))) (sqrt.f64 (/.f64 -1 (+.f64 1 x))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) (pow.f64 (+.f64 1 x) -1/2) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1) (pow.f64 (cbrt.f64 x) -1) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1) (pow.f64 (cbrt.f64 x) -1) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1) (pow.f64 (sqrt.f64 x) -1) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1) (pow.f64 (sqrt.f64 x) -1) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x -1/2) (/.f64 1 (cbrt.f64 x))) (cbrt.f64 (pow.f64 x -1/2)) (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x -1/2) (/.f64 1 (cbrt.f64 x))) (cbrt.f64 (pow.f64 x -1/2)) (*.f64 (/.f64 -1 (+.f64 1 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 x -1/2) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (cbrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (*.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) 1) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) 1) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (+.f64 1 x)) (pow.f64 (fma.f64 x x x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (pow.f64 x -1/2)) (exp.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (exp.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (pow.f64 x -1/2)) (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))) (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) 3) (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 x -1/2) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) 1 (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (cbrt.f64 x)) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (cbrt.f64 x)) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (cbrt.f64 x)) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (cbrt.f64 x)) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -1/2)) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -1/2)) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -1/2)) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -1/2)) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (sqrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (*.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (*.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (*.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 1 (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (sqrt.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 x))) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 x))) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 x))) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 x))) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 -1/2) (pow.f64 x -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 -1/2) (pow.f64 x -1/2) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 -1/2) (pow.f64 x -1/2) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 -1/2) (pow.f64 x -1/2) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1/2) (pow.f64 (cbrt.f64 x) -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1/2) (pow.f64 (cbrt.f64 x) -1/2) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1/2) (pow.f64 (cbrt.f64 x) -1/2) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1/2) (pow.f64 (cbrt.f64 x) -1/2) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1/2) (pow.f64 (sqrt.f64 x) -1/2) (neg.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1/2) (pow.f64 (sqrt.f64 x) -1/2) (*.f64 -1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1/2) (pow.f64 (sqrt.f64 x) -1/2) (*.f64 (neg.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 x) -1/2) (pow.f64 (sqrt.f64 x) -1/2) (*.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) 1) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) 1) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) 1) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) 1) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) 1) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) 1) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (/.f64 1 x) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (cbrt.f64 (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (hypot.f64 (pow.f64 x -1/2) (sqrt.f64 (/.f64 -1 (+.f64 1 x)))) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 1 x) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) 2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (cbrt.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) 1) (/.f64 (/.f64 1 (cbrt.f64 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 x -1/2) 1) (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 x -1/2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 2))) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 1 (cbrt.f64 x)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 x -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (pow.f64 x -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (+.f64 1 x)) (pow.f64 (fma.f64 x x x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (+.f64 1 x)) (pow.f64 (fma.f64 x x x) -1/2))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (+.f64 1 x)) (pow.f64 (fma.f64 x x x) -1/2))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/2)) 1 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2))) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x))) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (+.f64 1 x)) (pow.f64 (fma.f64 x x x) -1/2))) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (/.f64 1 x) (+.f64 (/.f64 1 x) (/.f64 -1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (neg.f64 (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2)) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 -1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/4) (*.f64 (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 (+.f64 1 x) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 1 (sqrt.f64 x)) -1) (pow.f64 (hypot.f64 1 (sqrt.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (-.f64 x 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/2) (/.f64 1 (cbrt.f64 (+.f64 1 x)))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 1 x) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -1/2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/4) (pow.f64 (+.f64 1 x) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) 2)) -1/2) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 1 (sqrt.f64 x)) -1/2) (pow.f64 (hypot.f64 1 (sqrt.f64 x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (hypot.f64 1 (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",33],["egg-rr",163],["egg-rr",114]],"stop":[["node limit",1]],"time":81.73486328125,"type":"rewrite"},{"count":[[382,406]],"egraph":[[3,6596,1449,0.03040125],[2,1732,1512,0.014347458],[1,587,1672,0.003781833],[0,187,1760,0.000917083]],"inputs":[["(/.f64 1 x)","(-.f64 (/.f64 1 x) 1)","(-.f64 (+.f64 (/.f64 1 x) x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) x)) 1)","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 (-.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))))) x) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 (-.f64 (*.f64 5/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1))) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 3/8 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))))) x) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5))))) (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))","(-.f64 (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 4))) (*.f64 3/32 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))))))","(-.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 9)))) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 3/16 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 5))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 1/2 (sqrt.f64 x)) (+.f64 (*.f64 3/32 (sqrt.f64 x)) (*.f64 -1/4 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x)))))) (pow.f64 x 5))) (+.f64 (*.f64 -5/64 (sqrt.f64 (/.f64 1 (pow.f64 x 9)))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 4))) (*.f64 3/32 (sqrt.f64 (/.f64 1 (pow.f64 x 7))))))))))","(/.f64 1/2 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 5/16 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 4))))) (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 5/16 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 4))))) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))) (*.f64 35/128 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 5))))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","1","(+.f64 (*.f64 -1/2 x) 1)","(+.f64 (*.f64 -1/2 x) (+.f64 1 (*.f64 3/8 (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 x) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 -5/16 (pow.f64 x 3)))))","(sqrt.f64 (/.f64 1 x))","(+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -5/16 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 -5/16 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 x)","(-.f64 (/.f64 1 x) 1)","(+.f64 (/.f64 1 x) -1)","(-.f64 (+.f64 (/.f64 1 x) x) 1)","(+.f64 (/.f64 1 x) (-.f64 x 1))","(+.f64 x (+.f64 (/.f64 1 x) -1))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) x)) 1)","(+.f64 (fma.f64 -1 (*.f64 x x) (+.f64 x (/.f64 1 x))) -1)","(+.f64 -1 (-.f64 (+.f64 x (/.f64 1 x)) (*.f64 x x)))","(-.f64 (+.f64 x (/.f64 1 x)) (fma.f64 x x 1))","(+.f64 (/.f64 1 x) (fma.f64 (-.f64 1 x) x -1))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 4)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 5))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 5))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 -1 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 5)))))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 4)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 5))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 5))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 -1 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 5)))))","(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2))))","(/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))","(/.f64 1 (+.f64 x (sqrt.f64 x)))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (-.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))","(+.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 (-.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))))) x) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(-.f64 (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) x (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2))))","(+.f64 (fma.f64 x (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (-.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (fma.f64 x (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2))))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (fma.f64 x (+.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 -3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 (-.f64 (*.f64 5/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1))) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 3/8 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1))))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 (pow.f64 x -1/2) 1))))) x) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))))))) (/.f64 1 (+.f64 (pow.f64 x -1/2) 1)))","(-.f64 (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 (-.f64 (/.f64 5/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (+.f64 1 (pow.f64 x -1/2))) (fma.f64 3/8 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))) (*.f64 x x) (fma.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) x (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2))))","(+.f64 (fma.f64 (*.f64 x x) (-.f64 (/.f64 5/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (+.f64 1 (pow.f64 x -1/2))) (fma.f64 3/8 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))) (fma.f64 x (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (-.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))","(+.f64 (fma.f64 x (-.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 -1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 (fma.f64 (*.f64 x x) (-.f64 (/.f64 5/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 -1/2 (-.f64 (/.f64 (+.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (*.f64 1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3))) (fma.f64 3/8 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 x (sqrt.f64 x)))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 x (+.f64 (+.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (fma.f64 1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 -3/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (*.f64 x (-.f64 (/.f64 5/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (fma.f64 -1/2 (-.f64 (/.f64 (+.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (*.f64 1/2 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 3/8 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3))) (fma.f64 3/8 (+.f64 (/.f64 1/2 (pow.f64 (+.f64 1 (pow.f64 x -1/2)) 3)) (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 1 (+.f64 1 (pow.f64 x -1/2)))))))) (/.f64 -1 (+.f64 1 (pow.f64 x -1/2))))))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5))))) (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5))))) (*.f64 1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8))","(-.f64 (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 4))) (*.f64 3/32 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))))))","(-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))))) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 x) -3/8) (pow.f64 x 4)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) (-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (/.f64 (*.f64 (sqrt.f64 x) 3/32) (pow.f64 x 4)))))","(-.f64 (fma.f64 1/2 (+.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (/.f64 (sqrt.f64 x) (/.f64 (pow.f64 x 4) 3/32))))","(-.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 9)))) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 3/16 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 5))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 1/2 (sqrt.f64 x)) (+.f64 (*.f64 3/32 (sqrt.f64 x)) (*.f64 -1/4 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x)))))) (pow.f64 x 5))) (+.f64 (*.f64 -5/64 (sqrt.f64 (/.f64 1 (pow.f64 x 9)))) (+.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 x))) (pow.f64 x 4))) (*.f64 3/32 (sqrt.f64 (/.f64 1 (pow.f64 x 7))))))))))","(-.f64 (fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 5))))))) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 3/16 (/.f64 (*.f64 (sqrt.f64 x) -3/8) (pow.f64 x 5)) (fma.f64 -1/4 (/.f64 (-.f64 (*.f64 1/2 (sqrt.f64 x)) (fma.f64 3/32 (sqrt.f64 x) (*.f64 -1/4 (*.f64 (sqrt.f64 x) -3/8)))) (pow.f64 x 5)) (fma.f64 -5/64 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 x) -3/8) (pow.f64 x 4)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32)))))))","(fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) (-.f64 (+.f64 (*.f64 1/2 (+.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) (sqrt.f64 (/.f64 1 (pow.f64 x 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8)) (fma.f64 3/16 (/.f64 (sqrt.f64 x) (/.f64 (pow.f64 x 5) -3/8)) (fma.f64 -1/4 (/.f64 (-.f64 (*.f64 (sqrt.f64 x) 13/32) (*.f64 (sqrt.f64 x) 3/32)) (pow.f64 x 5)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) -5/64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (/.f64 (*.f64 (sqrt.f64 x) 3/32) (pow.f64 x 4))))))))","(-.f64 (fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) (fma.f64 1/2 (+.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8))) (+.f64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 9))) -5/64 (/.f64 (sqrt.f64 x) (/.f64 (pow.f64 x 4) 3/32)))) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 x) 5/16) (pow.f64 x 5)) (/.f64 (*.f64 (sqrt.f64 x) -9/128) (pow.f64 x 5)))))","(/.f64 1/2 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))","(/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))","(/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(/.f64 1/2 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (*.f64 x x))))","(*.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))))","(-.f64 (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))) (/.f64 3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))","(+.f64 (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (/.f64 -3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))","(+.f64 (/.f64 1/2 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (*.f64 x x)))) (/.f64 (/.f64 -3/8 (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2))))","(fma.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 3)) -3/8))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 5/16 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 4))))) (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))))","(-.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))) (/.f64 5/16 (*.f64 (pow.f64 x 4) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))) (/.f64 3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))","(+.f64 (/.f64 (/.f64 5/16 (pow.f64 x 4)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (+.f64 (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (/.f64 -3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))))","(+.f64 (/.f64 1/2 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (*.f64 x x)))) (+.f64 (/.f64 5/16 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (pow.f64 x 4)))) (/.f64 (/.f64 -3/8 (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2)))))","(fma.f64 5/16 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 4)) (fma.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 3)) -3/8)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 5/16 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 4))))) (+.f64 (*.f64 3/8 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3)))) (*.f64 35/128 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 5))))))","(-.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))) (/.f64 5/16 (*.f64 (pow.f64 x 4) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))) (+.f64 (/.f64 3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))) (/.f64 35/128 (*.f64 (pow.f64 x 5) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))))","(+.f64 (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (-.f64 (/.f64 (/.f64 5/16 (pow.f64 x 4)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (+.f64 (/.f64 3/8 (*.f64 (pow.f64 x 3) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))) (/.f64 35/128 (*.f64 (pow.f64 x 5) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))))","(+.f64 (/.f64 1/2 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (*.f64 x x)))) (+.f64 (/.f64 5/16 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (pow.f64 x 4)))) (-.f64 (/.f64 (/.f64 -3/8 (pow.f64 x 3)) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2))) (/.f64 35/128 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (*.f64 (pow.f64 -1 -1/2) (pow.f64 x 5)))))))","(fma.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)) (fma.f64 5/16 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 4)) (fma.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 3)) -3/8 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 5)) -35/128))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (neg.f64 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 1 (fma.f64 -1 x (*.f64 x x)))","(+.f64 1 (-.f64 (*.f64 x x) x))","(fma.f64 x x (-.f64 1 x))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(fma.f64 -1 (pow.f64 x 3) (+.f64 1 (fma.f64 -1 x (*.f64 x x))))","(-.f64 (+.f64 1 (-.f64 (*.f64 x x) x)) (pow.f64 x 3))","(-.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 x 3))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))","1","(+.f64 (*.f64 -1/2 x) 1)","(fma.f64 -1/2 x 1)","(fma.f64 x -1/2 1)","(+.f64 (*.f64 -1/2 x) (+.f64 1 (*.f64 3/8 (pow.f64 x 2))))","(+.f64 (fma.f64 -1/2 x 1) (*.f64 (*.f64 x x) 3/8))","(fma.f64 x -1/2 (fma.f64 (*.f64 x x) 3/8 1))","(fma.f64 x -1/2 (fma.f64 x (*.f64 x 3/8) 1))","(+.f64 (*.f64 -1/2 x) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 -5/16 (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/2 x 1) (fma.f64 3/8 (*.f64 x x) (*.f64 (pow.f64 x 3) -5/16)))","(+.f64 (fma.f64 x -1/2 1) (fma.f64 (*.f64 x x) 3/8 (*.f64 (pow.f64 x 3) -5/16)))","(fma.f64 x -1/2 (fma.f64 (pow.f64 x 3) -5/16 (fma.f64 x (*.f64 x 3/8) 1)))","(sqrt.f64 (/.f64 1 x))","(+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 x)))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 x))))","(fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -5/16 (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 -5/16 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) (+.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) -5/16 (fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 x)))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) -5/16 (sqrt.f64 (/.f64 1 x)))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2))","(pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2)","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) (/.f64 x (pow.f64 -1 -1/2))) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2)))","(fma.f64 -1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) x) (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x))))","(+.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (/.f64 (*.f64 3/8 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (*.f64 x x))))","(fma.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2) (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) (/.f64 x (pow.f64 -1 -1/2))) (+.f64 -1/2 (/.f64 3/8 x))))","(+.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) x) (+.f64 -1/2 (/.f64 3/8 x))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (+.f64 (*.f64 -5/16 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))","(+.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)) (fma.f64 -5/16 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 x 3)) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)))))","(+.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (fma.f64 -5/16 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (/.f64 -1/2 (/.f64 x (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))))","(fma.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -1 -1/2) (fma.f64 -5/16 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) (/.f64 (pow.f64 x 3) (pow.f64 -1 -1/2))) (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) (/.f64 x (pow.f64 -1 -1/2))) (+.f64 -1/2 (/.f64 3/8 x)))))","(+.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) (fma.f64 -1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) x) (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) -1/2) (*.f64 x x)) (+.f64 3/8 (/.f64 -5/16 x)))))"]],"stop":[["node limit",1]],"time":63.0810546875,"type":"simplify"},{"compiler":[[12501,10069]],"time":163.02197265625,"type":"eval"},{"alts":[["(fma.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)) (fma.f64 5/16 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 4)) (fma.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 3)) -3/8 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 5)) -35/128))))","fresh",38.48572258207573],["(-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))","fresh",18.897598293626498],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","next",5.5260885705524725],["(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","done",19.063364774866283],["(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) (fma.f64 x x x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","fresh",5.7248201707423165],["(-.f64 (fma.f64 1/2 (+.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (/.f64 (sqrt.f64 x) (/.f64 (pow.f64 x 4) 3/32))))","fresh",42.755586174345396]],"compiler":[[53,44],[10,8],[22,16],[20,16],[21,14],[41,35],[53,44],[10,8],[22,16],[21,14],[41,35]],"count":[[416,6]],"kept":[{"done":[0,0],"fresh":[9,0],"new":[406,5],"picked":[1,1]}],"min-error":[5.199584810784031],"time":144.303955078125,"type":"prune"},{"compiler":[[71,44]],"locations":[["(pow.f64 x -1/2)",0.00390625,true],["(pow.f64 (+.f64 1 x) -1/2)",0.00390625,false],["(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))",0.0859375,true],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))",5.492553560784031,true]],"time":27.841064453125,"type":"localize"},{"count":[[3,36]],"series":[["(pow.f64 x -1/2)","x","-inf",9.8779296875],["(pow.f64 x -1/2)","x","inf",5.863037109375],["(pow.f64 x -1/2)","x","0",13.692138671875],["(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))","x","-inf",0.17919921875],["(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))","x","inf",0.197998046875],["(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))","x","0",0.1689453125],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","-inf",2.178955078125],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","inf",1.255859375],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","0",1.391845703125]],"time":35.041015625,"type":"series"},{"count":[[3,98]],"egraph":[[2,4279,39,0.030800415999999997],[1,331,39,0.0058935409999999995],[0,13,39,0.000478416]],"inputs":[["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x))","(pow.f64 x -1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (*.f64 (+.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (*.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))) (pow.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))) 2) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (*.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 -1 x) (+.f64 1 x)) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (/.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (/.f64 1 (cbrt.f64 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) 1) (/.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2) 1) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) 1) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)) (/.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)) (/.f64 (/.f64 1 (+.f64 1 x)) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)) (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) 2)) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 1 (+.f64 1 x)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2))) (-.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 3) (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)) (*.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (/.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))) (log1p.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (*.f64 (pow.f64 x -1/2) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 2) (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2) (*.f64 (/.f64 1 (cbrt.f64 x)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 1 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2) 1) (/.f64 (/.f64 1 (cbrt.f64 x)) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) 1) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 1 x))) (/.f64 (/.f64 1 x) (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2) (sqrt.f64 (+.f64 1 x))) (/.f64 (/.f64 1 (cbrt.f64 x)) (sqrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x 3))) (fma.f64 x (-.f64 x 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 x) (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (+.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 1 x) 3) (pow.f64 (+.f64 1 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 1 x) (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (+.f64 (log1p.f64 x) (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (+.f64 (log1p.f64 x) (log.f64 x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 x -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 x)) (cbrt.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/4) (pow.f64 x -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (/.f64 1 (cbrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 -1/2) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 x) 2) -1/2) (pow.f64 (cbrt.f64 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 x) -1/2) (pow.f64 (sqrt.f64 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 x -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 x)) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",35],["egg-rr",42]],"stop":[["node limit",1]],"time":58.0791015625,"type":"rewrite"},{"count":[[134,138]],"egraph":[[2,2094,1341,0.015822917],[1,560,1762,0.004027375],[0,169,1927,0.000853917]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1/2 (pow.f64 x -1/2)) (+.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 x))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -5/16 (sqrt.f64 (/.f64 1 x)))) x)))) (pow.f64 x 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(/.f64 1/2 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3)))) (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -5/16 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))))) (pow.f64 x 5)))))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) 1)","(-.f64 (+.f64 (/.f64 1 x) x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) x)) 1)","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(/.f64 1 (pow.f64 x 2))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2))))","(/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))","(/.f64 1 (+.f64 x (sqrt.f64 x)))","(+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))))","(-.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(-.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))))))","(fma.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) x (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))))","(-.f64 (fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(+.f64 (fma.f64 x (+.f64 (/.f64 (/.f64 1/8 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 -1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))) (/.f64 1 (+.f64 x (sqrt.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1/2 (pow.f64 x -1/2)) (+.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))))","(fma.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) x (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (*.f64 -1 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (/.f64 1/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) (*.f64 x x)) (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))))))","(fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) (fma.f64 -1 (fma.f64 (+.f64 (/.f64 (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))) (fma.f64 1/8 (/.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (*.f64 x x) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))) (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))))","(-.f64 (fma.f64 x (+.f64 (/.f64 (/.f64 1/8 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 x (sqrt.f64 x)))) (fma.f64 x (*.f64 x (fma.f64 (/.f64 (+.f64 (/.f64 (/.f64 1/8 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (pow.f64 x -1/2) 1/2) (fma.f64 1/8 (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (/.f64 1/16 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2)))))) (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 x (/.f64 3/2 x)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2)))) (/.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)))) (pow.f64 x 4)))","(-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 x (/.f64 3/2 x))))) (/.f64 (fma.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (*.f64 (/.f64 1 x) 9/4) (pow.f64 x 3/2)))) (pow.f64 x 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 x))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -5/16 (sqrt.f64 (/.f64 1 x)))) x)))) (pow.f64 x 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/2 (*.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (sqrt.f64 x))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8))) (*.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) 1/16))))) (pow.f64 x 5)) (fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 (-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2)))) (/.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)))) (pow.f64 x 4))) (/.f64 (fma.f64 -1/2 (*.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)))) (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 3/2 (sqrt.f64 x)))) (fma.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 3/2 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)))) (sqrt.f64 (pow.f64 x 3)) (*.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) 1/16))))) (pow.f64 x 5)))","(-.f64 (-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 x (/.f64 3/2 x))))) (/.f64 (fma.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (*.f64 (/.f64 1 x) 9/4) (pow.f64 x 3/2)))) (pow.f64 x 4))) (/.f64 (fma.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) 1/16)) (fma.f64 (fma.f64 x (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (*.f64 (/.f64 1 x) 9/4) (pow.f64 x 3/2)))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 3/2 (sqrt.f64 x))) -1/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/8 (pow.f64 x 3/2))) -1/8)))) (pow.f64 x 5)))","(/.f64 1/2 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))","(/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))","(/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(/.f64 (/.f64 1/2 (*.f64 x x)) (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))","(fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) (*.f64 (pow.f64 x 3) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))","(fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3/2) (pow.f64 x 3)) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))","(+.f64 (/.f64 (/.f64 -3/8 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 3)) (/.f64 (/.f64 1/2 (*.f64 x x)) (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))))","(fma.f64 1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 1/8) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) 2) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3))) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) (*.f64 (pow.f64 x 3) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))))","(fma.f64 1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 4)) (/.f64 1/8 (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) 9/4) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3))) (fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3/2) (pow.f64 x 3)) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))))","(+.f64 (+.f64 (/.f64 (/.f64 -3/8 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 3)) (/.f64 (/.f64 1/2 (*.f64 x x)) (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2)))) (+.f64 (/.f64 (/.f64 1/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 4)) (/.f64 (/.f64 9/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 4))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 4)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3) (pow.f64 x 4)))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) 2) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3)))) (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (+.f64 (*.f64 2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -1/2 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 3/8 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) (*.f64 -5/16 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))) (pow.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))))) (pow.f64 x 5)))))))","(fma.f64 1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 1/8) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) 2) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3))) (+.f64 (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) (*.f64 (pow.f64 x 3) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (/.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))) (neg.f64 (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 1/8) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (*.f64 1/8 (/.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3)))) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2))) (fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 1/8) (/.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3) (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 3/2))) (*.f64 1/4 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 1/16) (pow.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))))) (pow.f64 x 5))))))","(fma.f64 1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 4)) (/.f64 1/8 (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) 9/4) (*.f64 (pow.f64 x 4) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3))) (-.f64 (fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3/2) (pow.f64 x 3)) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) (/.f64 (/.f64 1/2 (*.f64 x x)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 1/8 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) 9/4) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3)) (/.f64 (*.f64 (*.f64 1/4 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 1/8) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (*.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3/2)) (fma.f64 1/8 (*.f64 (/.f64 (*.f64 1/8 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3)) (*.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 3/2)) (/.f64 (*.f64 (*.f64 1/4 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 1/16) (pow.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)))) (pow.f64 x 5)))))","(-.f64 (+.f64 (+.f64 (/.f64 (/.f64 -3/8 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 3)) (/.f64 (/.f64 1/2 (*.f64 x x)) (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2)))) (+.f64 (/.f64 (/.f64 1/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 4)) (/.f64 (/.f64 9/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (pow.f64 x 4)))) (/.f64 (+.f64 (/.f64 (+.f64 (/.f64 1/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (/.f64 9/32 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2)))) 4/3) (+.f64 (/.f64 3/128 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))) (/.f64 1/64 (*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))))) (pow.f64 x 5)))","(/.f64 1 x)","(-.f64 (/.f64 1 x) 1)","(+.f64 (/.f64 1 x) -1)","(+.f64 -1 (/.f64 1 x))","(-.f64 (+.f64 (/.f64 1 x) x) 1)","(+.f64 (/.f64 1 x) (-.f64 x 1))","(+.f64 x (+.f64 -1 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (/.f64 1 x) x)) 1)","(+.f64 (fma.f64 -1 (*.f64 x x) (+.f64 x (/.f64 1 x))) -1)","(+.f64 -1 (-.f64 (+.f64 x (/.f64 1 x)) (*.f64 x x)))","(+.f64 -1 (+.f64 x (-.f64 (/.f64 1 x) (*.f64 x x))))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 -1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 5)))))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 -1 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 5)))))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(-.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 -1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 (pow.f64 x 5)) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 5)))))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 -1 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 5)))))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(sqrt.f64 (/.f64 1 x))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 -1 -1/2) (pow.f64 (/.f64 -1 x) 1/2))"]],"stop":[["node limit",1]],"time":41.23193359375,"type":"simplify"},{"compiler":[[6231,4927]],"time":76.990966796875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","done",5.5260885705524725],["(/.f64 (*.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","fresh",5.454231197542218],["(*.f64 (/.f64 (/.f64 1 x) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 1 (+.f64 1 x)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))","fresh",0.5297114867579362],["(*.f64 (/.f64 1 x) (*.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))","fresh",0.4463463379159782],["(*.f64 (/.f64 1 x) (/.f64 1 (*.f64 (+.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))","fresh",0.405292529305326],["(*.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) 1) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))","fresh",5.537026469584525],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","next",0.127285009768442]],"compiler":[[22,16],[30,24],[30,24],[22,18],[20,16],[28,22],[22,17],[30,24],[30,24],[22,18],[20,16],[28,22],[22,17]],"count":[[189,7]],"kept":[{"done":[1,0],"fresh":[4,0],"new":[183,6],"picked":[1,1]}],"min-error":[0.00390625],"time":41.302978515625,"type":"prune"},{"compiler":[[65,49]],"locations":[["(pow.f64 x -1/2)",0.00390625,false],["(/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))",0.01171875,true],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))",0.01953125,true],["(/.f64 (pow.f64 x -1/2) (+.f64 1 x))",0.10546875,true]],"time":40.8291015625,"type":"localize"},{"count":[[3,8]],"series":[["(/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","-inf",1.340087890625],["(/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","inf",1.301025390625],["(/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","x","0",1.64306640625],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","x","-inf",2.238037109375],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","x","inf",0.39501953125],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","x","0",0.66796875],["(/.f64 (pow.f64 x -1/2) (+.f64 1 x))","x","-inf",0.486083984375],["(/.f64 (pow.f64 x -1/2) (+.f64 1 x))","x","inf",0.4130859375],["(/.f64 (pow.f64 x -1/2) (+.f64 1 x))","x","0",1.113037109375]],"time":9.800048828125,"type":"series"},{"count":[[3,133]],"egraph":[[2,3895,54,0.030663376],[1,259,54,0.0053892919999999995],[0,11,60,0.00035725]],"inputs":[["(/.f64 (pow.f64 x -1/2) (+.f64 1 x))","(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","(/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 1 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x 1)) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))) 2) (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -1)) (*.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) (sqrt.f64 (+.f64 x 1))) (/.f64 (pow.f64 x -1/4) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x -1/2)) (/.f64 1 (neg.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/4) (*.f64 (pow.f64 x -1/4) (/.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) 1) (/.f64 (cbrt.f64 (pow.f64 x -1/2)) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) 1) (/.f64 (pow.f64 x -1/4) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (pow.f64 x -1/4) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x 1))) (/.f64 (pow.f64 x -1/2) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) (sqrt.f64 (+.f64 x 1))) (/.f64 (cbrt.f64 (pow.f64 x -1/2)) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (+.f64 1 (pow.f64 x 3))) (fma.f64 x (-.f64 x 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -1/4) (sqrt.f64 (+.f64 x 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x 1) (pow.f64 x -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 x -1/2) (neg.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 x -1) (pow.f64 (+.f64 x 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 x 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 -1/2 (log.f64 x)) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (*.f64 -1/2 (log.f64 x)) (log1p.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))) (cbrt.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (*.f64 (/.f64 (+.f64 x 1) (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (*.f64 (+.f64 x 1) (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2)) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (/.f64 (+.f64 x 1) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (/.f64 (*.f64 (+.f64 x 1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (/.f64 (pow.f64 x -1/2) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (+.f64 x 1) (pow.f64 x -1/2)) (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2)) (/.f64 (+.f64 x 1) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (+.f64 x 1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (pow.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (/.f64 (pow.f64 x -1) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x 1) (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (/.f64 (+.f64 x 1) (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1) (*.f64 (+.f64 x 1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x -1/2)) (*.f64 (/.f64 (+.f64 x 1) (pow.f64 x -1/2)) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x -1/2)) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2)) (neg.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (neg.f64 (pow.f64 x -1/2))) (*.f64 (neg.f64 (+.f64 x 1)) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (neg.f64 (pow.f64 x -1/2))) (*.f64 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (neg.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 x -1)) (neg.f64 (*.f64 (+.f64 x 1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1))) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) (neg.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (*.f64 (neg.f64 (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (*.f64 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) 1) (*.f64 (neg.f64 (+.f64 x 1)) (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) 1) (*.f64 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (/.f64 (+.f64 x 1) (pow.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/2) (neg.f64 (pow.f64 x -1/2))) (*.f64 (+.f64 x 1) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x -1/2) (neg.f64 (pow.f64 x -1/2))) (*.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (neg.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) 1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 2)) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 1) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (sqrt.f64 (+.f64 x 1))) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) (neg.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (/.f64 (pow.f64 x -1/2) (+.f64 x 1))) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) (neg.f64 (pow.f64 x -1/2))) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (neg.f64 (pow.f64 x -1/2))) (neg.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1))) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 3) (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3) (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 x 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 (pow.f64 x -1) (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 (/.f64 (pow.f64 x -1) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) (log1p.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) 2) (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -1)) (*.f64 (cbrt.f64 (pow.f64 x -1/2)) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) (/.f64 (pow.f64 x -1/4) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x -1/2)) (/.f64 1 (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (pow.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/4) (*.f64 (pow.f64 x -1/4) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) 1) (/.f64 (cbrt.f64 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) 1) (/.f64 (pow.f64 x -1/4) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 2)) (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/4) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 2)) (/.f64 (pow.f64 x -1/4) (cbrt.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) (/.f64 (pow.f64 x -1/2) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -1)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) (/.f64 (cbrt.f64 (pow.f64 x -1/2)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 x 1) -3/2))) (+.f64 (pow.f64 x -1) (-.f64 (/.f64 1 (+.f64 x 1)) (pow.f64 (*.f64 x (+.f64 x 1)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (-.f64 (pow.f64 x -1) (/.f64 1 (+.f64 x 1)))) (-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -1/4) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) (pow.f64 x -1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 x -1/2) (neg.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 x -1) (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2)))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",57],["egg-rr",38]],"stop":[["node limit",1]],"time":62.68896484375,"type":"rewrite"},{"count":[[141,148]],"egraph":[[3,6070,639,0.025426375],[2,1206,656,0.010696958],[1,334,754,0.002300875],[0,98,883,0.0005185]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1/2 (pow.f64 x -1/2)) (+.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 x))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -5/16 (sqrt.f64 (/.f64 1 x)))) x)))) (pow.f64 x 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x))","(/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2))))","(/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))","(/.f64 1 (+.f64 x (sqrt.f64 x)))","(+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))))","(-.f64 (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(-.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (/.f64 (-.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))))))","(fma.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) x (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))))","(-.f64 (fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (-.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))))","(+.f64 (/.f64 1 (+.f64 x (sqrt.f64 x))) (fma.f64 x (fma.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (-.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))","(+.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) x) (+.f64 (/.f64 1 (*.f64 (+.f64 (pow.f64 x -1/2) 1) x)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 x -1/2) 1))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (/.f64 (*.f64 (-.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1/2 (pow.f64 x -1/2)) (+.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))))) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 (pow.f64 x -1/2) 1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1)))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1))) (sqrt.f64 (/.f64 1 x))))))))","(fma.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) x (+.f64 (/.f64 1 (*.f64 x (+.f64 1 (pow.f64 x -1/2)))) (*.f64 -1 (+.f64 (*.f64 (fma.f64 1/8 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (/.f64 1/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (-.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (neg.f64 (/.f64 (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (pow.f64 x -1/2) 1/2))))) (*.f64 x x)) (fma.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (sqrt.f64 (/.f64 1 x)) (/.f64 1/2 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))))))","(fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) (fma.f64 -1 (fma.f64 (+.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (/.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))))))) (fma.f64 1/8 (/.f64 (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2))) (/.f64 1/16 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))))) (*.f64 x x) (*.f64 (/.f64 1 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))) (/.f64 (/.f64 1 x) (+.f64 1 (pow.f64 x -1/2)))))","(-.f64 (fma.f64 x (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1 (+.f64 x (sqrt.f64 x)))) (fma.f64 (+.f64 (/.f64 (/.f64 1/16 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (fma.f64 (/.f64 (+.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 (*.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (pow.f64 x -1/2) 1/2) (/.f64 (*.f64 (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 1 (pow.f64 x -1/2))))) (*.f64 x x) (*.f64 (/.f64 (/.f64 1 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 1/2 (sqrt.f64 (/.f64 1 x))))))","(-.f64 (fma.f64 x (fma.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (/.f64 1 (+.f64 x (sqrt.f64 x)))) (fma.f64 (fma.f64 1/8 (/.f64 (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (+.f64 1 (pow.f64 x -1/2))) (fma.f64 (/.f64 (fma.f64 (/.f64 (+.f64 (pow.f64 x -1/2) 1/2) (+.f64 1 (pow.f64 x -1/2))) (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2)))) (/.f64 1/8 (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))) (+.f64 1 (pow.f64 x -1/2))) (+.f64 (pow.f64 x -1/2) 1/2) (/.f64 (/.f64 1/16 (+.f64 1 (pow.f64 x -1/2))) (+.f64 1 (pow.f64 x -1/2))))) (*.f64 x x) (/.f64 (+.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 (+.f64 1 (pow.f64 x -1/2)) (+.f64 1 (pow.f64 x -1/2))))))","(*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -3/8) (*.f64 x x)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))","(-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2)))) (/.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8) (*.f64 x 1/4))) (pow.f64 x 4)))","(-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -3/8) (*.f64 x x))) (/.f64 (fma.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/32) (*.f64 (pow.f64 x 3/2) (*.f64 (/.f64 1 x) -9/32))) (pow.f64 x 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 x))) (+.f64 (*.f64 -1/8 (*.f64 (*.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))))) (sqrt.f64 (pow.f64 x 3)))) (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -5/16 (sqrt.f64 (/.f64 1 x)))) x)))) (pow.f64 x 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (*.f64 (+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (*.f64 -1/2 (sqrt.f64 (/.f64 1 x)))) x)) (*.f64 -1/8 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 2 (sqrt.f64 (/.f64 1 x)))) (pow.f64 x 2))) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/2 (*.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (sqrt.f64 x))) (fma.f64 -1/8 (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8) (sqrt.f64 (pow.f64 x 3)))) (*.f64 (*.f64 1/4 (*.f64 (sqrt.f64 (/.f64 1 x)) 1/16)) x))) (pow.f64 x 5)) (fma.f64 -1 (/.f64 (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)) (*.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))))) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 x x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(-.f64 (-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 -1/4 (/.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 (*.f64 x x) 3/2)))) (/.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8) (*.f64 x 1/4))) (pow.f64 x 4))) (/.f64 (fma.f64 -1/2 (*.f64 (fma.f64 -1/8 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) 2) (sqrt.f64 (pow.f64 x 3))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8) (*.f64 x 1/4))) (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 3/2 (sqrt.f64 x)))) (fma.f64 1/4 (*.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) 1/16)) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) 3/2) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) (*.f64 -1/8 (sqrt.f64 (pow.f64 x 3)))) -1/8)))) (pow.f64 x 5)))","(-.f64 (-.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (/.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) -3/8) (*.f64 x x))) (/.f64 (fma.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/32) (*.f64 (pow.f64 x 3/2) (*.f64 (/.f64 1 x) -9/32))) (pow.f64 x 4))) (/.f64 (fma.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) 1/64) (fma.f64 (fma.f64 x (*.f64 (sqrt.f64 (/.f64 1 x)) -1/32) (*.f64 (pow.f64 x 3/2) (*.f64 (/.f64 1 x) -9/32))) (*.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 (/.f64 1 x)) -3/4)) (*.f64 (pow.f64 x 3/2) (*.f64 (*.f64 (/.f64 1 x) 3/2) 1/64)))) (pow.f64 x 5)))"]],"stop":[["node limit",1]],"time":45.02490234375,"type":"simplify"},{"compiler":[[6273,4946]],"time":81.0419921875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (cbrt.f64 (pow.f64 x -3/2)) (+.f64 1 x)))","fresh",12.139003759768443],["(/.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (*.f64 (neg.f64 (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))","fresh",0.21550751953688405],["(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","done",5.5260885705524725],["(*.f64 (pow.f64 (/.f64 (pow.f64 x -1/4) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) 2) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","fresh",0.4337464844426086],["(/.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (/.f64 (+.f64 x 1) (pow.f64 x -1/2)))","fresh",1.0425233470635256],["(*.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) 1) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))","fresh",5.537026469584525],["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 x 1)))))","fresh",0.26150141606351424]],"compiler":[[23,18],[24,19],[22,16],[24,19],[22,17],[28,22],[32,26]],"count":[[224,7]],"kept":[{"done":[1,1],"fresh":[5,1],"new":[217,5],"picked":[1,0]}],"min-error":[0],"time":67.675048828125,"type":"prune"},{"accuracy":[0.127285009768442],"baseline":[0.127285009768442],"branch":[["x",0.127285009768442,1],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))",0.12728500976844204,1]],"compiler":[[2,1],[12,10],[650,515]],"count":[[27,1]],"inputs":[["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (cbrt.f64 (pow.f64 x -3/2)) (+.f64 1 x)))","(/.f64 (*.f64 (neg.f64 (pow.f64 x -1/2)) (pow.f64 x -1/2)) (*.f64 (neg.f64 (+.f64 x 1)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))))","(*.f64 (pow.f64 (/.f64 (pow.f64 x -1/4) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 x 1) -1/4))) 2) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","(/.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (/.f64 (+.f64 x 1) (pow.f64 x -1/2)))","(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 x 1)))))","(/.f64 (*.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (+.f64 1 x)))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(*.f64 (/.f64 (/.f64 1 x) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))) (/.f64 (/.f64 1 (+.f64 1 x)) (hypot.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4))))","(*.f64 (/.f64 1 x) (*.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))","(*.f64 (/.f64 1 x) (/.f64 1 (*.f64 (+.f64 1 x) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))))","(*.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) 1) (/.f64 (pow.f64 (*.f64 x (+.f64 1 x)) -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))))","(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","(fma.f64 1/2 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (*.f64 x x)) (fma.f64 5/16 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 4)) (fma.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 3)) -3/8 (*.f64 (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 x)) 1/2) (pow.f64 x 5)) -35/128))))","(-.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))","(/.f64 (/.f64 (/.f64 (+.f64 1 (-.f64 x x)) x) (+.f64 1 x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(/.f64 (/.f64 (+.f64 1 (-.f64 x x)) (fma.f64 x x x)) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(-.f64 (fma.f64 1/2 (+.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 (/.f64 1 (pow.f64 x 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -3/8)) (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 7))) 3/32 (/.f64 (sqrt.f64 x) (/.f64 (pow.f64 x 4) 3/32))))","(/.f64 (-.f64 (pow.f64 x -3/2) (pow.f64 (+.f64 1 x) -3/2)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (pow.f64 (*.f64 x (+.f64 1 x)) -1/2)))","(+.f64 (fma.f64 (/.f64 1 (cbrt.f64 x)) (pow.f64 x -1/6) (neg.f64 (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x)))))) (fma.f64 (neg.f64 (pow.f64 (+.f64 1 x) -1/6)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (pow.f64 (+.f64 1 x) -1/6) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))","(fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) 2) (cbrt.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x)))) (pow.f64 x -1/2))","(*.f64 (+.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)) (-.f64 (pow.f64 x -1/4) (pow.f64 (+.f64 1 x) -1/4)))","(fma.f64 (pow.f64 x -1/4) (pow.f64 x -1/4) (/.f64 -1 (sqrt.f64 (+.f64 1 x))))","(-.f64 (/.f64 1 (sqrt.f64 x)) (pow.f64 (cbrt.f64 (+.f64 1 x)) -3/2))","(fma.f64 (pow.f64 (+.f64 1 x) -1/4) (neg.f64 (pow.f64 (+.f64 1 x) -1/4)) (pow.f64 x -1/2))","(/.f64 (-.f64 (/.f64 1 x) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2)) (-.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))","(/.f64 (+.f64 (pow.f64 x -3/2) (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 3)) (+.f64 (/.f64 1 x) (-.f64 (pow.f64 (/.f64 -1 (sqrt.f64 (+.f64 1 x))) 2) (*.f64 (pow.f64 x -1/2) (/.f64 -1 (sqrt.f64 (+.f64 1 x)))))))","(/.f64 (-.f64 (/.f64 1 x) (/.f64 1 (+.f64 1 x))) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2)))","(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"link":["."],"name":["2isqrt (example 3.6)"],"oracle":[62.148605052738986],"outputs":[["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))"]],"time":24.79296875,"times":[["x",8.928955078125],["(-.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 1 (sqrt.f64 (+.f64 x 1))))",4.34912109375]],"type":"regimes"},{"compiler":[[22,17]],"egraph":[[1,16,31,4.1834000000000006e-5],[0,11,31,2.6417e-5]],"inputs":[["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 1 x) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 1 x)))","(*.f64 (/.f64 (pow.f64 x -1/2) (+.f64 (pow.f64 x -1/2) (pow.f64 (+.f64 x 1) -1/2))) (/.f64 (pow.f64 x -1/2) (+.f64 x 1)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.821044921875,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[22,17]],"remove-preprocessing":[[]],"time":12.89697265625,"type":"end"}]