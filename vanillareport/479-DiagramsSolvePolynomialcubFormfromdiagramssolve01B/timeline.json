[{"compiler":[[11,8]],"method":["search"],"sampling":[[12,0.5031684664422755,0.41345625924714113,0.08337527431058334],[11,0.44466050522805745,0.499267935694661,0.05607155907728156],[10,0.37445095177099574,0.5694774891517227,0.05607155907728156],[9,0.2496339678473305,0.702095534570617,0.048270497582052485],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":77.111083984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",15.34912109375,382],["body",256,"valid",301.57470703125,8256]],"time":325.511962890625,"type":"sample"},{"compiler":[[10,7]],"egraph":[[0,3,3,3.041e-6],[12,1709,40,0.032979876],[11,1709,40,0.028811751],[10,1709,40,0.025128418],[9,1706,40,0.021072376],[8,1652,40,0.01716921],[7,1441,40,0.013420251000000001],[6,684,40,0.007757376],[5,336,40,0.002928001],[4,197,40,0.001382042],[3,110,40,0.000774501],[2,75,40,0.000438709],[1,40,40,0.000219709],[0,16,40,7.7292e-5]],"inputs":[["0","1","2"],["(-.f64 (*.f64 (*.f64 x 3) y) z)","(-.f64 (*.f64 (*.f64 y 3) x) z)","(-.f64 (*.f64 (*.f64 z 3) y) x)","(-.f64 (*.f64 (*.f64 x 3) z) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(-.f64 (*.f64 (*.f64 x 3) y) z)","(-.f64 (*.f64 x (*.f64 3 y)) z)","(fma.f64 (*.f64 x 3) y (neg.f64 z))","(fma.f64 3 (*.f64 x y) (neg.f64 z))","(-.f64 (*.f64 (*.f64 y 3) x) z)","(-.f64 (*.f64 x (*.f64 3 y)) z)","(fma.f64 (*.f64 x 3) y (neg.f64 z))","(fma.f64 3 (*.f64 x y) (neg.f64 z))","(-.f64 (*.f64 (*.f64 x 3) y) z)","(-.f64 (*.f64 (*.f64 z 3) y) x)","(fma.f64 (*.f64 3 z) y (neg.f64 x))","(-.f64 (*.f64 (*.f64 y z) 3) x)","(fma.f64 3 (*.f64 y z) (neg.f64 x))","(-.f64 (*.f64 y (*.f64 3 z)) x)","(-.f64 (*.f64 z (*.f64 3 y)) x)","(-.f64 (*.f64 (*.f64 x 3) z) y)","(-.f64 (*.f64 3 (*.f64 x z)) y)","(fma.f64 3 (*.f64 x z) (neg.f64 y))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":60.9638671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,750,10,0.01221796],[10,748,10,0.010471251],[9,698,10,0.008580376],[8,579,10,0.006570293],[7,422,10,0.004692918],[6,246,10,0.002443168],[5,133,10,0.001180834],[4,76,10,0.0006170419999999999],[3,42,10,0.000362375],[2,29,10,0.000220167],[1,15,10,0.000127],[0,8,10,4.8542e-5]],"inputs":[["(-.f64 (*.f64 (*.f64 x 3) y) z)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 (*.f64 x 3) y) z)","(-.f64 (*.f64 x (*.f64 3 y)) z)"]],"stop":[["saturated",1]],"time":23.781005859375,"type":"simplify"},{"compiler":[[17,11]],"time":0.3330078125,"type":"eval"},{"alts":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","next",0.12890625],["(-.f64 (*.f64 (*.f64 x 3) y) z)","fresh",0.1484375]],"compiler":[[10,7],[10,7],[10,7],[10,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0546875],"time":1.38916015625,"type":"prune"},{"compiler":[[22,13]],"locations":[["(-.f64 (*.f64 x (*.f64 3 y)) z)",0.015625,true],["(*.f64 x (*.f64 3 y))",0.25390625,true]],"time":5.6259765625,"type":"localize"},{"count":[[2,60]],"series":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","z","-inf",0.1689453125],["(-.f64 (*.f64 x (*.f64 3 y)) z)","z","inf",0.27001953125],["(-.f64 (*.f64 x (*.f64 3 y)) z)","z","0",0.31591796875],["(-.f64 (*.f64 x (*.f64 3 y)) z)","y","-inf",0.158935546875],["(-.f64 (*.f64 x (*.f64 3 y)) z)","y","inf",0.156982421875],["(-.f64 (*.f64 x (*.f64 3 y)) z)","y","0",0.18115234375],["(-.f64 (*.f64 x (*.f64 3 y)) z)","x","-inf",0.161865234375],["(-.f64 (*.f64 x (*.f64 3 y)) z)","x","inf",0.19091796875],["(-.f64 (*.f64 x (*.f64 3 y)) z)","x","0",0.177001953125],["(*.f64 x (*.f64 3 y))","y","-inf",0.281005859375],["(*.f64 x (*.f64 3 y))","y","inf",0.426025390625],["(*.f64 x (*.f64 3 y))","y","0",0.617919921875],["(*.f64 x (*.f64 3 y))","x","-inf",0.302978515625],["(*.f64 x (*.f64 3 y))","x","inf",0.58984375],["(*.f64 x (*.f64 3 y))","x","0",0.570068359375]],"time":4.766845703125,"type":"series"},{"count":[[2,49]],"egraph":[[2,2245,17,0.025581417999999998],[1,172,17,0.003092209],[0,8,17,0.000223375]],"inputs":[["(*.f64 x (*.f64 3 y))","(-.f64 (*.f64 x (*.f64 3 y)) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 3 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 3 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 3) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 3 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 3 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 3 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 3 y)) (*.f64 (neg.f64 z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) (fma.f64 (neg.f64 z) 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) (fma.f64 (neg.f64 (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) 2) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) (fma.f64 (neg.f64 (sqrt.f64 z)) (sqrt.f64 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 z) (*.f64 x (*.f64 3 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 x (*.f64 3 y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) 2) (cbrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) (sqrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 z 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z (fma.f64 (*.f64 x 3) y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z z)) (/.f64 1 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 z)) (-.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z (fma.f64 (*.f64 x 3) y z))) (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 x 3) y z) (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 z 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z (fma.f64 (*.f64 x 3) y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z z)) (fma.f64 (*.f64 x 3) y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 z 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z (fma.f64 (*.f64 x 3) y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 z z))) (neg.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 (neg.f64 z) 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (-.f64 (*.f64 (neg.f64 z) (neg.f64 z)) (*.f64 (*.f64 x (*.f64 3 y)) (neg.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 2) (*.f64 (neg.f64 z) (neg.f64 z))) (-.f64 (*.f64 x (*.f64 3 y)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x (*.f64 3 y)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 x (*.f64 3 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 3 y) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 y) x (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 3 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 3 y))) 2) (cbrt.f64 (*.f64 x (*.f64 3 y))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 (*.f64 x (*.f64 3 y))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 3) y (neg.f64 z))))))"]],"rules":[["egg-rr",38],["egg-rr",11]],"stop":[["node limit",1]],"time":49.408935546875,"type":"rewrite"},{"count":[[109,56]],"egraph":[[11,751,485,0.013439168],[10,749,485,0.011012293],[9,699,485,0.009009626],[8,580,485,0.006899209],[7,423,485,0.004904459],[6,246,485,0.002693084],[5,133,485,0.001525959],[4,76,485,0.0009724180000000001],[3,43,485,0.0006612510000000001],[2,32,485,0.000457418],[1,19,485,0.000282418],[0,11,485,0.000131834]],"inputs":[["(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 3 (*.f64 y x))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)"]],"stop":[["saturated",1]],"time":38.176025390625,"type":"simplify"},{"compiler":[[728,461]],"time":10.112060546875,"type":"eval"},{"alts":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","done",0.12890625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","next",0.13671875],["(fma.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 (*.f64 x (*.f64 3 y))) (neg.f64 z))","fresh",25.62242128907377],["(-.f64 (*.f64 3 (*.f64 y x)) z)","fresh",0.1640625]],"compiler":[[10,7],[10,7],[18,13],[10,7],[10,7],[18,13],[10,7]],"count":[[58,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[56,3],"picked":[1,1]}],"min-error":[0.01171875],"time":12.30615234375,"type":"prune"},{"compiler":[[19,10]],"locations":[["(fma.f64 (*.f64 x 3) y (neg.f64 z))",0.13671875,true]],"time":4.9208984375,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (*.f64 x 3) y (neg.f64 z))","z","-inf",0.176025390625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","z","inf",0.191162109375],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","z","0",0.272216796875],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","y","-inf",0.335205078125],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","y","inf",0.26806640625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","y","0",0.26904296875],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","x","-inf",0.302978515625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","x","inf",0.619873046875],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","x","0",0.383056640625]],"time":2.931884765625,"type":"series"},{"count":[[1,23]],"egraph":[[2,1913,8,0.019080167],[1,162,8,0.002754126],[0,8,10,0.000223542]],"inputs":[["(fma.f64 (*.f64 x 3) y (neg.f64 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 x (*.f64 3 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 3 y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 3 y)) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (*.f64 3 y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 (*.f64 x 3) y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 x (*.f64 3 y)) 0) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x 3) y z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 x 3) y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x 3) y z)) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 3) y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 3) y z)) 2) (cbrt.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 x 3) y z)) (sqrt.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 3 y)) 3) (pow.f64 z 3)) (+.f64 (*.f64 (*.f64 x (*.f64 3 y)) (*.f64 x (*.f64 3 y))) (-.f64 (*.f64 z z) (*.f64 (*.f64 x (*.f64 3 y)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (*.f64 3 y)) (*.f64 x (*.f64 3 y))) (*.f64 z z)) (fma.f64 (*.f64 x 3) y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 x 3) y z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x 3) y z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x 3) y z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 x 3) y z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 x 3) y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 x 3) y z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 x 3) y z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 x 3) y z)))))))"]],"rules":[["egg-rr",23]],"stop":[["node limit",1]],"time":38.9091796875,"type":"rewrite"},{"count":[[59,30]],"egraph":[[11,751,317,0.01334275],[10,749,317,0.011511542],[9,699,317,0.009326667],[8,580,317,0.006939375],[7,423,317,0.00474175],[6,246,317,0.0024487090000000003],[5,133,317,0.00134525],[4,76,317,0.000771541],[3,43,317,0.00047587400000000005],[2,32,317,0.000309791],[1,19,317,0.000172249],[0,11,317,7.8166e-5]],"inputs":[["(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)"]],"stop":[["saturated",1]],"time":32.6240234375,"type":"simplify"},{"compiler":[[300,188]],"time":5.260986328125,"type":"eval"},{"alts":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","done",0.12890625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","done",0.13671875],["(fma.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 (*.f64 x (*.f64 3 y))) (neg.f64 z))","fresh",25.62242128907377],["(-.f64 (*.f64 3 (*.f64 y x)) z)","next",0.1640625]],"compiler":[[10,7],[10,7],[18,13],[10,7],[18,13],[10,7]],"count":[[34,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[30,0],"picked":[1,1]}],"min-error":[0.01171875],"time":5.699951171875,"type":"prune"},{"compiler":[[22,10]],"locations":[["(-.f64 (*.f64 3 (*.f64 y x)) z)",0.015625,true],["(*.f64 3 (*.f64 y x))",0.2578125,true]],"time":4.60107421875,"type":"localize"},{"count":[[2,36]],"series":[["(-.f64 (*.f64 3 (*.f64 y x)) z)","z","-inf",0.169189453125],["(-.f64 (*.f64 3 (*.f64 y x)) z)","z","inf",0.518798828125],["(-.f64 (*.f64 3 (*.f64 y x)) z)","z","0",0.18115234375],["(-.f64 (*.f64 3 (*.f64 y x)) z)","x","-inf",0.166015625],["(-.f64 (*.f64 3 (*.f64 y x)) z)","x","inf",0.180908203125],["(-.f64 (*.f64 3 (*.f64 y x)) z)","x","0",0.159912109375],["(-.f64 (*.f64 3 (*.f64 y x)) z)","y","-inf",0.169921875],["(-.f64 (*.f64 3 (*.f64 y x)) z)","y","inf",0.202880859375],["(-.f64 (*.f64 3 (*.f64 y x)) z)","y","0",0.1669921875],["(*.f64 3 (*.f64 y x))","x","-inf",0.170166015625],["(*.f64 3 (*.f64 y x))","x","inf",0.19921875],["(*.f64 3 (*.f64 y x))","x","0",0.1630859375],["(*.f64 3 (*.f64 y x))","y","-inf",0.16796875],["(*.f64 3 (*.f64 y x))","y","inf",0.193115234375],["(*.f64 3 (*.f64 y x))","y","0",0.18408203125]],"time":3.198974609375,"type":"series"},{"count":[[2,49]],"egraph":[[2,2252,17,0.025574374],[1,172,17,0.003640208],[0,8,17,0.000256208]],"inputs":[["(*.f64 3 (*.f64 y x))","(-.f64 (*.f64 3 (*.f64 y x)) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 3 (*.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3 (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 3 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 3 (*.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 y x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 y x)) (*.f64 (neg.f64 z) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) (fma.f64 (neg.f64 z) 1 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) (fma.f64 (neg.f64 (cbrt.f64 z)) (pow.f64 (cbrt.f64 z) 2) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) (fma.f64 (neg.f64 (sqrt.f64 z)) (sqrt.f64 z) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 z) (*.f64 3 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 3 (*.f64 y x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) 2) (cbrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) (sqrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) (pow.f64 z 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z (fma.f64 (*.f64 3 y) x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z z)) (/.f64 1 (fma.f64 (*.f64 3 y) x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 z)) (-.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z (fma.f64 (*.f64 3 y) x z))) (-.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) (pow.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 3 y) x z) (-.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) (pow.f64 z 3)) (+.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z (fma.f64 (*.f64 3 y) x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z z)) (fma.f64 (*.f64 3 y) x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) (pow.f64 z 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z (fma.f64 (*.f64 3 y) x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 z z))) (neg.f64 (fma.f64 (*.f64 3 y) x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (*.f64 y x) 3) 27) (pow.f64 (neg.f64 z) 3)) (+.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (-.f64 (*.f64 (neg.f64 z) (neg.f64 z)) (*.f64 (*.f64 3 (*.f64 y x)) (neg.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 3 (*.f64 y x)) 2) (*.f64 (neg.f64 z) (neg.f64 z))) (-.f64 (*.f64 3 (*.f64 y x)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 3 (*.f64 y x)) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 3 (*.f64 y x)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (*.f64 y x) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) 3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 3 (*.f64 y x)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 3 (*.f64 y x))) 2) (cbrt.f64 (*.f64 3 (*.f64 y x))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 (*.f64 3 (*.f64 y x))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 y) x (neg.f64 z))))))"]],"rules":[["egg-rr",38],["egg-rr",11]],"stop":[["node limit",1]],"time":47.50390625,"type":"rewrite"},{"count":[[85,56]],"egraph":[[11,751,317,0.013872165999999998],[10,749,317,0.012059873999999998],[9,699,317,0.009666333],[8,580,317,0.006914583],[7,423,317,0.004661083],[6,246,317,0.0023792500000000003],[5,133,317,0.001257333],[4,76,317,0.000726208],[3,43,317,0.0004625],[2,32,317,0.000294083],[1,19,317,0.000175],[0,11,317,7.8792e-5]],"inputs":[["(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)"]],"stop":[["saturated",1]],"time":35.218994140625,"type":"simplify"},{"compiler":[[724,399]],"time":9.5791015625,"type":"eval"},{"alts":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","done",0.12890625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","done",0.13671875],["(-.f64 (*.f64 3 (*.f64 y x)) z)","done",0.1640625],["(fma.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 (*.f64 3 (*.f64 y x))) (neg.f64 z))","fresh",25.62242128907377],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","next",0.15234375]],"compiler":[[10,7],[10,7],[10,7],[18,12],[10,7],[18,12],[10,7]],"count":[[60,5]],"kept":[{"done":[2,2],"fresh":[1,0],"new":[56,2],"picked":[1,1]}],"min-error":[0.0078125],"time":12.116943359375,"type":"prune"},{"compiler":[[19,8]],"locations":[["(fma.f64 (*.f64 y x) 3 (neg.f64 z))",0.15234375,true]],"time":4.4609375,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","z","-inf",0.155029296875],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","z","inf",0.178955078125],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","z","0",0.214111328125],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","x","-inf",0.300048828125],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","x","inf",0.458984375],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","x","0",0.241943359375],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","y","-inf",0.306884765625],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","y","inf",0.240966796875],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","y","0",0.322021484375]],"time":2.5361328125,"type":"series"},{"count":[[1,23]],"egraph":[[2,1915,8,0.018516459],[1,162,8,0.0026632500000000003],[0,8,10,0.000251625]],"inputs":[["(fma.f64 (*.f64 y x) 3 (neg.f64 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 z (*.f64 y (*.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 x 3)) z)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 x 3)) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 y (*.f64 x 3)) z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 (*.f64 y x) 3 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 y (*.f64 x 3)) 0) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 y x) 3 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 y x) 3 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 y x) 3 z)) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y x) 3 z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 y x) 3 z)) 2) (cbrt.f64 (fma.f64 (*.f64 y x) 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 y x) 3 z)) (sqrt.f64 (fma.f64 (*.f64 y x) 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 x 3)) 3) (pow.f64 z 3)) (+.f64 (*.f64 (*.f64 y (*.f64 x 3)) (*.f64 y (*.f64 x 3))) (-.f64 (*.f64 z z) (*.f64 (*.f64 y (*.f64 x 3)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (*.f64 x 3)) (*.f64 y (*.f64 x 3))) (*.f64 z z)) (fma.f64 (*.f64 y x) 3 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 y x) 3 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 y x) 3 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 y x) 3 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 y x) 3 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 y x) 3 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 y x) 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 y x) 3 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 y x) 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 y x) 3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 y x) 3 z)))))))"]],"rules":[["egg-rr",23]],"stop":[["node limit",1]],"time":37.871826171875,"type":"rewrite"},{"count":[[59,30]],"egraph":[[11,751,317,0.013359792],[10,749,317,0.011558709],[9,699,317,0.009593042],[8,580,317,0.007228124999999999],[7,423,317,0.004899499999999999],[6,246,317,0.0024249579999999996],[5,133,317,0.001308625],[4,76,317,0.00073275],[3,43,317,0.000472083],[2,32,317,0.000301125],[1,19,317,0.000180958],[0,11,317,8.3125e-5]],"inputs":[["(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 3 (*.f64 y x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(*.f64 -1 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 3 (*.f64 y x))","(*.f64 (*.f64 3 y) x)","(*.f64 y (*.f64 x 3))","(*.f64 y (*.f64 3 x))","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 -1 z) (*.f64 3 (*.f64 y x)))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)","(+.f64 (*.f64 3 (*.f64 y x)) (*.f64 -1 z))","(fma.f64 3 (*.f64 y x) (neg.f64 z))","(-.f64 (*.f64 y (*.f64 x 3)) z)","(-.f64 (*.f64 y (*.f64 3 x)) z)","(-.f64 (*.f64 3 (*.f64 y x)) z)"]],"stop":[["saturated",1]],"time":33.528076171875,"type":"simplify"},{"compiler":[[300,168]],"time":4.779052734375,"type":"eval"},{"alts":[["(-.f64 (*.f64 x (*.f64 3 y)) z)","done",0.12890625],["(fma.f64 (*.f64 x 3) y (neg.f64 z))","done",0.13671875],["(*.f64 1 (fma.f64 (*.f64 y x) 3 z))","fresh",38.346352790041486],["(fma.f64 (*.f64 y x) 3 (neg.f64 z))","done",0.15234375],["(fma.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 (*.f64 3 (*.f64 y x))) (neg.f64 z))","fresh",25.62242128907377]],"compiler":[[10,7],[10,7],[11,8],[10,7],[18,12]],"count":[[35,5]],"kept":[{"done":[3,2],"fresh":[1,1],"new":[30,1],"picked":[1,1]}],"min-error":[0.00390625],"time":5.971923828125,"type":"prune"},{"accuracy":[0.12890625],"baseline":[0.12890625],"branch":[["x",0.12890625,1],["y",0.12890625,1],["z",0.12890625,1],["(-.f64 (*.f64 (*.f64 x 3) y) z)",0.12890625,1],["(*.f64 (*.f64 x 3) y)",0.12890625,1],["(*.f64 x 3)",0.12890625,1],["(*.f64 x 3)",0.12890625,1]],"compiler":[[4,3],[4,3],[4,3],[10,7],[8,6],[6,5],[6,5],[76,41]],"count":[[8,1]],"inputs":[["(*.f64 1 (fma.f64 (*.f64 y x) 3 z))","(fma.f64 (sqrt.f64 (*.f64 3 (*.f64 y x))) (sqrt.f64 (*.f64 3 (*.f64 y x))) (neg.f64 z))","(fma.f64 (*.f64 y x) 3 (neg.f64 z))","(fma.f64 (*.f64 x 3) y (neg.f64 z))","(fma.f64 (sqrt.f64 (*.f64 x (*.f64 3 y))) (sqrt.f64 (*.f64 x (*.f64 3 y))) (neg.f64 z))","(-.f64 (*.f64 3 (*.f64 y x)) z)","(-.f64 (*.f64 x (*.f64 3 y)) z)","(-.f64 (*.f64 (*.f64 x 3) y) z)"]],"link":["."],"name":["Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, B"],"oracle":[50.257119403041585],"outputs":[["(-.f64 (*.f64 x (*.f64 3 y)) z)"]],"time":35.2509765625,"times":[["x",4.5810546875],["y",4.644775390625],["z",5.156982421875],["(-.f64 (*.f64 (*.f64 x 3) y) z)",4.647216796875],["(*.f64 (*.f64 x 3) y)",4.200927734375],["(*.f64 x 3)",5.384033203125],["(*.f64 x 3)",4.619140625]],"type":"regimes"},{"compiler":[[10,7]],"egraph":[[4,20,10,0.00012425],[3,19,10,0.000103],[2,17,10,8.179199999999999e-5],[1,12,10,5.2709e-5],[0,8,10,2.4084e-5]],"inputs":[["(-.f64 (*.f64 x (*.f64 3 y)) z)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x (*.f64 3 y)) z)"]],"stop":[["fuel",1],["saturated",1]],"time":9.697998046875,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[10,7]],"remove-preprocessing":[[]],"time":8.18115234375,"type":"end"}]