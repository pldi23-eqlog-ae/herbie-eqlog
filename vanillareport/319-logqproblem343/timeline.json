[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.4987797737121582,0.0009760856628417969,0.500244140625],[11,0.4978036880493164,0.0019521713256835938,0.500244140625],[10,0.4958515167236328,0.0039043426513671875,0.500244140625],[9,0.4919471740722656,0.007808685302734375,0.500244140625],[8,0.48413848876953125,0.01561737060546875,0.500244140625],[7,0.4685211181640625,0.0312347412109375,0.500244140625],[6,0.437286376953125,0.062469482421875,0.500244140625],[5,0.37481689453125,0.12493896484375,0.500244140625],[4,0.2498779296875,0.2498779296875,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.689208984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.06298828125,2],["body",512,"valid",228.818359375,2040],["body",1024,"valid",926.5439453125,4228],["body",2048,"valid",143.73095703125,419],["body",256,"valid",79.126708984375,1569]],"time":1386.57177734375,"type":"sample"},{"compiler":[[9,7]],"egraph":[[0,1,1,1.25e-6],[24,7043,10,0.150141665],[23,6843,10,0.138503956],[22,6843,10,0.127343539],[21,6835,10,0.11902595600000002],[20,6827,10,0.11070937300000001],[19,6749,10,0.10226420600000001],[18,6393,10,0.09328187300000002],[17,4800,10,0.08080516500000001],[16,4800,10,0.06600412300000001],[15,4768,10,0.058074873000000006],[14,4670,10,0.049957123000000006],[13,3835,10,0.041537582],[12,2740,10,0.03131354],[11,2002,10,0.020799831],[10,1444,10,0.013430206],[9,1037,10,0.009063415],[8,604,10,0.005468789999999999],[7,292,10,0.003022707],[6,159,10,0.001562291],[5,103,10,0.000941374],[4,71,10,0.000586166],[3,41,10,0.000353957],[2,28,10,0.00020124900000000002],[1,18,10,0.000108832],[0,7,12,5.1916e-5]],"inputs":[["0"],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":174.72900390625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[24,7043,10,0.149145253],[23,6843,10,0.137580336],[22,6843,10,0.126475253],[21,6835,10,0.118133461],[20,6827,10,0.109827752],[19,6749,10,0.101393836],[18,6393,10,0.092469127],[17,4800,10,0.080443752],[16,4800,10,0.065851919],[15,4768,10,0.057894627],[14,4670,10,0.049786127],[13,3835,10,0.04139471],[12,2740,10,0.031140502],[11,2002,10,0.020599377000000002],[10,1444,10,0.013315961000000001],[9,1037,10,0.008983586],[8,604,10,0.005407669],[7,292,10,0.002978877],[6,159,10,0.001538002],[5,103,10,0.0009280429999999999],[4,71,10,0.000575459],[3,41,10,0.000344459],[2,28,10,0.000193792],[1,18,10,0.00010254200000000001],[0,7,12,4.7042e-5]],"inputs":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))","(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"stop":[["node limit",1]],"time":161.364990234375,"type":"simplify"},{"compiler":[[15,11]],"time":0.380126953125,"type":"eval"},{"alts":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","next",0.0078125]],"compiler":[[7,5],[7,5]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0078125],"time":0.784912109375,"type":"prune"},{"compiler":[[15,5]],"locations":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))",0.0078125,true]],"time":3.97216796875,"type":"localize"},{"count":[[1,12]],"series":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","eps","-inf",0.343017578125],["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","eps","inf",0.473876953125],["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","eps","0",1.3349609375]],"time":2.206787109375,"type":"series"},{"count":[[1,35]],"egraph":[[2,1865,8,0.013946083],[1,130,8,0.00242],[0,6,10,0.0001605]],"inputs":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 eps) (neg.f64 (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 eps) (*.f64 (neg.f64 (log1p.f64 eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) (fma.f64 (neg.f64 (log1p.f64 eps)) 1 (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 eps))) (pow.f64 (cbrt.f64 (log1p.f64 eps)) 2) (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) (fma.f64 (neg.f64 (sqrt.f64 (log1p.f64 eps))) (sqrt.f64 (log1p.f64 eps)) (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log1p.f64 eps)) (log1p.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log1p.f64 eps) (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) 2) (cbrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) (sqrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log1p.f64 eps) 3) (pow.f64 (log1p.f64 eps) 3)) (/.f64 1 (+.f64 (pow.f64 (log1p.f64 eps) 2) (*.f64 (log1p.f64 eps) (+.f64 (log1p.f64 eps) (log1p.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log1p.f64 eps) 2) (pow.f64 (log1p.f64 eps) 2)) (/.f64 1 (+.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (log1p.f64 eps)) (sqrt.f64 (log1p.f64 eps))) (-.f64 (sqrt.f64 (log1p.f64 eps)) (sqrt.f64 (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log1p.f64 eps) 2) (*.f64 (log1p.f64 eps) (+.f64 (log1p.f64 eps) (log1p.f64 eps)))) (-.f64 (pow.f64 (log1p.f64 eps) 3) (pow.f64 (log1p.f64 eps) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log1p.f64 eps) (log1p.f64 eps)) (-.f64 (pow.f64 (log1p.f64 eps) 2) (pow.f64 (log1p.f64 eps) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log1p.f64 eps) 3) (pow.f64 (log1p.f64 eps) 3)) (+.f64 (pow.f64 (log1p.f64 eps) 2) (*.f64 (log1p.f64 eps) (+.f64 (log1p.f64 eps) (log1p.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log1p.f64 eps) 2) (pow.f64 (log1p.f64 eps) 2)) (+.f64 (log1p.f64 eps) (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log1p.f64 eps) 3) (pow.f64 (log1p.f64 eps) 3))) (neg.f64 (+.f64 (pow.f64 (log1p.f64 eps) 2) (*.f64 (log1p.f64 eps) (+.f64 (log1p.f64 eps) (log1p.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log1p.f64 eps) 2) (pow.f64 (log1p.f64 eps) 2))) (neg.f64 (+.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log1p.f64 eps) 3) (pow.f64 (neg.f64 (log1p.f64 eps)) 3)) (+.f64 (pow.f64 (log1p.f64 eps) 2) (-.f64 (*.f64 (neg.f64 (log1p.f64 eps)) (neg.f64 (log1p.f64 eps))) (*.f64 (log1p.f64 eps) (neg.f64 (log1p.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log1p.f64 eps) 2) (*.f64 (neg.f64 (log1p.f64 eps)) (neg.f64 (log1p.f64 eps)))) (-.f64 (log1p.f64 eps) (neg.f64 (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 eps 1) (+.f64 eps 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (log1p.f64 eps) (log1p.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log1p.f64 eps) (neg.f64 (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log1p.f64 eps)) 2) (cbrt.f64 (log1p.f64 eps)) (neg.f64 (log1p.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log1p.f64 eps)) (sqrt.f64 (log1p.f64 eps)) (neg.f64 (log1p.f64 eps)))))))"]],"rules":[["egg-rr",35]],"stop":[["node limit",1]],"time":31.734130859375,"type":"rewrite"},{"count":[[47,57]],"egraph":[[6,7941,174,0.041150458],[5,5384,174,0.030417666],[4,2167,174,0.0154355],[3,807,174,0.005639042],[2,298,174,0.002069584],[1,122,177,0.0007937090000000001],[0,44,180,0.000238084]],"inputs":[["(*.f64 -2 eps)","(+.f64 (*.f64 -2 eps) (*.f64 -2/3 (pow.f64 eps 3)))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(*.f64 -1 (log.f64 -1))","(-.f64 (*.f64 -1 (log.f64 -1)) (*.f64 2 (/.f64 1 eps)))","(-.f64 (*.f64 -1 (log.f64 -1)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (*.f64 -1 (log.f64 -1)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 eps)","(+.f64 (*.f64 -2 eps) (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2 eps (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2 eps))","(*.f64 eps (fma.f64 -2/3 (*.f64 eps eps) -2))","(*.f64 eps (fma.f64 eps (*.f64 eps -2/3) -2))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2 eps (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/5 (pow.f64 eps 5))))","(fma.f64 eps (fma.f64 -2/3 (*.f64 eps eps) -2) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2 eps) (+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3)))))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3)))))","(fma.f64 -2 eps (fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7)))))","(fma.f64 -2 eps (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))","(log.f64 -1)","(-.f64 (log.f64 -1) (*.f64 2 (/.f64 1 eps)))","(-.f64 (log.f64 -1) (/.f64 2 eps))","(+.f64 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (log.f64 -1) (+.f64 (/.f64 2 eps) (/.f64 2/3 (pow.f64 eps 3))))","(+.f64 (-.f64 (log.f64 -1) (/.f64 2/3 (pow.f64 eps 3))) (/.f64 -2 eps))","(+.f64 (log.f64 -1) (+.f64 (/.f64 -2 eps) (/.f64 -2/3 (pow.f64 eps 3))))","(-.f64 (+.f64 (log.f64 -1) (/.f64 -2 eps)) (/.f64 2/3 (pow.f64 eps 3)))","(+.f64 (log.f64 -1) (-.f64 (/.f64 -2 eps) (/.f64 2/3 (pow.f64 eps 3))))","(-.f64 (log.f64 -1) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(-.f64 (log.f64 -1) (+.f64 (/.f64 2/3 (pow.f64 eps 3)) (+.f64 (/.f64 2 eps) (/.f64 2/5 (pow.f64 eps 5)))))","(-.f64 (-.f64 (log.f64 -1) (/.f64 2/3 (pow.f64 eps 3))) (+.f64 (/.f64 2 eps) (/.f64 2/5 (pow.f64 eps 5))))","(+.f64 (log.f64 -1) (-.f64 (+.f64 (/.f64 -2 eps) (/.f64 -2/3 (pow.f64 eps 3))) (/.f64 2/5 (pow.f64 eps 5))))","(+.f64 (-.f64 (/.f64 -2 eps) (/.f64 2/3 (pow.f64 eps 3))) (-.f64 (log.f64 -1) (/.f64 2/5 (pow.f64 eps 5))))","(-.f64 (+.f64 (log.f64 -1) (-.f64 (/.f64 -2 eps) (/.f64 2/3 (pow.f64 eps 3)))) (/.f64 2/5 (pow.f64 eps 5)))","(*.f64 -1 (log.f64 -1))","(neg.f64 (log.f64 -1))","(-.f64 (*.f64 -1 (log.f64 -1)) (*.f64 2 (/.f64 1 eps)))","(-.f64 (neg.f64 (log.f64 -1)) (/.f64 2 eps))","(fma.f64 -1 (log.f64 -1) (/.f64 -2 eps))","(-.f64 (/.f64 -2 eps) (log.f64 -1))","(-.f64 (*.f64 -1 (log.f64 -1)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (*.f64 2 (/.f64 1 eps))))","(-.f64 (neg.f64 (log.f64 -1)) (+.f64 (/.f64 2 eps) (/.f64 2/3 (pow.f64 eps 3))))","(-.f64 (fma.f64 -1 (log.f64 -1) (/.f64 -2 eps)) (/.f64 2/3 (pow.f64 eps 3)))","(+.f64 (-.f64 (/.f64 -2 eps) (log.f64 -1)) (/.f64 -2/3 (pow.f64 eps 3)))","(-.f64 (*.f64 -1 (log.f64 -1)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 eps 3))) (+.f64 (*.f64 2 (/.f64 1 eps)) (*.f64 2/5 (/.f64 1 (pow.f64 eps 5))))))","(-.f64 (neg.f64 (log.f64 -1)) (+.f64 (/.f64 2/3 (pow.f64 eps 3)) (+.f64 (/.f64 2 eps) (/.f64 2/5 (pow.f64 eps 5)))))","(-.f64 (-.f64 (fma.f64 -1 (log.f64 -1) (/.f64 -2 eps)) (/.f64 2/3 (pow.f64 eps 3))) (/.f64 2/5 (pow.f64 eps 5)))","(+.f64 (+.f64 (-.f64 (/.f64 -2 eps) (log.f64 -1)) (/.f64 -2/3 (pow.f64 eps 3))) (/.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (/.f64 -2/3 (pow.f64 eps 3)) (-.f64 (-.f64 (/.f64 -2 eps) (log.f64 -1)) (/.f64 2/5 (pow.f64 eps 5))))"]],"stop":[["node limit",1]],"time":55.447998046875,"type":"simplify"},{"compiler":[[729,388]],"time":8.31787109375,"type":"eval"},{"alts":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","done",0.0078125],["(fma.f64 -2 eps (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))","next",0.06505924734522824]],"compiler":[[7,5],[19,15],[19,15]],"count":[[58,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[57,1],"picked":[1,1]}],"min-error":[0.00390625],"time":5.89404296875,"type":"prune"},{"compiler":[[66,52]],"locations":[["(*.f64 -2/7 (pow.f64 eps 7))",0.05078125,true],["(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))",0.08203125,true],["(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))",0.08203125,true]],"time":15.841064453125,"type":"localize"},{"count":[[3,24]],"series":[["(*.f64 -2/7 (pow.f64 eps 7))","eps","-inf",0.18896484375],["(*.f64 -2/7 (pow.f64 eps 7))","eps","inf",0.217041015625],["(*.f64 -2/7 (pow.f64 eps 7))","eps","0",0.3349609375],["(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","eps","-inf",0.31396484375],["(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","eps","inf",0.35498046875],["(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","eps","0",0.3701171875],["(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))","eps","-inf",0.458984375],["(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))","eps","inf",0.510986328125],["(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))","eps","0",0.59716796875]],"time":3.469970703125,"type":"series"},{"count":[[3,90]],"egraph":[[2,3160,42,0.026902000000000002],[1,305,42,0.005268416000000001],[0,14,42,0.0005995]],"inputs":[["(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(*.f64 -2/7 (pow.f64 eps 7))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) (*.f64 -2/3 (pow.f64 eps 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/3 (pow.f64 eps 3)) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2/3 (pow.f64 eps 3)) 1) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/5 (pow.f64 eps 5))) (*.f64 -2/7 (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) (pow.f64 (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 2) (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) (sqrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -2/3 (pow.f64 eps 3)) 3) (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 3)) (+.f64 (pow.f64 (*.f64 -2/3 (pow.f64 eps 3)) 2) (-.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2) (*.f64 (*.f64 -2/3 (pow.f64 eps 3)) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -2/3 (pow.f64 eps 3)) 2) (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2)) (-.f64 (*.f64 -2/3 (pow.f64 eps 3)) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) (exp.f64 (*.f64 -2/3 (pow.f64 eps 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) (exp.f64 (*.f64 -2/3 (pow.f64 eps 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -2/3 (pow.f64 eps 3))) (+.f64 1 (expm1.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/5 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2/5 (pow.f64 eps 5)) 1) (*.f64 -2/7 (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) (cbrt.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2)) (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) (sqrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -2/5 (pow.f64 eps 5)) 3) (pow.f64 (*.f64 -2/7 (pow.f64 eps 7)) 3)) (+.f64 (pow.f64 (*.f64 -2/5 (pow.f64 eps 5)) 2) (-.f64 (*.f64 (pow.f64 eps 14) 4/49) (*.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -2/5 (pow.f64 eps 5)) 2) (*.f64 (pow.f64 eps 14) 4/49)) (-.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7)) (exp.f64 (*.f64 -2/5 (pow.f64 eps 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -2/7 (pow.f64 eps 7)))) (exp.f64 (*.f64 -2/5 (pow.f64 eps 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -2/5 (pow.f64 eps 5))) (+.f64 1 (expm1.f64 (*.f64 -2/7 (pow.f64 eps 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -2/7 (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -2/7 (pow.f64 eps 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2/7 (pow.f64 eps 7)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 eps 14) 4/49) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -2/7 (pow.f64 eps 7)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -2/7 (pow.f64 eps 7))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 -2/7) (pow.f64 eps 7/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 eps 14) 4/49))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -2/7) (pow.f64 eps 7)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -2/7 (pow.f64 eps 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -2/7 (pow.f64 eps 7)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -2/7 (pow.f64 eps 7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 7 (log.f64 eps) (log.f64 -2/7)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 7 (log.f64 eps) (log.f64 -2/7)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (fma.f64 7 (log.f64 eps) (log.f64 -2/7))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 -2/7 (pow.f64 eps 7)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 -2/7) (pow.f64 eps 7/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (fma.f64 7 (log.f64 eps) (log.f64 -2/7)) 1) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",34],["egg-rr",35]],"stop":[["node limit",1]],"time":51.953125,"type":"rewrite"},{"count":[[114,98]],"egraph":[[18,7489,336,0.097401708],[17,7267,336,0.086601333],[16,6888,336,0.076680916],[15,6487,336,0.068220874],[14,5980,336,0.060010874],[13,5332,336,0.051740791],[12,4438,336,0.043087708],[11,3759,336,0.034440874],[10,3278,336,0.027232333000000004],[9,2963,336,0.021115750000000003],[8,2716,336,0.01633725],[7,2562,336,0.012338333000000002],[6,1613,336,0.008725083000000002],[5,1097,336,0.005326333000000001],[4,409,336,0.0030617500000000002],[3,211,336,0.0014650000000000002],[2,94,336,0.000799125],[1,46,336,0.000393083],[0,18,336,0.000147125]],"inputs":[["(*.f64 -2/3 (pow.f64 eps 3))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(*.f64 -2/5 (pow.f64 eps 5))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2/3 (pow.f64 eps 3))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/3 (pow.f64 eps 3)))","(fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (+.f64 (*.f64 -2/7 (pow.f64 eps 7)) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/3 (pow.f64 eps 3))))","(fma.f64 -2/5 (pow.f64 eps 5) (fma.f64 -2/3 (pow.f64 eps 3) (*.f64 -2/7 (pow.f64 eps 7))))","(fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5))))","(*.f64 -2/5 (pow.f64 eps 5))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(*.f64 -2/7 (pow.f64 eps 7))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))","(+.f64 (*.f64 -2/5 (pow.f64 eps 5)) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))","(fma.f64 -2/7 (pow.f64 eps 7) (*.f64 -2/5 (pow.f64 eps 5)))"]],"stop":[["node limit",1]],"time":120.473876953125,"type":"simplify"},{"compiler":[[2288,1860]],"time":35.631103515625,"type":"eval"},{"alts":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","done",0.0078125],["(fma.f64 -2 eps (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))","done",0.06505924734522824]],"compiler":[[7,5],[19,15]],"count":[[100,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[98,0],"picked":[1,1]}],"min-error":[0.00390625],"time":22.017822265625,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["eps",0.0078125,1],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))",0.0078125,1],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))",0.0078125,1]],"compiler":[[2,1],[9,7],[8,6],[33,25]],"count":[[3,1]],"inputs":[["(fma.f64 -2 eps (fma.f64 -2/3 (pow.f64 eps 3) (fma.f64 -2/5 (pow.f64 eps 5) (*.f64 -2/7 (pow.f64 eps 7)))))","(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))","(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))"]],"link":["."],"name":["logq (problem 3.4.3)"],"oracle":[58.95728717948968],"outputs":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"time":7.01513671875,"times":[["eps",2.486083984375],["(log.f64 (/.f64 (-.f64 1 eps) (+.f64 1 eps)))",1.719970703125],["(/.f64 (-.f64 1 eps) (+.f64 1 eps))",1.739013671875]],"type":"regimes"},{"compiler":[[7,5]],"egraph":[[4,21,10,0.00013979000000000002],[3,20,10,0.00011154],[2,17,10,8.1832e-5],[1,12,10,5.4291e-5],[0,6,10,2.8666e-5]],"inputs":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (log1p.f64 (neg.f64 eps)) (log1p.f64 eps))"]],"stop":[["done",1],["saturated",1]],"time":8.4208984375,"type":"simplify"},{"time":0.01318359375,"type":"soundness"},{"compiler":[[7,5]],"remove-preprocessing":[[]],"time":7.541015625,"type":"end"}]