[{"compiler":[[19,13]],"method":["search"],"sampling":[[12,0.3003408675663195,0.56070129496959,0.13895783746409052],[11,0.27303715233301773,0.629935715739748,0.09702713192723422],[10,0.23793237560448688,0.6669907578420862,0.09507686655342695],[9,0.19502653738072695,0.795708272513366,0.009265190105907095],[8,0.1404191069141234,0.8581167644751986,0.0014641286106780171],[7,0.09361273794274894,0.904923133446573,0.0014641286106780171],[6,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":212.968017578125,"type":"analyze"},{"outcomes":[["body",256,"invalid",366.959228515625,6081],["body",256,"valid",539.20166015625,8256]],"time":919.512939453125,"type":"sample"},{"compiler":[[18,12]],"egraph":[[0,3,3,2.667e-6],[10,6006,68,0.051479999],[9,5171,68,0.037268416],[8,4724,68,0.029205708],[7,4434,68,0.022890583],[6,4253,68,0.017540708],[5,3446,68,0.012186875],[4,1022,68,0.006697833],[3,370,68,0.002315792],[2,171,68,0.0009388749999999999],[1,71,72,0.00035925],[0,30,88,0.00012025]],"inputs":[["0","1","2"],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 (+.f64 1 (*.f64 10 a)) (*.f64 a a)))","(/.f64 (*.f64 m (pow.f64 k a)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 (+.f64 1 (*.f64 10 m)) (*.f64 m m)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 k 10)) (*.f64 k k)))","(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k k (fma.f64 k 10 1)))","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 (+.f64 1 (*.f64 10 a)) (*.f64 a a)))","(/.f64 (*.f64 k (pow.f64 a m)) (+.f64 1 (+.f64 (*.f64 a 10) (*.f64 a a))))","(*.f64 (/.f64 k (fma.f64 a a (fma.f64 a 10 1))) (pow.f64 a m))","(*.f64 (pow.f64 a m) (/.f64 k (fma.f64 a (+.f64 a 10) 1)))","(*.f64 k (/.f64 (pow.f64 a m) (fma.f64 a (+.f64 a 10) 1)))","(/.f64 (*.f64 k (pow.f64 a m)) (fma.f64 a (+.f64 a 10) 1))","(/.f64 (*.f64 m (pow.f64 k a)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 m (/.f64 (+.f64 (+.f64 1 (*.f64 k 10)) (*.f64 k k)) (pow.f64 k a)))","(/.f64 m (/.f64 (fma.f64 k k (fma.f64 k 10 1)) (pow.f64 k a)))","(/.f64 (*.f64 m (pow.f64 k a)) (fma.f64 k (+.f64 k 10) 1))","(*.f64 m (/.f64 (pow.f64 k a) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 (+.f64 1 (*.f64 10 m)) (*.f64 m m)))","(/.f64 (*.f64 a (pow.f64 m k)) (+.f64 (+.f64 1 (*.f64 m 10)) (*.f64 m m)))","(/.f64 (*.f64 a (pow.f64 m k)) (fma.f64 m m (fma.f64 m 10 1)))","(*.f64 (pow.f64 m k) (/.f64 a (fma.f64 m (+.f64 m 10) 1)))","(/.f64 (pow.f64 m k) (/.f64 (fma.f64 m (+.f64 m 10) 1) a))","(*.f64 a (/.f64 (pow.f64 m k) (fma.f64 m (+.f64 m 10) 1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":75.43994140625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,7180,17,0.063781874],[12,5830,17,0.052152791],[11,5207,17,0.039882416],[10,4819,17,0.032067499],[9,4600,17,0.025774624],[8,4436,17,0.020533791],[7,4344,17,0.015892416],[6,2880,17,0.011292958],[5,915,17,0.005606166],[4,285,17,0.001918333],[3,111,17,0.000769875],[2,56,17,0.00035675],[1,27,18,0.00015416600000000001],[0,13,22,6.1958e-5]],"inputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(/.f64 a (/.f64 (+.f64 1 (+.f64 (*.f64 k 10) (*.f64 k k))) (pow.f64 k m)))","(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k k (fma.f64 k 10 1)))","(/.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))"]],"stop":[["node limit",1]],"time":75.580078125,"type":"simplify"},{"compiler":[[30,18]],"time":0.4580078125,"type":"eval"},{"alts":[["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","fresh",1.2505244748680318],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","next",1.2466182248680318]],"compiler":[[15,10],[18,12],[15,10],[18,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.2348994748680318],"time":1.44189453125,"type":"prune"},{"compiler":[[51,25]],"locations":[["(+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k))",0.00390625,true],["(*.f64 a (pow.f64 k m))",0.015625,true],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))",1.2388057248680318,true]],"time":10.758056640625,"type":"localize"},{"count":[[3,84]],"series":[["(+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k))","k","-inf",0.180908203125],["(+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k))","k","inf",0.2470703125],["(+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k))","k","0",0.180908203125],["(*.f64 a (pow.f64 k m))","m","-inf",0.152099609375],["(*.f64 a (pow.f64 k m))","m","inf",0.1708984375],["(*.f64 a (pow.f64 k m))","m","0",0.277099609375],["(*.f64 a (pow.f64 k m))","k","-inf",6.69677734375],["(*.f64 a (pow.f64 k m))","k","inf",6.365966796875],["(*.f64 a (pow.f64 k m))","k","0",6.2998046875],["(*.f64 a (pow.f64 k m))","a","-inf",0.277099609375],["(*.f64 a (pow.f64 k m))","a","inf",0.29296875],["(*.f64 a (pow.f64 k m))","a","0",0.28515625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","m","-inf",0.66015625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","m","inf",0.7958984375],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","m","0",0.655029296875],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","k","-inf",1.011962890625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","k","inf",0.8759765625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","k","0",0.552001953125],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","a","-inf",0.377197265625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","a","inf",0.556884765625],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","a","0",22.85107421875]],"time":50.135986328125,"type":"series"},{"count":[[3,140]],"egraph":[[2,4008,32,0.030726167000000002],[1,285,34,0.005462167],[0,13,42,0.00034275]],"inputs":[["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))","(*.f64 a (pow.f64 k m))","(+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 1 (/.f64 (fma.f64 k (+.f64 10 k) 1) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (pow.f64 k m) (/.f64 1 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (*.f64 a (/.f64 1 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 2) (*.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (/.f64 1 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) 2) (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) (*.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) (/.f64 1 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) (sqrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (/.f64 1 (neg.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 10 k) 1)) (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a 1) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) 1) (/.f64 a (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 2) 1) (/.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) 1) (/.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)) (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)) (/.f64 (*.f64 a (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 2) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)) (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)) (/.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (*.f64 a (pow.f64 k m)) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 2) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6))) (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a (pow.f64 k m)) (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4))) (-.f64 (fma.f64 k 10 1) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 k (+.f64 10 k) 1) (pow.f64 k m)) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 (fma.f64 k (+.f64 10 k) 1) (pow.f64 k m)) a) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a (pow.f64 k m)) (neg.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3) (pow.f64 (fma.f64 k (+.f64 10 k) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 10 k) 1)) (pow.f64 k m))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (pow.f64 k m))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (pow.f64 k m)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (pow.f64 k m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (pow.f64 k m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (pow.f64 k m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (pow.f64 k m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 a 3) (pow.f64 (pow.f64 k m) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 k m) 3) (pow.f64 a 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a (pow.f64 k m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (pow.f64 k m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a 3) (pow.f64 (pow.f64 k m) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 k m) 3) (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 m (log.f64 k) (log.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 m (log.f64 k) (log.f64 a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 k (+.f64 10 k) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (fma.f64 k 10 1) 2) (-.f64 (fma.f64 k 10 1) (*.f64 k k))) (/.f64 (pow.f64 k 4) (-.f64 (fma.f64 k 10 1) (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 k (+.f64 10 k) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 k (+.f64 10 k) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2) (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 k (+.f64 10 k) 1)) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6)) (/.f64 1 (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4)) (/.f64 1 (-.f64 (fma.f64 k 10 1) (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2)) (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 k 10 1) (*.f64 k k)) (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6)) (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6)) (+.f64 (pow.f64 k 4) (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (*.f64 (fma.f64 k 10 1) (*.f64 k k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4)) (-.f64 (fma.f64 k 10 1) (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6))) (neg.f64 (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4))) (neg.f64 (-.f64 (fma.f64 k 10 1) (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (*.f64 k (+.f64 10 k)) 3)) (+.f64 1 (-.f64 (pow.f64 (*.f64 k (+.f64 10 k)) 2) (*.f64 k (+.f64 10 k)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (*.f64 k (+.f64 10 k)) 2)) (-.f64 1 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 k 4) (pow.f64 (fma.f64 k 10 1) 2)) (-.f64 (*.f64 k k) (fma.f64 k 10 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 k (+.f64 10 k) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 k (+.f64 10 k) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 k (+.f64 10 k) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 k k) (-.f64 (*.f64 k k) (fma.f64 k 10 1)) (pow.f64 (fma.f64 k 10 1) 2)) (+.f64 (pow.f64 (fma.f64 k 10 1) 3) (pow.f64 k 6))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 k 10 1) (*.f64 k k)) (-.f64 (pow.f64 (fma.f64 k 10 1) 2) (pow.f64 k 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 k (+.f64 10 k) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 k 10 1))) (exp.f64 (*.f64 k k))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 k 10 1)) (+.f64 1 (expm1.f64 (*.f64 k k)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 k 10 1))) (+.f64 1 (expm1.f64 (*.f64 k k)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 k k))) (exp.f64 (fma.f64 k 10 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 k k)) (+.f64 1 (expm1.f64 (fma.f64 k 10 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 k k))) (+.f64 1 (expm1.f64 (fma.f64 k 10 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 k (+.f64 10 k) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 k (+.f64 10 k) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 k (+.f64 10 k))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 k (+.f64 10 k))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 k k (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 k 10 (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 k (+.f64 10 k) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 k 10) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 k 10 1) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 k k) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 k (+.f64 10 k)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 10 k (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 k 10) 1 (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 k 10 1) 1 (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 k k) 1 (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 k) 2) (cbrt.f64 (pow.f64 k 4)) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 k) 2) (*.f64 (cbrt.f64 k) k) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 k) 2) (*.f64 (cbrt.f64 k) 10) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 k 4)) (pow.f64 (cbrt.f64 k) 2) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 k 10)) (pow.f64 (cbrt.f64 (*.f64 k 10)) 2) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 k 10)) 2) (cbrt.f64 (*.f64 k 10)) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 k 10 1)) (pow.f64 (cbrt.f64 (fma.f64 k 10 1)) 2) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 k 10 1)) 2) (cbrt.f64 (fma.f64 k 10 1)) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 k 10)) (sqrt.f64 (*.f64 k 10)) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 k) (*.f64 (sqrt.f64 k) k) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 k) (*.f64 (sqrt.f64 k) 10) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 k 10 1)) (sqrt.f64 (fma.f64 k 10 1)) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1000 (pow.f64 k 3) 1) (/.f64 1 (fma.f64 (*.f64 k 10) (fma.f64 k 10 -1) 1)) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (*.f64 (*.f64 k k) 100)) (/.f64 1 (+.f64 1 (*.f64 -10 k))) (*.f64 k k))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 k (sqrt.f64 k)) (sqrt.f64 k) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 k (+.f64 10 k))) 2) (cbrt.f64 (*.f64 k (+.f64 10 k))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 k (sqrt.f64 (*.f64 k 10))) (hypot.f64 k (sqrt.f64 (*.f64 k 10))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 k (pow.f64 (cbrt.f64 k) 2)) (cbrt.f64 k) (fma.f64 k 10 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 10 (pow.f64 (cbrt.f64 k) 2)) (cbrt.f64 k) (+.f64 1 (*.f64 k k)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 10 (sqrt.f64 k)) (sqrt.f64 k) (+.f64 1 (*.f64 k k)))))))"]],"rules":[["egg-rr",70],["egg-rr",20],["egg-rr",50]],"stop":[["node limit",1]],"time":60.363037109375,"type":"rewrite"},{"count":[[224,189]],"egraph":[[3,7250,1271,0.028584999],[2,1394,1307,0.012335082],[1,378,1619,0.002820416],[0,117,1804,0.000636708]],"inputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","1","(+.f64 1 (*.f64 10 k))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(pow.f64 k 2)","(+.f64 (pow.f64 k 2) (*.f64 10 k))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(pow.f64 k 2)","(+.f64 (pow.f64 k 2) (*.f64 10 k))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a))","(*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a))","(*.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k -10 1))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a)))","(+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 (*.f64 (pow.f64 k m) a) -99))))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 (*.f64 k k) 99)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(fma.f64 -1 (*.f64 (pow.f64 k 3) (*.f64 -10 (+.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a)))) (fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a))))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 (*.f64 (pow.f64 k m) a) -99)))) (*.f64 (*.f64 (pow.f64 k 3) -10) (*.f64 -98 (*.f64 (pow.f64 k m) a))))","(fma.f64 (pow.f64 k 3) (*.f64 -980 (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 (*.f64 k k) 99))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a))","(*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a)","(*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a)) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 99 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 k m) a))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (neg.f64 (/.f64 (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))) (pow.f64 k 5))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a)) (+.f64 (/.f64 (*.f64 10 (*.f64 -98 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)))) (pow.f64 k 5)) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4))))","(-.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 980) (pow.f64 k 5)) (/.f64 (pow.f64 k m) (/.f64 (pow.f64 k 4) (*.f64 a -99)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (-.f64 (/.f64 99 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 k m) a))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 980) (pow.f64 k 5))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a))","(*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a)","(*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) (*.f64 k k)) a)) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 99 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 k m) a))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(+.f64 (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)))) (fma.f64 10 (/.f64 a (/.f64 (pow.f64 k 5) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (fma.f64 10 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 5)) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (+.f64 (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 4)) (fma.f64 10 (*.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (/.f64 (*.f64 -990 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 5)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 (pow.f64 k 5) (*.f64 a -99)))) (/.f64 (*.f64 (*.f64 a (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) 99) (pow.f64 k 4))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 k m) (*.f64 (/.f64 -99 (pow.f64 k 5)) (*.f64 (pow.f64 k m) a))) (/.f64 99 (/.f64 (pow.f64 k 4) (*.f64 (pow.f64 k m) a)))))","(/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 a (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k))))","(/.f64 a (fma.f64 k (+.f64 k 10) 1))","(+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))))","(+.f64 (/.f64 a (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))) (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (log.f64 k) m))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k)))) (*.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k)))) (*.f64 (log.f64 k) m)))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))))","(fma.f64 1/2 (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))) (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (log.f64 k) m)))))","(+.f64 (*.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k)))) (*.f64 (log.f64 k) m)) (fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 10 k))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k))))))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2))) (*.f64 m m)) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))) (+.f64 (/.f64 a (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))))))","(fma.f64 1/6 (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (fma.f64 1/2 (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))) (/.f64 a (/.f64 (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)) (*.f64 (log.f64 k) m))))))","(fma.f64 1/6 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 10 k))) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k)))) (*.f64 (log.f64 k) m)) (fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 10 k))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (/.f64 a (+.f64 1 (*.f64 k (+.f64 10 k)))))))","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2))) (*.f64 m m)) (fma.f64 1/6 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10)))","(*.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 10 k)))) a)","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(+.f64 a (*.f64 (*.f64 (log.f64 k) m) a))","(fma.f64 (*.f64 (log.f64 k) m) a a)","(fma.f64 (log.f64 k) (*.f64 m a) a)","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 a (*.f64 (*.f64 (log.f64 k) m) a)))","(fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (fma.f64 (*.f64 (log.f64 k) m) a a))","(*.f64 a (+.f64 (fma.f64 (log.f64 k) m 1) (*.f64 m (*.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) 1/2))))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(fma.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 a (*.f64 (*.f64 (log.f64 k) m) a))))","(fma.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (fma.f64 (*.f64 (log.f64 k) m) a a)))","(fma.f64 a (*.f64 1/6 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (*.f64 a (+.f64 (fma.f64 (log.f64 k) m 1) (*.f64 m (*.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) 1/2)))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","1","(+.f64 1 (*.f64 10 k))","(+.f64 1 (*.f64 k 10))","(fma.f64 k 10 1)","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)","(pow.f64 k 2)","(*.f64 k k)","(+.f64 (pow.f64 k 2) (*.f64 10 k))","(+.f64 (*.f64 k k) (*.f64 k 10))","(*.f64 k (+.f64 10 k))","(*.f64 k (+.f64 k 10))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)","(pow.f64 k 2)","(*.f64 k k)","(+.f64 (pow.f64 k 2) (*.f64 10 k))","(+.f64 (*.f64 k k) (*.f64 k 10))","(*.f64 k (+.f64 10 k))","(*.f64 k (+.f64 k 10))","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)","(+.f64 1 (+.f64 (pow.f64 k 2) (*.f64 10 k)))","(+.f64 (+.f64 1 (*.f64 k k)) (*.f64 k 10))","(+.f64 1 (*.f64 k (+.f64 10 k)))","(fma.f64 k (+.f64 k 10) 1)"]],"stop":[["node limit",1]],"time":56.006103515625,"type":"simplify"},{"compiler":[[4292,2389]],"time":46.454833984375,"type":"eval"},{"alts":[["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","next",1.2505244748680318],["(*.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))","fresh",1.5044307248680318],["(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2))) (*.f64 m m)) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","fresh",31.406954404288406]],"compiler":[[15,10],[24,17],[43,28],[15,10],[24,17],[43,28]],"count":[[191,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[189,3],"picked":[1,0]}],"min-error":[1.2192744748680318],"time":59.34912109375,"type":"prune"},{"compiler":[[42,23]],"locations":[["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))",0.31361820483038144,true],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))",1.1356983503977487,true]],"time":9.72900390625,"type":"localize"},{"count":[[2,60]],"series":[["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","m","-inf",0.44189453125],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","m","inf",0.43896484375],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","m","0",0.38916015625],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","k","-inf",1.0498046875],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","k","inf",0.54296875],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","k","0",0.588134765625],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","-inf",0.465087890625],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","inf",0.531005859375],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","0",0.4560546875],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","-inf",0.39404296875],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","inf",0.35791015625],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","0",0.282958984375],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","a","-inf",0.35986328125],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","a","inf",0.5341796875],["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","a","0",0.69091796875]],"time":7.830078125,"type":"series"},{"count":[[2,73]],"egraph":[[2,3052,31,0.026687209],[1,236,31,0.004165375],[0,11,31,0.000313708]],"inputs":[["(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 a (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a (pow.f64 k m))) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) 1) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a (pow.f64 k m)) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 k m)) a) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 a (pow.f64 k m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 k k) m)) (*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k m)) (/.f64 1 (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 k m)) (*.f64 (sqrt.f64 (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 k k) m)) 1) (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 k m)) 1) (/.f64 (sqrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) -2) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 k k) m)) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 k m)) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (/.f64 (sqrt.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) -1/2) (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 k k) m)) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (/.f64 (cbrt.f64 (pow.f64 k m)) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 k (*.f64 m 3)) (pow.f64 (fma.f64 k (+.f64 k 10) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 k m) (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 k (*.f64 m 3)) (pow.f64 (fma.f64 k (+.f64 k 10) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m))) -1))))))"]],"rules":[["egg-rr",43],["egg-rr",30]],"stop":[["node limit",1]],"time":48.160888671875,"type":"rewrite"},{"count":[[133,141]],"egraph":[[3,7617,1580,0.029586875],[2,2063,1628,0.015231959],[1,567,2044,0.004151292],[0,174,2271,0.000985417]],"inputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(exp.f64 (*.f64 (log.f64 k) m))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m)))))) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (*.f64 -10 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 5))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (*.f64 10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 5)))))))","(/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a))","(*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a))","(*.f64 a (*.f64 (pow.f64 k m) (fma.f64 k -10 1)))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a)))","(+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 a (*.f64 (pow.f64 k m) -99)))))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 -99 (*.f64 k (neg.f64 k)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(fma.f64 -1 (*.f64 (pow.f64 k 3) (*.f64 -10 (+.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a)))) (fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a))))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 a (*.f64 (pow.f64 k m) -99))))) (*.f64 -10 (*.f64 (*.f64 -98 (*.f64 (pow.f64 k m) a)) (pow.f64 k 3))))","(-.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 -99 (*.f64 k (neg.f64 k))))) (*.f64 (pow.f64 k 3) (*.f64 (*.f64 (pow.f64 k m) a) 980)))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a))","(*.f64 (/.f64 a k) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) k))","(*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))) (*.f64 (/.f64 a k) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))) (*.f64 (/.f64 a k) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) k))) (/.f64 (*.f64 99 (*.f64 a (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (neg.f64 (/.f64 (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))) (pow.f64 k 5))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))) (*.f64 (/.f64 a k) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) k))) (+.f64 (/.f64 (*.f64 10 (*.f64 -98 (*.f64 a (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))))) (pow.f64 k 5)) (/.f64 (*.f64 99 (*.f64 a (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))))) (pow.f64 k 4))))","(-.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 980) (pow.f64 k 5)) (/.f64 (pow.f64 k m) (/.f64 (pow.f64 k 4) (*.f64 a -99)))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (*.f64 k k))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k)))","(*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 a (*.f64 k k)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (*.f64 k k)))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k))))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (*.f64 k k))) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k)))) (/.f64 99 (/.f64 (/.f64 (pow.f64 k 4) a) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 a (*.f64 k k)))) (/.f64 99 (/.f64 (/.f64 (pow.f64 k 4) a) (pow.f64 (/.f64 -1 (/.f64 -1 k)) m))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(+.f64 (fma.f64 -10 (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 3)) (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (*.f64 k k))) (fma.f64 10 (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 5)) (fma.f64 10 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 5)) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (+.f64 (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 4)) (fma.f64 10 (*.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (/.f64 (*.f64 -990 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 5)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 (pow.f64 k 5) (*.f64 a -99)))) (/.f64 99 (/.f64 (/.f64 (pow.f64 k 4) a) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (/.f64 (pow.f64 k 5) (*.f64 a -99)))) (/.f64 99 (/.f64 (/.f64 (pow.f64 k 4) a) (pow.f64 (/.f64 -1 (/.f64 -1 k)) m)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 a (fma.f64 k (+.f64 k 10) 1))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 (*.f64 (log.f64 k) m) a) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (/.f64 (*.f64 m (*.f64 (log.f64 k) a)) (fma.f64 k (+.f64 k 10) 1)))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(fma.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 (*.f64 (log.f64 k) m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (/.f64 (*.f64 m (*.f64 (log.f64 k) a)) (fma.f64 k (+.f64 k 10) 1)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)) (/.f64 (fma.f64 k (+.f64 k 10) 1) a)) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 a (*.f64 m m)))) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(fma.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 (*.f64 (log.f64 k) m) a) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (fma.f64 1/6 (/.f64 a (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 3)) (pow.f64 m 3))) (/.f64 (*.f64 m (*.f64 (log.f64 k) a)) (fma.f64 k (+.f64 k 10) 1))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)) (/.f64 (fma.f64 k (+.f64 k 10) 1) a)) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 a (*.f64 m m)))) (fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/6 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) a))","(/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(exp.f64 (*.f64 (log.f64 k) m))","(pow.f64 k m)","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))","(+.f64 (pow.f64 k m) (*.f64 -10 (*.f64 k (pow.f64 k m))))","(*.f64 (+.f64 (*.f64 k -10) 1) (pow.f64 k m))","(*.f64 (pow.f64 k m) (fma.f64 k -10 1))","(+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m))))))","(+.f64 (pow.f64 k m) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (pow.f64 k m))) (*.f64 -10 (*.f64 k (pow.f64 k m)))))","(+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (pow.f64 k m)) (*.f64 (*.f64 (pow.f64 k m) -99) (neg.f64 (*.f64 k k))))","(*.f64 (pow.f64 k m) (+.f64 (fma.f64 k -10 1) (*.f64 -99 (*.f64 k (neg.f64 k)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m)))))) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))) (*.f64 -10 (*.f64 k (exp.f64 (*.f64 (log.f64 k) m)))))))","(fma.f64 -1 (*.f64 (pow.f64 k 3) (*.f64 -10 (+.f64 (*.f64 -99 (pow.f64 k m)) (pow.f64 k m)))) (+.f64 (pow.f64 k m) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (pow.f64 k m))) (*.f64 -10 (*.f64 k (pow.f64 k m))))))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (pow.f64 k m)) (*.f64 (*.f64 (pow.f64 k m) -99) (neg.f64 (*.f64 k k)))) (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 -98 (pow.f64 k m)))))","(-.f64 (*.f64 (pow.f64 k m) (+.f64 (fma.f64 k -10 1) (*.f64 -99 (*.f64 k (neg.f64 k))))) (*.f64 (pow.f64 k 3) (*.f64 (pow.f64 k m) 980)))","(/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (*.f64 k k))","(/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (*.f64 k k))","(/.f64 (pow.f64 k m) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (pow.f64 k 3)) (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (*.f64 k k)))","(fma.f64 -10 (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (pow.f64 k 3)) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (*.f64 k k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 k m) (*.f64 k k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2))))","(fma.f64 -1 (/.f64 (*.f64 -99 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (pow.f64 k 4)) (fma.f64 -10 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (pow.f64 k 3)) (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (*.f64 k k))))","(+.f64 (fma.f64 -10 (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (pow.f64 k 3)) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (*.f64 k k))) (/.f64 (*.f64 99 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 k m) (*.f64 k k))) (/.f64 (*.f64 (pow.f64 k m) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (*.f64 -100 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (*.f64 -10 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (pow.f64 k 5))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) (pow.f64 k 2)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (pow.f64 k 4)) (fma.f64 -1 (/.f64 (*.f64 -10 (+.f64 (*.f64 -99 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 5)) (fma.f64 -10 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (pow.f64 k 3)) (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (*.f64 k k)))))","(+.f64 (fma.f64 -10 (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (pow.f64 k 3)) (/.f64 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))) (*.f64 k k))) (+.f64 (/.f64 (*.f64 99 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m)))) (pow.f64 k 4)) (/.f64 (*.f64 10 (*.f64 -98 (exp.f64 (*.f64 (neg.f64 (log.f64 k)) (neg.f64 m))))) (pow.f64 k 5))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 k m) (*.f64 k k))) (-.f64 (/.f64 (*.f64 (pow.f64 k m) 99) (pow.f64 k 4)) (/.f64 (*.f64 (pow.f64 k m) 980) (pow.f64 k 5))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))","(/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (*.f64 k k))","(/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (*.f64 k k))","(/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (*.f64 k k))","(/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (*.f64 k k))","(+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (*.f64 k k)))","(fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (*.f64 k k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (*.f64 k k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (*.f64 k k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2))))","(fma.f64 -1 (/.f64 (*.f64 -99 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 4)) (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (*.f64 k k))))","(+.f64 (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (*.f64 k k))) (/.f64 (*.f64 99 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (*.f64 k k))) (/.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) 99) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (*.f64 k k))) (/.f64 (*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4))) (+.f64 (*.f64 -10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 3))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 -100 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (*.f64 10 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)) (pow.f64 k 5)))))))","(fma.f64 -1 (/.f64 (*.f64 -99 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 4)) (+.f64 (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (*.f64 k k))) (*.f64 10 (+.f64 (/.f64 (*.f64 -99 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 5)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m) (pow.f64 k 5))))))","(+.f64 (fma.f64 -10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (pow.f64 k 3)) (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (*.f64 k k))) (+.f64 (fma.f64 10 (/.f64 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) (pow.f64 k 5)) (/.f64 (*.f64 -990 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (pow.f64 k 5))) (/.f64 (*.f64 99 (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (pow.f64 k 4))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (*.f64 k k))) (fma.f64 10 (+.f64 (*.f64 (/.f64 -99 (pow.f64 k 5)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) (/.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (pow.f64 k 5))) (/.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) 99) (pow.f64 k 4))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (*.f64 k k))) (fma.f64 10 (+.f64 (*.f64 (/.f64 -99 (pow.f64 k 5)) (pow.f64 (/.f64 -1 (/.f64 -1 k)) m)) (/.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) (pow.f64 k 5))) (/.f64 (*.f64 (pow.f64 (/.f64 -1 (/.f64 -1 k)) m) 99) (pow.f64 k 4))))","(/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 1 (fma.f64 k (+.f64 k 10) 1))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (log.f64 k) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) m)))","(+.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (*.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m))","(fma.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (/.f64 (log.f64 k) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) m)) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(+.f64 (*.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 m m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 1/2 (/.f64 m (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2)) m)) (fma.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (/.f64 (*.f64 (log.f64 k) m) (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(+.f64 (/.f64 (log.f64 k) (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) m)) (+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (+.f64 1 (*.f64 k (+.f64 k 10))))))))","(+.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (+.f64 (fma.f64 1/6 (/.f64 (pow.f64 m 3) (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 3))) (/.f64 (*.f64 (pow.f64 (log.f64 k) 2) 1/2) (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 m m)))) (*.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m)))","(fma.f64 (/.f64 (log.f64 k) (fma.f64 k (+.f64 k 10) 1)) m (fma.f64 1/6 (/.f64 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)) (fma.f64 k (+.f64 k 10) 1)) (fma.f64 1/2 (/.f64 m (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2)) m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))"]],"stop":[["node limit",1]],"time":59.264892578125,"type":"simplify"},{"compiler":[[3663,2277]],"time":37.259033203125,"type":"eval"},{"alts":[["(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","fresh",28.22465058204186],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","next",1.2909145139418],["(*.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))","fresh",1.5044307248680318]],"compiler":[[24,16],[18,13],[24,17],[24,16],[18,13],[24,17]],"count":[[144,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[141,2],"picked":[1,0]}],"min-error":[1.2192744748680318],"time":34.761962890625,"type":"prune"},{"compiler":[[70,41]],"locations":[["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)",0.11298754884221011,true],["(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))",0.31361820483038144,false],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))",1.1356983503977487,true],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))",7.7591431695058,true]],"time":15.552001953125,"type":"localize"},{"count":[[3,68]],"series":[["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","m","-inf",0.629150390625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","m","inf",0.625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","m","0",2.7041015625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","k","-inf",7.492919921875],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","k","inf",6.093994140625],["(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)","k","0",2.2119140625],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","m","-inf",1.282958984375],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","m","inf",0.463134765625],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","m","0",0.281982421875],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","k","-inf",0.3779296875],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","k","inf",0.367919921875],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","k","0",0.27099609375],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","a","-inf",0.26806640625],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","a","inf",0.4169921875],["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","a","0",0.467041015625],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","-inf",1.066162109375],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","inf",1.93798828125],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","m","0",1.261962890625],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","-inf",2.390869140625],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","inf",10.5],["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","k","0",1.27880859375]],"time":42.905029296875,"type":"series"},{"count":[[3,109]],"egraph":[[2,3478,47,0.027917375],[1,302,47,0.004964875],[0,14,47,0.000411875]],"inputs":[["(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","(pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 1 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6) (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 k m))) (cbrt.f64 (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 k m))) (neg.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) (cbrt.f64 (pow.f64 k m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 k m)) a) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a (neg.f64 (pow.f64 k m))) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3) (pow.f64 a 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3) (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a 3) (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2) (*.f64 (cbrt.f64 (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) (sqrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6) (*.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 k m)) (/.f64 1 (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (pow.f64 k m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 k m)) (*.f64 (sqrt.f64 (pow.f64 k m)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 k m)) 1) (/.f64 (sqrt.f64 (pow.f64 k m)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) -2) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 k m)) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2))) (/.f64 (sqrt.f64 (pow.f64 k m)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) -1/2) (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (/.f64 (cbrt.f64 (pow.f64 k m)) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) 1) (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2))) (cbrt.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6)) (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (pow.f64 k m)) 2) (/.f64 (fma.f64 k (+.f64 k 10) 1) (cbrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 k m)) (neg.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (pow.f64 k m)) (/.f64 (fma.f64 k (+.f64 k 10) 1) (sqrt.f64 (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (pow.f64 k m))) (neg.f64 (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) 1) (fma.f64 k (+.f64 k 10) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 k m) (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2))) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 2) (cbrt.f64 (pow.f64 k m))) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 k m) (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 k m)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 k (*.f64 m 3)) (pow.f64 (fma.f64 k (+.f64 k 10) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 1))))))"]],"rules":[["egg-rr",48],["egg-rr",26],["egg-rr",35]],"stop":[["node limit",1]],"time":53.633056640625,"type":"rewrite"},{"count":[[177,178]],"egraph":[[2,4492,3966,0.023777333],[1,1087,4565,0.008664958],[0,315,5064,0.001792583]],"inputs":[["(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (+.f64 (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 k 2)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3)))))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (+.f64 (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 k 2)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3)))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3))))))","(pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))) (pow.f64 m 2))))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))) (pow.f64 m 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))) (pow.f64 m 2)))))))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3))","(+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)))","(+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (+.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)) (*.f64 (pow.f64 k 2) (+.f64 (*.f64 200/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 1 1/3))))))))","(+.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 20/9 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9))) (+.f64 (*.f64 -10/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))))))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3))))))) (*.f64 20/9 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3))))))))))) (+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (+.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)) (*.f64 (pow.f64 k 2) (+.f64 (*.f64 200/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 1 1/3)))))))))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))))))) (pow.f64 m 3)))))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3)","(cbrt.f64 (pow.f64 k m))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))))","(+.f64 (*.f64 (*.f64 -10/3 k) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (cbrt.f64 (pow.f64 k m)))","(fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (cbrt.f64 (pow.f64 k m)))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (+.f64 (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 k 2)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3)))))","(+.f64 (fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (*.f64 -1/3 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (*.f64 k k) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 k m) 2))))))) (cbrt.f64 (pow.f64 k m)))","(+.f64 (fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (cbrt.f64 (pow.f64 k m))) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 (*.f64 (*.f64 k k) (cbrt.f64 (/.f64 1 (pow.f64 k (*.f64 2 m))))) -1/3)))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1/3) (+.f64 (*.f64 -10/3 (*.f64 k (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 k 2)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3)))))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 2)) 1/3))))))","(+.f64 (fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (*.f64 -1/3 (+.f64 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (*.f64 k k) (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 k m) 2))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 k m) 2))) (*.f64 (pow.f64 k 3) (fma.f64 -10 (*.f64 -99 (pow.f64 k m)) (fma.f64 20/3 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (fma.f64 -10 (pow.f64 k m) (*.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7))))))))))) (cbrt.f64 (pow.f64 k m)))","(+.f64 (fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (cbrt.f64 (pow.f64 k m))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 k (*.f64 2 m)))) (+.f64 (*.f64 k (*.f64 k (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)))) (*.f64 (pow.f64 k 3) (+.f64 (*.f64 990 (pow.f64 k m)) (fma.f64 (*.f64 20/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (fma.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)) (*.f64 (pow.f64 k m) -10)))))))))","(+.f64 (fma.f64 -10/3 (*.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18))) (cbrt.f64 (pow.f64 k m))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 k (*.f64 2 m)))) (*.f64 (*.f64 k k) (+.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 (+.f64 (*.f64 (pow.f64 k m) 990) (fma.f64 (*.f64 20/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (fma.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)) (*.f64 (pow.f64 k m) -10)))) k))))))","(pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))))","(+.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (*.f64 (log.f64 k) m) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18)))))","(fma.f64 1/3 (*.f64 m (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (log.f64 k)))) (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))) (pow.f64 m 2))))))","(+.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (log.f64 k) m) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))))) (*.f64 m m))))))","(fma.f64 1/3 (fma.f64 (*.f64 (log.f64 k) m) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2)) (*.f64 m (*.f64 m (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))))))) (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 1/3 (*.f64 m (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (log.f64 k))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2)) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18))))) m))) (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))) (pow.f64 m 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) m))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) 1/3) (*.f64 (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))) (pow.f64 m 2)))))))","(+.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) (*.f64 (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18)) (log.f64 k)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (*.f64 1/27 (*.f64 (pow.f64 (log.f64 k) 3) (cbrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7))))))) (pow.f64 m 3))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (log.f64 k) m) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18))) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 2)) (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))))) (*.f64 m m)))))))","(+.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 1/3 (+.f64 (fma.f64 (*.f64 (log.f64 k) m) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2)) (*.f64 m (*.f64 m (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))))))) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2)) (*.f64 (-.f64 (/.f64 1/6 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 3))) (fma.f64 2/3 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7))) (*.f64 (pow.f64 (log.f64 k) 3) 1/27)))) (pow.f64 m 3))))))","(+.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (+.f64 (*.f64 (*.f64 (log.f64 k) m) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18)))) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 2))) (+.f64 (*.f64 m (*.f64 m (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))))) (*.f64 (+.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) -2/3)) (*.f64 (pow.f64 (log.f64 k) 3) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7))) -1/27))) (pow.f64 m 3))))))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(pow.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3)","(cbrt.f64 (/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(fma.f64 -10 (*.f64 (*.f64 k (pow.f64 k m)) a) (*.f64 (pow.f64 k m) a))","(*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a))","(*.f64 (pow.f64 k m) (+.f64 a (*.f64 (*.f64 k -10) a)))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(fma.f64 -10 (*.f64 (*.f64 k (pow.f64 k m)) a) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a)))","(+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 (*.f64 (pow.f64 k m) -99) a))))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (*.f64 k (neg.f64 k)) -99)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(fma.f64 -1 (*.f64 (pow.f64 k 3) (*.f64 -10 (+.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a)))) (fma.f64 -10 (*.f64 (*.f64 k (pow.f64 k m)) a) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a))))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 k k) (neg.f64 (*.f64 (*.f64 (pow.f64 k m) -99) a)))) (*.f64 (pow.f64 k 3) (*.f64 -10 (*.f64 -98 (*.f64 (pow.f64 k m) a)))))","(-.f64 (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (*.f64 k (neg.f64 k)) -99))) (*.f64 (pow.f64 k 3) (*.f64 (*.f64 (pow.f64 k m) a) 980)))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 a (/.f64 (*.f64 k k) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))","(*.f64 (/.f64 a k) (/.f64 (/.f64 1 (/.f64 1 (pow.f64 k m))) k))","(*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (/.f64 a (/.f64 (*.f64 k k) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (/.f64 1 (/.f64 1 (pow.f64 k m)))) (*.f64 (/.f64 a k) (/.f64 (/.f64 1 (/.f64 1 (pow.f64 k m))) k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 a (/.f64 (*.f64 k k) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (/.f64 1 (/.f64 1 (pow.f64 k m)))) (*.f64 (/.f64 a k) (/.f64 (/.f64 1 (/.f64 1 (pow.f64 k m))) k))) (/.f64 (*.f64 99 (*.f64 a (/.f64 1 (/.f64 1 (pow.f64 k m))))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 a (/.f64 (*.f64 k k) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (neg.f64 (/.f64 (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))) (pow.f64 k 5))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (/.f64 1 (/.f64 1 (pow.f64 k m)))) (*.f64 (/.f64 a k) (/.f64 (/.f64 1 (/.f64 1 (pow.f64 k m))) k))) (+.f64 (/.f64 (*.f64 10 (*.f64 -98 (*.f64 a (/.f64 1 (/.f64 1 (pow.f64 k m)))))) (pow.f64 k 5)) (/.f64 (*.f64 99 (*.f64 a (/.f64 1 (/.f64 1 (pow.f64 k m))))) (pow.f64 k 4))))","(+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)) (-.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 980) (pow.f64 k 5))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))","(*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)))) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m))) (/.f64 (*.f64 (*.f64 a (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(+.f64 (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)))) (fma.f64 10 (/.f64 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)) (pow.f64 k 5)) (fma.f64 10 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 5)) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (+.f64 (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 4)) (fma.f64 10 (*.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k))))) (/.f64 (*.f64 -990 (*.f64 a (pow.f64 (exp.f64 m) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))))) (pow.f64 k 5)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a (*.f64 k k)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m))) (+.f64 (/.f64 (*.f64 (*.f64 a (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) 99) (pow.f64 k 4)) (fma.f64 10 (*.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) (/.f64 (*.f64 -990 (*.f64 a (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m))) (pow.f64 k 5)))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 a (fma.f64 k (+.f64 k 10) 1))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m))))","(+.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m)))","(*.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m)))))","(+.f64 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m)) (fma.f64 1/2 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2)))) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 1/2 (*.f64 a (*.f64 m (/.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) (fma.f64 k (+.f64 k 10) 1)))) (*.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 1/6 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m))))))","(+.f64 (fma.f64 1/6 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m))) (fma.f64 1/2 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2)))) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (fma.f64 1/2 (*.f64 a (*.f64 m (/.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) (fma.f64 k (+.f64 k 10) 1)))) (*.f64 (+.f64 (*.f64 (log.f64 k) m) 1) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))) (*.f64 1/6 (*.f64 (pow.f64 (log.f64 k) 3) (/.f64 (*.f64 (pow.f64 m 3) a) (fma.f64 k (+.f64 k 10) 1)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(*.f64 (pow.f64 k m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3))","(pow.f64 k m)","(+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)))","(fma.f64 k (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18)) -10) (pow.f64 k m))","(fma.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) -10)) (pow.f64 k m))","(+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (+.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)) (*.f64 (pow.f64 k 2) (+.f64 (*.f64 200/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 1 1/3))))))))","(+.f64 (fma.f64 k (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18)) -10) (pow.f64 k m)) (*.f64 (*.f64 k k) (fma.f64 200/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m)))) (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))))) (*.f64 -1/3 (*.f64 1 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100)))))))))","(fma.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) -10)) (fma.f64 (*.f64 k k) (fma.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) 200/9 (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m)))))) (*.f64 -1/3 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99))))) (pow.f64 k m)))","(fma.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) -10)) (fma.f64 (*.f64 k k) (fma.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) 200/9 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 100/9 (cbrt.f64 (pow.f64 k m)))) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 -2/3 (cbrt.f64 (pow.f64 k (neg.f64 m))))) -1/3)))) (pow.f64 k m)))","(+.f64 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 20/9 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9))) (+.f64 (*.f64 -10/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/9) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m)))))))))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3))))))) (*.f64 20/9 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -10 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (+.f64 (*.f64 20/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 4) 1) 1/9) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))) (+.f64 (*.f64 -10 (exp.f64 (*.f64 (log.f64 k) m))) (*.f64 -1000/27 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 7) 1) 1/3))))))))))) (+.f64 (*.f64 k (+.f64 (*.f64 -20/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)) (*.f64 -10/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 13) 1) 1/9)))) (+.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) (pow.f64 1 1/3)) (*.f64 (pow.f64 k 2) (+.f64 (*.f64 200/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) 1) 1/3) (+.f64 (*.f64 100/9 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 14) 1) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 (log.f64 k) m))) 1/3) (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))))))) (*.f64 -1/3 (*.f64 (+.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 (*.f64 100/3 (pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 k) m)) 17) 1) 1/9)) (*.f64 -100 (exp.f64 (*.f64 (log.f64 k) m))))) (pow.f64 1 1/3)))))))))","(fma.f64 (pow.f64 k 3) (fma.f64 20/9 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (fma.f64 -10/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m)))) (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100)))))) (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 -2/3 (*.f64 (fma.f64 -10 (*.f64 -99 (pow.f64 k m)) (fma.f64 20/3 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (fma.f64 -10 (pow.f64 k m) (*.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)))))) (cbrt.f64 (/.f64 1 (pow.f64 k m)))) (*.f64 20/9 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (pow.f64 (pow.f64 k m) 1/18) (pow.f64 (pow.f64 k m) 1/18))))) (*.f64 -1/3 (fma.f64 -10 (*.f64 -99 (pow.f64 k m)) (fma.f64 20/3 (*.f64 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (fma.f64 -10 (pow.f64 k m) (*.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)))))))))) (+.f64 (fma.f64 k (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18)) -10) (pow.f64 k m)) (*.f64 (*.f64 k k) (fma.f64 200/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m)))) (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))))) (*.f64 -1/3 (*.f64 1 (+.f64 (pow.f64 k m) (fma.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) (*.f64 (pow.f64 k m) -100))))))))))","(fma.f64 (pow.f64 k 3) (fma.f64 (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) 20/9 (fma.f64 -10/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m))))))) (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 -2/3 (*.f64 (+.f64 (*.f64 990 (pow.f64 k m)) (fma.f64 (*.f64 20/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (fma.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)) (*.f64 (pow.f64 k m) -10)))) (cbrt.f64 (/.f64 1 (pow.f64 k m)))) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 20/9 (*.f64 (pow.f64 (pow.f64 k m) 1/18) (pow.f64 (pow.f64 k m) 1/18))))) (*.f64 -1/3 (+.f64 (*.f64 990 (pow.f64 k m)) (fma.f64 (*.f64 20/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (fma.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)) (*.f64 (pow.f64 k m) -10)))))))) (fma.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) -10)) (fma.f64 (*.f64 k k) (fma.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) 200/9 (fma.f64 (cbrt.f64 (pow.f64 k m)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (pow.f64 k m)))))) (*.f64 -1/3 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99))))) (pow.f64 k m))))","(fma.f64 (pow.f64 k 3) (fma.f64 (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) 20/9 (fma.f64 -10/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 7) 1/18)) (fma.f64 100/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 -2/3 (cbrt.f64 (pow.f64 k (neg.f64 m))))))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 k m) 990) (fma.f64 (*.f64 20/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 4) 1/18))) (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (fma.f64 -1000/27 (cbrt.f64 (pow.f64 (pow.f64 k m) 7)) (*.f64 (pow.f64 k m) -10)))) (+.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 -2/3 (cbrt.f64 (pow.f64 k (neg.f64 m))))))) (*.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (*.f64 20/9 (*.f64 (pow.f64 (pow.f64 k m) 1/18) (pow.f64 (pow.f64 k m) 1/18)))))))) (fma.f64 k (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 13) 1/18) -10)) (fma.f64 (*.f64 k k) (fma.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18)) 200/9 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 14) 1/18)) (*.f64 100/9 (cbrt.f64 (pow.f64 k m)))) (*.f64 (+.f64 (*.f64 100/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18) (pow.f64 (pow.f64 (pow.f64 k m) 17) 1/18))) (*.f64 (pow.f64 k m) -99)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 k m)) (*.f64 -2/3 (cbrt.f64 (pow.f64 k (neg.f64 m))))) -1/3)))) (pow.f64 k m))))","(*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))))","(/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 1 (fma.f64 k (+.f64 k 10) 1))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m))","(+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (*.f64 m (*.f64 (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18))) 1)))","(fma.f64 m (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (log.f64 k))) (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2))))","(+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 (*.f64 (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18))) 1) m (*.f64 (*.f64 m m) (+.f64 (*.f64 1/3 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/3 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))))) (cbrt.f64 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18))) (pow.f64 (log.f64 k) 2))) (*.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))) 2/9))))))","(+.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (fma.f64 (*.f64 m m) (fma.f64 1/3 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (fma.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 2/9)))) (*.f64 m (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (log.f64 k))))))","(+.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (*.f64 m (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (log.f64 k))) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 2/9)) (+.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (+.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9))))) m))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/9) (log.f64 k)))) m) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))) (pow.f64 m 2)) (*.f64 (+.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/3) (pow.f64 (log.f64 k) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/9) (*.f64 (log.f64 k) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/3) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/9) (pow.f64 (log.f64 k) 2))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/9) (*.f64 (log.f64 k) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/9) (pow.f64 (log.f64 k) 2)))))))))) (pow.f64 m 3)))))","(+.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 (*.f64 (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 13)) 1/18))) 1) m (fma.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/3 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))))) (cbrt.f64 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18))) (pow.f64 (log.f64 k) 2))) (*.f64 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))) 2/9))) (*.f64 m m) (*.f64 (pow.f64 m 3) (fma.f64 (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/18) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 k (+.f64 k 10)))) 1/18)) (log.f64 k)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (*.f64 2/3 (*.f64 (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18)) (log.f64 k)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (*.f64 1/27 (*.f64 (pow.f64 (log.f64 k) 3) (cbrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7))))))) (cbrt.f64 (+.f64 1 (*.f64 k (+.f64 k 10))))))) (+.f64 (*.f64 1/3 (-.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (+.f64 1 (*.f64 k (+.f64 k 10))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18)) (log.f64 k)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) (*.f64 1/27 (*.f64 (pow.f64 (log.f64 k) 3) (cbrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)))))))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 7)) 1/18)) (log.f64 k)) (fma.f64 2/3 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18))))) (cbrt.f64 (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 14)) 1/18))) (pow.f64 (log.f64 k) 2)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 4)) 1/18)) (log.f64 k)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (+.f64 1 (*.f64 k (+.f64 k 10))))) (*.f64 -1/3 (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) 17)) 1/18)))))) 2/9))))))))","(+.f64 (fma.f64 m (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (log.f64 k))) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 (pow.f64 m 3) (fma.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 2/3 (*.f64 (-.f64 (/.f64 1/6 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 3))) (fma.f64 2/3 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7))) (*.f64 (pow.f64 (log.f64 k) 3) 1/27)))) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))) (*.f64 (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) 1/18) (pow.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) 1/18))) (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) 2/9))) (fma.f64 1/3 (-.f64 (/.f64 1/6 (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 3))) (fma.f64 2/3 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7))) (*.f64 (pow.f64 (log.f64 k) 3) 1/27)))) (fma.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) 2/9 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (log.f64 k)))) (fma.f64 (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9))))))) (*.f64 m (*.f64 m (fma.f64 1/3 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (fma.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 2/9))))))))","(+.f64 (fma.f64 m (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 13)) 1/18) (log.f64 k))) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 (*.f64 m m) (+.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 2/9)) (+.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (+.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))))) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9))))) (*.f64 m (+.f64 (*.f64 (log.f64 k) (+.f64 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7)) 1/18))) (fma.f64 (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 14)) 1/18)) (*.f64 (pow.f64 (log.f64 k) 2) 1/9)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)) 2/9) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18))))))) (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) 1/18) (pow.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) 1/18))) (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) 2/9))) (*.f64 (+.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 k) 3) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 k) 2) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (*.f64 -1/3 (pow.f64 (log.f64 k) 2)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 17)) 1/18)))) (*.f64 (log.f64 k) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 4)) 1/18)))) -2/3)) (*.f64 (pow.f64 (log.f64 k) 3) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 k (+.f64 k 10) 1) 7))) -1/27))) (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1))) (*.f64 2/3 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)))) 1/3))))))))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (/.f64 (exp.f64 (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))) (pow.f64 1 1/3))","(/.f64 (pow.f64 k m) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))"]],"stop":[["node limit",1]],"time":70.328125,"type":"simplify"},{"compiler":[[9730,6432]],"time":99.156982421875,"type":"eval"},{"alts":[["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","done",1.2909145139418],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","next",1.2466182248680318],["(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","fresh",28.22465058204186],["(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k)))","fresh",19.862490826379034]],"compiler":[[18,13],[15,10],[24,16],[18,12],[15,10],[24,16],[18,12]],"count":[[258,4]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[255,2],"picked":[1,1]}],"min-error":[0.0234375],"time":100.843994140625,"type":"prune"},{"compiler":[[37,18]],"locations":[["(*.f64 (pow.f64 k m) a)",0.015625,true],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))",1.2388057248680318,true]],"time":8.510986328125,"type":"localize"},{"count":[[2,72]],"series":[["(*.f64 (pow.f64 k m) a)","a","-inf",0.14697265625],["(*.f64 (pow.f64 k m) a)","a","inf",0.149169921875],["(*.f64 (pow.f64 k m) a)","a","0",0.1708984375],["(*.f64 (pow.f64 k m) a)","m","-inf",0.14697265625],["(*.f64 (pow.f64 k m) a)","m","inf",0.14794921875],["(*.f64 (pow.f64 k m) a)","m","0",0.2021484375],["(*.f64 (pow.f64 k m) a)","k","-inf",0.162109375],["(*.f64 (pow.f64 k m) a)","k","inf",0.182861328125],["(*.f64 (pow.f64 k m) a)","k","0",0.265869140625],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","a","-inf",0.2119140625],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","a","inf",0.178955078125],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","a","0",0.1689453125],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","m","-inf",0.2041015625],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","m","inf",0.18408203125],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","m","0",0.26611328125],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","k","-inf",0.369140625],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","k","inf",0.31591796875],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","k","0",0.343017578125]],"time":4.11083984375,"type":"series"},{"count":[[2,73]],"egraph":[[2,3111,24,0.026665667],[1,236,24,0.0042035],[0,11,24,0.000314583]],"inputs":[["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (pow.f64 k m) a)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (/.f64 1 (/.f64 (fma.f64 k (+.f64 k 10) 1) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 k m) (*.f64 a (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (pow.f64 k m) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) a) (/.f64 1 (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 2) (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (*.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) (sqrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) (*.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) (/.f64 1 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 k m) (neg.f64 a)) (/.f64 1 (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 k (+.f64 k 10) 1)) (*.f64 (pow.f64 k m) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) 1) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a 1) (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) 1) (/.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) (fma.f64 k (+.f64 k 10) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (/.f64 a (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (/.f64 (pow.f64 k m) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) -2) (/.f64 (*.f64 (pow.f64 k m) a) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) (pow.f64 (cbrt.f64 (fma.f64 k (+.f64 k 10) 1)) 2)) (/.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) (cbrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 k (+.f64 k 10) 1) -1/2) (/.f64 (*.f64 (pow.f64 k m) a) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 2) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) (sqrt.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 (pow.f64 k m) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 3) (pow.f64 (fma.f64 k (+.f64 k 10) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 (pow.f64 k m) a)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 k m) a) (neg.f64 (fma.f64 k (+.f64 k 10) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 3) (pow.f64 (fma.f64 k (+.f64 k 10) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 (pow.f64 k m) a))) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 k m) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (pow.f64 k m) a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (pow.f64 k m) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (pow.f64 k m) a)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (pow.f64 k m) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 k m) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 k m) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (pow.f64 k m) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 k m) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 k m) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 k m) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 k m) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 k m) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 k m) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (pow.f64 k m) a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (pow.f64 k m) a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (pow.f64 k m) a))) 2))))))"]],"rules":[["egg-rr",20],["egg-rr",53]],"stop":[["node limit",1]],"time":49.085205078125,"type":"rewrite"},{"count":[[145,113]],"egraph":[[3,7260,1195,0.028287875000000004],[2,1397,1231,0.012141666],[1,384,1471,0.00281175],[0,118,1600,0.000640583]],"inputs":[["(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a))","(*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a))","(*.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k -10 1))","(+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))","(fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a)))","(+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 (*.f64 (pow.f64 k m) a) -99) (neg.f64 (*.f64 k k))))","(*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 (*.f64 k k) 99)))","(*.f64 (*.f64 (pow.f64 k m) a) (-.f64 (fma.f64 k -10 1) (*.f64 k (*.f64 k -99))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 k 3) (+.f64 (*.f64 -10 (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (*.f64 -10 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))) (+.f64 (*.f64 -10 (*.f64 k (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 k 2) (+.f64 (*.f64 -100 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)))) (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a))))","(fma.f64 -1 (*.f64 (pow.f64 k 3) (*.f64 -10 (+.f64 (*.f64 -99 (*.f64 (pow.f64 k m) a)) (*.f64 (pow.f64 k m) a)))) (fma.f64 -10 (*.f64 k (*.f64 (pow.f64 k m) a)) (fma.f64 -1 (*.f64 (*.f64 k k) (*.f64 -99 (*.f64 (pow.f64 k m) a))) (*.f64 (pow.f64 k m) a))))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 k -10) 1) (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 (*.f64 (pow.f64 k m) a) -99) (neg.f64 (*.f64 k k)))) (*.f64 -10 (*.f64 (*.f64 -98 (*.f64 (pow.f64 k m) a)) (pow.f64 k 3))))","(fma.f64 (pow.f64 k 3) (*.f64 -980 (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 (pow.f64 k m) a) (+.f64 (fma.f64 k -10 1) (*.f64 (*.f64 k k) 99))))","(fma.f64 (pow.f64 k 3) (*.f64 -980 (*.f64 (pow.f64 k m) a)) (*.f64 (*.f64 (pow.f64 k m) a) (-.f64 (fma.f64 k -10 1) (*.f64 k (*.f64 k -99)))))","(/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a))","(*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k))","(*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k))) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))) (pow.f64 k 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a) (pow.f64 k 2)) (+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (pow.f64 k 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -10 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))))) (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m)))))))) (pow.f64 k 5))))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (neg.f64 (/.f64 (*.f64 -10 (+.f64 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))) (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))) (pow.f64 k 5))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k))) (+.f64 (/.f64 (*.f64 10 (*.f64 -98 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)))) (pow.f64 k 5)) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (+.f64 (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)) (/.f64 (*.f64 -980 (*.f64 (pow.f64 k m) a)) (pow.f64 k 5))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (+.f64 (/.f64 (*.f64 -980 (*.f64 (pow.f64 k m) a)) (pow.f64 k 5)) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4))))","(/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2))","(/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a))","(*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k))","(*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)))","(+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k)))))))))","(fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k)))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k))))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))","(fma.f64 -1 (/.f64 (*.f64 -99 (*.f64 a (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))) (pow.f64 k 4)) (+.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))) (/.f64 (*.f64 k k) a)) (*.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (exp.f64 (neg.f64 (*.f64 m (neg.f64 (log.f64 k))))))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m) k))) (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (neg.f64 (neg.f64 (log.f64 k)))) m))) (pow.f64 k 4)))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4)))","(+.f64 (*.f64 -10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 3))) (+.f64 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 2)) (+.f64 (*.f64 10 (/.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5))) (+.f64 (*.f64 10 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 5))) (*.f64 -1 (/.f64 (+.f64 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))) (*.f64 -100 (*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m))))) (pow.f64 k 4)))))))","(+.f64 (fma.f64 -10 (/.f64 a (/.f64 (pow.f64 k 3) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (/.f64 a (/.f64 (*.f64 k k) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m)))) (fma.f64 10 (/.f64 a (/.f64 (pow.f64 k 5) (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (fma.f64 10 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 5)) (neg.f64 (/.f64 (*.f64 -99 (*.f64 a (pow.f64 (exp.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 k))))) m))) (pow.f64 k 4))))))","(+.f64 (fma.f64 -10 (*.f64 (/.f64 a (pow.f64 k 3)) (pow.f64 (exp.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) m)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) m) k))) (+.f64 (/.f64 (*.f64 99 (*.f64 a (pow.f64 (exp.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 4)) (fma.f64 10 (*.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (exp.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) m)) (/.f64 (*.f64 -990 (*.f64 a (pow.f64 (exp.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 k)))) m))) (pow.f64 k 5)))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m) (*.f64 (/.f64 -99 (pow.f64 k 5)) (*.f64 a (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)))) (/.f64 (*.f64 (*.f64 99 a) (pow.f64 (*.f64 -1 (pow.f64 (/.f64 -1 k) -1)) m)) (pow.f64 k 4))))","(+.f64 (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (pow.f64 k m) (/.f64 a (*.f64 k k)))) (fma.f64 10 (fma.f64 (/.f64 a (pow.f64 k 5)) (pow.f64 k m) (*.f64 (/.f64 -99 (pow.f64 k 5)) (*.f64 (pow.f64 k m) a))) (/.f64 (*.f64 (*.f64 (pow.f64 k m) a) 99) (pow.f64 k 4))))","(/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 a (fma.f64 k (+.f64 k 10) 1))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))","(+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m))))","(+.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m)))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10))))))","(fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m)))))","(fma.f64 1/2 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2)))) (+.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m))))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/2 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2))))) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (+.f64 1 (*.f64 k (+.f64 k 10))))) (/.f64 (*.f64 a (*.f64 (log.f64 k) m)) (+.f64 1 (*.f64 k (+.f64 k 10)))))))","(fma.f64 1/2 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m)))) (+.f64 (/.f64 a (+.f64 1 (*.f64 k (+.f64 k 10)))) (fma.f64 1/6 (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (/.f64 a (/.f64 (+.f64 1 (*.f64 k (+.f64 k 10))) (*.f64 (log.f64 k) m))))))","(+.f64 (fma.f64 1/6 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m))) (fma.f64 1/2 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2)))) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(fma.f64 1/2 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2))))) (fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/6 (*.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(/.f64 (*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(/.f64 (*.f64 (pow.f64 k m) a) (+.f64 1 (*.f64 k (+.f64 k 10))))","(*.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)) a)","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 k)) m))) a)","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","(*.f64 a (exp.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 k)))) m)))","(*.f64 (pow.f64 k m) a)","a","(+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))","(+.f64 a (*.f64 (*.f64 (log.f64 k) m) a))","(fma.f64 (*.f64 (log.f64 k) m) a a)","(+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m))))","(fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 a (*.f64 (*.f64 (log.f64 k) m) a)))","(fma.f64 (*.f64 a 1/2) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2))) (fma.f64 (*.f64 (log.f64 k) m) a a))","(*.f64 a (+.f64 (fma.f64 (log.f64 k) m 1) (*.f64 m (*.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) 1/2))))","(+.f64 (*.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3)))) (+.f64 (*.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (pow.f64 m 2)))) (+.f64 a (*.f64 a (*.f64 (log.f64 k) m)))))","(fma.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (fma.f64 1/2 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 2) (*.f64 m m))) (+.f64 a (*.f64 (*.f64 (log.f64 k) m) a))))","(fma.f64 1/6 (*.f64 a (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (fma.f64 (*.f64 a 1/2) (*.f64 m (*.f64 m (pow.f64 (log.f64 k) 2))) (fma.f64 (*.f64 (log.f64 k) m) a a)))","(fma.f64 a (*.f64 1/6 (*.f64 (pow.f64 (log.f64 k) 3) (pow.f64 m 3))) (*.f64 a (+.f64 (fma.f64 (log.f64 k) m 1) (*.f64 m (*.f64 (*.f64 m (pow.f64 (log.f64 k) 2)) 1/2)))))","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)","(*.f64 (exp.f64 (*.f64 (log.f64 k) m)) a)","(*.f64 (pow.f64 k m) a)"]],"stop":[["node limit",1]],"time":53.375,"type":"simplify"},{"compiler":[[2669,1549]],"time":26.541015625,"type":"eval"},{"alts":[["(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","done",1.2909145139418],["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","done",1.2466182248680318],["(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k)))","fresh",19.862490826379034],["(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","fresh",28.22465058204186]],"compiler":[[18,13],[15,10],[18,12],[24,16]],"count":[[117,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[113,1],"picked":[1,1]}],"min-error":[0.0234375],"time":29.14892578125,"type":"prune"},{"accuracy":[0.046875],"baseline":[1.2466182248680318],"branch":[["a",1.2466182248680318,1],["k",0.046875,2],["m",1.2466182248680318,1],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))",1.2466182248680318,1]],"compiler":[[4,3],[4,3],[4,3],[18,12],[187,107]],"count":[[10,2]],"inputs":[["(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k)))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (/.f64 a (fma.f64 k (+.f64 k 10) 1)))","(*.f64 a (pow.f64 (cbrt.f64 (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1))) 3))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(*.f64 (/.f64 (pow.f64 k m) (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))) (/.f64 a (sqrt.f64 (fma.f64 k (+.f64 10 k) 1))))","(fma.f64 (/.f64 a (fma.f64 k (+.f64 k 10) 1)) (*.f64 (log.f64 k) m) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 (fma.f64 k (+.f64 k 10) 1) (pow.f64 (log.f64 k) 2))) (*.f64 m m)) (/.f64 a (fma.f64 k (+.f64 k 10) 1))))","(*.f64 a (/.f64 (pow.f64 k m) (fma.f64 k (+.f64 k 10) 1)))","(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))"]],"link":["."],"name":["Falkner and Boettcher, Appendix A"],"oracle":[45.94324311783885],"outputs":[["(/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1))","(*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k)))"]],"time":24.587890625,"times":[["a",4.509033203125],["k",9.007080078125],["m",4.697998046875],["(/.f64 (*.f64 a (pow.f64 k m)) (+.f64 (+.f64 1 (*.f64 10 k)) (*.f64 k k)))",3.301025390625]],"type":"regimes"},{"bstep":[[465.69110379783405,3909.9677648539096,3.732177734375]],"compiler":[[19,13],[16,11],[20,14],[4,3]],"method":["binary-search"],"time":3.85302734375,"type":"bsearch"},{"compiler":[[34,21]],"egraph":[[1,29,45,6.6334e-5],[0,22,45,3.9125e-5]],"inputs":[["(if (<=.f64 k 1000) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 k 1000) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (+.f64 (/.f64 -10 k) 1) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))))","(if (<=.f64 k 1000) (/.f64 (*.f64 (pow.f64 k m) a) (fma.f64 k (+.f64 k 10) 1)) (*.f64 (+.f64 1 (/.f64 -10 k)) (*.f64 (/.f64 a k) (/.f64 (pow.f64 k m) k))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.6240234375,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[34,21]],"remove-preprocessing":[[]],"time":12.887939453125,"type":"end"}]