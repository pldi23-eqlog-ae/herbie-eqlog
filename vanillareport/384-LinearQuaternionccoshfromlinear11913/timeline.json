[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.49170696549117565,0.29560954472981393,0.21268348977901042],[11,0.48390209302306175,0.3102436806075275,0.20585422636941075],[10,0.48390209302306175,0.3395119523629546,0.17658595461398363],[9,0.46829234808683395,0.36682900600135326,0.16487864591181278],[8,0.46829234808683395,0.42146311327815056,0.11024453863501549],[7,0.43707285821437836,0.46829234808683395,0.09463479369878769],[6,0.43707285821437836,0.5619508177042007,0.0009763240814208984],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":64.539794921875,"type":"analyze"},{"outcomes":[["body",512,"invalid",112.998779296875,1045],["body",2048,"invalid",0.340087890625,1],["body",256,"invalid",91.630126953125,1606],["body",1024,"valid",126.172607421875,638],["body",1024,"invalid",353.732666015625,2002],["body",512,"valid",76.172607421875,695],["body",2048,"valid",0.43994140625,1],["body",256,"valid",363.3193359375,6922]],"time":1138.4560546875,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,2.292e-6],[7,7648,22,0.029270209],[6,2905,22,0.019188],[5,920,22,0.0067669589999999995],[4,344,22,0.0024455839999999998],[3,148,22,0.001015959],[2,67,22,0.00046675000000000004],[1,28,22,0.000208042],[0,11,22,7.6542e-5]],"inputs":[["0","1"],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","(/.f64 (*.f64 (sin.f64 y) (sinh.f64 x)) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","(*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))","(*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))","(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 y) (sinh.f64 x)) y)","(/.f64 (sin.f64 y) (/.f64 y (sinh.f64 x)))","(*.f64 (/.f64 (sin.f64 y) y) (sinh.f64 x))","(*.f64 (sinh.f64 x) (/.f64 (sin.f64 y) y))","(*.f64 (sin.f64 y) (/.f64 (sinh.f64 x) y))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":52.08203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,5818,11,0.024853083999999998],[6,1474,11,0.012983459],[5,473,11,0.0038683759999999998],[4,178,11,0.001622126],[3,79,11,0.0005942510000000001],[2,37,11,0.00028612600000000005],[1,16,11,0.000137667],[0,7,11,5.4542e-5]],"inputs":[["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","(*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))","(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) x))","(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))"]],"stop":[["node limit",1]],"time":36.736083984375,"type":"simplify"},{"compiler":[[16,8]],"time":0.2939453125,"type":"eval"},{"alts":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","next",0.1484375],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","fresh",12.93165753032931]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.06640625],"time":1.220947265625,"type":"prune"},{"compiler":[[19,6]],"locations":[["(/.f64 (sinh.f64 y) x)",0.0078125,true],["(sin.f64 x)",0.0234375,true],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))",0.1484375,true]],"time":5.044921875,"type":"localize"},{"count":[[3,52]],"series":[["(/.f64 (sinh.f64 y) x)","x","-inf",0.328857421875],["(/.f64 (sinh.f64 y) x)","x","inf",0.285888671875],["(/.f64 (sinh.f64 y) x)","x","0",0.3310546875],["(/.f64 (sinh.f64 y) x)","y","-inf",0.335205078125],["(/.f64 (sinh.f64 y) x)","y","inf",0.379150390625],["(/.f64 (sinh.f64 y) x)","y","0",0.317138671875],["(sin.f64 x)","x","-inf",0.133056640625],["(sin.f64 x)","x","inf",0.1669921875],["(sin.f64 x)","x","0",0.91796875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","y","-inf",0.93017578125],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","y","inf",1.18701171875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","y","0",0.990966796875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","x","-inf",0.678955078125],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","x","inf",1.029052734375],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","x","0",0.76806640625]],"time":8.998046875,"type":"series"},{"count":[[3,69]],"egraph":[[2,2027,20,0.019306083],[1,149,20,0.002657333],[0,7,20,0.0001685]],"inputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","(sin.f64 x)","(/.f64 (sinh.f64 y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sinh.f64 y)) (sin.f64 x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (neg.f64 (sinh.f64 y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sinh.f64 y) x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 (/.f64 (sinh.f64 y) x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3) (pow.f64 (sin.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (cbrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (sqrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sinh.f64 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sinh.f64 y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sinh.f64 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sinh.f64 y) x)) (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) x)) 2) (cbrt.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sinh.f64 y) x)) (sqrt.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sinh.f64 y)) (*.f64 (sqrt.f64 (sinh.f64 y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sinh.f64 y)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (sinh.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) 1) (/.f64 (cbrt.f64 (sinh.f64 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sinh.f64 y)) 1) (/.f64 (sqrt.f64 (sinh.f64 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sinh.f64 y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sinh.f64 y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (sinh.f64 y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (sinh.f64 y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (sinh.f64 y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (sinh.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sinh.f64 y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sinh.f64 y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sinh.f64 y) x)))))))"]],"rules":[["egg-rr",31],["egg-rr",16],["egg-rr",22]],"stop":[["node limit",1]],"time":41.64404296875,"type":"rewrite"},{"count":[[121,103]],"egraph":[[4,6901,955,0.025989291],[3,2342,955,0.014257583],[2,644,994,0.0048995],[1,236,1074,0.00153425],[0,86,1076,0.000428875]],"inputs":[["(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(/.f64 (*.f64 y (sin.f64 x)) x)","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(+.f64 (*.f64 1/5040 (/.f64 (pow.f64 y 7) x)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y)))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (*.f64 x x) -1/12)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 -1/12 (*.f64 x x))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (*.f64 (*.f64 1/240 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/240) (pow.f64 x 4) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (*.f64 x x) -1/12))))","(fma.f64 (*.f64 x x) (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 1/240 (pow.f64 x 4)))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (+.f64 (*.f64 1/240 (pow.f64 x 4)) (*.f64 -1/12 (*.f64 x x)))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (fma.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 6)) (*.f64 (*.f64 1/240 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4)))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 4)) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (pow.f64 x 6) -1/10080)))))","(+.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 -1/12 (*.f64 x x)))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 1/240 (pow.f64 x 4)) (*.f64 -1/10080 (pow.f64 x 6)))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (+.f64 1/2 (*.f64 -1/12 (*.f64 x x))) (*.f64 (pow.f64 x 4) (+.f64 (*.f64 (*.f64 x x) -1/10080) 1/240))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 y (sin.f64 x)) x)","(/.f64 y (/.f64 x (sin.f64 x)))","(/.f64 (sin.f64 x) (/.f64 x y))","(*.f64 (sin.f64 x) (/.f64 y x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (/.f64 (sin.f64 x) (/.f64 x y)))","(fma.f64 1/6 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (*.f64 (sin.f64 x) (/.f64 y x)))","(*.f64 (sin.f64 x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x)))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (/.f64 (sin.f64 x) (/.f64 x y))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (fma.f64 1/120 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 5) x)) (*.f64 (sin.f64 x) (/.f64 y x))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (*.f64 (sin.f64 x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 y x))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (fma.f64 1/5040 (*.f64 (/.f64 (pow.f64 y 7) x) (sin.f64 x)) (/.f64 (sin.f64 x) (/.f64 x y)))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (fma.f64 1/120 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/5040 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 7) x)) (*.f64 (sin.f64 x) (/.f64 y x)))))","(+.f64 (*.f64 (sin.f64 x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x))) (*.f64 (sin.f64 x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 (*.f64 1/5040 (pow.f64 y 7)) x))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 (sin.f64 x) x))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(fma.f64 -1/6 (pow.f64 x 3) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 1/120 (pow.f64 x 5) x))","(fma.f64 1/120 (pow.f64 x 5) (fma.f64 -1/6 (pow.f64 x 3) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 -1/5040 (pow.f64 x 7) (fma.f64 1/120 (pow.f64 x 5) x)))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 1/120 (pow.f64 x 5) (fma.f64 -1/5040 (pow.f64 x 7) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x)))","(+.f64 (/.f64 y x) (/.f64 (*.f64 1/6 (pow.f64 y 3)) x))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(+.f64 (/.f64 y x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 y x)))","(+.f64 (*.f64 1/5040 (/.f64 (pow.f64 y 7) x)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (+.f64 (/.f64 y x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(+.f64 (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (/.f64 y x)))","(fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 y x))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)"]],"stop":[["node limit",1]],"time":48.965087890625,"type":"simplify"},{"compiler":[[1399,622]],"time":14.429931640625,"type":"eval"},{"alts":[["(*.f64 (sin.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (sinh.f64 y) x))))","fresh",0.5412065430532609],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","fresh",12.93165753032931],["(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","fresh",0.7209265645824241],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","next",0.205410009768442],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","done",0.1484375]],"compiler":[[21,15],[9,6],[9,6],[11,8],[9,6],[21,15],[9,6],[9,6],[11,8]],"count":[[105,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[103,4],"picked":[1,1]}],"min-error":[0.0078125],"time":21.577880859375,"type":"prune"},{"compiler":[[27,14]],"locations":[["(sin.f64 x)",0.0234375,false],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))",0.1484375,true],["(*.f64 (/.f64 1 x) (sinh.f64 y))",0.22265625,true]],"time":7.7080078125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","y","-inf",0.1650390625],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","y","inf",0.18017578125],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","y","0",0.18701171875],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","x","-inf",0.180908203125],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","x","inf",0.1650390625],["(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","x","0",0.222900390625],["(*.f64 (/.f64 1 x) (sinh.f64 y))","y","-inf",0.213134765625],["(*.f64 (/.f64 1 x) (sinh.f64 y))","y","inf",0.162109375],["(*.f64 (/.f64 1 x) (sinh.f64 y))","y","0",0.181884765625],["(*.f64 (/.f64 1 x) (sinh.f64 y))","x","-inf",0.1669921875],["(*.f64 (/.f64 1 x) (sinh.f64 y))","x","inf",0.183837890625],["(*.f64 (/.f64 1 x) (sinh.f64 y))","x","0",0.203125]],"time":2.379150390625,"type":"series"},{"count":[[2,46]],"egraph":[[2,2287,17,0.020951499],[1,183,17,0.0031120410000000003],[0,9,17,0.000237291]],"inputs":[["(*.f64 (/.f64 1 x) (sinh.f64 y))","(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sinh.f64 y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sinh.f64 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (/.f64 x (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (sinh.f64 y)) (/.f64 x (sqrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (sinh.f64 y)) (*.f64 x 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sinh.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 2 (sinh.f64 y))) (*.f64 (neg.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) 1) (*.f64 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) -1) (*.f64 2 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sinh.f64 y) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sinh.f64 y) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sinh.f64 y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (sinh.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) (/.f64 1 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sinh.f64 y) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sinh.f64 y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 (pow.f64 x -2) x) (pow.f64 (sinh.f64 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sinh.f64 y) 3) (/.f64 (pow.f64 x -2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sinh.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sinh.f64 y) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sinh.f64 y) (sin.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sinh.f64 y) x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sinh.f64 y) x) 3) (pow.f64 (sin.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 (/.f64 (sinh.f64 y) x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sinh.f64 y) x) (sin.f64 x))))))))"]],"rules":[["egg-rr",16],["egg-rr",30]],"stop":[["node limit",1]],"time":40.633056640625,"type":"rewrite"},{"count":[[94,73]],"egraph":[[4,6944,901,0.024222],[3,1896,901,0.012842375],[2,536,948,0.004044917],[1,196,1028,0.001315709],[0,73,1030,0.000371292]],"inputs":[["(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(+.f64 (*.f64 1/5040 (/.f64 (pow.f64 y 7) x)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(/.f64 (*.f64 y (sin.f64 x)) x)","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x)))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(+.f64 (/.f64 y x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 y x)))","(+.f64 (*.f64 1/5040 (/.f64 (pow.f64 y 7) x)) (+.f64 (/.f64 y x) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 y 3) x)) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (+.f64 (/.f64 y x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x)))))","(+.f64 (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 1/120 (/.f64 (pow.f64 y 5) x))) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (/.f64 y x)))","(fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 y x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) x) (/.f64 y x))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x)","(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y)))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (*.f64 x x) -1/12)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 x (*.f64 x -1/12))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 x (*.f64 x -1/12) 1/2))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 4)))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (pow.f64 x 4) 1/240))))","(fma.f64 (*.f64 x x) (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 1/240 (pow.f64 x 4)))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (fma.f64 x (*.f64 x -1/12) (*.f64 1/240 (pow.f64 x 4)))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (fma.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 6)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 4))))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x x)) (fma.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/240) (pow.f64 x 4) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (pow.f64 x 6) -1/10080)))))","(+.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 x (*.f64 x -1/12)))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 1/240 (pow.f64 x 4)) (*.f64 -1/10080 (pow.f64 x 6)))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (fma.f64 x (*.f64 x -1/12) 1/2) (fma.f64 1/240 (pow.f64 x 4) (*.f64 -1/10080 (pow.f64 x 6)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(/.f64 (*.f64 y (sin.f64 x)) x)","(/.f64 y (/.f64 x (sin.f64 x)))","(/.f64 (sin.f64 x) (/.f64 x y))","(*.f64 (/.f64 y x) (sin.f64 x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (/.f64 y (/.f64 x (sin.f64 x))))","(fma.f64 (/.f64 y x) (sin.f64 x) (*.f64 (*.f64 (/.f64 1/6 x) (pow.f64 y 3)) (sin.f64 x)))","(*.f64 (sin.f64 x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x)))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 (/.f64 y x) (sin.f64 x) (fma.f64 1/120 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)) (*.f64 (*.f64 (/.f64 1/6 x) (pow.f64 y 3)) (sin.f64 x))))","(fma.f64 (/.f64 y x) (sin.f64 x) (*.f64 (sin.f64 x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 y 5) (/.f64 1/120 x)))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 1/6 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) (fma.f64 (/.f64 y x) (sin.f64 x) (fma.f64 1/120 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)) (*.f64 (/.f64 (pow.f64 y 7) x) (*.f64 1/5040 (sin.f64 x))))))","(+.f64 (*.f64 (sin.f64 x) (fma.f64 1/6 (/.f64 (pow.f64 y 3) x) (/.f64 y x))) (*.f64 (sin.f64 x) (fma.f64 1/120 (/.f64 (pow.f64 y 5) x) (/.f64 (pow.f64 y 7) (/.f64 x 1/5040)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(/.f64 (*.f64 (*.f64 1/2 (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) x) (sin.f64 x))"]],"stop":[["node limit",1]],"time":46.2958984375,"type":"simplify"},{"compiler":[[1339,688]],"time":14.235107421875,"type":"eval"},{"alts":[["(*.f64 (sin.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (sinh.f64 y) x))))","fresh",0.5412065430532609],["(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","fresh",0.7209265645824241],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","next",0.11328125],["(*.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) (*.f64 (/.f64 1 x) (sinh.f64 y)))","fresh",0.22722626953688405],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","done",0.1484375]],"compiler":[[21,15],[9,6],[13,10],[13,10],[9,6],[21,15],[9,6],[13,10],[13,10]],"count":[[101,5]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[96,2],"picked":[1,0]}],"min-error":[0],"time":20.7998046875,"type":"prune"},{"compiler":[[37,16]],"locations":[["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)",0.0078125,true],["(sin.f64 x)",0.0234375,false],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))",0.0625,true],["(/.f64 (sin.f64 x) x)",0.16015625,true]],"time":8.080078125,"type":"localize"},{"count":[[3,52]],"series":[["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","y","-inf",0.43896484375],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","y","inf",0.18994140625],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","y","0",0.18798828125],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","x","-inf",0.19091796875],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","x","inf",0.1708984375],["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","x","0",0.216064453125],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","y","-inf",0.337890625],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","y","inf",0.35693359375],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","y","0",0.3759765625],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","x","-inf",0.31396484375],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","x","inf",0.35693359375],["(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","x","0",0.37109375],["(/.f64 (sin.f64 x) x)","x","-inf",0.298095703125],["(/.f64 (sin.f64 x) x)","x","inf",0.158203125],["(/.f64 (sin.f64 x) x)","x","0",0.258056640625]],"time":4.43994140625,"type":"series"},{"count":[[3,120]],"egraph":[[2,2971,31,0.026075749],[1,221,31,0.003979666],[0,10,37,0.000294333]],"inputs":[["(/.f64 (sin.f64 x) x)","(*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))","(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (*.f64 (cbrt.f64 (sin.f64 x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2) (cbrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (*.f64 (sqrt.f64 (sin.f64 x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 x) x)) (sqrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) 1) (/.f64 (sqrt.f64 (sin.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (sin.f64 x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (*.f64 x x))) (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (sin.f64 x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (sin.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (sin.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (sin.f64 x) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (sin.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (sin.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (sin.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (sin.f64 x) x)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (sinh.f64 y)) (/.f64 (sin.f64 x) x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (sinh.f64 y)) (/.f64 (sin.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 x) (/.f64 x (*.f64 2 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (sinh.f64 y)) (/.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y))) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y))) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 x)) (*.f64 2 (sinh.f64 y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) (neg.f64 (sin.f64 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 (sin.f64 x) x) 2) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 2) (sinh.f64 y)) (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 x) x)) (sinh.f64 y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 x) x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 x) x)) (sinh.f64 y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 x) x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (sinh.f64 y)) (*.f64 (/.f64 (sin.f64 x) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 2) (*.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 2) (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) (*.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 x) x) (neg.f64 (*.f64 2 (sinh.f64 y)))) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 x) x) 2) (*.f64 (sinh.f64 y) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (sin.f64 x) x) 2) (*.f64 2 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 (sinh.f64 y)) (/.f64 (sin.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 1 (sinh.f64 y)) (/.f64 (sin.f64 x) x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 (sinh.f64 y)) (/.f64 x (sin.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (sinh.f64 y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) (cbrt.f64 (sinh.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 (sin.f64 x) x)) (sqrt.f64 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 x) x)) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (sinh.f64 y))) 1) 1))))))"]],"rules":[["egg-rr",43],["egg-rr",33],["egg-rr",44]],"stop":[["node limit",1]],"time":50.587158203125,"type":"rewrite"},{"count":[[172,163]],"egraph":[[3,2974,1107,0.017114084],[2,783,1162,0.006051417999999999],[1,266,1262,0.0017765839999999999],[0,94,1266,0.000477834]],"inputs":[["1","(+.f64 1 (*.f64 -1/6 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (*.f64 1/120 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/5040 (pow.f64 x 6)) (*.f64 1/120 (pow.f64 x 4)))))","(-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2)))) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))) (*.f64 -1/5040 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6)))))) (/.f64 1 (exp.f64 y)))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/2520 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(/.f64 (*.f64 y (sin.f64 x)) x)","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/6 (pow.f64 x 2)))","(+.f64 1 (*.f64 -1/6 (*.f64 x x)))","(fma.f64 -1/6 (*.f64 x x) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (*.f64 1/120 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/6 (*.f64 x x) (*.f64 1/120 (pow.f64 x 4))))","(fma.f64 -1/6 (*.f64 x x) (fma.f64 1/120 (pow.f64 x 4) 1))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/5040 (pow.f64 x 6)) (*.f64 1/120 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 x x) (fma.f64 -1/5040 (pow.f64 x 6) (*.f64 1/120 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 x x) (fma.f64 1/120 (pow.f64 x 4) (*.f64 -1/5040 (pow.f64 x 6)))))","(+.f64 1 (fma.f64 1/120 (pow.f64 x 4) (fma.f64 -1/6 (*.f64 x x) (*.f64 -1/5040 (pow.f64 x 6)))))","(-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))","(-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2)))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (*.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (exp.f64 (neg.f64 y))))","(-.f64 (fma.f64 (*.f64 -1/6 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 x x) (exp.f64 y)) (exp.f64 (neg.f64 y)))","(*.f64 (fma.f64 -1/6 (*.f64 x x) 1) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 1/120 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4))) (exp.f64 (neg.f64 y))))","(+.f64 (fma.f64 (*.f64 -1/6 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 x x) (exp.f64 y)) (-.f64 (*.f64 1/120 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (exp.f64 (neg.f64 y))))","(+.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/6 (*.f64 x x) (*.f64 1/120 (pow.f64 x 4)))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/6 (*.f64 x x) (fma.f64 1/120 (pow.f64 x 4) 1)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))) (*.f64 -1/5040 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6)))))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/120 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 -1/5040 (*.f64 (pow.f64 x 6) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))) (exp.f64 (neg.f64 y))))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 x (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (fma.f64 1/120 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 -1/5040 (*.f64 (pow.f64 x 6) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))) (exp.f64 (neg.f64 y))))","(+.f64 (*.f64 (fma.f64 -1/6 (*.f64 x x) 1) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 1/120 (pow.f64 x 4) (*.f64 -1/5040 (pow.f64 x 6)))))","(+.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 1/120 (pow.f64 x 4) (fma.f64 -1/6 (*.f64 x x) (*.f64 -1/5040 (pow.f64 x 6))))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))","(*.f64 2 (/.f64 y (/.f64 x (sin.f64 x))))","(*.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)))","(*.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)))","(*.f64 (/.f64 y x) (*.f64 2 (sin.f64 x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))","(fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (/.f64 (*.f64 1/3 (pow.f64 y 3)) (/.f64 x (sin.f64 x))))","(fma.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)) (*.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x))))","(*.f64 (sin.f64 x) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) x))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 1/60 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (/.f64 (*.f64 1/3 (pow.f64 y 3)) (/.f64 x (sin.f64 x)))))","(fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (fma.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)) (*.f64 1/60 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)))))","(fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (*.f64 (sin.f64 x) (+.f64 (/.f64 1/60 (/.f64 x (pow.f64 y 5))) (*.f64 2 (/.f64 y x)))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/2520 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/2520 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x)))))))","(fma.f64 1/60 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (fma.f64 1/2520 (*.f64 (/.f64 (pow.f64 y 7) x) (sin.f64 x)) (fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (/.f64 (*.f64 1/3 (pow.f64 y 3)) (/.f64 x (sin.f64 x))))))","(fma.f64 1/60 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)) (fma.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)) (fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (*.f64 (*.f64 1/2520 (/.f64 (pow.f64 y 7) x)) (sin.f64 x)))))","(+.f64 (*.f64 (sin.f64 x) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) x)))) (*.f64 (sin.f64 x) (+.f64 (/.f64 1/60 (/.f64 x (pow.f64 y 5))) (*.f64 1/2520 (/.f64 (pow.f64 y 7) x)))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x (sin.f64 x)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 (sin.f64 x) x))","(*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2)","(fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y)))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (*.f64 -1/12 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 x x)))","(fma.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2 (*.f64 (*.f64 x x) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) -1/12)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 x (*.f64 x -1/12))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4)))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 1/240 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4))))","(fma.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2 (fma.f64 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/240 (*.f64 (*.f64 x x) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) -1/12))))","(fma.f64 (*.f64 x x) (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 (pow.f64 x 4) 1/240))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (+.f64 (*.f64 x (*.f64 x -1/12)) (*.f64 (pow.f64 x 4) 1/240))))","(+.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) (+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6))) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))))","(fma.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 -1/12 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 -1/10080 (*.f64 (pow.f64 x 6) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 1/240 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4)))))","(fma.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2 (fma.f64 (*.f64 x (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) -1/12 (fma.f64 (*.f64 (pow.f64 x 6) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -1/10080 (*.f64 (pow.f64 x 4) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/240)))))","(+.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 1/2 (*.f64 x (*.f64 x -1/12)))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 (pow.f64 x 4) 1/240) (*.f64 (pow.f64 x 6) -1/10080))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (+.f64 (*.f64 x (*.f64 x -1/12)) (*.f64 (pow.f64 x 6) -1/10080)) (+.f64 1/2 (*.f64 (pow.f64 x 4) 1/240))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(/.f64 (*.f64 y (sin.f64 x)) x)","(/.f64 y (/.f64 x (sin.f64 x)))","(*.f64 (/.f64 y x) (sin.f64 x))","(*.f64 (sin.f64 x) (/.f64 y x))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))","(fma.f64 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) 1/6 (*.f64 (/.f64 y x) (sin.f64 x)))","(fma.f64 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) 1/6 (*.f64 (sin.f64 x) (/.f64 y x)))","(*.f64 (sin.f64 x) (+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x)))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) 1/6 (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (*.f64 (/.f64 y x) (sin.f64 x))))","(fma.f64 1/120 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)) (fma.f64 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) 1/6 (*.f64 (sin.f64 x) (/.f64 y x))))","(fma.f64 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) 1/6 (*.f64 (sin.f64 x) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 5) (/.f64 x 1/120)))))","(+.f64 (*.f64 1/6 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (+.f64 (*.f64 1/120 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/5040 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (/.f64 (*.f64 y (sin.f64 x)) x))))","(fma.f64 1/6 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (fma.f64 1/120 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/5040 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)) 1/6 (fma.f64 1/120 (*.f64 (/.f64 (pow.f64 y 5) x) (sin.f64 x)) (fma.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (sin.f64 x)) 1/5040 (*.f64 (/.f64 y x) (sin.f64 x)))))","(fma.f64 1/120 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 5)) (fma.f64 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) 1/6 (fma.f64 (/.f64 y x) (sin.f64 x) (*.f64 (*.f64 1/5040 (/.f64 (pow.f64 y 7) x)) (sin.f64 x)))))","(+.f64 (*.f64 (sin.f64 x) (+.f64 (/.f64 y x) (*.f64 1/6 (/.f64 (pow.f64 y 3) x)))) (*.f64 (sin.f64 x) (+.f64 (/.f64 (pow.f64 y 5) (/.f64 x 1/120)) (/.f64 (pow.f64 y 7) (/.f64 x 1/5040)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x))","(*.f64 (/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) 1/2)","(/.f64 (*.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 1/2) (sin.f64 x)) x)","(*.f64 (/.f64 (sin.f64 x) x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))"]],"stop":[["node limit",1]],"time":40.969970703125,"type":"simplify"},{"compiler":[[3014,1594]],"time":31.5,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 (/.f64 1 x) (sin.f64 x)) (*.f64 2 (sinh.f64 y))) 2)","fresh",0.209316259768442],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","done",0.1484375],["(/.f64 (*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y))) 2)","next",0.1171875],["(/.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2) (cbrt.f64 (/.f64 (sin.f64 x) x))) (*.f64 2 (sinh.f64 y))) 2)","fresh",0.20710761722130416],["(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","fresh",0.7209265645824241]],"compiler":[[15,12],[9,6],[15,12],[22,14],[9,6],[15,12],[15,12],[22,14],[9,6]],"count":[[191,5]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[186,3],"picked":[1,0]}],"min-error":[0],"time":52.0439453125,"type":"prune"},{"compiler":[[50,18]],"locations":[["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))",0.0625,true],["(expm1.f64 (log1p.f64 (sin.f64 x)))",0.15625,true],["(/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x)",0.16015625,true],["(log1p.f64 (sin.f64 x))",0.33282321485331706,true]],"time":10.841064453125,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","y","-inf",0.199951171875],["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","y","inf",0.1630859375],["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","y","0",0.2177734375],["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","x","-inf",0.162109375],["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","x","inf",0.172119140625],["(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))","x","0",0.204833984375],["(expm1.f64 (log1p.f64 (sin.f64 x)))","x","-inf",0.135009765625],["(expm1.f64 (log1p.f64 (sin.f64 x)))","x","inf",0.159912109375],["(expm1.f64 (log1p.f64 (sin.f64 x)))","x","0",0.15087890625],["(/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x)","x","-inf",0.154052734375],["(/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x)","x","inf",0.18505859375],["(/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x)","x","0",0.175048828125],["(log1p.f64 (sin.f64 x))","x","-inf",11.382080078125],["(log1p.f64 (sin.f64 x))","x","inf",16.723876953125],["(log1p.f64 (sin.f64 x))","x","0",0.364990234375]],"time":30.780029296875,"type":"series"},{"count":[[4,149]],"egraph":[[2,2691,28,0.024748249],[1,212,28,0.003655666],[0,11,28,0.000309625]],"inputs":[["(log1p.f64 (sin.f64 x))","(/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x)","(expm1.f64 (log1p.f64 (sin.f64 x)))","(*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 x) 1)) 2)) (log.f64 (cbrt.f64 (+.f64 (sin.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (sin.f64 x) 1))) (log.f64 (sqrt.f64 (+.f64 (sin.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (sin.f64 x) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (sin.f64 x) 2) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (sin.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (*.f64 (cos.f64 x) (cos.f64 x))) (log.f64 (-.f64 1 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 x))) 2) (cbrt.f64 (log1p.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (sin.f64 x))) (sqrt.f64 (log1p.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (sin.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (sin.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (sin.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (log1p.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (log1p.f64 (sin.f64 x)))) 2)) (cbrt.f64 (log.f64 (log1p.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (log1p.f64 (sin.f64 x))))) (sqrt.f64 (log.f64 (log1p.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (sin.f64 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (sin.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (sin.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (sin.f64 x)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log1p.f64 (sin.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log1p.f64 (sin.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log1p.f64 (sin.f64 x))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 (sin.f64 x) 1) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (*.f64 (cbrt.f64 (sin.f64 x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2) (cbrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (*.f64 (sqrt.f64 (sin.f64 x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 x) x)) (sqrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) 1) (/.f64 (sqrt.f64 (sin.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (sin.f64 x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (sin.f64 x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (sin.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (sin.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (sin.f64 x) x))) 2)) (cbrt.f64 (log.f64 (/.f64 (sin.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (sin.f64 x) x)))) (sqrt.f64 (log.f64 (/.f64 (sin.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (sin.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (sin.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (sin.f64 x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (sin.f64 x) x)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sin.f64 x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sin.f64 x) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 x))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 x))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (cbrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (sqrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (sin.f64 x) 1) 3) 1) (+.f64 (pow.f64 (+.f64 (sin.f64 x) 1) 2) (+.f64 1 (*.f64 (+.f64 (sin.f64 x) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (sin.f64 x) 1) 2) 1) (+.f64 (+.f64 (sin.f64 x) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sin.f64 x))) 2)) (cbrt.f64 (log.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sin.f64 x)))) (sqrt.f64 (log.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 x)))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sin.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (sin.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sin.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (sin.f64 x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (sin.f64 x) 1)) 2) (cbrt.f64 (+.f64 (sin.f64 x) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (sin.f64 x) 1)) (sqrt.f64 (+.f64 (sin.f64 x) 1)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sinh.f64 y)) (/.f64 (*.f64 (sin.f64 x) 2) x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sinh.f64 y)) (/.f64 (*.f64 (sin.f64 x) 2) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sinh.f64 y)) (/.f64 (*.f64 (sin.f64 x) 2) x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sinh.f64 y)) (/.f64 (*.f64 (sin.f64 x) 2) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 x) (/.f64 x (*.f64 2 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (sinh.f64 y)) (/.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 x)) (*.f64 2 (sinh.f64 y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) (neg.f64 (sin.f64 x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sin.f64 x) 2) x) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (*.f64 (sin.f64 x) 2) (sinh.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 2)) (cbrt.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))) (sqrt.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sinh.f64 y)) (/.f64 (*.f64 (sin.f64 x) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y)))) 1) 1))))))"]],"rules":[["egg-rr",36],["egg-rr",36],["egg-rr",48],["egg-rr",29]],"stop":[["node limit",1]],"time":53.1279296875,"type":"rewrite"},{"count":[[209,190]],"egraph":[[4,7870,768,0.028055],[3,2672,770,0.016097541],[2,726,794,0.005516458],[1,257,838,0.001658833],[0,93,842,0.00044725]],"inputs":[["x","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) x)","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/12 (pow.f64 x 4)) x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log.f64 (+.f64 1 (sin.f64 x)))","1","(+.f64 1 (*.f64 -1/6 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (*.f64 1/120 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/5040 (pow.f64 x 6)) (*.f64 1/120 (pow.f64 x 4)))))","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2)))) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))) (/.f64 1 (exp.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))) (*.f64 -1/5040 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6)))))) (/.f64 1 (exp.f64 y)))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/2520 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1/2 (pow.f64 x 2)) x)","(fma.f64 -1/2 (*.f64 x x) x)","(fma.f64 x (*.f64 x -1/2) x)","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/2 (*.f64 x x) x))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 x (*.f64 x -1/2) x))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/12 (pow.f64 x 4)) x)))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/12 (pow.f64 x 4) x)))","(fma.f64 x (*.f64 x -1/2) (fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/12 (pow.f64 x 4) x)))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","(log.f64 (+.f64 1 (sin.f64 x)))","(log1p.f64 (sin.f64 x))","1","(+.f64 1 (*.f64 -1/6 (pow.f64 x 2)))","(+.f64 1 (*.f64 (*.f64 x x) -1/6))","(fma.f64 (*.f64 x x) -1/6 1)","(fma.f64 x (*.f64 x -1/6) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (*.f64 1/120 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/6 (*.f64 x x) (*.f64 (pow.f64 x 4) 1/120)))","(+.f64 1 (fma.f64 (*.f64 x x) -1/6 (*.f64 (pow.f64 x 4) 1/120)))","(fma.f64 x (*.f64 x -1/6) (fma.f64 (pow.f64 x 4) 1/120 1))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/5040 (pow.f64 x 6)) (*.f64 1/120 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 x x) (fma.f64 -1/5040 (pow.f64 x 6) (*.f64 (pow.f64 x 4) 1/120))))","(+.f64 1 (fma.f64 (*.f64 x x) -1/6 (fma.f64 (pow.f64 x 4) 1/120 (*.f64 -1/5040 (pow.f64 x 6)))))","(+.f64 1 (fma.f64 (pow.f64 x 4) 1/120 (fma.f64 x (*.f64 x -1/6) (*.f64 -1/5040 (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/5040 (pow.f64 x 6) (*.f64 x (*.f64 x -1/6))) (fma.f64 (pow.f64 x 4) 1/120 1))","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","(/.f64 (sin.f64 x) x)","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(fma.f64 -1/6 (pow.f64 x 3) x)","(fma.f64 (pow.f64 x 3) -1/6 x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 1/120 (pow.f64 x 5) x))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 1/120 (pow.f64 x 5) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 -1/5040 (pow.f64 x 7) (fma.f64 1/120 (pow.f64 x 5) x)))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 -1/5040 (pow.f64 x 7) (fma.f64 1/120 (pow.f64 x 5) x)))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 1/120 (pow.f64 x 5) (fma.f64 -1/5040 (pow.f64 x 7) x)))","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(sin.f64 x)","(-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))","(-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))","(-.f64 (+.f64 (exp.f64 y) (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2)))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (*.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (exp.f64 (neg.f64 y))))","(-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (exp.f64 y)) (exp.f64 (neg.f64 y)))","(*.f64 (fma.f64 x (*.f64 x -1/6) 1) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 1/120 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (pow.f64 x 4))) (exp.f64 (neg.f64 y))))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (pow.f64 x 4) (*.f64 1/120 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))) (exp.f64 (neg.f64 y))))","(+.f64 (exp.f64 y) (-.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 x (*.f64 x -1/6) (*.f64 (pow.f64 x 4) 1/120))) (exp.f64 (neg.f64 y))))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 x (*.f64 x -1/6) (fma.f64 (pow.f64 x 4) 1/120 1)))","(-.f64 (+.f64 (exp.f64 y) (+.f64 (*.f64 -1/6 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 2))) (+.f64 (*.f64 1/120 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 4))) (*.f64 -1/5040 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 6)))))) (/.f64 1 (exp.f64 y)))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/120 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 -1/5040 (*.f64 (pow.f64 x 6) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))) (exp.f64 (neg.f64 y))))","(+.f64 (exp.f64 y) (-.f64 (fma.f64 -1/6 (*.f64 (*.f64 x x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/120 (*.f64 (pow.f64 x 4) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 -1/5040 (pow.f64 x 6)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))) (exp.f64 (neg.f64 y))))","(+.f64 (*.f64 (fma.f64 x (*.f64 x -1/6) 1) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 (pow.f64 x 4) 1/120 (*.f64 -1/5040 (pow.f64 x 6)))))","(+.f64 (exp.f64 y) (-.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 (pow.f64 x 4) 1/120 (fma.f64 -1/5040 (pow.f64 x 6) (*.f64 x (*.f64 x -1/6))))) (exp.f64 (neg.f64 y))))","(fma.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (fma.f64 (pow.f64 x 4) 1/120 (fma.f64 -1/5040 (pow.f64 x 6) (*.f64 x (*.f64 x -1/6)))) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))","(*.f64 2 (/.f64 y (/.f64 x (sin.f64 x))))","(*.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)))","(*.f64 (/.f64 y x) (*.f64 2 (sin.f64 x)))","(/.f64 (sin.f64 x) (/.f64 x (*.f64 2 y)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))","(fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x)))))","(fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x))))","(fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (*.f64 (/.f64 y x) (*.f64 2 (sin.f64 x))))","(*.f64 (sin.f64 x) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) x))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x))))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x)))))","(fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (fma.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)) (*.f64 (/.f64 (pow.f64 y 5) x) (*.f64 (sin.f64 x) 1/60))))","(fma.f64 1/3 (*.f64 (/.f64 (sin.f64 x) x) (pow.f64 y 3)) (*.f64 (sin.f64 x) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 1/60 (/.f64 (pow.f64 y 5) x)))))","(+.f64 (*.f64 1/60 (/.f64 (*.f64 (pow.f64 y 5) (sin.f64 x)) x)) (+.f64 (*.f64 1/2520 (/.f64 (*.f64 (pow.f64 y 7) (sin.f64 x)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (sin.f64 x)) x)) (*.f64 2 (/.f64 (*.f64 y (sin.f64 x)) x)))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/2520 (/.f64 (pow.f64 y 7) (/.f64 x (sin.f64 x))) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (sin.f64 x))) (*.f64 2 (/.f64 y (/.f64 x (sin.f64 x)))))))","(fma.f64 1/60 (/.f64 (pow.f64 y 5) (/.f64 x (sin.f64 x))) (fma.f64 1/2520 (*.f64 (/.f64 (pow.f64 y 7) x) (sin.f64 x)) (fma.f64 2 (*.f64 (/.f64 y x) (sin.f64 x)) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) x) (sin.f64 x))))))","(fma.f64 1/60 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/3 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 3) x)) (fma.f64 2 (*.f64 (sin.f64 x) (/.f64 y x)) (*.f64 1/2520 (*.f64 (sin.f64 x) (/.f64 (pow.f64 y 7) x))))))","(+.f64 (*.f64 (sin.f64 x) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) x)))) (*.f64 (sin.f64 x) (+.f64 (*.f64 1/60 (/.f64 (pow.f64 y 5) x)) (*.f64 1/2520 (/.f64 (pow.f64 y 7) x)))))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))","(/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) x)","(/.f64 (sin.f64 x) (/.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))","(*.f64 (sin.f64 x) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x))"]],"stop":[["node limit",1]],"time":50.31005859375,"type":"simplify"},{"compiler":[[3332,1981]],"time":37.826904296875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 (/.f64 1 x) (sin.f64 x)) (*.f64 2 (sinh.f64 y))) 2)","fresh",0.209316259768442],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","done",0.1484375],["(/.f64 (*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y))) 2)","done",0.1171875],["(/.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2) (cbrt.f64 (/.f64 (sin.f64 x) x))) (*.f64 2 (sinh.f64 y))) 2)","fresh",0.20710761722130416],["(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","fresh",0.7209265645824241]],"compiler":[[15,12],[9,6],[15,12],[22,14],[9,6]],"count":[[195,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[190,0],"picked":[1,1]}],"min-error":[0],"time":51.43310546875,"type":"prune"},{"accuracy":[0.11328125],"baseline":[0.11328125],"branch":[["x",0.11328125,1],["y",0.11328125,1],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)",0.11328125,1],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)",0.11328125,1],["(sinh.f64 y)",0.11328125,1]],"compiler":[[3,2],[3,2],[9,6],[9,6],[4,3],[126,59]],"count":[[11,1]],"inputs":[["(/.f64 (*.f64 (*.f64 (/.f64 1 x) (sin.f64 x)) (*.f64 2 (sinh.f64 y))) 2)","(/.f64 (*.f64 (/.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) x) (*.f64 2 (sinh.f64 y))) 2)","(/.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) x)) 2) (cbrt.f64 (/.f64 (sin.f64 x) x))) (*.f64 2 (sinh.f64 y))) 2)","(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)","(*.f64 (expm1.f64 (log1p.f64 (sin.f64 x))) (*.f64 (/.f64 1 x) (sinh.f64 y)))","(*.f64 (sin.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (sinh.f64 y) x))))","(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)","(/.f64 (sin.f64 x) (/.f64 x (sinh.f64 y)))","(*.f64 (sin.f64 x) (*.f64 (/.f64 1 x) (sinh.f64 y)))","(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) x))","(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)"]],"link":["."],"name":["Linear.Quaternion:$ccosh from linear-1.19.1.3"],"oracle":[13.941211927038772],"outputs":[["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)"]],"time":26.60400390625,"times":[["x",4.928955078125],["y",4.7529296875],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)",3.7890625],["(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) x)",3.66015625],["(sinh.f64 y)",7.25390625]],"type":"regimes"},{"compiler":[[13,10]],"egraph":[[1,12,17,3.4875e-5],[0,10,17,2.0291e-5]],"inputs":[["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (/.f64 (sin.f64 x) x) (*.f64 2 (sinh.f64 y))) 2)"]],"stop":[["fuel",1],["saturated",1]],"time":8.48095703125,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[13,10]],"remove-preprocessing":[[]],"time":8.958984375,"type":"end"}]