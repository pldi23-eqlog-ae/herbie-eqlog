[{"compiler":[[10,6]],"method":["search"],"sampling":[[12,0.8634140167851001,0.135609659133479,0.0009763240814208984],[11,0.8204872182104737,0.17853645770810544,0.0009763240814208984],[10,0.7375604482367635,0.2614632276818156,0.0009763240814208984],[9,0.6595117235556245,0.3395119523629546,0.0009763240814208984],[8,0.5151215828955173,0.48390209302306175,0.0009763240814208984],[7,0.39024362340569496,0.6087800525128841,0.0009763240814208984],[6,0.15609744936227798,0.8429262265563011,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":31.6630859375,"type":"analyze"},{"outcomes":[["body",256,"valid",273.947021484375,8256]],"time":281.362060546875,"type":"sample"},{"compiler":[[9,5]],"egraph":[[0,2,2,2e-6],[17,5552,20,0.07948624900000001],[16,5378,20,0.07102245800000001],[15,5352,20,0.06203749900000001],[14,5322,20,0.053177124000000006],[13,5298,20,0.04456112400000001],[12,5268,20,0.039819082000000006],[11,5190,20,0.034849082],[10,5113,20,0.030031624],[9,4258,20,0.025077374],[8,1937,20,0.016426082],[7,676,20,0.007117373999999999],[6,311,20,0.0032938739999999996],[5,184,20,0.0015854989999999998],[4,104,20,0.0008097079999999999],[3,54,20,0.00039925],[2,34,20,0.000202958],[1,22,20,0.00011175],[0,9,20,4.9708e-5]],"inputs":[["0","1"],["(/.f64 (-.f64 x y) (+.f64 x y))","(/.f64 (-.f64 y x) (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 x y) (+.f64 x y))","(/.f64 (-.f64 y x) (+.f64 y x))","(/.f64 (-.f64 y x) (+.f64 x y))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":104.1728515625,"type":"preprocess"},{"count":[[1,1]],"egraph":[[16,4080,10,0.068682958],[15,4080,10,0.05988787500000001],[14,4060,10,0.052079333000000005],[13,4038,10,0.04430229200000001],[12,3991,10,0.036531667000000004],[11,3238,10,0.028494459],[10,2441,10,0.017487167],[9,1007,10,0.009475751000000001],[8,442,10,0.004570876],[7,244,10,0.002557876],[6,154,10,0.0014582100000000001],[5,93,10,0.000804585],[4,57,10,0.000455501],[3,30,10,0.000258792],[2,19,10,0.000144001],[1,12,10,8.2542e-5],[0,6,10,3.6292e-5]],"inputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"stop":[["saturated",1]],"time":80.08203125,"type":"simplify"},{"compiler":[[9,5]],"time":0.196044921875,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (+.f64 x y))","next",0.01171875]],"compiler":[[9,5],[9,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.01171875],"time":0.68310546875,"type":"prune"},{"compiler":[[17,5]],"locations":[["(/.f64 (-.f64 x y) (+.f64 x y))",0.01171875,true]],"time":3.5908203125,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (-.f64 x y) (+.f64 x y))","y","-inf",0.427001953125],["(/.f64 (-.f64 x y) (+.f64 x y))","y","inf",0.35302734375],["(/.f64 (-.f64 x y) (+.f64 x y))","y","0",0.35302734375],["(/.f64 (-.f64 x y) (+.f64 x y))","x","-inf",0.376953125],["(/.f64 (-.f64 x y) (+.f64 x y))","x","inf",0.43212890625],["(/.f64 (-.f64 x y) (+.f64 x y))","x","0",0.4560546875]],"time":2.49609375,"type":"series"},{"count":[[1,36]],"egraph":[[2,2300,10,0.020474792],[1,143,10,0.002806625],[0,6,10,0.000152792]],"inputs":[["(/.f64 (-.f64 x y) (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (neg.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x y))) (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))))"]],"rules":[["egg-rr",36]],"stop":[["node limit",1]],"time":38.7099609375,"type":"rewrite"},{"count":[[60,59]],"egraph":[[3,4610,354,0.02256275],[2,902,354,0.008070208],[1,256,444,0.001661917],[0,77,507,0.000366375]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (/.f64 x y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2)))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)))) 1)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(+.f64 (/.f64 (*.f64 -2 (*.f64 x x)) (*.f64 y y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(+.f64 1 (-.f64 (/.f64 (neg.f64 y) x) (/.f64 y x)))","(-.f64 (-.f64 1 (/.f64 y x)) (/.f64 y x))","(fma.f64 -2 (/.f64 y x) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x)))","(-.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (/.f64 y x))","(fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (neg.f64 y) y)) (pow.f64 x 3)) (+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x))))","(+.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1)))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 y x))) (/.f64 y x))","(+.f64 1 (-.f64 (/.f64 (neg.f64 y) x) (/.f64 y x)))","(-.f64 (-.f64 1 (/.f64 y x)) (/.f64 y x))","(fma.f64 -2 (/.f64 y x) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) (/.f64 y x))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x)))","(-.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (/.f64 y x))","(fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 y) y)) (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 (*.f64 -1 y) y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 y x))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (neg.f64 y) y)) (pow.f64 x 3)) (+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x))))","(+.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1)))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 y) x) (/.f64 y x)))","(-.f64 (-.f64 1 (/.f64 y x)) (/.f64 y x))","(fma.f64 -2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x)))","(-.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (/.f64 y x))","(fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 (/.f64 (*.f64 (*.f64 y y) (-.f64 (neg.f64 y) y)) (pow.f64 x 3)) (+.f64 1 (-.f64 (fma.f64 -1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 (neg.f64 y) y))) (/.f64 (neg.f64 y) x)) (/.f64 y x))))","(+.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 y x) (*.f64 -2 (/.f64 y x)))) (/.f64 y x)) (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2 (/.f64 y x) 1)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (/.f64 y (*.f64 x (/.f64 x y))) (fma.f64 -2 (/.f64 y x) 1)))","-1","(-.f64 (/.f64 x y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2)))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (*.f64 -2 (*.f64 x x)) (*.f64 y y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2))) 1)","(+.f64 (/.f64 (*.f64 -2 (*.f64 x x)) (*.f64 y y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)))","(+.f64 -1 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) -2) 2)) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))","(+.f64 (*.f64 (/.f64 x y) (+.f64 2 (*.f64 (/.f64 x y) -2))) (fma.f64 2 (pow.f64 (/.f64 x y) 3) -1))"]],"stop":[["node limit",1]],"time":37.822021484375,"type":"simplify"},{"compiler":[[879,398]],"time":9.137939453125,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","next",0.01171875],["(/.f64 (-.f64 x y) (+.f64 x y))","done",0.01171875]],"compiler":[[13,6],[9,5],[13,6]],"count":[[60,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[59,1],"picked":[1,1]}],"min-error":[0],"time":10.1171875,"type":"prune"},{"compiler":[[28,6]],"locations":[["(/.f64 x (+.f64 x y))",0.0078125,true],["(/.f64 y (+.f64 x y))",0.01953125,true],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))",0.0234375,true]],"time":4.796875,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.236083984375],["(/.f64 x (+.f64 x y))","y","inf",0.2158203125],["(/.f64 x (+.f64 x y))","y","0",0.1708984375],["(/.f64 x (+.f64 x y))","x","-inf",0.3310546875],["(/.f64 x (+.f64 x y))","x","inf",0.227783203125],["(/.f64 x (+.f64 x y))","x","0",0.2470703125],["(/.f64 y (+.f64 x y))","x","-inf",0.236083984375],["(/.f64 y (+.f64 x y))","x","inf",0.217041015625],["(/.f64 y (+.f64 x y))","x","0",0.197998046875],["(/.f64 y (+.f64 x y))","y","-inf",0.205810546875],["(/.f64 y (+.f64 x y))","y","inf",0.2109375],["(/.f64 y (+.f64 x y))","y","0",0.31005859375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","-inf",0.43115234375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","inf",0.3798828125],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","y","0",0.2490234375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","-inf",0.33984375],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","inf",0.447998046875],["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","x","0",0.320068359375]],"time":5.220947265625,"type":"series"},{"count":[[3,313]],"egraph":[[2,3085,24,0.026802125],[1,175,24,0.003793667],[0,7,24,0.000175292]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","(/.f64 y (+.f64 x y))","(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (/.f64 1 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (+.f64 x y) 2) (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2)) (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))) (neg.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 x y)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3))) (neg.f64 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 x y) (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 x y) (*.f64 (/.f64 (+.f64 x y) x) y)) (*.f64 (/.f64 (+.f64 x y) x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (+.f64 x y)) (*.f64 (neg.f64 (+.f64 x y)) y)) (*.f64 (neg.f64 (+.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (/.f64 (+.f64 x y) y) (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (/.f64 (+.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (+.f64 x y) y) (*.f64 (/.f64 (+.f64 x y) x) 1)) (*.f64 (/.f64 (+.f64 x y) x) (/.f64 (+.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (/.f64 (+.f64 x y) y)) (*.f64 (neg.f64 (+.f64 x y)) 1)) (*.f64 (neg.f64 (+.f64 x y)) (/.f64 (+.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (neg.f64 (+.f64 x y))) (*.f64 (+.f64 x y) (neg.f64 y))) (*.f64 (+.f64 x y) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (+.f64 x y)) (*.f64 (/.f64 (+.f64 x y) x) (neg.f64 y))) (*.f64 (/.f64 (+.f64 x y) x) (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 y))) (pow.f64 (neg.f64 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (neg.f64 y)) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 3)) (+.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (-.f64 (pow.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 2) (*.f64 (/.f64 x (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 6) (pow.f64 (/.f64 y (+.f64 x y)) 6)) (+.f64 (pow.f64 (/.f64 x (+.f64 x y)) 4) (+.f64 (pow.f64 (/.f64 y (+.f64 x y)) 4) (pow.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 4) (pow.f64 (/.f64 y (+.f64 x y)) 4)) (+.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (pow.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 2)) (-.f64 (/.f64 x (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (+.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) 1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 x y) 2) (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2)) (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (/.f64 (-.f64 x y) (+.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))) (exp.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 x (+.f64 x y))) (+.f64 1 (expm1.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))) (+.f64 1 (expm1.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2)) (exp.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))) (exp.f64 (/.f64 (neg.f64 y) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))) (/.f64 1 (exp.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 y) (+.f64 x y))) (exp.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 y) (+.f64 x y))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 y (+.f64 x y)))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (-.f64 x y) (+.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (/.f64 1 (+.f64 x y)) (/.f64 x (+.f64 x y))) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (/.f64 1 (+.f64 x y)) (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (neg.f64 (/.f64 1 (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) (/.f64 x (+.f64 x y)) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) (/.f64 x (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) 1 (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) 1 (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1 (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1 (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1 (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) 2) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) 2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (pow.f64 (+.f64 x y) -2) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (pow.f64 (+.f64 x y) -2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 4) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 4) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (+.f64 x y))) (neg.f64 (sqrt.f64 (/.f64 y (+.f64 x y)))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (/.f64 x (+.f64 x y)) 3/2) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (/.f64 x (+.f64 x y)) 3/2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 x y))) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) -2) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) -2) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) -2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))) (pow.f64 (+.f64 x y) -2) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (/.f64 1 (+.f64 x y)) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (/.f64 1 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (/.f64 1 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (/.f64 1 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) y) -3)) (/.f64 1 (+.f64 (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 x (+.f64 x y)) 2))) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) x (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) x (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x y)) (-.f64 x y) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3/2) (sqrt.f64 (/.f64 x (+.f64 x y))) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3/2) (sqrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 4) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 4) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (neg.f64 y) (+.f64 x y))) 2) (cbrt.f64 (/.f64 (neg.f64 y) (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 y) (+.f64 x y))) (sqrt.f64 (/.f64 (neg.f64 y) (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (+.f64 x y)))) (sqrt.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (+.f64 x y)) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) -1/2) (/.f64 x (sqrt.f64 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) -1/2) (/.f64 x (sqrt.f64 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y)))) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2)) (cbrt.f64 (/.f64 y (+.f64 x y))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (/.f64 (neg.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x y))) y (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (fma.f64 (/.f64 (neg.f64 y) (+.f64 x y)) 1 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))) (+.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 (+.f64 x y)) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 (+.f64 x y)) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 5) (cbrt.f64 (/.f64 x (+.f64 x y))) (neg.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 5) (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (/.f64 (neg.f64 y) (+.f64 x y)) (/.f64 y (+.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (+.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (cbrt.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (+.f64 x y))) (sqrt.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 y (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/2) (/.f64 y (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x y) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2)) (exp.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2))) (exp.f64 (pow.f64 (/.f64 y (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (+.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 y (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (+.f64 x y) y) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (/.f64 1 (+.f64 x y)) (/.f64 y (+.f64 x y))) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (+.f64 x y)) (/.f64 x (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (+.f64 x y)) (/.f64 y (+.f64 x y)) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (/.f64 y (+.f64 x y)) 2) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (pow.f64 (+.f64 x y) -2) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 4) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (*.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 3/2) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (*.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 4) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 y (+.f64 x y)) 3/2) (sqrt.f64 (/.f64 y (+.f64 x y))) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2))) 2) (cbrt.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2))) (sqrt.f64 (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 y (+.f64 x y)) y) (/.f64 1 (+.f64 x y)) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) y) (/.f64 1 (+.f64 x y)) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 5) (cbrt.f64 (/.f64 y (+.f64 x y))) (/.f64 (*.f64 x y) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) (pow.f64 (cbrt.f64 (/.f64 y (+.f64 x y))) 2)) (cbrt.f64 (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 (/.f64 y (+.f64 x y)))) (sqrt.f64 (/.f64 y (+.f64 x y))) (pow.f64 (/.f64 y (+.f64 x y)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/2) (/.f64 x (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x y) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (+.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 x (+.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) x)) -1))))))"]],"rules":[["egg-rr",43],["egg-rr",68],["egg-rr",202]],"stop":[["node limit",1]],"time":66.06494140625,"type":"rewrite"},{"count":[[385,365]],"egraph":[[3,5085,1098,0.02525825],[2,1066,1140,0.009818667],[1,344,1343,0.002204625],[0,102,1451,0.000516042]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) 1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 x (/.f64 x (*.f64 y y))) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 2 (/.f64 x y)))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) -1))","(fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 -2 (*.f64 x (/.f64 x (*.f64 y y))) -1))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(fma.f64 -2 (/.f64 y x) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (-.f64 (fma.f64 -2 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 1 (+.f64 (fma.f64 -2 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (*.f64 (/.f64 y x) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 -2 (/.f64 y x) (fma.f64 (/.f64 2 x) (/.f64 y (/.f64 x y)) 1))","(-.f64 (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(-.f64 (+.f64 1 (+.f64 (fma.f64 -2 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (neg.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))) (+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 1 (+.f64 (-.f64 (fma.f64 -2 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 (fma.f64 -2 (/.f64 y x) 1) (*.f64 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (+.f64 -1 (/.f64 y x))) -2))","(+.f64 (fma.f64 -2 (/.f64 y x) 1) (*.f64 2 (-.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (pow.f64 (/.f64 y x) 3))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(fma.f64 -2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x))))","(+.f64 1 (-.f64 (fma.f64 -2 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 1 (+.f64 (fma.f64 -2 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (*.f64 (/.f64 y x) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 -2 (/.f64 y x) (fma.f64 (/.f64 2 x) (/.f64 y (/.f64 x y)) 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (-.f64 y (*.f64 -1 y)) x)))))","(fma.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (neg.f64 (/.f64 (-.f64 y (neg.f64 y)) x)))))","(+.f64 (-.f64 (*.f64 (/.f64 2 x) (/.f64 (*.f64 y y) x)) (/.f64 (+.f64 y y) x)) (fma.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 -2 (/.f64 y x) 1)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 -2 (/.f64 y x) (fma.f64 (/.f64 2 x) (/.f64 y (/.f64 x y)) 1)))","1","(+.f64 1 (*.f64 -2 (/.f64 y x)))","(fma.f64 -2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (-.f64 (fma.f64 -2 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 1 (+.f64 (fma.f64 -2 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (*.f64 (/.f64 y x) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 -2 (/.f64 y x) 1))","(fma.f64 -2 (/.f64 y x) (fma.f64 (/.f64 2 x) (/.f64 y (/.f64 x y)) 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(fma.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 1 (fma.f64 2 (/.f64 (*.f64 y y) (*.f64 x x)) (neg.f64 (/.f64 (-.f64 y (neg.f64 y)) x)))))","(+.f64 (-.f64 (*.f64 (/.f64 2 x) (/.f64 (*.f64 y y) x)) (/.f64 (+.f64 y y) x)) (fma.f64 -2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 -2 (/.f64 y x) 1)))","(fma.f64 -2 (pow.f64 (/.f64 y x) 3) (fma.f64 -2 (/.f64 y x) (fma.f64 (/.f64 2 x) (/.f64 y (/.f64 x y)) 1)))","-1","(-.f64 (*.f64 2 (/.f64 x y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 x (/.f64 x (*.f64 y y))) -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2 (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 2 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 y y))) (neg.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (fma.f64 2 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (-.f64 2 (/.f64 x y)))) (-.f64 (pow.f64 (/.f64 x y) 3) (fma.f64 (/.f64 x y) (/.f64 x y) 1)))","(+.f64 (*.f64 (/.f64 x y) (-.f64 2 (/.f64 x y))) (-.f64 (*.f64 2 (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) 1)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 1)","(fma.f64 2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (/.f64 x y) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) -1))","(fma.f64 2 (/.f64 x y) (fma.f64 -2 (*.f64 x (/.f64 x (*.f64 y y))) -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 2 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y)) -1))","(fma.f64 2 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 -2 (*.f64 x (/.f64 x (*.f64 y y))) -1))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) y))","(neg.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 4))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 1 (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 1 (/.f64 x y)))","(+.f64 1 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 (-.f64 1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x y)))","(+.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 1 (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 1 (/.f64 x y)))","(+.f64 1 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 (-.f64 1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x y)))","(+.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 1 (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 1 (/.f64 x y)))","(+.f64 1 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (neg.f64 x) y)))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (-.f64 (-.f64 1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x y)))","(+.f64 (-.f64 1 (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) y))","(neg.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 4))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (/.f64 y x) (*.f64 (/.f64 y (*.f64 x x)) y))","(neg.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (-.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))","(-.f64 (-.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 4))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(neg.f64 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y)))) (pow.f64 (/.f64 x y) 4))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (pow.f64 (/.f64 y x) 3)))","(+.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (-.f64 1 (pow.f64 (/.f64 y x) 3)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (pow.f64 (/.f64 y x) 3)))","(+.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (-.f64 1 (pow.f64 (/.f64 y x) 3)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (pow.f64 (/.f64 y x) 3)))","(+.f64 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)) (-.f64 1 (pow.f64 (/.f64 y x) 3)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(neg.f64 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y)))) (pow.f64 (/.f64 x y) 4))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(neg.f64 (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (+.f64 -1 (/.f64 x y)))) (pow.f64 (/.f64 x y) 4))"]],"stop":[["node limit",1]],"time":53.695068359375,"type":"simplify"},{"compiler":[[7598,2118]],"time":52.880126953125,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","done",0.01171875],["(/.f64 (-.f64 x y) (+.f64 x y))","done",0.01171875]],"compiler":[[13,6],[9,5]],"count":[[367,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[365,0],"picked":[1,1]}],"min-error":[0],"time":204.655029296875,"type":"prune"},{"accuracy":[0.01171875],"baseline":[0.01171875],"branch":[["x",0.01171875,1],["y",0.01171875,1],["(/.f64 (-.f64 x y) (+.f64 x y))",0.01171875,1]],"compiler":[[3,2],[3,2],[9,5],[20,8]],"count":[[2,1]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))","(/.f64 (-.f64 x y) (+.f64 x y))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, D"],"oracle":[0.0234375],"outputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))"]],"time":7.724853515625,"times":[["x",2.661865234375],["y",2.89501953125],["(/.f64 (-.f64 x y) (+.f64 x y))",1.64892578125]],"type":"regimes"},{"compiler":[[13,6]],"egraph":[[5,25,16,0.00014950100000000002],[4,24,16,0.00012091700000000001],[3,21,16,9.2125e-5],[2,17,16,6.5084e-5],[1,10,16,4.1584e-5],[0,7,16,1.7334e-5]],"inputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 x (+.f64 x y)) (/.f64 y (+.f64 x y)))"]],"stop":[["done",1],["saturated",1]],"time":8.822021484375,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[13,6]],"remove-preprocessing":[[]],"time":7.801025390625,"type":"end"}]