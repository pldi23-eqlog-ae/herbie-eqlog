[{"compiler":[[10,5]],"method":["search"],"sampling":[[12,0.4936581836082041,0.0809755518566817,0.42536626453511417],[11,0.4721947843208909,0.10731699643656611,0.420488219242543],[10,0.42926798574626446,0.15999988559633493,0.4107321286574006],[9,0.39024362340569496,0.21073155663907528,0.39902481995522976],[8,0.31219489872455597,0.31219489872455597,0.37561020255088806],[7,0.24975591897964478,0.40585336834192276,0.34439071267843246],[6,0.24975591897964478,0.5619508177042007,0.18829326331615448],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":20.032958984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",6.7099609375,192],["body",256,"valid",265.592041015625,8256]],"time":280.93994140625,"type":"sample"},{"compiler":[[9,4]],"egraph":[[1,2,2,7.043e-6],[0,2,2,6.459e-6],[8,189,20,0.002024459],[7,187,20,0.001703751],[6,170,20,0.001354376],[5,150,20,0.001010751],[4,120,20,0.0006935840000000001],[3,77,20,0.00041533400000000006],[2,41,20,0.00023208400000000002],[1,23,20,0.000116001],[0,7,20,5.1542e-5]],"inputs":[["0","1"],["(*.f64 (+.f64 x y) (+.f64 x y))","(*.f64 (+.f64 y x) (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0"],["(*.f64 (+.f64 x y) (+.f64 x y))","(*.f64 (+.f64 y x) (+.f64 y x))","(*.f64 (+.f64 x y) (+.f64 x y))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort x y)"]],"time":25.927978515625,"type":"preprocess"},{"count":[[1,1]],"egraph":[[8,179,10,0.001957167],[7,177,10,0.001626417],[6,160,10,0.001309833],[5,140,10,0.000994958],[4,110,10,0.000691999],[3,67,10,0.00041974899999999997],[2,29,10,0.000231166],[1,12,10,0.00011020799999999999],[0,5,10,4.6666e-5]],"inputs":[["(*.f64 (+.f64 x y) (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 x y) (+.f64 x y))"]],"stop":[["saturated",1]],"time":13.9140625,"type":"simplify"},{"compiler":[[9,4]],"time":0.201904296875,"type":"eval"},{"alts":[["(*.f64 (+.f64 x y) (+.f64 x y))","next",0.02734375]],"compiler":[[9,4],[9,4]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.02734375],"time":0.6611328125,"type":"prune"},{"compiler":[[14,4]],"locations":[["(*.f64 (+.f64 x y) (+.f64 x y))",0.02734375,true]],"time":2.682861328125,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (+.f64 x y) (+.f64 x y))","y","-inf",0.2529296875],["(*.f64 (+.f64 x y) (+.f64 x y))","y","inf",0.26513671875],["(*.f64 (+.f64 x y) (+.f64 x y))","y","0",0.219970703125],["(*.f64 (+.f64 x y) (+.f64 x y))","x","-inf",0.30908203125],["(*.f64 (+.f64 x y) (+.f64 x y))","x","inf",0.31787109375],["(*.f64 (+.f64 x y) (+.f64 x y))","x","0",0.357177734375]],"time":1.80615234375,"type":"series"},{"count":[[1,26]],"egraph":[[2,1758,7,0.017017833],[1,115,7,0.0023439579999999997],[0,5,7,0.000144792]],"inputs":[["(*.f64 (+.f64 x y) (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (+.f64 x y)) (*.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 x y)) 1) (*.f64 (*.f64 y (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (+.f64 x y) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (-.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 x x (*.f64 y (-.f64 y x))) (fma.f64 x x (*.f64 y (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (-.f64 x y) (fma.f64 x x (*.f64 y (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (fma.f64 x x (*.f64 y (-.f64 y x))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y)))) (-.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 x y)) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (+.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 x y) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 x y) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) x (*.f64 y (+.f64 x y)))))))"]],"rules":[["egg-rr",26]],"stop":[["node limit",1]],"time":35.39599609375,"type":"rewrite"},{"count":[[50,36]],"egraph":[[19,7401,216,0.116446501],[18,7371,216,0.10502466699999999],[17,7289,216,0.09589745899999999],[16,6965,216,0.08666320899999999],[15,6627,216,0.077406167],[14,6075,216,0.068183917],[13,5329,216,0.058048709],[12,4749,216,0.048514334],[11,4240,216,0.040406501],[10,3847,216,0.032537291999999995],[9,3544,216,0.025985584],[8,3300,216,0.020379376],[7,3115,216,0.015589584],[6,2843,216,0.011295876],[5,1568,216,0.007104626],[4,418,216,0.003148876],[3,151,216,0.001144709],[2,69,222,0.000542584],[1,32,267,0.000261334],[0,12,294,9.2709e-5]],"inputs":[["(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(*.f64 x (fma.f64 y 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(*.f64 x (fma.f64 y 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(*.f64 x (fma.f64 y 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 x (fma.f64 y 2 x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))"]],"stop":[["node limit",1]],"time":135.9228515625,"type":"simplify"},{"compiler":[[471,165]],"time":4.51708984375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","fresh",42.14281398566971],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","next",0.0078125]],"compiler":[[53,16],[11,6],[53,16],[11,6]],"count":[[37,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[36,2],"picked":[1,0]}],"min-error":[0],"time":5.81494140625,"type":"prune"},{"compiler":[[24,12]],"locations":[["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))",0.00390625,true],["(*.f64 x (fma.f64 y 2 x))",0.01953125,true]],"time":6.10302734375,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","x","-inf",0.162841796875],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","x","inf",0.18701171875],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","x","0",0.182861328125],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","y","-inf",0.222900390625],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","y","inf",0.18896484375],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","y","0",0.208984375],["(*.f64 x (fma.f64 y 2 x))","y","-inf",0.31005859375],["(*.f64 x (fma.f64 y 2 x))","y","inf",0.5439453125],["(*.f64 x (fma.f64 y 2 x))","y","0",0.2900390625],["(*.f64 x (fma.f64 y 2 x))","x","-inf",0.423095703125],["(*.f64 x (fma.f64 y 2 x))","x","inf",0.33203125],["(*.f64 x (fma.f64 y 2 x))","x","0",0.469970703125]],"time":3.670166015625,"type":"series"},{"count":[[2,34]],"egraph":[[2,1605,20,0.017071],[1,140,20,0.002230333],[0,7,20,0.00019875]],"inputs":[["(*.f64 x (fma.f64 y 2 x))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y 2) x) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y 2)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (fma.f64 y 2 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 y 2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 y 2 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (fma.f64 y 2 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (fma.f64 y 2 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 y 2 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (fma.f64 y 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 y 2 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (fma.f64 y 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (fma.f64 y 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (fma.f64 y 2 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (fma.f64 y 2 x)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y y) (*.f64 x (fma.f64 y 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 1) (*.f64 x (fma.f64 y 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))) (pow.f64 (cbrt.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))) 2) (cbrt.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y (sqrt.f64 (*.f64 x (fma.f64 y 2 x)))) (hypot.f64 y (sqrt.f64 (*.f64 x (fma.f64 y 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y y) 3) (pow.f64 (*.f64 x (fma.f64 y 2 x)) 3)) (+.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (-.f64 (pow.f64 (*.f64 x (fma.f64 y 2 x)) 2) (*.f64 (*.f64 y y) (*.f64 x (fma.f64 y 2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (pow.f64 (*.f64 x (fma.f64 y 2 x)) 2)) (-.f64 (*.f64 y y) (*.f64 x (fma.f64 y 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 y (sqrt.f64 (*.f64 x (fma.f64 y 2 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 y y (*.f64 x (fma.f64 y 2 x)))))))))"]],"rules":[["egg-rr",21],["egg-rr",13]],"stop":[["node limit",1]],"time":38.036865234375,"type":"rewrite"},{"count":[[82,46]],"egraph":[[19,7398,393,0.11680208199999999],[18,7368,393,0.10539429099999999],[17,7280,393,0.09626399899999999],[16,6958,393,0.087066916],[15,6618,393,0.07765174899999999],[14,6066,393,0.068670916],[13,5328,393,0.058447041000000005],[12,4748,393,0.048821499000000004],[11,4237,393,0.040697833],[10,3846,393,0.032789791],[9,3543,393,0.026107833],[8,3299,393,0.020506291],[7,3113,393,0.015609458],[6,2841,393,0.011252958],[5,1562,393,0.007123333],[4,418,393,0.003175499],[3,151,393,0.0011948330000000002],[2,69,399,0.000581916],[1,32,480,0.000290124],[0,12,525,0.000106083]],"inputs":[["(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(*.f64 y (+.f64 (*.f64 2 x) y))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(*.f64 y (+.f64 (*.f64 2 x) y))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(*.f64 y (+.f64 (*.f64 2 x) y))","(*.f64 y (fma.f64 2 x y))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 2 y) x))","(*.f64 x (fma.f64 2 y x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (fma.f64 2 (*.f64 y x) (*.f64 y y)) (*.f64 x x))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(fma.f64 y y (*.f64 x (fma.f64 2 y x)))","(fma.f64 x (fma.f64 2 y x) (*.f64 y y))","(fma.f64 y (fma.f64 2 x y) (*.f64 x x))"]],"stop":[["node limit",1]],"time":142.715087890625,"type":"simplify"},{"compiler":[[563,300]],"time":7.634033203125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","next",42.14281398566971],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","done",0.0078125]],"compiler":[[53,16],[11,6],[53,16]],"count":[[48,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[46,0],"picked":[1,1]}],"min-error":[0],"time":7.68701171875,"type":"prune"},{"compiler":[[189,26]],"locations":[["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))",1.1992187500000002,true],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))",2.1015583716604116,true],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))",2.5898437500000004,true],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))",40.39182595120305,true]],"time":18.615966796875,"type":"localize"},{"count":[[4,96]],"series":[["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","y","-inf",0.281005859375],["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","y","inf",0.260986328125],["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","y","0",0.223876953125],["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","x","-inf",0.27392578125],["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","x","inf",0.22998046875],["(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))","x","0",0.2568359375],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","x","-inf",0.278076171875],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","x","inf",0.295166015625],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","x","0",0.27001953125],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","y","-inf",0.253173828125],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","y","inf",0.263916015625],["(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","y","0",0.277099609375],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","y","-inf",0.30615234375],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","y","inf",0.302978515625],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","y","0",0.237060546875],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","x","-inf",0.31103515625],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","x","inf",0.281982421875],["(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","x","0",0.26904296875],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","y","-inf",0.833984375],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","y","inf",0.60595703125],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","y","0",1.1240234375],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","x","-inf",0.7080078125],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","x","inf",0.68701171875],["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","x","0",0.869873046875]],"time":10.177978515625,"type":"series"},{"count":[[4,268]],"egraph":[[2,6861,70,0.043096583],[1,416,70,0.008778083],[0,16,145,0.000443041]],"inputs":[["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","(+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))","(-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))","(+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (+.f64 x y)) (*.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (+.f64 (*.f64 x y) (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (+.f64 x y)) (*.f64 x y)) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 x y) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (*.f64 (pow.f64 (+.f64 x y) 2) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (*.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (/.f64 1 (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 1) (/.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2) 1) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 1) (/.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))) (/.f64 (pow.f64 (+.f64 x y) 2) (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))) (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))) (pow.f64 (cbrt.f64 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))) (/.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))) (/.f64 (pow.f64 (+.f64 x y) 2) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))) (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3))) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2))) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (+.f64 x y) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (pow.f64 (+.f64 x y) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 x y)) x) (pow.f64 (exp.f64 y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 x y) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 3) (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 x y) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 x y) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) x (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) 2) (cbrt.f64 (*.f64 x (+.f64 x y))) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 x y))) (sqrt.f64 (*.f64 x (+.f64 x y))) (*.f64 y (+.f64 x y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))) (/.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2)) (*.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (*.f64 (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 9) (pow.f64 (*.f64 y (+.f64 x y)) 9)) (/.f64 1 (-.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (/.f64 1 (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))) (pow.f64 (+.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3)) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 9) (pow.f64 (*.f64 y (+.f64 x y)) 9))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 9) (pow.f64 (*.f64 y (+.f64 x y)) 9)) (-.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 9) (pow.f64 (*.f64 y (+.f64 x y)) 9)) (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 9) (pow.f64 (*.f64 y (+.f64 x y)) 9))) (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6)) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 y (+.f64 x y)) 6))) (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (+.f64 x y)) 6)) (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 3) (pow.f64 (*.f64 x (+.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3)) (pow.f64 (+.f64 x y) 2)) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2)) (pow.f64 (+.f64 x y) 2)) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 (pow.f64 y 3) (pow.f64 x 3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 x y)) (pow.f64 (*.f64 x (+.f64 x y)) 2) (pow.f64 (*.f64 y (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (pow.f64 (*.f64 y (+.f64 x y)) 2) (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 x (+.f64 x y)) (pow.f64 (*.f64 y (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 y (+.f64 x y)) (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 y (+.f64 x y)) 3) (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 y 3) (pow.f64 (+.f64 x y) 3) (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) (pow.f64 (+.f64 x y) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3/2) (pow.f64 (*.f64 x (+.f64 x y)) 3/2) (pow.f64 (*.f64 y (+.f64 x y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (fma.f64 (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y)) x (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (fma.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) 1 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2)) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (fma.f64 (neg.f64 (+.f64 x y)) (*.f64 x (*.f64 y (+.f64 x y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (*.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (+.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (pow.f64 (*.f64 y (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (+.f64 x y) (*.f64 (+.f64 x y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (-.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (*.f64 x (*.f64 y (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (*.f64 y (*.f64 (+.f64 x y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (+.f64 x y)) (*.f64 (+.f64 x y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (*.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) (*.f64 (+.f64 x y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (+.f64 x y))) (*.f64 (sqrt.f64 (*.f64 y (+.f64 x y))) (*.f64 (+.f64 x y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (*.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2)) (/.f64 1 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (-.f64 y x)) (*.f64 y (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 y (+.f64 x y)) (sqrt.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))) (-.f64 (*.f64 y (+.f64 x y)) (sqrt.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (*.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2)))) (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2)) (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3)) (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (*.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2)) (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (*.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2))) (neg.f64 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (+.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 6) (pow.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) 3)) (+.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (-.f64 (*.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y)))) (*.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3) (pow.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) 3)) (+.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2) (-.f64 (*.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4) (*.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))) (-.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2) (*.f64 (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (pow.f64 (+.f64 x y) 2) y) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (pow.f64 (+.f64 x y) 2) y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 y (pow.f64 (+.f64 x y) 2)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 y (pow.f64 (+.f64 x y) 2)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (*.f64 (+.f64 x y) (*.f64 y y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (*.f64 (+.f64 x y) (*.f64 y y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (*.f64 (+.f64 x y) (-.f64 y x)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) 1 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) 1 (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) 2) (*.f64 y y) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) 2) (*.f64 y y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 y (+.f64 x y)) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 y (+.f64 x y)) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (pow.f64 (+.f64 x y) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (pow.f64 (+.f64 x y) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (*.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) (*.f64 y (+.f64 x y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (*.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y (+.f64 x y))) (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y (+.f64 x y))) (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (sqrt.f64 (*.f64 y (+.f64 x y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (sqrt.f64 (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) y (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) y (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (+.f64 x y) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) (+.f64 x y)) (+.f64 x y) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) (+.f64 x y)) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2)) (cbrt.f64 (*.f64 y (+.f64 x y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2)) (cbrt.f64 (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) 1) (+.f64 x y) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) 1) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (+.f64 (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (/.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2)) (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2)) (/.f64 1 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3)) (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3)) (+.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2)) (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 6) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (*.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4) (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2))) (neg.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) 3) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 3)) (+.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (+.f64 (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (pow.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) 2)) (+.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) 2) (pow.f64 (*.f64 x (+.f64 x y)) 4)) (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (*.f64 x (+.f64 x y)) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) x) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (pow.f64 (+.f64 x y) 2) y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 y (pow.f64 (+.f64 x y) 2)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (*.f64 (+.f64 x y) (*.f64 y y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (+.f64 (*.f64 (+.f64 x y) (*.f64 x x)) (*.f64 (+.f64 x y) (*.f64 y y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y)) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (+.f64 x y)) (*.f64 (+.f64 x y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 2) 1 (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) 2) (*.f64 y y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 x (+.f64 x y)) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (*.f64 y (+.f64 x y)) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y y) (pow.f64 (+.f64 x y) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (pow.f64 (+.f64 x y) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (*.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 y (+.f64 x y)) 4)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) 2) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (pow.f64 (*.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (+.f64 x y)) 4)) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) 2) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 (pow.f64 (+.f64 x y) 2) y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (sqrt.f64 (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x))) (pow.f64 (*.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y (+.f64 x y))) (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 y (+.f64 x y)) 3/2) (sqrt.f64 (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) y (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x y) (*.f64 x x)) (+.f64 x y) (*.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y))))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 x y) 2) (+.f64 (*.f64 x x) (*.f64 y y)))) (*.f64 x (neg.f64 (*.f64 (pow.f64 (+.f64 x y) 2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y y) (+.f64 x y)) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y (+.f64 x y)) (pow.f64 (cbrt.f64 (*.f64 y (+.f64 x y))) 2)) (cbrt.f64 (*.f64 y (+.f64 x y))) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) 1) (+.f64 x y) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 x y) (*.f64 y y)) (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)) (neg.f64 (-.f64 (*.f64 x (*.f64 (pow.f64 (+.f64 x y) 2) y)) (pow.f64 (*.f64 x (+.f64 x y)) 2))))))))"]],"rules":[["egg-rr",70],["egg-rr",98],["egg-rr",47],["egg-rr",53]],"stop":[["node limit",1]],"time":90.748046875,"type":"rewrite"},{"count":[[364,359]],"egraph":[[2,3939,1574,0.020408375],[1,922,1655,0.006840916],[0,250,2451,0.001313875]],"inputs":[["(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (pow.f64 x 2)) (pow.f64 y 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 4))) (pow.f64 x 3)) (pow.f64 y 2))))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 x 2) (/.f64 (pow.f64 y 3) x))))) (+.f64 (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))) (/.f64 (*.f64 (-.f64 (*.f64 2 y) y) (-.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))))) x)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (-.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y))))) x)) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 x 2))))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y)))","(pow.f64 x 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 2)) (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 x) (/.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 x 4)))) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 2)) (pow.f64 x 2))))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 x 3) y) (+.f64 (pow.f64 y 2) (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x))) (-.f64 (*.f64 2 x) x)) y) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x))))","(pow.f64 y 2)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 3)) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x))) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) y)) (+.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x)))","(pow.f64 y 6)","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (pow.f64 y 6))","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 y 4)) (pow.f64 y 4)) (pow.f64 x 2)) (pow.f64 y 6)))","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 y 4)) (pow.f64 y 4)) (pow.f64 x 2)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(pow.f64 x 6)","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (pow.f64 x 6))","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (pow.f64 x 6)))","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(pow.f64 x 6)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (pow.f64 x 6))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (pow.f64 x 6)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(pow.f64 x 6)","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (pow.f64 x 6))","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (pow.f64 x 4) (*.f64 2 (pow.f64 x 4)))) (pow.f64 x 6)))","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (pow.f64 x 4) (*.f64 2 (pow.f64 x 4)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(pow.f64 y 6)","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (pow.f64 y 6))","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (pow.f64 y 6)))","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(pow.f64 y 6)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (pow.f64 y 6))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (pow.f64 y 6)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(pow.f64 y 4)","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 y 4))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(pow.f64 y 4)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(pow.f64 y 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (pow.f64 y 4))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x))))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 (pow.f64 y 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x)))))","(pow.f64 y 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (pow.f64 y 4))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 y 4)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(pow.f64 x 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 x 4))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 x 4)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(pow.f64 x 4)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (pow.f64 x 4))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (+.f64 (pow.f64 x 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (+.f64 (pow.f64 x 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x)))))","(pow.f64 x 4)","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 x 4))","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 x 4)))","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(pow.f64 y 4)","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 y 4))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 y 4)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(pow.f64 y 4)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4))","(+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -1 (pow.f64 x 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -1 (pow.f64 x 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (pow.f64 x 2)) (pow.f64 y 2)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) (pow.f64 y 3)))) (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 4))) (pow.f64 x 3)) (pow.f64 y 2))))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 x 2) (/.f64 (pow.f64 y 3) x))))) (+.f64 (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))) (/.f64 (*.f64 (-.f64 (*.f64 2 y) y) (-.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (*.f64 2 (*.f64 y (-.f64 (*.f64 2 y) y))))) x)))","(-.f64 (fma.f64 2 (*.f64 y x) (+.f64 (*.f64 3 (*.f64 y y)) (+.f64 (*.f64 x x) (/.f64 (pow.f64 y 3) x)))) (fma.f64 2 (*.f64 y (-.f64 (*.f64 y 2) y)) (/.f64 (-.f64 (*.f64 y 2) y) (/.f64 x (-.f64 (*.f64 3 (*.f64 y y)) (*.f64 (*.f64 y 2) (-.f64 (*.f64 y 2) y)))))))","(fma.f64 2 (*.f64 y x) (-.f64 (fma.f64 3 (*.f64 y y) (fma.f64 x x (/.f64 (pow.f64 y 3) x))) (fma.f64 2 (*.f64 y y) (/.f64 (pow.f64 y 3) x))))","(+.f64 (*.f64 y (+.f64 y (*.f64 2 x))) (-.f64 (fma.f64 x x (/.f64 (pow.f64 y 3) x)) (/.f64 (pow.f64 y 3) x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (-.f64 (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 y 2)) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y))))) x)) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 2 (pow.f64 y 2)) (pow.f64 x 2))))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) y)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 x 2))","(fma.f64 2 (*.f64 y x) (*.f64 x x))","(*.f64 x (+.f64 (*.f64 y 2) x))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 2)) (pow.f64 x 2)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 x) (/.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 x 4)))) (+.f64 (*.f64 (-.f64 3 (*.f64 2 (/.f64 (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 2)) (pow.f64 x 2))))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 x 3) y) (+.f64 (pow.f64 y 2) (pow.f64 x 2))))) (+.f64 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x))) (-.f64 (*.f64 2 x) x)) y) (*.f64 2 (*.f64 (-.f64 (*.f64 2 x) x) x))))","(-.f64 (fma.f64 2 (*.f64 y x) (fma.f64 2 (*.f64 x x) (+.f64 (+.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 x 3) y)))) (+.f64 (*.f64 2 (*.f64 x (-.f64 (*.f64 2 x) x))) (/.f64 (+.f64 (*.f64 3 (*.f64 x x)) (*.f64 -2 (*.f64 x (-.f64 (*.f64 2 x) x)))) (/.f64 y (-.f64 (*.f64 2 x) x)))))","(fma.f64 2 (*.f64 y x) (-.f64 (+.f64 (+.f64 (*.f64 y y) (*.f64 3 (*.f64 x x))) (/.f64 (pow.f64 x 3) y)) (fma.f64 2 (*.f64 x x) (/.f64 (pow.f64 x 3) y))))","(fma.f64 2 (*.f64 y x) (+.f64 (fma.f64 y y (*.f64 x x)) (-.f64 (/.f64 (pow.f64 x 3) y) (/.f64 (pow.f64 x 3) y))))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 2 (*.f64 y x)) (pow.f64 y 2))","(fma.f64 2 (*.f64 y x) (*.f64 y y))","(fma.f64 y y (*.f64 2 (*.f64 y x)))","(*.f64 y (+.f64 y (*.f64 2 x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(-.f64 (+.f64 (*.f64 2 (*.f64 y x)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 3)) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x))) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) y)) (+.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -1 x)) x)))","(fma.f64 2 (*.f64 y x) (fma.f64 (-.f64 3 (/.f64 (*.f64 2 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 x x) (*.f64 y y)))","(fma.f64 2 (*.f64 y x) (fma.f64 y y (*.f64 x x)))","(pow.f64 y 6)","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (pow.f64 y 6))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (pow.f64 y 6))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (pow.f64 y 6))","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 y 4)) (pow.f64 y 4)) (pow.f64 x 2)) (pow.f64 y 6)))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (pow.f64 y 4) (*.f64 x (*.f64 x 3)) (pow.f64 y 6)))","(+.f64 (*.f64 (+.f64 (pow.f64 y 5) (*.f64 2 (pow.f64 y 5))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 y 4)) (pow.f64 y 4)) (pow.f64 x 2)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (+.f64 (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 y 6))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 y 6))))","(pow.f64 x 6)","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (pow.f64 x 6))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 (*.f64 y 3) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (pow.f64 x 6))","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (pow.f64 x 6)))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (*.f64 (pow.f64 x 4) (fma.f64 3 (*.f64 y y) (*.f64 x x))))","(+.f64 (*.f64 (+.f64 (*.f64 2 y) y) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(pow.f64 x 6)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (pow.f64 x 6))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 (*.f64 y 3) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (pow.f64 x 6))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (pow.f64 x 6)))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (*.f64 (pow.f64 x 4) (fma.f64 3 (*.f64 y y) (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 5))) (+.f64 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 4)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(pow.f64 x 6)","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (pow.f64 x 6))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 (*.f64 y 3) (pow.f64 x 5) (pow.f64 x 6))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (pow.f64 x 6))","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (pow.f64 x 4) (*.f64 2 (pow.f64 x 4)))) (pow.f64 x 6)))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (pow.f64 x 6)))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (*.f64 (pow.f64 x 4) (fma.f64 3 (*.f64 y y) (*.f64 x x))))","(+.f64 (*.f64 y (+.f64 (pow.f64 x 5) (*.f64 2 (pow.f64 x 5)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (pow.f64 x 4) (*.f64 2 (pow.f64 x 4)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))) (pow.f64 x 6))))","(fma.f64 (*.f64 3 y) (pow.f64 x 5) (fma.f64 (*.f64 3 (*.f64 y y)) (pow.f64 x 4) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 x 6))))","(fma.f64 y (*.f64 3 (pow.f64 x 5)) (fma.f64 (*.f64 y y) (*.f64 3 (pow.f64 x 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 x 6))))","(pow.f64 y 6)","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (pow.f64 y 6))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (pow.f64 y 6))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (pow.f64 y 6))","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (pow.f64 y 6)))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (pow.f64 y 4) (*.f64 x (*.f64 x 3)) (pow.f64 y 6)))","(+.f64 (*.f64 (pow.f64 y 5) (+.f64 (*.f64 2 x) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (+.f64 (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 y 6))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 y 6))))","(pow.f64 y 6)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (pow.f64 y 6))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (pow.f64 y 6))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (pow.f64 y 6))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (pow.f64 y 6)))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (pow.f64 y 6)))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (pow.f64 y 4) (*.f64 x (*.f64 x 3)) (pow.f64 y 6)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -2 x) (*.f64 -1 x)) (pow.f64 y 5))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 4)) (+.f64 (pow.f64 y 6) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(fma.f64 (*.f64 3 (pow.f64 y 5)) x (+.f64 (fma.f64 (*.f64 3 (pow.f64 y 4)) (*.f64 x x) (pow.f64 y 6)) (*.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 x 3) (pow.f64 y 6))))","(fma.f64 x (*.f64 3 (pow.f64 y 5)) (fma.f64 (*.f64 x x) (*.f64 3 (pow.f64 y 4)) (fma.f64 2 (*.f64 (pow.f64 y 3) (pow.f64 x 3)) (pow.f64 y 6))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(*.f64 (pow.f64 x 3) (neg.f64 y))","(*.f64 y (neg.f64 (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))","(fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3)))","(*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x))))))","(fma.f64 x (pow.f64 y 3) (-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3))))","(fma.f64 x (pow.f64 y 3) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(pow.f64 y 4)","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(+.f64 (fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4)))","(*.f64 (*.f64 y y) (+.f64 (-.f64 (*.f64 y y) (*.f64 x x)) (*.f64 y x)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(pow.f64 y 4)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2))))))","(+.f64 (fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4)))","(*.f64 (*.f64 y y) (+.f64 (-.f64 (*.f64 y y) (*.f64 x x)) (*.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (*.f64 (pow.f64 y 2) (-.f64 (pow.f64 x 2) (*.f64 2 (pow.f64 x 2)))))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(pow.f64 y 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4)))","(+.f64 (fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4)))","(*.f64 (*.f64 y y) (+.f64 (-.f64 (*.f64 y y) (*.f64 x x)) (*.f64 y x)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(*.f64 (pow.f64 x 3) (neg.f64 y))","(*.f64 y (neg.f64 (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)))","(fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3)))","(*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x))))))","(fma.f64 x (pow.f64 y 3) (-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3))))","(fma.f64 x (pow.f64 y 3) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (pow.f64 y 4))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(*.f64 -1 (*.f64 y (pow.f64 x 3)))","(*.f64 (pow.f64 x 3) (neg.f64 y))","(*.f64 y (neg.f64 (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)))","(fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))","(-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3)))","(*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x))))))","(fma.f64 x (pow.f64 y 3) (-.f64 (*.f64 y (*.f64 y (neg.f64 (*.f64 x x)))) (*.f64 y (pow.f64 x 3))))","(fma.f64 x (pow.f64 y 3) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 3))) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 2 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 (pow.f64 y 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x)))))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (fma.f64 -1 (*.f64 y (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (*.f64 (*.f64 y y) (+.f64 (*.f64 x x) (*.f64 -2 (*.f64 x x)))))))","(-.f64 (fma.f64 x (pow.f64 y 3) (fma.f64 (*.f64 y y) (neg.f64 (*.f64 x x)) (pow.f64 y 4))) (*.f64 y (pow.f64 x 3)))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 y (-.f64 (*.f64 (*.f64 x x) (neg.f64 y)) (pow.f64 x 3))))","(pow.f64 y 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 y 4)))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 y 4)))","(fma.f64 x (pow.f64 y 3) (fma.f64 y (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(pow.f64 x 4)","(+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 x 4))","(fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4))","(fma.f64 y (pow.f64 x 3) (pow.f64 x 4))","(*.f64 (pow.f64 x 3) (+.f64 y x))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (pow.f64 x 4)))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4)))","(fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4)))","(fma.f64 x (pow.f64 y 3) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x) (+.f64 (*.f64 (-.f64 (*.f64 2 y) y) (pow.f64 x 3)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(pow.f64 x 4)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (pow.f64 x 4))","(fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4))","(fma.f64 y (pow.f64 x 3) (pow.f64 x 4))","(*.f64 (pow.f64 x 3) (+.f64 y x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (+.f64 (pow.f64 x 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4)))","(fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4)))","(fma.f64 x (pow.f64 y 3) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 y) (*.f64 -1 y)) (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (+.f64 (pow.f64 x 4) (*.f64 -1 (*.f64 (-.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 -1 (pow.f64 y 3))) x)))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(pow.f64 x 4)","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 x 4))","(fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4))","(fma.f64 y (pow.f64 x 3) (pow.f64 x 4))","(*.f64 (pow.f64 x 3) (+.f64 y x))","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 x 4)))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 x 4)))","(fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4)))","(fma.f64 x (pow.f64 y 3) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(pow.f64 y 4)","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (pow.f64 y 4)))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 y 4)))","(fma.f64 x (pow.f64 y 3) (fma.f64 y (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x)) (+.f64 (*.f64 y (-.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 x 3))) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))","(pow.f64 y 4)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4))","(fma.f64 (pow.f64 y 3) (-.f64 (*.f64 2 x) x) (pow.f64 y 4))","(fma.f64 x (pow.f64 y 3) (pow.f64 y 4))","(*.f64 (pow.f64 y 3) (+.f64 y x))","(+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -1 (pow.f64 x 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (pow.f64 y 4)))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (pow.f64 y 4)))","(fma.f64 x (pow.f64 y 3) (fma.f64 y (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -1 (pow.f64 x 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -2 x) (*.f64 -1 x)))) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (-.f64 (*.f64 2 (pow.f64 y 3)) (pow.f64 y 3)) x (fma.f64 (-.f64 (*.f64 y 2) y) (pow.f64 x 3) (+.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (pow.f64 y 4) (fma.f64 y (pow.f64 x 3) (fma.f64 x (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 y x)) (*.f64 (pow.f64 x 3) (+.f64 y x)))"]],"stop":[["node limit",1]],"time":52.072021484375,"type":"simplify"},{"compiler":[[17756,6584]],"time":111.93994140625,"type":"eval"},{"alts":[["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","done",42.14281398566971],["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","done",0.0078125]],"compiler":[[53,16],[11,6]],"count":[[361,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[359,0],"picked":[1,1]}],"min-error":[0],"time":96.488037109375,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["x",0.0078125,1],["y",0.0078125,1],["(*.f64 (+.f64 x y) (+.f64 x y))",0.0078125,1],["(+.f64 x y)",0.0078125,1]],"compiler":[[3,2],[3,2],[9,4],[5,3],[69,21]],"count":[[3,1]],"inputs":[["(/.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) (pow.f64 (*.f64 y (+.f64 x y)) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 x y)) (*.f64 x (+.f64 x y))) (-.f64 (*.f64 (*.f64 y (+.f64 x y)) (*.f64 y (+.f64 x y))) (*.f64 (*.f64 x (+.f64 x y)) (*.f64 y (+.f64 x y))))))","(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))","(*.f64 (+.f64 x y) (+.f64 x y))"]],"link":["."],"name":["Examples.Basics.BasicTests:f3 from sbv-4.4"],"oracle":[42.15453273566971],"outputs":[["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))"]],"time":13.39599609375,"times":[["x",3.109130859375],["y",3.14208984375],["(*.f64 (+.f64 x y) (+.f64 x y))",3.018798828125],["(+.f64 x y)",3.117919921875]],"type":"regimes"},{"compiler":[[11,6]],"egraph":[[1,8,12,2.9916e-5],[0,7,12,1.8625e-5]],"inputs":[["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 y y (*.f64 x (fma.f64 y 2 x)))"]],"stop":[["done",1],["saturated",1]],"time":8.657958984375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[11,6],[11,6],[11,6]],"remove-preprocessing":[[]],"time":16.22705078125,"type":"end"}]