[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.6497556329704821,0.10829260549508035,0.24195176153443754],[11,0.620487361215055,0.1619511037133634,0.2175615350715816],[10,0.5853654351085424,0.20682912040501833,0.20780544448643923],[9,0.5307313278317451,0.30439002625644207,0.16487864591181278],[8,0.46829234808683395,0.37463387846946716,0.15707377344369888],[7,0.37463387846946716,0.49951183795928955,0.1258542835712433],[6,0.24975591897964478,0.6243897974491119,0.1258542835712433],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":30.109130859375,"type":"analyze"},{"outcomes":[["body",256,"invalid",16.697265625,462],["body",256,"valid",303.0517578125,8256]],"time":327.781005859375,"type":"sample"},{"compiler":[[11,7]],"egraph":[[0,2,2,1.167e-6],[4,134,20,0.000914375],[3,130,20,0.00067825],[2,77,20,0.000442],[1,38,20,0.000208917],[0,12,20,6.925e-5]],"inputs":[["0","1"],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (+.f64 (*.f64 y y) (*.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (+.f64 (*.f64 y y) (*.f64 y x)))","(*.f64 2 (*.f64 y (+.f64 y x)))","(*.f64 2 (*.f64 y (+.f64 x y)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.035888671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,80,10,0.0005957079999999999],[3,76,10,0.00044729099999999994],[2,43,10,0.000284125],[1,20,10,0.00013825],[0,8,10,4.6916e-5]],"inputs":[["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 x y)))"]],"stop":[["saturated",1]],"time":11.720947265625,"type":"simplify"},{"compiler":[[18,11]],"time":0.34716796875,"type":"eval"},{"alts":[["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","next",0.015625]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.802978515625,"type":"prune"},{"compiler":[[27,8]],"locations":[["(+.f64 (*.f64 x x) (*.f64 x y))",0.0078125,true],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))",0.0078125,true]],"time":4.83203125,"type":"localize"},{"count":[[2,48]],"series":[["(+.f64 (*.f64 x x) (*.f64 x y))","y","-inf",0.1669921875],["(+.f64 (*.f64 x x) (*.f64 x y))","y","inf",0.14208984375],["(+.f64 (*.f64 x x) (*.f64 x y))","y","0",0.172119140625],["(+.f64 (*.f64 x x) (*.f64 x y))","x","-inf",0.153076171875],["(+.f64 (*.f64 x x) (*.f64 x y))","x","inf",0.14990234375],["(+.f64 (*.f64 x x) (*.f64 x y))","x","0",0.180908203125],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","y","-inf",0.31298828125],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","y","inf",0.358154296875],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","y","0",0.39501953125],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","x","-inf",0.47900390625],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","x","inf",0.510009765625],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","x","0",0.518798828125]],"time":3.69384765625,"type":"series"},{"count":[[2,61]],"egraph":[[2,2446,17,0.021666541],[1,178,17,0.003240249],[0,8,17,0.000228541]],"inputs":[["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))","(+.f64 (*.f64 x x) (*.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 x x)) (*.f64 x (*.f64 y 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y 2)) (*.f64 2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2 (*.f64 x x)) 1) (*.f64 (*.f64 x (*.f64 y 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 2 (*.f64 x (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2 (*.f64 x x)) 3) (pow.f64 (*.f64 x (*.f64 y 2)) 3)) (+.f64 (*.f64 (*.f64 2 (*.f64 x x)) (*.f64 2 (*.f64 x x))) (-.f64 (*.f64 (*.f64 x (*.f64 y 2)) (*.f64 x (*.f64 y 2))) (*.f64 (*.f64 2 (*.f64 x x)) (*.f64 x (*.f64 y 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 2 (*.f64 x x)) (*.f64 2 (*.f64 x x))) (*.f64 (*.f64 x (*.f64 y 2)) (*.f64 x (*.f64 y 2)))) (-.f64 (*.f64 2 (*.f64 x x)) (*.f64 x (*.f64 y 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3)) 2) (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2)) 2) (*.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3))) (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2))) (*.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (*.f64 x (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (*.f64 x (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 4 (pow.f64 (*.f64 x (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 x x) (*.f64 x (*.f64 y 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 x 4) (*.f64 x (-.f64 x y))) (/.f64 (pow.f64 (*.f64 x y) 2) (*.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) 2) (cbrt.f64 (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (+.f64 x y))) (sqrt.f64 (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3)) (/.f64 1 (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2)) (/.f64 1 (*.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y))) (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (-.f64 x y)) (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3)) (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3)) (+.f64 (pow.f64 (*.f64 x y) 2) (-.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2)) (*.f64 x (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 6) (pow.f64 (*.f64 x y) 3))) (neg.f64 (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (pow.f64 x 3) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 x y) 2))) (neg.f64 (*.f64 x (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x y) 2) (pow.f64 x 4)) (-.f64 (*.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (cbrt.f64 (*.f64 x y)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 (*.f64 x x)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x y)) (sqrt.f64 (*.f64 x y)) (*.f64 x x))))))"]],"rules":[["egg-rr",39],["egg-rr",22]],"stop":[["node limit",1]],"time":43.651123046875,"type":"rewrite"},{"count":[[109,73]],"egraph":[[22,6866,372,0.117825334],[21,6830,372,0.101113167],[20,6752,372,0.09229125],[19,6444,372,0.08269875],[18,6128,372,0.07391975],[17,5702,372,0.065898708],[16,4842,372,0.057521625],[15,4138,372,0.048460334],[14,3548,372,0.040985292],[13,3088,372,0.034293667],[12,2714,372,0.028840125],[11,2398,372,0.023925542],[10,2149,372,0.019644292],[9,1976,372,0.01568675],[8,1838,372,0.012402708],[7,1671,372,0.009396916],[6,1183,372,0.006366541],[5,750,372,0.003966291],[4,264,372,0.002048666],[3,116,372,0.0009354579999999999],[2,54,372,0.000500625],[1,27,372,0.00025954099999999996],[0,11,408,0.000101333]],"inputs":[["(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(+.f64 (*.f64 y x) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 x) y)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 x) y)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 x) y)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (fma.f64 y x (*.f64 x x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 x (*.f64 (+.f64 y x) 2))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))","(+.f64 (*.f64 y x) (pow.f64 x 2))","(fma.f64 y x (*.f64 x x))","(*.f64 x (+.f64 x y))","(*.f64 x (+.f64 y x))"]],"stop":[["node limit",1]],"time":145.4150390625,"type":"simplify"},{"compiler":[[977,510]],"time":10.68896484375,"type":"eval"},{"alts":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))","fresh",0.0078125],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","next",0.0078125]],"compiler":[[10,6],[12,8],[10,6],[12,8]],"count":[[74,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[73,2],"picked":[1,0]}],"min-error":[0],"time":12.712890625,"type":"prune"},{"compiler":[[26,14]],"locations":[["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))",0.0078125,true]],"time":6.031982421875,"type":"localize"},{"count":[[1,24]],"series":[["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","y","-inf",0.242919921875],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","y","inf",0.225830078125],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","y","0",0.283935546875],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","x","-inf",0.2431640625],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","x","inf",0.25],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","x","0",0.627197265625]],"time":1.97802734375,"type":"series"},{"count":[[1,22]],"egraph":[[2,1880,13,0.018256584],[1,161,13,0.0026222090000000003],[0,8,14,0.000219209]],"inputs":[["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 2 y)) (*.f64 (*.f64 x x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 2) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x x) 2) 1) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) 2) (cbrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) (sqrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 x x) 2) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3)) (+.f64 (*.f64 (*.f64 (*.f64 x x) 2) (*.f64 (*.f64 x x) 2)) (-.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 2) (*.f64 (*.f64 (*.f64 x x) 2) (*.f64 x (*.f64 2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 x x) 2) (*.f64 (*.f64 x x) 2)) (pow.f64 (*.f64 x (*.f64 2 y)) 2)) (-.f64 (*.f64 (*.f64 x x) 2) (*.f64 x (*.f64 2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":36.5419921875,"type":"rewrite"},{"count":[[46,29]],"egraph":[[22,6868,222,0.117170168],[21,6834,222,0.10045554300000001],[20,6756,222,0.09161141800000001],[19,6446,222,0.08205450100000002],[18,6130,222,0.07326075100000001],[17,5708,222,0.06514500100000001],[16,4848,222,0.056846751],[15,4134,222,0.047896209],[14,3546,222,0.040501459000000004],[13,3089,222,0.033821376],[12,2717,222,0.028313251],[11,2399,222,0.023453793],[10,2150,222,0.019234126],[9,1980,222,0.015392709000000001],[8,1842,222,0.012174751000000001],[7,1675,222,0.009237126],[6,1187,222,0.006215584],[5,753,222,0.0038649590000000003],[4,267,222,0.0019613340000000003],[3,117,222,0.000875125],[2,55,222,0.000452542],[1,26,222,0.000225042],[0,10,276,8.1167e-5]],"inputs":[["(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))"]],"stop":[["node limit",1]],"time":138.162109375,"type":"simplify"},{"compiler":[[391,190]],"time":4.2109375,"type":"eval"},{"alts":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))","next",0.0078125],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","done",0.0078125]],"compiler":[[10,6],[12,8],[10,6]],"count":[[31,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[29,0],"picked":[1,1]}],"min-error":[0],"time":4.43896484375,"type":"prune"},{"compiler":[[22,7]],"locations":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))",0.0078125,true]],"time":4.2041015625,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))","y","-inf",0.231201171875],["(*.f64 2 (fma.f64 x x (*.f64 x y)))","y","inf",0.197998046875],["(*.f64 2 (fma.f64 x x (*.f64 x y)))","y","0",0.25],["(*.f64 2 (fma.f64 x x (*.f64 x y)))","x","-inf",0.375],["(*.f64 2 (fma.f64 x x (*.f64 x y)))","x","inf",0.294921875],["(*.f64 2 (fma.f64 x x (*.f64 x y)))","x","0",0.35595703125]],"time":1.785888671875,"type":"series"},{"count":[[1,13]],"egraph":[[2,1593,10,0.016696625],[1,139,10,0.002230083],[0,7,11,0.00019025]],"inputs":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 2) (*.f64 (*.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 x x)) (*.f64 2 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 2 (*.f64 x (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (*.f64 x (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (*.f64 x (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (*.f64 x (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (*.f64 x (+.f64 x y)))))))))"]],"rules":[["egg-rr",13]],"stop":[["node limit",1]],"time":33.824951171875,"type":"rewrite"},{"count":[[37,20]],"egraph":[[22,6868,222,0.11686975],[21,6834,222,0.10030575],[20,6756,222,0.091441417],[19,6446,222,0.081829875],[18,6130,222,0.073116875],[17,5708,222,0.065073334],[16,4848,222,0.05678325],[15,4134,222,0.0478105],[14,3546,222,0.040414834],[13,3089,222,0.033776125],[12,2717,222,0.028322083999999997],[11,2399,222,0.023404375999999998],[10,2150,222,0.019219917],[9,1980,222,0.015358708999999998],[8,1842,222,0.012153833999999999],[7,1675,222,0.00921325],[6,1187,222,0.006204459],[5,753,222,0.003856334],[4,267,222,0.0019503749999999999],[3,117,222,0.000872625],[2,55,222,0.00045354200000000003],[1,26,222,0.000223125],[0,10,276,7.9584e-5]],"inputs":[["(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 (*.f64 2 x) x)","(*.f64 x (*.f64 2 x))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (*.f64 y x)) (*.f64 2 (pow.f64 x 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(*.f64 2 (*.f64 y x))","(*.f64 (*.f64 2 y) x)","(*.f64 x (*.f64 2 y))","(*.f64 y (*.f64 2 x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 2 (*.f64 y x)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 y x)))","(*.f64 2 (*.f64 x (+.f64 x y)))","(*.f64 2 (*.f64 x (+.f64 y x)))","(*.f64 (+.f64 y x) (*.f64 2 x))","(*.f64 x (*.f64 2 (+.f64 y x)))"]],"stop":[["node limit",1]],"time":137.791015625,"type":"simplify"},{"compiler":[[180,99]],"time":2.506103515625,"type":"eval"},{"alts":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))","done",0.0078125],["(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","done",0.0078125]],"compiler":[[10,6],[12,8]],"count":[[22,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[20,0],"picked":[1,1]}],"min-error":[0],"time":2.902099609375,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["x",0.0078125,1],["y",0.0078125,1],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))",0.0078125,1],["(+.f64 (*.f64 x x) (*.f64 x y))",0.0078125,1]],"compiler":[[3,2],[3,2],[11,7],[9,5],[29,15]],"count":[[3,1]],"inputs":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))","(fma.f64 (*.f64 x x) 2 (*.f64 x (*.f64 y 2)))","(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))"]],"link":["."],"name":["Linear.Matrix:fromQuaternion from linear-1.19.1.3, B"],"oracle":[0.015625],"outputs":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))"]],"time":12.81591796875,"times":[["x",2.843017578125],["y",3.011962890625],["(*.f64 2 (+.f64 (*.f64 x x) (*.f64 x y)))",3.31982421875],["(+.f64 (*.f64 x x) (*.f64 x y))",2.885986328125]],"type":"regimes"},{"compiler":[[10,6]],"egraph":[[1,9,11,2.8249e-5],[0,7,11,1.6458e-5]],"inputs":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (fma.f64 x x (*.f64 x y)))"]],"stop":[["done",1],["saturated",1]],"time":8.125,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[10,6]],"remove-preprocessing":[[]],"time":7.93603515625,"type":"end"}]