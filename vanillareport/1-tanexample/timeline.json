[{"compiler":[[72,53]],"method":["search"],"sampling":[[12,0.0002892152370389616,0.0020991428494824523,0.9976116419134786],[11,0.00027988571326274645,0.0021084723732586676,0.9976116419134786],[10,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[9,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[8,0.0002612266657103162,0.0021271314208110978,0.9976116419134786],[7,0.00022390857060545564,0.0021644495159159585,0.9976116419134785],[6,0.00014927238039573454,0.0022390857061256797,0.9976116419134786],[5,0.00014927238039573454,0.0022390857061256797,0.9976116419134786],[4,0.0,0.002388358086521414,0.9976116419134786],[3,0.0,0.002388358086521414,0.9976116419134786],[2,0.0,0.002388358086521414,0.9976116419134786],[1,0.0,0.002388358086521414,0.9976116419134786],[0,0.0,0.002388358086521414,0.9976116419134786]],"time":3050.944091796875,"type":"analyze"},{"outcomes":[["body",512,"valid",300.9326171875,1381],["body",1024,"valid",1760.36474609375,4803],["body",2048,"valid",189.043701171875,224],["body",256,"valid",202.780029296875,1848]],"time":2462.10693359375,"type":"sample"},{"compiler":[[13,9]],"egraph":[[1,4,4,7.791e-6],[0,4,4,6.541e-6],[10,3725,98,0.062264749],[9,3695,98,0.052080749],[8,3378,98,0.041012374000000004],[7,2664,98,0.029398249],[6,1705,98,0.017397749],[5,872,98,0.008241833],[4,446,98,0.0033877079999999997],[3,247,98,0.001577083],[2,123,98,0.0007989989999999999],[1,71,98,0.00036083299999999997],[0,35,98,0.000151875]],"inputs":[["0","1","2","3"],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(+.f64 y (-.f64 (tan.f64 (+.f64 x z)) (tan.f64 a)))","(+.f64 z (-.f64 (tan.f64 (+.f64 y x)) (tan.f64 a)))","(+.f64 a (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 x)))","(+.f64 x (-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a)))","(+.f64 x (-.f64 (tan.f64 (+.f64 a z)) (tan.f64 y)))","(+.f64 x (-.f64 (tan.f64 (+.f64 y a)) (tan.f64 z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1","3"],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))","(+.f64 y (-.f64 (tan.f64 (+.f64 x z)) (tan.f64 a)))","(+.f64 (tan.f64 (+.f64 x z)) (-.f64 y (tan.f64 a)))","(+.f64 z (-.f64 (tan.f64 (+.f64 y x)) (tan.f64 a)))","(+.f64 z (-.f64 (tan.f64 (+.f64 x y)) (tan.f64 a)))","(+.f64 (tan.f64 (+.f64 x y)) (-.f64 z (tan.f64 a)))","(+.f64 a (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 x)))","(+.f64 (tan.f64 (+.f64 y z)) (-.f64 a (tan.f64 x)))","(+.f64 x (-.f64 (tan.f64 (+.f64 z y)) (tan.f64 a)))","(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))","(+.f64 x (-.f64 (tan.f64 (+.f64 a z)) (tan.f64 y)))","(+.f64 x (-.f64 (tan.f64 (+.f64 z a)) (tan.f64 y)))","(+.f64 x (-.f64 (tan.f64 (+.f64 y a)) (tan.f64 z)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort y z)"]],"time":88.7861328125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,622,14,0.009406165999999999],[9,611,14,0.007799123999999999],[8,540,14,0.006171166],[7,436,14,0.0044117489999999995],[6,296,14,0.0027724159999999998],[5,162,14,0.001460999],[4,84,14,0.000713124],[3,48,14,0.000375082],[2,27,14,0.00020566600000000002],[1,16,14,0.000113416],[0,10,14,4.9416e-5]],"inputs":[["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))","(-.f64 (+.f64 x (tan.f64 (+.f64 y z))) (tan.f64 a))","(-.f64 (tan.f64 (+.f64 y z)) (-.f64 (tan.f64 a) x))","(+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))","(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))"]],"stop":[["saturated",1]],"time":19.850830078125,"type":"simplify"},{"compiler":[[22,11]],"time":0.34716796875,"type":"eval"},{"alts":[["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","next",11.930621482606362]],"compiler":[[13,9],[13,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[11.930621482606362],"time":0.90185546875,"type":"prune"},{"compiler":[[33,9]],"locations":[["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))",0.13444009999974788,true],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))",0.21366387386845886,true],["(tan.f64 a)",0.22169877930532603,true],["(tan.f64 (+.f64 y z))",2.535233094838779,true]],"time":7.873046875,"type":"localize"},{"count":[[4,120]],"series":[["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","z","-inf",0.21484375],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","z","inf",0.22802734375],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","z","0",0.4580078125],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","y","-inf",0.214111328125],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","y","inf",0.22705078125],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","y","0",0.470947265625],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","a","-inf",0.197021484375],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","a","inf",0.22998046875],["(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))","a","0",0.2158203125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","z","-inf",1.06396484375],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","z","inf",0.673095703125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","z","0",0.423095703125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","y","-inf",0.251953125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","y","inf",0.760009765625],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","y","0",0.426025390625],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","a","-inf",0.22314453125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","a","inf",1.195068359375],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","a","0",0.322021484375],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","x","-inf",0.2060546875],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","x","inf",0.30908203125],["(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","x","0",1.034912109375],["(tan.f64 a)","a","-inf",0.47802734375],["(tan.f64 a)","a","inf",0.408935546875],["(tan.f64 a)","a","0",0.695068359375],["(tan.f64 (+.f64 y z))","z","-inf",0.470947265625],["(tan.f64 (+.f64 y z))","z","inf",0.444091796875],["(tan.f64 (+.f64 y z))","z","0",0.98681640625],["(tan.f64 (+.f64 y z))","y","-inf",0.5009765625],["(tan.f64 (+.f64 y z))","y","inf",0.510009765625],["(tan.f64 (+.f64 y z))","y","0",0.9951171875]],"time":15.35693359375,"type":"series"},{"count":[[4,275]],"egraph":[[2,3792,34,0.029832042],[1,241,34,0.004941],[0,10,34,0.000252167]],"inputs":[["(tan.f64 (+.f64 y z))","(tan.f64 a)","(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","(-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 (+.f64 y z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (tan.f64 (+.f64 y z))))) (log.f64 (sqrt.f64 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 (+.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 (+.f64 y z))) (sqrt.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (+.f64 y z)) (sin.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (+.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 (+.f64 y z))) (neg.f64 (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 (+.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 (+.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 y z)) (sin.f64 (+.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (+.f64 (tan.f64 y) (tan.f64 z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 (+.f64 y z))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (tan.f64 a)))) (log.f64 (sqrt.f64 (exp.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 a)) 2) (cbrt.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 a) (/.f64 1 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 a) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 a) (cos.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 a)) (neg.f64 (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 a) (sin.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 x (tan.f64 a)) 1) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3)) (/.f64 1 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2)) (/.f64 1 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (-.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x)) (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3)) (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2)) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3))) (neg.f64 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) (neg.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 3)) (fma.f64 x x (-.f64 (pow.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (*.f64 x (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 x (tan.f64 a)) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (+.f64 (pow.f64 (-.f64 x (tan.f64 a)) 2) (-.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2) (*.f64 (-.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2)) (-.f64 x (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 x (tan.f64 a)) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (-.f64 (-.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x)) (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (-.f64 x (tan.f64 a))) (exp.f64 (neg.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (exp.f64 (neg.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (-.f64 x (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (tan.f64 (+.f64 y z))) (exp.f64 (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z)))) (exp.f64 (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (tan.f64 (+.f64 y z))) (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z)))) (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (/.f64 1 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (/.f64 1 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (exp.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (-.f64 x (tan.f64 a))) (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 (+.f64 y z)) 1 (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 1 (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 1 (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) 1 (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (tan.f64 a)) (neg.f64 (neg.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 (+.f64 y z))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) 2) (cbrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 (+.f64 y z))) (sqrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (neg.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (sqrt.f64 (+.f64 (tan.f64 (+.f64 y z)) (-.f64 x (tan.f64 a)))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3)) (/.f64 1 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3)) (/.f64 1 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3)) (/.f64 1 (fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (*.f64 x x))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2)) (/.f64 1 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2)) (/.f64 1 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2)) (/.f64 1 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z)))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (tan.f64 a)) 1 (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) 2) (cbrt.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 a))) 2) (cbrt.f64 (-.f64 x (tan.f64 a))) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 a))) 2) (cbrt.f64 (-.f64 x (tan.f64 a))) (neg.f64 (neg.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (sqrt.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (tan.f64 a))) (sqrt.f64 (-.f64 x (tan.f64 a))) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (tan.f64 a))) (sqrt.f64 (-.f64 x (tan.f64 a))) (neg.f64 (neg.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (neg.f64 (neg.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (-.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (fma.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (-.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (-.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) (+.f64 (neg.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2)) (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 a) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (tan.f64 a) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (/.f64 1 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (/.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (-.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2)) (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3))) (neg.f64 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2))) (neg.f64 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (sin.f64 a) (cos.f64 (+.f64 y z))) (*.f64 (cos.f64 a) (sin.f64 (+.f64 y z)))) (*.f64 (cos.f64 a) (cos.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (neg.f64 (tan.f64 (+.f64 y z))) 3)) (+.f64 (pow.f64 (tan.f64 a) 2) (-.f64 (pow.f64 (neg.f64 (tan.f64 (+.f64 y z))) 2) (*.f64 (tan.f64 a) (neg.f64 (tan.f64 (+.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (neg.f64 (tan.f64 (+.f64 y z))) 2)) (-.f64 (tan.f64 a) (neg.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2)) (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (tan.f64 a))) (exp.f64 (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (tan.f64 a)) (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (tan.f64 a))) (+.f64 1 (expm1.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (tan.f64 a))) (exp.f64 (neg.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (tan.f64 a)) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (tan.f64 (+.f64 y z)))) (exp.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z)))) (exp.f64 (tan.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (tan.f64 (+.f64 y z)))) (+.f64 1 (expm1.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z)))) (+.f64 1 (expm1.f64 (tan.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 a) 1 (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 a) 1 (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 1 (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 1 (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 1 (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 a) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (tan.f64 a) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) 2) (cbrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 a)) 2) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (tan.f64 a)) (pow.f64 (cbrt.f64 (tan.f64 a)) 2) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (tan.f64 a)) 2) (cbrt.f64 (tan.f64 a)) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (tan.f64 a)) 2) (cbrt.f64 (tan.f64 a)) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 (+.f64 y z))) (neg.f64 (sqrt.f64 (tan.f64 (+.f64 y z)))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (sqrt.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z)))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 a)) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 a)) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 a) (/.f64 1 (cos.f64 a)) (neg.f64 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 a) (/.f64 1 (cos.f64 a)) (*.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (/.f64 1 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (/.f64 1 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 3) (pow.f64 (tan.f64 (+.f64 y z)) 3)) (/.f64 1 (fma.f64 (tan.f64 (+.f64 y z)) (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)) (pow.f64 (tan.f64 a) 2))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (/.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (/.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (tan.f64 a) 2) (pow.f64 (tan.f64 (+.f64 y z)) 2)) (/.f64 1 (+.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (tan.f64 (+.f64 y z)))) 2) (cbrt.f64 (neg.f64 (tan.f64 (+.f64 y z)))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (tan.f64 (+.f64 y z)))) (sqrt.f64 (neg.f64 (tan.f64 (+.f64 y z)))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (tan.f64 (+.f64 y z)))) (sqrt.f64 (tan.f64 (+.f64 y z))) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (tan.f64 (+.f64 y z)) (tan.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (-.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (tan.f64 (+.f64 y z))) 1 (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (-.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 (+.f64 y z)))) (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (-.f64 (sqrt.f64 (tan.f64 a)) (sqrt.f64 (tan.f64 (+.f64 y z)))) (+.f64 (neg.f64 (tan.f64 (+.f64 y z))) (tan.f64 (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2))) (cbrt.f64 (tan.f64 (+.f64 y z))) (tan.f64 a))))))"]],"rules":[["egg-rr",95],["egg-rr",123],["egg-rr",26],["egg-rr",31]],"stop":[["node limit",1]],"time":69.781005859375,"type":"rewrite"},{"count":[[395,356]],"egraph":[[2,1719,3521,0.015282749],[1,538,3667,0.003699207],[0,179,3785,0.000947416]],"inputs":[["(/.f64 (sin.f64 z) (cos.f64 z))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 y) (cos.f64 y))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)))","(+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","a","(+.f64 a (*.f64 1/3 (pow.f64 a 3)))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(+.f64 (*.f64 17/315 (pow.f64 a 7)) (+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x)","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1 a) x))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x)))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(+.f64 a (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))))","(+.f64 a (+.f64 (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (+.f64 (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))) (*.f64 1/3 (pow.f64 a 3)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))) (pow.f64 y 3)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y)))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))) (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (sin.f64 z) (cos.f64 z))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z))))","(fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))))","(fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (fma.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (cos.f64 z)) (*.f64 (sin.f64 z) (*.f64 y y)) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (pow.f64 (cos.f64 z) 2) (pow.f64 (sin.f64 z) 2))) (+.f64 1/6 (/.f64 (*.f64 1/6 (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2)))))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(+.f64 (-.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 (pow.f64 y 3) (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) 1/6 1/6) (*.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)))))) (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))))","(-.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (fma.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (cos.f64 z)) (*.f64 (sin.f64 z) (*.f64 y y)) (/.f64 (sin.f64 z) (cos.f64 z)))) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)) (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/3))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 y) (cos.f64 y))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 z (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))))","(fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z)))","(+.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 z (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))) (/.f64 (*.f64 z z) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))))","(fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (fma.f64 (/.f64 (*.f64 z z) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))))","(+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z)))) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z (neg.f64 (*.f64 (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1/6 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))))","(+.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))) (-.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 (+.f64 (fma.f64 -1/2 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2)))) (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) 1/6)) (pow.f64 z 3))))","(-.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (fma.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) -1/3) (*.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))) (pow.f64 z 3) (*.f64 (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (cos.f64 y)) (*.f64 z (*.f64 z (sin.f64 y))))))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","(/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z))))","(/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))","a","(+.f64 a (*.f64 1/3 (pow.f64 a 3)))","(fma.f64 1/3 (pow.f64 a 3) a)","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(fma.f64 2/15 (pow.f64 a 5) (+.f64 a (*.f64 1/3 (pow.f64 a 3))))","(fma.f64 2/15 (pow.f64 a 5) (fma.f64 1/3 (pow.f64 a 3) a))","(fma.f64 1/3 (pow.f64 a 3) (fma.f64 2/15 (pow.f64 a 5) a))","(+.f64 (*.f64 17/315 (pow.f64 a 7)) (+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(fma.f64 17/315 (pow.f64 a 7) (fma.f64 2/15 (pow.f64 a 5) (+.f64 a (*.f64 1/3 (pow.f64 a 3)))))","(fma.f64 17/315 (pow.f64 a 7) (fma.f64 2/15 (pow.f64 a 5) (fma.f64 1/3 (pow.f64 a 3) a)))","(fma.f64 2/15 (pow.f64 a 5) (fma.f64 17/315 (pow.f64 a 7) (fma.f64 1/3 (pow.f64 a 3) a)))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(/.f64 (sin.f64 a) (cos.f64 a))","(-.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x)","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) x)","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1 a) x))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (fma.f64 -1 a x))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x a))","(+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (fma.f64 -1/3 (pow.f64 a 3) (fma.f64 -1 a x)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (fma.f64 (pow.f64 a 3) -1/3 (-.f64 x a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 (fma.f64 (pow.f64 a 3) -1/3 x) a))","(+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (*.f64 -1 a) x))))","(fma.f64 -2/15 (pow.f64 a 5) (+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (fma.f64 -1/3 (pow.f64 a 3) (fma.f64 -1 a x))))","(+.f64 (fma.f64 (pow.f64 a 3) -1/3 (-.f64 x a)) (fma.f64 (pow.f64 a 5) -2/15 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))))","(+.f64 (-.f64 x a) (fma.f64 (pow.f64 a 5) -2/15 (fma.f64 (pow.f64 a 3) -1/3 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))))","(+.f64 (fma.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (cos.f64 z)) (*.f64 (sin.f64 z) (*.f64 y y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y x) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (pow.f64 (cos.f64 z) 2) (pow.f64 (sin.f64 z) 2))) (+.f64 1/6 (/.f64 (*.f64 1/6 (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))) (-.f64 (-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (*.f64 (pow.f64 y 3) (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) 1/6 1/6) (*.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)))))) (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 (-.f64 (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) y (fma.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (cos.f64 z)) (*.f64 (sin.f64 z) (*.f64 y y)) (/.f64 (sin.f64 z) (cos.f64 z)))) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)) (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/3)))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z x) (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 z z) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))))) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z x) (/.f64 (sin.f64 a) (cos.f64 a)))))","(+.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))) (+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) x) (-.f64 (fma.f64 (/.f64 (*.f64 z z) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (sin.f64 y) (cos.f64 y))) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z)))) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z (fma.f64 -1 (*.f64 (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1/6 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3)) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 x (*.f64 (+.f64 (fma.f64 -1/2 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2)))) (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) 1/6)) (pow.f64 z 3)))) (-.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))) (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (fma.f64 (/.f64 (*.f64 z z) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 x (fma.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) -1/3) (*.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))) (pow.f64 z 3) (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(neg.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(/.f64 (neg.f64 (sin.f64 (+.f64 z y))) (cos.f64 (+.f64 z y)))","(+.f64 a (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))))","(+.f64 a (neg.f64 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))))","(-.f64 a (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(+.f64 a (+.f64 (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 a (fma.f64 -1 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 a (-.f64 (*.f64 1/3 (pow.f64 a 3)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))))","(-.f64 (fma.f64 1/3 (pow.f64 a 3) a) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (+.f64 (*.f64 -1 (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z)))) (*.f64 1/3 (pow.f64 a 3)))))","(fma.f64 2/15 (pow.f64 a 5) (+.f64 a (fma.f64 -1 (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))) (*.f64 1/3 (pow.f64 a 3)))))","(+.f64 (-.f64 (*.f64 1/3 (pow.f64 a 3)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y)))) (fma.f64 2/15 (pow.f64 a 5) a))","(-.f64 (fma.f64 1/3 (pow.f64 a 3) (fma.f64 2/15 (pow.f64 a 5) a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1)) (/.f64 (sin.f64 z) (cos.f64 z))))","(-.f64 (fma.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (fma.f64 y (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z))) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (*.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1))) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1) (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 y (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (-.f64 (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (/.f64 (sin.f64 z) (cos.f64 z)))))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))) (+.f64 1/6 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))))) (pow.f64 y 3)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) 1) y)))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (fma.f64 (fma.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (pow.f64 (cos.f64 z) 2) (pow.f64 (sin.f64 z) 2))) (+.f64 1/6 (/.f64 (*.f64 1/6 (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))))) (pow.f64 y 3) (*.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (-.f64 (fma.f64 y (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1) (*.f64 (pow.f64 y 3) (fma.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) 1/6 1/6) (*.f64 (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)))))) (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y))))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 y (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (fma.f64 (pow.f64 y 3) (+.f64 (*.f64 (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (pow.f64 (cos.f64 z) 2)) (pow.f64 (sin.f64 z) 2)) (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) -1/3)) (/.f64 (-.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))))) (/.f64 (sin.f64 z) (cos.f64 z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 z (*.f64 -1 y))) (cos.f64 (-.f64 z (*.f64 -1 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (-.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))) (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z)))) (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(fma.f64 z (-.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (/.f64 (*.f64 z z) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 z (-.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) 1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 1/6 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (+.f64 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z)))) (/.f64 (sin.f64 a) (cos.f64 a))) (*.f64 (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1/6 (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/2 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))))))) (pow.f64 z 3)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (-.f64 (fma.f64 (+.f64 (fma.f64 -1/2 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) -1) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2)))) (fma.f64 1/6 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) 1/6)) (pow.f64 z 3) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (/.f64 (cos.f64 y) (*.f64 z (*.f64 z (sin.f64 y))))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(fma.f64 z (-.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (-.f64 (fma.f64 (-.f64 (*.f64 (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) -1/3) (*.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))))) (pow.f64 z 3) (/.f64 (sin.f64 a) (cos.f64 a))) (fma.f64 (/.f64 (*.f64 z z) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 y z)) (cos.f64 (+.f64 y z))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (-.f64 y (*.f64 -1 z))) (cos.f64 (-.f64 y (*.f64 -1 z)))))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 (+.f64 z y)) (cos.f64 (+.f64 z y))))"]],"stop":[["node limit",1]],"time":58.404052734375,"type":"simplify"},{"compiler":[[8388,2712]],"time":60.62890625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.938530756191232],["(fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))","fresh",36.21730714439693],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))","fresh",0.33169762774200373],["(-.f64 x (-.f64 (tan.f64 a) (/.f64 1 (/.f64 (cos.f64 (+.f64 y z)) (sin.f64 (+.f64 y z))))))","fresh",11.919266441217266],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.918424486953176],["(pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)","fresh",12.14139015872713],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","next",0.30556424986148334],["(log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))","fresh",11.897997357336079],["(-.f64 x (-.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a))))) (tan.f64 (+.f64 y z))))","fresh",11.970277744690124],["(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","fresh",29.74868901224133]],"compiler":[[21,13],[21,12],[23,15],[20,13],[19,12],[29,17],[36,20],[19,15],[24,16],[33,23],[21,13],[21,12],[23,15],[20,13],[19,12],[29,17],[36,20],[19,15],[24,16],[33,23]],"count":[[357,10]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[356,10],"picked":[1,0]}],"min-error":[0.08623756092597981],"time":148.688232421875,"type":"prune"},{"compiler":[[142,36]],"locations":[["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))",0.19597626953688402,true],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))",0.20150375976844204,true],["(*.f64 (tan.f64 y) (tan.f64 z))",0.2109375,true],["(tan.f64 z)",0.22302631837909412,true]],"time":25.247802734375,"type":"localize"},{"count":[[4,108]],"series":[["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","z","-inf",0.197021484375],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","z","inf",0.175048828125],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","z","0",0.27197265625],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","y","-inf",0.1728515625],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","y","inf",0.205078125],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","y","0",0.705078125],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","a","-inf",0.171875],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","a","inf",0.205078125],["(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))","a","0",0.447998046875],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","z","-inf",1.18310546875],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","z","inf",1.259033203125],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","z","0",1.916015625],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","y","-inf",1.2548828125],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","y","inf",1.306884765625],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","y","0",1.35791015625],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","a","-inf",1.10205078125],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","a","inf",3.7578125],["(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","a","0",0.8720703125],["(*.f64 (tan.f64 y) (tan.f64 z))","z","-inf",0.376953125],["(*.f64 (tan.f64 y) (tan.f64 z))","z","inf",1.10498046875],["(*.f64 (tan.f64 y) (tan.f64 z))","z","0",0.491943359375],["(*.f64 (tan.f64 y) (tan.f64 z))","y","-inf",0.583984375],["(*.f64 (tan.f64 y) (tan.f64 z))","y","inf",1.31298828125],["(*.f64 (tan.f64 y) (tan.f64 z))","y","0",0.55810546875],["(tan.f64 z)","z","-inf",0.39599609375],["(tan.f64 z)","z","inf",0.40380859375],["(tan.f64 z)","z","0",0.34912109375]],"time":22.77001953125,"type":"series"},{"count":[[4,164]],"egraph":[[2,5485,71,0.037665459],[1,376,71,0.007252875],[0,17,73,0.000444167]],"inputs":[["(tan.f64 z)","(*.f64 (tan.f64 y) (tan.f64 z))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))))","(*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 z)) (pow.f64 (cbrt.f64 (tan.f64 z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 z)) (sqrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 z) (/.f64 1 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 z) (sin.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 z) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 z)) (neg.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 z)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 z) (tan.f64 y)) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (tan.f64 z)) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (tan.f64 z) (sin.f64 y)) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (tan.f64 y) (sin.f64 z)) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (tan.f64 y)) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (tan.f64 z) (tan.f64 y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1)) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1))) (cbrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1)) (sqrt.f64 (fma.f64 (tan.f64 z) (tan.f64 y) 1)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 (/.f64 1 (cos.f64 a)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (/.f64 (/.f64 1 (cos.f64 a)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) 2) (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (/.f64 (/.f64 1 (cos.f64 a)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) (sqrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (/.f64 1 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (neg.f64 (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (cos.f64 a)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) 1) (/.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 1) (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cos.f64 a)) (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 a)) (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (cos.f64 a)) (/.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) 2)) (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) 2)) (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a))) 2)) (/.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (cbrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))) (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (sqrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 2) (sqrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))) (/.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) (sqrt.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) (-.f64 1 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 3))) (fma.f64 (*.f64 (tan.f64 z) (tan.f64 y)) (fma.f64 (tan.f64 z) (tan.f64 y) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) (-.f64 1 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 2))) (fma.f64 (tan.f64 z) (tan.f64 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (neg.f64 (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3) (pow.f64 (*.f64 (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (cos.f64 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) (cos.f64 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 z) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (neg.f64 (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (tan.f64 y) (cos.f64 a)) -1) (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 z) (neg.f64 (cos.f64 a))) (*.f64 (tan.f64 y) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (tan.f64 y) (neg.f64 (cos.f64 a))) (*.f64 (tan.f64 z) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (tan.f64 y) (cos.f64 a)) 1) (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 (tan.f64 y) (cos.f64 a))) (*.f64 -1 (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y)) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 0 (*.f64 (tan.f64 y) (cos.f64 a))) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 3)) (+.f64 0 (+.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 2) (*.f64 0 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (tan.f64 y) (cos.f64 a)) 3) (pow.f64 (*.f64 (tan.f64 z) (cos.f64 a)) 3)) (fma.f64 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)) (-.f64 (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a))) (*.f64 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 2)) (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a))) (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))) (-.f64 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (tan.f64 y) 3) (pow.f64 (tan.f64 z) 3)) (cos.f64 a)) (fma.f64 (tan.f64 z) (-.f64 (tan.f64 z) (tan.f64 y)) (pow.f64 (tan.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (tan.f64 y) 2) (pow.f64 (tan.f64 z) 2)) (cos.f64 a)) (-.f64 (tan.f64 y) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 a)) (+.f64 (pow.f64 (tan.f64 y) 3) (pow.f64 (tan.f64 z) 3))) (fma.f64 (tan.f64 z) (-.f64 (tan.f64 z) (tan.f64 y)) (pow.f64 (tan.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cos.f64 a)) (-.f64 (pow.f64 (tan.f64 y) 2) (pow.f64 (tan.f64 z) 2))) (-.f64 (tan.f64 y) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 a) (+.f64 (pow.f64 (tan.f64 y) 3) (pow.f64 (tan.f64 z) 3))) (fma.f64 (tan.f64 z) (-.f64 (tan.f64 z) (tan.f64 y)) (pow.f64 (tan.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 a) (-.f64 (pow.f64 (tan.f64 y) 2) (pow.f64 (tan.f64 z) 2))) (-.f64 (tan.f64 y) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 a)) (+.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (exp.f64 (*.f64 (tan.f64 y) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (tan.f64 z) (tan.f64 y)) 3) (pow.f64 (cos.f64 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 z) (cos.f64 a) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 z) (neg.f64 (cos.f64 a)) (*.f64 (tan.f64 y) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 y) (cos.f64 a) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (tan.f64 y) (neg.f64 (cos.f64 a)) (*.f64 (tan.f64 z) (neg.f64 (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (tan.f64 z) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (tan.f64 z) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (tan.f64 y) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (*.f64 (cbrt.f64 (tan.f64 z)) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (tan.f64 y)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (tan.f64 y)) 2) (*.f64 (cbrt.f64 (tan.f64 y)) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 z)) (*.f64 (sqrt.f64 (tan.f64 z)) (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (tan.f64 y)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (tan.f64 z)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 y)) (*.f64 (sqrt.f64 (tan.f64 y)) (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (tan.f64 y) (cos.f64 a)) (*.f64 -1 (*.f64 (tan.f64 z) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 a)) (tan.f64 z) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cos.f64 a)) (tan.f64 y) (*.f64 (neg.f64 (cos.f64 a)) (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 y) (cos.f64 a)) 1 (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 y) (cos.f64 a)) -1 (*.f64 (*.f64 (tan.f64 z) (cos.f64 a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (cbrt.f64 (*.f64 (tan.f64 y) (cos.f64 a)))) (cbrt.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (cbrt.f64 (*.f64 (tan.f64 z) (cos.f64 a)))) (cbrt.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (sqrt.f64 (*.f64 (tan.f64 y) (cos.f64 a))) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (sqrt.f64 (*.f64 (tan.f64 z) (cos.f64 a))) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (tan.f64 y))) (*.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (tan.f64 y))) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (tan.f64 z))) (*.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (tan.f64 z))) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (tan.f64 y)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (tan.f64 y)) (sqrt.f64 (cos.f64 a))) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (tan.f64 z)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (tan.f64 z)) (sqrt.f64 (cos.f64 a))) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (tan.f64 y)) 2)) (cbrt.f64 (tan.f64 y)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (tan.f64 y))) (sqrt.f64 (tan.f64 y)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (tan.f64 z)) 2)) (cbrt.f64 (tan.f64 z)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (tan.f64 z))) (sqrt.f64 (tan.f64 z)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 y) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 y) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (tan.f64 z) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 z) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (tan.f64 z) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (tan.f64 y) (cos.f64 a)))))))"]],"rules":[["egg-rr",78],["egg-rr",42],["egg-rr",22],["egg-rr",22]],"stop":[["node limit",1]],"time":72.56396484375,"type":"rewrite"},{"count":[[272,238]],"egraph":[[2,2383,4037,0.017652624999999998],[1,693,4833,0.004821541],[0,214,4951,0.001136916]],"inputs":[["z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z))))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z)))))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (+.f64 (*.f64 17/315 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 7)) (cos.f64 z))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z))))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (pow.f64 z 5) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (pow.f64 z 5) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 17/315 (/.f64 (*.f64 (pow.f64 z 7) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))))","(+.f64 a (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))))","(+.f64 a (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (*.f64 1/3 (pow.f64 a 3)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (cos.f64 a))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (*.f64 (sin.f64 z) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 2))) (cos.f64 z)))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1/3 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (pow.f64 (cos.f64 z) 2)))))))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1/3 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y))))))) (pow.f64 z 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (*.f64 y (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))","(+.f64 (*.f64 (cos.f64 a) z) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3)))))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))"]],"method":["egg-herbie"],"outputs":[["z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(fma.f64 1/3 (pow.f64 z 3) z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(fma.f64 1/3 (pow.f64 z 3) (fma.f64 2/15 (pow.f64 z 5) z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))","(fma.f64 1/3 (pow.f64 z 3) (+.f64 (fma.f64 2/15 (pow.f64 z 5) z) (*.f64 17/315 (pow.f64 z 7))))","(fma.f64 1/3 (pow.f64 z 3) (fma.f64 2/15 (pow.f64 z 5) (fma.f64 17/315 (pow.f64 z 7) z)))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (sin.f64 z) (cos.f64 z))","(/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z))","(*.f64 (/.f64 y (cos.f64 z)) (sin.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z))))","(+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (pow.f64 y 3)))))","(fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)))","(fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (*.f64 (/.f64 y (cos.f64 z)) (sin.f64 z)))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z)))))","(fma.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z)) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 1/3 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (pow.f64 y 3))))))","(fma.f64 2/15 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 5)) (fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z))))","(fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (fma.f64 2/15 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 5)) (*.f64 (/.f64 y (cos.f64 z)) (sin.f64 z))))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (+.f64 (*.f64 17/315 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 7)) (cos.f64 z))) (*.f64 1/3 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 3)) (cos.f64 z))))))","(fma.f64 2/15 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 5)) (cos.f64 z)) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (fma.f64 17/315 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (pow.f64 y 7))) (*.f64 1/3 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (pow.f64 y 3)))))))","(+.f64 (fma.f64 2/15 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 5)) (fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)))) (*.f64 17/315 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 7))))","(fma.f64 2/15 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 5)) (fma.f64 1/3 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 3)) (fma.f64 17/315 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 y 7)) (*.f64 (/.f64 y (cos.f64 z)) (sin.f64 z)))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))","(/.f64 z (/.f64 (cos.f64 y) (sin.f64 y)))","(*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) z)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))","(fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y))))","(fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y)))","(fma.f64 1/3 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (pow.f64 z 3)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) z))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (pow.f64 z 5) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))))","(fma.f64 2/15 (/.f64 (pow.f64 z 5) (/.f64 (cos.f64 y) (sin.f64 y))) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y)))))","(fma.f64 2/15 (*.f64 (/.f64 (pow.f64 z 5) (cos.f64 y)) (sin.f64 y)) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y))))","(fma.f64 (/.f64 z (cos.f64 y)) (sin.f64 y) (fma.f64 2/15 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (pow.f64 z 5)) (*.f64 (/.f64 (pow.f64 z 3) (cos.f64 y)) (*.f64 (sin.f64 y) 1/3))))","(+.f64 (*.f64 2/15 (/.f64 (*.f64 (pow.f64 z 5) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 17/315 (/.f64 (*.f64 (pow.f64 z 7) (sin.f64 y)) (cos.f64 y))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 z 3) (sin.f64 y)) (cos.f64 y))) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))))","(fma.f64 2/15 (/.f64 (pow.f64 z 5) (/.f64 (cos.f64 y) (sin.f64 y))) (fma.f64 17/315 (/.f64 (pow.f64 z 7) (/.f64 (cos.f64 y) (sin.f64 y))) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y))))))","(fma.f64 2/15 (*.f64 (/.f64 (pow.f64 z 5) (cos.f64 y)) (sin.f64 y)) (fma.f64 17/315 (/.f64 (pow.f64 z 7) (/.f64 (cos.f64 y) (sin.f64 y))) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (/.f64 (cos.f64 y) (sin.f64 y))) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y)))))","(fma.f64 17/315 (*.f64 (/.f64 (pow.f64 z 7) (cos.f64 y)) (sin.f64 y)) (fma.f64 (/.f64 z (cos.f64 y)) (sin.f64 y) (fma.f64 2/15 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (pow.f64 z 5)) (*.f64 (/.f64 (pow.f64 z 3) (cos.f64 y)) (*.f64 (sin.f64 y) 1/3)))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))))","(neg.f64 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))","(/.f64 (neg.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))","(+.f64 a (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))))","(+.f64 (neg.f64 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))) a)","(-.f64 a (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))","(-.f64 a (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(+.f64 a (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 a (fma.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 1/3 (pow.f64 a 3))))","(+.f64 a (-.f64 (*.f64 1/3 (pow.f64 a 3)) (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))","(-.f64 (fma.f64 1/3 (pow.f64 a 3) a) (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(+.f64 (*.f64 2/15 (pow.f64 a 5)) (+.f64 a (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (*.f64 1/3 (pow.f64 a 3)))))","(fma.f64 2/15 (pow.f64 a 5) (+.f64 a (fma.f64 -1 (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 1/3 (pow.f64 a 3)))))","(+.f64 (-.f64 (*.f64 1/3 (pow.f64 a 3)) (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))) (fma.f64 2/15 (pow.f64 a 5) a))","(fma.f64 2/15 (pow.f64 a 5) (-.f64 (fma.f64 1/3 (pow.f64 a 3) a) (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (cos.f64 a))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (cos.f64 a))","(/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 a))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (fma.f64 y (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 y (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a))))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z))))","(fma.f64 y (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z))))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (*.f64 (sin.f64 z) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (pow.f64 y 2))) (cos.f64 z)))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (fma.f64 y (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (*.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (*.f64 y y))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (fma.f64 y (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a))))) (/.f64 (sin.f64 a) (cos.f64 a))) (-.f64 (/.f64 (sin.f64 z) (/.f64 (/.f64 (cos.f64 z) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))))) (*.f64 y y))) (/.f64 (sin.f64 z) (cos.f64 z))))","(fma.f64 y (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1) (fma.f64 (/.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1) (cos.f64 z)) (*.f64 (sin.f64 z) (*.f64 y y)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 z) (cos.f64 z)))))","(-.f64 (+.f64 (*.f64 y (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 z) (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)))) (*.f64 (cos.f64 z) (cos.f64 a)))))) (*.f64 (sin.f64 z) (pow.f64 y 2))) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1/3 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 z) 2) (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))) (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 a))))))) (pow.f64 (cos.f64 z) 2)))))))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(-.f64 (+.f64 (fma.f64 y (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (/.f64 (sin.f64 a) (cos.f64 a))) (+.f64 (/.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (/.f64 (cos.f64 z) (*.f64 (sin.f64 z) (*.f64 y y)))) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a))) -1/3) (+.f64 1/3 (fma.f64 -1/3 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z))) (neg.f64 (/.f64 (*.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))) (+.f64 1 (neg.f64 (/.f64 (-.f64 (sin.f64 a) (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))) (/.f64 (*.f64 (cos.f64 z) (cos.f64 a)) (sin.f64 z)))))) (pow.f64 (sin.f64 z) 2)) (pow.f64 (cos.f64 z) 2))))))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (fma.f64 y (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a))))) (/.f64 (sin.f64 a) (cos.f64 a))) (-.f64 (fma.f64 (pow.f64 y 3) (-.f64 (fma.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 a) (cos.f64 a))) -1/3 -1/3) (-.f64 (*.f64 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a))) -1/3) (*.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))))))) (/.f64 (sin.f64 z) (/.f64 (/.f64 (cos.f64 z) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (neg.f64 (/.f64 (sin.f64 z) (cos.f64 a)))) (-.f64 1 (*.f64 (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 a)))))) (*.f64 y y)))) (/.f64 (sin.f64 z) (cos.f64 z))))","(-.f64 (fma.f64 y (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1) (fma.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 y (*.f64 y (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1))) (fma.f64 (pow.f64 y 3) (+.f64 (-.f64 (*.f64 (/.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (sin.f64 a))) (cos.f64 a)) -1/3) (fma.f64 (*.f64 -1/3 (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)) 1/3)) (*.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 z)) (cos.f64 a)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 z)) (/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))) (cos.f64 z)))) -1))) (/.f64 (sin.f64 a) (cos.f64 a))))) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))) (cos.f64 a))","(/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 a))","(/.f64 (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y))) (cos.f64 a))","(-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 z (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y))))))) (/.f64 (sin.f64 y) (cos.f64 y))))","(-.f64 (fma.f64 z (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (fma.f64 z (+.f64 (*.f64 (/.f64 -1 (cos.f64 y)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (sin.f64 y)) (*.f64 (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1)) (sin.f64 y)))) -1) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y)))))) z (/.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y)))))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z))))) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 z (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (/.f64 (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z))))) (/.f64 (sin.f64 y) (cos.f64 y))))","(-.f64 (fma.f64 (/.f64 (+.f64 (*.f64 (/.f64 -1 (cos.f64 y)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (sin.f64 y)) (*.f64 (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1)) (sin.f64 y)))) -1) (cos.f64 y)) (*.f64 (sin.f64 y) (*.f64 z z)) (fma.f64 z (+.f64 (*.f64 (/.f64 -1 (cos.f64 y)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (sin.f64 y)) (*.f64 (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1)) (sin.f64 y)))) -1) (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) z) (+.f64 (*.f64 (-.f64 (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1/3 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (pow.f64 (sin.f64 y) 2)) (pow.f64 (cos.f64 y) 2))) (*.f64 -1/3 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y))))))) (pow.f64 z 3)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (sin.f64 y)) (*.f64 (cos.f64 a) (cos.f64 y)))) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (sin.f64 y) (-.f64 (sin.f64 a) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))) (*.f64 (cos.f64 a) (cos.f64 y)))))) (*.f64 (pow.f64 z 2) (sin.f64 y))) (cos.f64 y))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(-.f64 (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y)))))) z (fma.f64 (-.f64 (*.f64 -1/3 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1/3 (fma.f64 -1 (/.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y)))))) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2))) (*.f64 -1/3 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y))))))) (pow.f64 z 3) (/.f64 (-.f64 (neg.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))) (+.f64 1 (neg.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 a)) (/.f64 (-.f64 (sin.f64 a) (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (cos.f64 y)))))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z))))))) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (fma.f64 z (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (fma.f64 (pow.f64 z 3) (-.f64 (fma.f64 -1/3 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a))) -1/3) (-.f64 (*.f64 -1/3 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y))))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (pow.f64 (cos.f64 y) 2)) (pow.f64 (sin.f64 y) 2)))) (/.f64 (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y))) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (cos.f64 a))) (-.f64 (sin.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))))) (/.f64 (cos.f64 y) (*.f64 (sin.f64 y) (*.f64 z z)))))) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (fma.f64 (/.f64 (+.f64 (*.f64 (/.f64 -1 (cos.f64 y)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (sin.f64 y)) (*.f64 (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1)) (sin.f64 y)))) -1) (cos.f64 y)) (*.f64 (sin.f64 y) (*.f64 z z)) (fma.f64 (pow.f64 z 3) (-.f64 (fma.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (*.f64 (sin.f64 y) -1/3) (cos.f64 y)) -1/3) (fma.f64 -1/3 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1))) (/.f64 (fma.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1))))) (/.f64 (pow.f64 (cos.f64 y) 2) (pow.f64 (sin.f64 y) 2))))) (*.f64 z (+.f64 (*.f64 (/.f64 -1 (cos.f64 y)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (sin.f64 y)) (*.f64 (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1)) (sin.f64 y)))) -1)))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(/.f64 (-.f64 (*.f64 (sin.f64 a) (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y))))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (neg.f64 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(/.f64 (fma.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 a) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (neg.f64 (cos.f64 a)))) (*.f64 (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y)))))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(fma.f64 -1/2 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 a a)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(*.f64 (fma.f64 -1/2 (*.f64 a a) 1) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))))","(fma.f64 -1/2 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 a a)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (*.f64 1/24 (pow.f64 a 4)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))","(fma.f64 -1/2 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 a a)) (*.f64 (+.f64 (*.f64 1/24 (pow.f64 a 4)) 1) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 a (*.f64 a -1/2)) (fma.f64 1/24 (pow.f64 a 4) 1)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 1/24 (*.f64 (pow.f64 a 4) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))))))","(fma.f64 -1/2 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 a a)) (fma.f64 -1/720 (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (pow.f64 a 6)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 (*.f64 1/24 (pow.f64 a 4)) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/24 (pow.f64 a 4)) 1) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))) (*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1/2 (*.f64 a a)) (*.f64 -1/720 (pow.f64 a 6)))))","(fma.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (fma.f64 -1/2 (*.f64 a a) (*.f64 -1/720 (pow.f64 a 6))) (*.f64 (fma.f64 1/24 (pow.f64 a 4) 1) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z))","(/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (*.f64 y (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a))) (*.f64 y (cos.f64 a)))","(fma.f64 y (cos.f64 a) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a)))","(*.f64 (cos.f64 a) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a))))","(+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a)) (*.f64 y (cos.f64 a))))","(+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a)) (*.f64 (cos.f64 a) (+.f64 y (*.f64 1/3 (pow.f64 y 3)))))","(fma.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a) (*.f64 (cos.f64 a) (fma.f64 1/3 (pow.f64 y 3) y)))","(+.f64 (/.f64 (*.f64 (sin.f64 z) (cos.f64 a)) (cos.f64 z)) (+.f64 (*.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a))) (*.f64 y (cos.f64 a)))))","(+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (cos.f64 a))) (fma.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a)) (fma.f64 1/3 (*.f64 (pow.f64 y 3) (cos.f64 a)) (*.f64 y (cos.f64 a)))))","(+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (cos.f64 a)) (fma.f64 2/15 (*.f64 (pow.f64 y 5) (cos.f64 a)) (*.f64 (cos.f64 a) (+.f64 y (*.f64 1/3 (pow.f64 y 3))))))","(fma.f64 (cos.f64 a) (fma.f64 2/15 (pow.f64 y 5) (*.f64 1/3 (pow.f64 y 3))) (*.f64 (cos.f64 a) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y)))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y))","(/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))","(*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y))","(/.f64 (sin.f64 y) (/.f64 (cos.f64 y) (cos.f64 a)))","(+.f64 (*.f64 (cos.f64 a) z) (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)))","(fma.f64 (cos.f64 a) z (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y))))","(fma.f64 z (cos.f64 a) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)))","(fma.f64 z (cos.f64 a) (/.f64 (sin.f64 y) (/.f64 (cos.f64 y) (cos.f64 a))))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3)))))","(+.f64 (fma.f64 (cos.f64 a) z (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y)))) (*.f64 1/3 (*.f64 (pow.f64 z 3) (cos.f64 a))))","(fma.f64 z (cos.f64 a) (fma.f64 1/3 (*.f64 (pow.f64 z 3) (cos.f64 a)) (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y))))","(fma.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y) (*.f64 (cos.f64 a) (fma.f64 1/3 (pow.f64 z 3) z)))","(+.f64 (*.f64 (cos.f64 a) z) (+.f64 (/.f64 (*.f64 (cos.f64 a) (sin.f64 y)) (cos.f64 y)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 a) (pow.f64 z 3))) (*.f64 2/15 (*.f64 (cos.f64 a) (pow.f64 z 5))))))","(fma.f64 (cos.f64 a) z (+.f64 (/.f64 (cos.f64 a) (/.f64 (cos.f64 y) (sin.f64 y))) (fma.f64 1/3 (*.f64 (pow.f64 z 3) (cos.f64 a)) (*.f64 2/15 (*.f64 (pow.f64 z 5) (cos.f64 a))))))","(fma.f64 z (cos.f64 a) (+.f64 (*.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y)) (fma.f64 (*.f64 1/3 (cos.f64 a)) (pow.f64 z 3) (*.f64 2/15 (*.f64 (pow.f64 z 5) (cos.f64 a))))))","(fma.f64 z (cos.f64 a) (fma.f64 (/.f64 (cos.f64 a) (cos.f64 y)) (sin.f64 y) (*.f64 (cos.f64 a) (fma.f64 1/3 (pow.f64 z 3) (*.f64 2/15 (pow.f64 z 5))))))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))","(*.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (cos.f64 a))"]],"stop":[["node limit",1]],"time":66.330078125,"type":"simplify"},{"compiler":[[14238,4565]],"time":81.37890625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.938530756191232],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.3361477702848725],["(fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))","fresh",36.21730714439693],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))","fresh",0.33169762774200373],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","fresh",0.30268547800927154],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.918424486953176],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","next",0.257811459657721],["(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","fresh",29.74868901224133],["(log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))","fresh",11.897997357336079],["(-.f64 x (-.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a))))) (tan.f64 (+.f64 y z))))","fresh",11.970277744690124],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (pow.f64 (cbrt.f64 (tan.f64 z)) 3))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.32485565398388905],["(pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)","fresh",12.14139015872713],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (/.f64 1 (/.f64 (cos.f64 z) (sin.f64 z))))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.29950664523108]],"compiler":[[21,13],[39,23],[21,12],[23,15],[42,27],[19,12],[38,23],[33,23],[19,15],[24,16],[39,23],[29,17],[41,25],[21,13],[39,23],[21,12],[23,15],[42,27],[19,12],[38,23],[33,23],[19,15],[24,16],[39,23],[29,17],[41,25]],"count":[[345,13]],"kept":[{"done":[0,0],"fresh":[9,8],"new":[335,5],"picked":[1,0]}],"min-error":[0.046875],"time":151.43115234375,"type":"prune"},{"compiler":[[181,33]],"locations":[["(/.f64 (sin.f64 z) (cos.f64 z))",0.16015625,true],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))",0.1671525824793631,true],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))",0.22265625,true],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))",0.2265625,true]],"time":26.720947265625,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (sin.f64 z) (cos.f64 z))","z","-inf",0.157958984375],["(/.f64 (sin.f64 z) (cos.f64 z))","z","inf",0.14794921875],["(/.f64 (sin.f64 z) (cos.f64 z))","z","0",0.174072265625],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","z","-inf",1.5361328125],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","z","inf",1.93212890625],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","z","0",0.843017578125],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","y","-inf",1.527099609375],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","y","inf",2.01904296875],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","y","0",0.845947265625],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","a","-inf",0.39111328125],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","a","inf",1.240966796875],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","a","0",0.473876953125],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","x","-inf",0.316162109375],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","x","inf",0.302978515625],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","x","0",5.552978515625],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","y","-inf",0.40087890625],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","y","inf",0.402099609375],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","y","0",0.52978515625],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","z","-inf",0.408935546875],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","z","inf",0.420166015625],["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","z","0",0.4169921875],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","y","-inf",0.68896484375],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","y","inf",0.954833984375],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","y","0",0.7529296875],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","z","-inf",0.68408203125],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","z","inf",0.75390625],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","z","0",0.85595703125]],"time":25.3330078125,"type":"series"},{"count":[[4,129]],"egraph":[[1,569,48,0.011244625999999999],[0,24,65,0.000597667]],"inputs":[["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))","(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(/.f64 (sin.f64 z) (cos.f64 z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) (/.f64 1 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (cos.f64 z) (cos.f64 y)) (*.f64 (sin.f64 z) (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 z) (sin.f64 y))) (neg.f64 (*.f64 (cos.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (tan.f64 z) (tan.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (tan.f64 z) (tan.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (tan.f64 z) (tan.f64 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (tan.f64 z) (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 z) (/.f64 1 (*.f64 (cos.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 z) (/.f64 1 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (tan.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))) 2) (cbrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))) (sqrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 z)) (/.f64 1 (neg.f64 (*.f64 (cos.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 y)) (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 z) 1) (/.f64 (/.f64 1 (cos.f64 z)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) 1) (/.f64 (cbrt.f64 (tan.f64 z)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (tan.f64 z)) 1) (/.f64 (sqrt.f64 (tan.f64 z)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) 1) (/.f64 (sqrt.f64 (sin.f64 z)) (*.f64 (cos.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) (cos.f64 z)) (/.f64 (sqrt.f64 (sin.f64 z)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 y)) 2)) (/.f64 (tan.f64 z) (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 y))) (/.f64 (tan.f64 z) (sqrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (cos.f64 z)) (/.f64 (cbrt.f64 (sin.f64 z)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) (cos.f64 y)) (/.f64 (sqrt.f64 (sin.f64 z)) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (cos.f64 y)) (/.f64 (cbrt.f64 (sin.f64 z)) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 z) (cos.f64 y))) 2)) (/.f64 (sin.f64 z) (cbrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 z) (cos.f64 y))) 2)) (cbrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 z) (cos.f64 y))) 2)) (/.f64 (sqrt.f64 (sin.f64 z)) (cbrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))) (/.f64 (sin.f64 z) (sqrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (sqrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))) (/.f64 (cbrt.f64 (sin.f64 z)) (sqrt.f64 (*.f64 (cos.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 z) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)) (/.f64 (/.f64 1 (cos.f64 z)) (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)) (cbrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (tan.f64 z)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)) (/.f64 (sqrt.f64 (tan.f64 z)) (cbrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 z) (sqrt.f64 (cos.f64 y))) (/.f64 (/.f64 1 (cos.f64 z)) (sqrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (sqrt.f64 (cos.f64 y))) (/.f64 (cbrt.f64 (tan.f64 z)) (sqrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (tan.f64 z) (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (tan.f64 z) (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (tan.f64 z) (cos.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (/.f64 (tan.f64 z) (cos.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (tan.f64 z) (cos.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (tan.f64 z) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (tan.f64 z) (cos.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (*.f64 (cos.f64 z) (cos.f64 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (tan.f64 z) 3) (pow.f64 (cos.f64 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (tan.f64 z) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (tan.f64 z) (cos.f64 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (fma.f64 (neg.f64 (sqrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (sqrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 a)) (neg.f64 (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1))) (fma.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 1 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1))) (fma.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 1 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1))) (fma.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 1 (*.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2) (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2) (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2) (*.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (pow.f64 (cbrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) 2) (cbrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (sqrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 3)) (/.f64 1 (fma.f64 x x (+.f64 (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2)) (/.f64 1 (+.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (-.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x (+.f64 (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (-.f64 (pow.f64 x 3) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (-.f64 (*.f64 x x) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 3)) (fma.f64 x x (+.f64 (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2)) (+.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 3))) (neg.f64 (fma.f64 x x (+.f64 (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2) (*.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))) 2))) (neg.f64 (+.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 x (tan.f64 a)) 3) (pow.f64 (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) 3)) (+.f64 (*.f64 (-.f64 x (tan.f64 a)) (-.f64 x (tan.f64 a))) (+.f64 (pow.f64 (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) 2) (*.f64 (-.f64 x (tan.f64 a)) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 3)) (+.f64 (*.f64 x x) (-.f64 (*.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) (*.f64 x (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 x (tan.f64 a)) (-.f64 x (tan.f64 a))) (pow.f64 (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))) 2)) (+.f64 (-.f64 x (tan.f64 a)) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))) (-.f64 x (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (+.f64 (tan.f64 a) (/.f64 (-.f64 (tan.f64 y) (tan.f64 z)) (-.f64 1 (*.f64 (tan.f64 z) (tan.f64 y)))))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 z) (/.f64 1 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 z)) (sqrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 z)) (/.f64 1 (neg.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 z)) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) 1) (/.f64 (sqrt.f64 (sin.f64 z)) (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 z)) 2)) (/.f64 (sin.f64 z) (cbrt.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (pow.f64 (cbrt.f64 (cos.f64 z)) 2)) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 z)) (pow.f64 (cbrt.f64 (cos.f64 z)) 2)) (/.f64 (sqrt.f64 (sin.f64 z)) (cbrt.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 z))) (/.f64 (sin.f64 z) (sqrt.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 z)) 2) (sqrt.f64 (cos.f64 z))) (/.f64 (cbrt.f64 (sin.f64 z)) (sqrt.f64 (cos.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (tan.f64 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 z)))))"]],"rules":[["egg-rr",27],["egg-rr",40],["egg-rr",45],["egg-rr",17]],"stop":[["node limit",1]],"time":44.596923828125,"type":"rewrite"},{"count":[[213,196]],"egraph":[[2,2784,4318,0.019113084],[1,788,4483,0.00589475],[0,232,4729,0.001228125]],"inputs":[["(/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))","(+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))","(+.f64 (*.f64 (pow.f64 z 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))))))) (+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 -1/5040 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1/720 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1/2 (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))))))))))) (pow.f64 z 7)) (+.f64 (*.f64 (pow.f64 z 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))))))) (+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))))","(+.f64 (*.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))","(+.f64 (*.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 (pow.f64 y 7) (-.f64 (*.f64 -1/5040 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 -1/2 (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))))))))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 z (cos.f64 y))","(+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y))))","(+.f64 (*.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y))) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)))))","(+.f64 (*.f64 17/315 (/.f64 (pow.f64 z 7) (cos.f64 y))) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y))) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y))))))","(/.f64 (sin.f64 z) (cos.f64 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)))))) (/.f64 (sin.f64 z) (cos.f64 z))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/48 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z))))) (pow.f64 y 6))))))","(-.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x))) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x)))) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))))) (cos.f64 z)) (+.f64 (*.f64 -1 (-.f64 1/3 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 4) (pow.f64 (cos.f64 z) 4))))))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3)))))) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3)))))) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 4) (pow.f64 (cos.f64 y) 4))) (/.f64 (*.f64 (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 y)) (cos.f64 y))))) (pow.f64 z 3)) x))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))","(/.f64 z (/.f64 (cos.f64 y) (sin.f64 y)))","(*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y))","(+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))","(fma.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3) (pow.f64 z 3) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y))))","(fma.f64 (/.f64 (*.f64 (sin.f64 y) 1/3) (cos.f64 y)) (pow.f64 z 3) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))","(fma.f64 (/.f64 (sin.f64 y) (/.f64 (cos.f64 y) 1/3)) (pow.f64 z 3) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y)))","(+.f64 (*.f64 (pow.f64 z 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))))))) (+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))))","(fma.f64 (pow.f64 z 5) (-.f64 (/.f64 (*.f64 1/120 (sin.f64 y)) (cos.f64 y)) (fma.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3)))) (fma.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3) (pow.f64 z 3) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y)))))","(fma.f64 (pow.f64 z 5) (+.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -1/30) (/.f64 (*.f64 1/6 (sin.f64 y)) (cos.f64 y))) (fma.f64 (/.f64 (*.f64 (sin.f64 y) 1/3) (cos.f64 y)) (pow.f64 z 3) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y))))","(fma.f64 (pow.f64 z 5) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 2/15) (fma.f64 (/.f64 (sin.f64 y) (/.f64 (cos.f64 y) 1/3)) (pow.f64 z 3) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 -1/5040 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 -1/720 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))))) (*.f64 -1/2 (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))))))))))) (pow.f64 z 7)) (+.f64 (*.f64 (pow.f64 z 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 y) (cos.f64 y))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))))))) (+.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y)))) (pow.f64 z 3)) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))))","(fma.f64 (-.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -1/5040) (fma.f64 -1/720 (/.f64 (sin.f64 y) (cos.f64 y)) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3) (*.f64 -1/2 (-.f64 (/.f64 (*.f64 1/120 (sin.f64 y)) (cos.f64 y)) (fma.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3)))))))) (pow.f64 z 7) (fma.f64 (pow.f64 z 5) (-.f64 (/.f64 (*.f64 1/120 (sin.f64 y)) (cos.f64 y)) (fma.f64 1/24 (/.f64 (sin.f64 y) (cos.f64 y)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3)))) (fma.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/3) (pow.f64 z 3) (/.f64 z (/.f64 (cos.f64 y) (sin.f64 y))))))","(fma.f64 (-.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/840) (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -1/30) (/.f64 (*.f64 1/6 (sin.f64 y)) (cos.f64 y))) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 1/72))) (pow.f64 z 7) (fma.f64 (pow.f64 z 5) (+.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -1/30) (/.f64 (*.f64 1/6 (sin.f64 y)) (cos.f64 y))) (fma.f64 (/.f64 (*.f64 (sin.f64 y) 1/3) (cos.f64 y)) (pow.f64 z 3) (/.f64 (*.f64 z (sin.f64 y)) (cos.f64 y)))))","(fma.f64 (+.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -4/315) (*.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 2/15) 1/2)) (pow.f64 z 7) (fma.f64 (pow.f64 z 5) (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 2/15) (fma.f64 (/.f64 (sin.f64 y) (/.f64 (cos.f64 y) 1/3)) (pow.f64 z 3) (*.f64 (/.f64 z (cos.f64 y)) (sin.f64 y)))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z))","(/.f64 (sin.f64 z) (/.f64 (cos.f64 z) y))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y)","(/.f64 (*.f64 y (sin.f64 z)) (cos.f64 z))","(+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))))","(+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) y)) (*.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3)))","(fma.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 y (*.f64 1/3 (pow.f64 y 3))))","(+.f64 (*.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))","(fma.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (fma.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3)))) (+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) y)) (*.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3))))","(fma.f64 (pow.f64 y 5) (+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -1/30) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/6)) (fma.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y)))","(fma.f64 (pow.f64 y 5) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 2/15) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 y (*.f64 1/3 (pow.f64 y 3)))))","(+.f64 (*.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))) (+.f64 (/.f64 (*.f64 (sin.f64 z) y) (cos.f64 z)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 (pow.f64 y 7) (-.f64 (*.f64 -1/5040 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 -1/2 (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (-.f64 (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z)))))))))))))))","(fma.f64 (pow.f64 y 5) (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (fma.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3)))) (+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) y)) (fma.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3) (*.f64 (pow.f64 y 7) (-.f64 (*.f64 -1/5040 (/.f64 (sin.f64 z) (cos.f64 z))) (fma.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z)) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3) (*.f64 -1/2 (-.f64 (*.f64 1/120 (/.f64 (sin.f64 z) (cos.f64 z))) (fma.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -1/2 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3))))))))))))","(+.f64 (fma.f64 (pow.f64 y 5) (+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -1/30) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/6)) (fma.f64 (pow.f64 y 3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/3) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) y))) (*.f64 (pow.f64 y 7) (-.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/840) (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -1/30) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/6)) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/72)))))","(+.f64 (fma.f64 (pow.f64 y 5) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 2/15) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 y (*.f64 1/3 (pow.f64 y 3))))) (*.f64 (pow.f64 y 7) (+.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -4/315) (*.f64 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 2/15) 1/2))))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))","(/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))","(/.f64 z (cos.f64 y))","(+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y))))","(fma.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)) (/.f64 z (cos.f64 y)))","(+.f64 (*.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y))) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)))))","(fma.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y)) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)))))","(fma.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y)) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)) (/.f64 z (cos.f64 y))))","(+.f64 (*.f64 17/315 (/.f64 (pow.f64 z 7) (cos.f64 y))) (+.f64 (*.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y))) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y))))))","(fma.f64 17/315 (/.f64 (pow.f64 z 7) (cos.f64 y)) (fma.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y)) (+.f64 (/.f64 z (cos.f64 y)) (*.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y))))))","(fma.f64 17/315 (/.f64 (pow.f64 z 7) (cos.f64 y)) (fma.f64 2/15 (/.f64 (pow.f64 z 5) (cos.f64 y)) (fma.f64 1/3 (/.f64 (pow.f64 z 3) (cos.f64 y)) (/.f64 z (cos.f64 y)))))","(/.f64 (sin.f64 z) (cos.f64 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (cos.f64 z)) (/.f64 (sin.f64 z) (cos.f64 z)))","(fma.f64 1/2 (/.f64 y (/.f64 (cos.f64 z) (*.f64 y (sin.f64 z)))) (/.f64 (sin.f64 z) (cos.f64 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)))))) (/.f64 (sin.f64 z) (cos.f64 z))))","(fma.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (cos.f64 z)) (fma.f64 -1 (*.f64 (pow.f64 y 4) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -5/24)) (/.f64 (sin.f64 z) (cos.f64 z))))","(fma.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (cos.f64 z)) (-.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -5/24 (pow.f64 y 4)))))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (fma.f64 1/2 (/.f64 y (/.f64 (cos.f64 z) (*.f64 y (sin.f64 z)))) (*.f64 (/.f64 (*.f64 (pow.f64 y 4) (sin.f64 z)) (cos.f64 z)) 5/24)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (pow.f64 y 2)) (cos.f64 z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/48 (/.f64 (sin.f64 z) (cos.f64 z))) (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/4 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 1/24 (/.f64 (sin.f64 z) (cos.f64 z))))) (*.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z))))) (pow.f64 y 6))))))","(fma.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (cos.f64 z)) (+.f64 (fma.f64 -1 (*.f64 (pow.f64 y 4) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -5/24)) (/.f64 (sin.f64 z) (cos.f64 z))) (neg.f64 (*.f64 (fma.f64 1/48 (/.f64 (sin.f64 z) (cos.f64 z)) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -5/24) (*.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z))))) (pow.f64 y 6)))))","(fma.f64 1/2 (/.f64 (*.f64 (sin.f64 z) (*.f64 y y)) (cos.f64 z)) (-.f64 (fma.f64 (neg.f64 (fma.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/48 (fma.f64 -1/720 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -5/48)))) (pow.f64 y 6) (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 -5/24 (pow.f64 y 4)))))","(+.f64 (-.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (*.f64 (fma.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1/48 (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -19/180)) (pow.f64 y 6))) (fma.f64 1/2 (/.f64 y (/.f64 (cos.f64 z) (*.f64 y (sin.f64 z)))) (*.f64 (/.f64 (*.f64 (pow.f64 y 4) (sin.f64 z)) (cos.f64 z)) 5/24)))","(-.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))))))","(+.f64 (-.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (-.f64 (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","x","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (+.f64 x (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z))))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 x (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (fma.f64 -1 a x)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (+.f64 (-.f64 x a) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z))))))))","(+.f64 (-.f64 x a) (+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x))) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (fma.f64 -1/3 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (fma.f64 -1 a x))) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))","(+.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (+.f64 (-.f64 x a) (fma.f64 -1/3 (pow.f64 a 3) (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))))","(fma.f64 -1/3 (pow.f64 a 3) (+.f64 (-.f64 x a) (+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))))))","(-.f64 (+.f64 (*.f64 -2/15 (pow.f64 a 5)) (+.f64 (*.f64 -1/3 (pow.f64 a 3)) (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) (+.f64 (*.f64 -1 a) x)))) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y)))))","(-.f64 (fma.f64 -2/15 (pow.f64 a 5) (fma.f64 -1/3 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (fma.f64 -1 a x)))) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))","(+.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (fma.f64 -2/15 (pow.f64 a 5) (+.f64 (-.f64 x a) (fma.f64 -1/3 (pow.f64 a 3) (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z))))))))))","(fma.f64 -2/15 (pow.f64 a 5) (fma.f64 -1/3 (pow.f64 a 3) (+.f64 (-.f64 x a) (+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))))","(+.f64 x (-.f64 (fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (/.f64 (sin.f64 z) (cos.f64 z))) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (fma.f64 -1 (*.f64 (*.f64 y y) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x))) (/.f64 (sin.f64 a) (cos.f64 a)))","(fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (+.f64 (fma.f64 (neg.f64 (*.f64 y y)) (-.f64 (neg.f64 (/.f64 (sin.f64 z) (cos.f64 z))) (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3))) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))))","(+.f64 (fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (-.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 3))) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3)))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (*.f64 (sin.f64 z) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 z) (cos.f64 z))) (*.f64 -1/6 (/.f64 (sin.f64 z) (cos.f64 z))))) (cos.f64 z)) (+.f64 (*.f64 -1 (-.f64 1/3 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 4) (pow.f64 (cos.f64 z) 4))))))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y (fma.f64 -1 (*.f64 (*.f64 y y) (*.f64 -1 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3))))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (fma.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (sin.f64 z) (/.f64 (cos.f64 z) (*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) -1/3))) (fma.f64 -1 (-.f64 1/3 (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (neg.f64 (/.f64 (pow.f64 (sin.f64 z) 4) (pow.f64 (cos.f64 z) 4)))))) x)))) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 (fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (+.f64 (-.f64 x (*.f64 (pow.f64 y 3) (-.f64 (-.f64 (/.f64 (sin.f64 z) (/.f64 (/.f64 (cos.f64 z) (/.f64 (sin.f64 z) (cos.f64 z))) -1/3)) (+.f64 1/3 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) (/.f64 (pow.f64 (sin.f64 z) 4) (pow.f64 (cos.f64 z) 4))))) (fma.f64 (neg.f64 (*.f64 y y)) (-.f64 (neg.f64 (/.f64 (sin.f64 z) (cos.f64 z))) (/.f64 (pow.f64 (sin.f64 z) 3) (pow.f64 (cos.f64 z) 3))) (/.f64 (sin.f64 z) (cos.f64 z))))) (/.f64 (sin.f64 a) (cos.f64 a)))","(+.f64 (fma.f64 y (+.f64 1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2))) (*.f64 (*.f64 y y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 3)))) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 x (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) -1/3) (+.f64 1/3 (+.f64 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)) (/.f64 (pow.f64 (sin.f64 z) 4) (pow.f64 (cos.f64 z) 4)))))) (/.f64 (sin.f64 a) (cos.f64 a))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 x (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 x (-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) x) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 x (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3)))))) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) x)) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (fma.f64 -1 (*.f64 (*.f64 z z) (*.f64 -1 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3))))) (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z x)) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (cos.f64 y)))))","(fma.f64 (neg.f64 (*.f64 z z)) (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3))) (-.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) x) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y)))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) x) (fma.f64 (*.f64 z z) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (pow.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 3)) (-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3)))))) (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z) (+.f64 (*.f64 (-.f64 1/3 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 4) (pow.f64 (cos.f64 y) 4))) (/.f64 (*.f64 (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 y) (cos.f64 y))) (*.f64 -1/6 (/.f64 (sin.f64 y) (cos.f64 y)))) (sin.f64 y)) (cos.f64 y))))) (pow.f64 z 3)) x))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (fma.f64 -1 (*.f64 (*.f64 z z) (*.f64 -1 (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3))))) (fma.f64 (-.f64 1 (neg.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) z (fma.f64 (-.f64 1/3 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 y) 4) (pow.f64 (cos.f64 y) 4)) (/.f64 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) -1/3) (/.f64 (cos.f64 y) (sin.f64 y)))))) (pow.f64 z 3) x))) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (cos.f64 y)))))","(-.f64 (-.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (fma.f64 (pow.f64 z 3) (-.f64 1/3 (-.f64 (-.f64 (*.f64 (/.f64 (/.f64 (*.f64 (sin.f64 y) -1/3) (cos.f64 y)) (cos.f64 y)) (sin.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 4) (pow.f64 (cos.f64 y) 4))) (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)))) x)) (*.f64 (*.f64 z z) (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (cos.f64 y) 3))))) (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (sin.f64 y) (cos.f64 y))))","(+.f64 (fma.f64 z (+.f64 1 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2))) (fma.f64 (pow.f64 z 3) (+.f64 1/3 (-.f64 (/.f64 (pow.f64 (sin.f64 y) 2) (pow.f64 (cos.f64 y) 2)) (-.f64 (*.f64 (/.f64 -1/3 (/.f64 (pow.f64 (cos.f64 y) 2) (sin.f64 y))) (sin.f64 y)) (/.f64 (pow.f64 (sin.f64 y) 4) (pow.f64 (cos.f64 y) 4))))) x)) (fma.f64 (*.f64 z z) (+.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (pow.f64 (/.f64 (sin.f64 y) (cos.f64 y)) 3)) (-.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 a) (cos.f64 a)))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z)))))) (-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (neg.f64 (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (/.f64 (*.f64 (sin.f64 y) (sin.f64 z)) (*.f64 (cos.f64 y) (cos.f64 z))))))))))","(+.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))) (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a)))) (/.f64 (sin.f64 y) (*.f64 (cos.f64 y) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (cos.f64 y)) (/.f64 (sin.f64 y) (cos.f64 z)))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","z","(+.f64 (*.f64 1/3 (pow.f64 z 3)) z)","(fma.f64 1/3 (pow.f64 z 3) z)","(fma.f64 (pow.f64 z 3) 1/3 z)","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) z))","(fma.f64 1/3 (pow.f64 z 3) (fma.f64 2/15 (pow.f64 z 5) z))","(fma.f64 (pow.f64 z 3) 1/3 (fma.f64 (pow.f64 z 5) 2/15 z))","(+.f64 (*.f64 1/3 (pow.f64 z 3)) (+.f64 (*.f64 2/15 (pow.f64 z 5)) (+.f64 z (*.f64 17/315 (pow.f64 z 7)))))","(fma.f64 1/3 (pow.f64 z 3) (+.f64 (fma.f64 2/15 (pow.f64 z 5) z) (*.f64 (pow.f64 z 7) 17/315)))","(fma.f64 (pow.f64 z 3) 1/3 (fma.f64 (pow.f64 z 5) 2/15 (fma.f64 (pow.f64 z 7) 17/315 z)))"]],"stop":[["node limit",1]],"time":64.091064453125,"type":"simplify"},{"compiler":[[8451,2695]],"time":45.781982421875,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.938530756191232],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.3361477702848725],["(fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))","fresh",36.21730714439693],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))","fresh",0.33169762774200373],["(log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))","fresh",11.897997357336079],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (pow.f64 (cbrt.f64 (tan.f64 z)) 3)) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","next",0.28463274329487404],["(-.f64 x (-.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a))))) (tan.f64 (+.f64 y z))))","fresh",11.970277744690124],["(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","fresh",0.31641123373900387],["(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","fresh",0.3375416670832918],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.918424486953176],["(pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)","fresh",12.14139015872713],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (/.f64 1 (/.f64 (cos.f64 z) (sin.f64 z))))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.29950664523108]],"compiler":[[21,13],[39,23],[21,12],[23,15],[19,15],[38,26],[24,16],[51,23],[53,27],[19,12],[29,17],[41,25],[21,13],[39,23],[21,12],[23,15],[19,15],[38,26],[24,16],[51,23],[53,27],[19,12],[29,17],[41,25]],"count":[[209,12]],"kept":[{"done":[0,0],"fresh":[12,9],"new":[196,3],"picked":[1,0]}],"min-error":[0.03515625],"time":65.218994140625,"type":"prune"},{"compiler":[[187,48]],"locations":[["(/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y)))",0.22265625,false],["(tan.f64 z)",0.22302631837909412,false],["(*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))",0.2265625,false],["(pow.f64 (cbrt.f64 (tan.f64 z)) 3)",0.791870312590145,true]],"time":33.2900390625,"type":"localize"},{"count":[[1,8]],"series":[["(pow.f64 (cbrt.f64 (tan.f64 z)) 3)","z","-inf",1.45703125],["(pow.f64 (cbrt.f64 (tan.f64 z)) 3)","z","inf",1.638916015625],["(pow.f64 (cbrt.f64 (tan.f64 z)) 3)","z","0",0.847900390625]],"time":3.9951171875,"type":"series"},{"count":[[1,24]],"egraph":[[2,1226,3,0.014020708],[1,129,3,0.001990083],[0,6,3,0.000207333]],"inputs":[["(pow.f64 (cbrt.f64 (tan.f64 z)) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (tan.f64 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 z)) (pow.f64 (cbrt.f64 (tan.f64 z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 z))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (tan.f64 z))) (pow.f64 (cbrt.f64 (tan.f64 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 z)) (sqrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (tan.f64 z) 1/6) (*.f64 (pow.f64 (tan.f64 z) 1/6) (pow.f64 (cbrt.f64 (tan.f64 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 z) (/.f64 1 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 z))) 2) 3) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (tan.f64 z) 1/6) 3) (pow.f64 (pow.f64 (tan.f64 z) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) 1) (cbrt.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (tan.f64 z))) 2)) (cbrt.f64 (cbrt.f64 (tan.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (tan.f64 z)) 2) (pow.f64 (tan.f64 z) 1/6)) (pow.f64 (tan.f64 z) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 z) (sin.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 z) (cos.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 z)) (neg.f64 (cos.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x tan.f64 z)))))"]],"rules":[["egg-rr",24]],"stop":[["node limit",1]],"time":30.807861328125,"type":"rewrite"},{"count":[[32,26]],"egraph":[[1992,8000,64,0.8195365340000008],[1991,7996,64,0.8188153250000009],[1990,7992,64,0.8180786160000009],[1989,7988,64,0.8173479910000009],[1988,7984,64,0.8166262820000009],[1987,7980,64,0.8159274490000009],[1986,7976,64,0.8152266160000009],[1985,7972,64,0.8145071570000009],[1984,7968,64,0.8138030740000008],[1983,7964,64,0.8130893650000008],[1982,7960,64,0.8123936990000008],[1981,7956,64,0.8116872820000008],[1980,7952,64,0.8109863650000009],[1979,7948,64,0.8102902820000009],[1978,7944,64,0.8095819490000009],[1977,7940,64,0.8088901570000009],[1976,7936,64,0.8081986150000009],[1975,7932,64,0.8075039070000009],[1974,7928,64,0.8068102400000009],[1973,7924,64,0.8061186990000009],[1972,7920,64,0.8054254900000009],[1971,7916,64,0.8047258240000008],[1970,7912,64,0.8040219070000008],[1969,7908,64,0.8033195320000007],[1968,7904,64,0.8026051990000007],[1967,7900,64,0.8019038650000007],[1966,7896,64,0.8012144900000007],[1965,7892,64,0.8005258240000007],[1964,7888,64,0.7998299490000007],[1963,7884,64,0.7991260740000007],[1962,7880,64,0.7984366570000007],[1961,7876,64,0.7977246150000007],[1960,7872,64,0.7970216980000007],[1959,7868,64,0.7963361560000006],[1958,7864,64,0.7956359900000006],[1957,7860,64,0.7949296980000006],[1956,7856,64,0.7942315310000005],[1955,7852,64,0.7935459470000006],[1954,7848,64,0.7928554050000006],[1953,7844,64,0.7921684470000007],[1952,7840,64,0.7914777800000007],[1951,7836,64,0.7907667800000007],[1950,7832,64,0.7900683220000007],[1949,7828,64,0.7893570720000006],[1948,7824,64,0.7886716550000006],[1947,7820,64,0.7879741550000006],[1946,7816,64,0.7872873640000005],[1945,7812,64,0.7865846140000006],[1944,7808,64,0.7858961140000006],[1943,7804,64,0.7852108220000006],[1942,7800,64,0.7845090300000006],[1941,7796,64,0.7838125300000006],[1940,7792,64,0.7831155300000007],[1939,7788,64,0.7824285720000007],[1938,7784,64,0.7817326550000007],[1937,7780,64,0.7810524460000007],[1936,7776,64,0.7803314050000006],[1935,7772,64,0.7796055710000006],[1934,7768,64,0.7789266130000007],[1933,7764,64,0.7782441550000007],[1932,7760,64,0.7775660300000007],[1931,7756,64,0.7768857380000007],[1930,7752,64,0.7762004460000007],[1929,7748,64,0.7754966130000007],[1928,7744,64,0.7748127800000008],[1927,7740,64,0.7741143220000007],[1926,7736,64,0.7734161550000007],[1925,7732,64,0.7727177390000007],[1924,7728,64,0.7720434890000007],[1923,7724,64,0.7713403220000008],[1922,7720,64,0.7706521550000008],[1921,7716,64,0.7699711970000008],[1920,7712,64,0.7692926140000008],[1919,7708,64,0.7686088220000008],[1918,7704,64,0.7679371140000008],[1917,7700,64,0.7672653220000007],[1916,7696,64,0.7665898220000007],[1915,7692,64,0.7659130720000007],[1914,7688,64,0.7652395300000007],[1913,7684,64,0.7645614050000007],[1912,7680,64,0.7638622800000007],[1911,7676,64,0.7631844050000006],[1910,7672,64,0.7624975720000006],[1909,7668,64,0.7618125720000005],[1908,7664,64,0.7611397800000005],[1907,7660,64,0.7604629050000005],[1906,7656,64,0.7597834880000005],[1905,7652,64,0.7591071970000005],[1904,7648,64,0.7584329050000005],[1903,7644,64,0.7577528640000005],[1902,7640,64,0.7570754890000005],[1901,7636,64,0.7564035310000006],[1900,7632,64,0.7557296970000006],[1899,7628,64,0.7550162390000006],[1898,7624,64,0.7543233230000006],[1897,7620,64,0.7536466140000005],[1896,7616,64,0.7529746980000005],[1895,7612,64,0.7523016570000005],[1894,7608,64,0.7515735730000005],[1893,7604,64,0.7508834900000005],[1892,7600,64,0.7501811150000005],[1891,7596,64,0.7494834060000005],[1890,7592,64,0.7487881560000005],[1889,7588,64,0.7481151980000005],[1888,7584,64,0.7474313650000005],[1887,7580,64,0.7467634480000005],[1886,7576,64,0.7460828230000005],[1885,7572,64,0.7454141150000005],[1884,7568,64,0.7447417810000005],[1883,7564,64,0.7440677390000006],[1882,7560,64,0.7433964470000005],[1881,7556,64,0.7427148640000005],[1880,7552,64,0.7420381970000005],[1879,7548,64,0.7413740720000005],[1878,7544,64,0.7407069470000005],[1877,7540,64,0.7400434050000005],[1876,7536,64,0.7393597800000006],[1875,7532,64,0.7386645720000006],[1874,7528,64,0.7379981550000005],[1873,7524,64,0.7373364890000006],[1872,7520,64,0.7366735720000006],[1871,7516,64,0.7360093220000006],[1870,7512,64,0.7353391140000006],[1869,7508,64,0.7346753640000007],[1868,7504,64,0.7340133220000007],[1867,7500,64,0.7333435720000007],[1866,7496,64,0.7326760300000007],[1865,7492,64,0.7320202800000007],[1864,7488,64,0.7313398640000007],[1863,7484,64,0.7306606140000007],[1862,7480,64,0.7299949060000007],[1861,7476,64,0.7293206970000007],[1860,7472,64,0.7286527810000006],[1859,7468,64,0.7279921140000006],[1858,7464,64,0.7273166980000006],[1857,7460,64,0.7266520310000006],[1856,7456,64,0.7259937400000006],[1855,7452,64,0.7253149900000007],[1854,7448,64,0.7246574900000007],[1853,7444,64,0.7239995730000007],[1852,7440,64,0.7233447400000007],[1851,7436,64,0.7226612810000007],[1850,7432,64,0.7219837400000008],[1849,7428,64,0.7213021980000007],[1848,7424,64,0.7206470730000007],[1847,7420,64,0.7199778230000008],[1846,7416,64,0.7193148650000007],[1845,7412,64,0.7186631150000008],[1844,7408,64,0.7180110730000008],[1843,7404,64,0.7173585320000008],[1842,7400,64,0.7167031980000008],[1841,7396,64,0.7160485320000008],[1840,7392,64,0.7153987400000008],[1839,7388,64,0.7147229070000009],[1838,7384,64,0.7140594070000008],[1837,7380,64,0.7134053240000008],[1836,7376,64,0.7127537820000008],[1835,7372,64,0.7120817820000008],[1834,7368,64,0.7114335320000008],[1833,7364,64,0.7107821990000008],[1832,7360,64,0.7101299070000008],[1831,7356,64,0.7094780740000007],[1830,7352,64,0.7088323240000007],[1829,7348,64,0.7081835320000007],[1828,7344,64,0.7075332820000008],[1827,7340,64,0.7068621990000008],[1826,7336,64,0.7062164910000008],[1825,7332,64,0.7055691990000008],[1824,7328,64,0.7049077820000008],[1823,7324,64,0.7042556990000008],[1822,7320,64,0.7035808240000009],[1821,7316,64,0.7029159490000009],[1820,7312,64,0.7022714910000009],[1819,7308,64,0.7016280330000009],[1818,7304,64,0.7009788250000009],[1817,7300,64,0.7003319080000009],[1816,7296,64,0.6996820330000009],[1815,7292,64,0.6990380750000009],[1814,7288,64,0.698392492000001],[1813,7284,64,0.697750701000001],[1812,7280,64,0.697096284000001],[1811,7276,64,0.696435534000001],[1810,7272,64,0.695788450000001],[1809,7268,64,0.695145909000001],[1808,7264,64,0.694494659000001],[1807,7260,64,0.693846450000001],[1806,7256,64,0.693199409000001],[1805,7252,64,0.692559367000001],[1804,7248,64,0.6919148670000009],[1803,7244,64,0.6912762000000009],[1802,7240,64,0.6906156590000009],[1801,7236,64,0.6899766170000009],[1800,7232,64,0.6893331170000009],[1799,7228,64,0.6886807420000008],[1798,7224,64,0.6880305750000009],[1797,7220,64,0.6873699500000009],[1796,7216,64,0.6866918670000008],[1795,7212,64,0.6860550750000008],[1794,7208,64,0.6854164920000009],[1793,7204,64,0.6847813670000009],[1792,7200,64,0.684142450000001],[1791,7196,64,0.6835064920000009],[1790,7192,64,0.6828382830000009],[1789,7188,64,0.682201408000001],[1788,7184,64,0.681559658000001],[1787,7180,64,0.680912450000001],[1786,7176,64,0.680277575000001],[1785,7172,64,0.679641659000001],[1784,7168,64,0.679006534000001],[1783,7164,64,0.678040117000001],[1782,7160,64,0.677358950000001],[1781,7156,64,0.676722492000001],[1780,7152,64,0.676053825000001],[1779,7148,64,0.675408533000001],[1778,7144,64,0.674739117000001],[1777,7140,64,0.674079075000001],[1776,7136,64,0.673441450000001],[1775,7132,64,0.672788450000001],[1774,7128,64,0.672133409000001],[1773,7124,64,0.671470367000001],[1772,7120,64,0.6708405760000009],[1771,7116,64,0.6701667010000009],[1770,7112,64,0.6695347420000008],[1769,7108,64,0.6688749510000008],[1768,7104,64,0.6682473680000008],[1767,7100,64,0.6675896590000009],[1766,7096,64,0.6669300760000009],[1765,7092,64,0.6662917430000008],[1764,7088,64,0.6656548680000008],[1763,7084,64,0.6650132020000008],[1762,7080,64,0.6643788680000008],[1761,7076,64,0.6637368680000008],[1760,7072,64,0.6631052840000008],[1759,7068,64,0.6624578680000008],[1758,7064,64,0.6618250760000008],[1757,7060,64,0.6611868680000008],[1756,7056,64,0.6605596590000008],[1755,7052,64,0.6599203680000008],[1754,7048,64,0.6592992850000008],[1753,7044,64,0.6586351180000007],[1752,7040,64,0.6579999510000007],[1751,7036,64,0.6573587010000007],[1750,7032,64,0.6567365760000007],[1749,7028,64,0.6560978670000007],[1748,7024,64,0.6554456170000007],[1747,7020,64,0.6547973670000007],[1746,7016,64,0.6541782010000007],[1745,7012,64,0.6535349090000007],[1744,7008,64,0.6529090340000007],[1743,7004,64,0.6522732010000006],[1742,7000,64,0.6516524090000007],[1741,6996,64,0.6509915340000006],[1740,6992,64,0.6503212420000006],[1739,6988,64,0.6496822010000006],[1738,6984,64,0.6490551170000006],[1737,6980,64,0.6484099920000006],[1736,6976,64,0.6477864500000006],[1735,6972,64,0.6471267830000006],[1734,6968,64,0.6465014920000006],[1733,6964,64,0.6458381580000007],[1732,6960,64,0.6452183670000007],[1731,6956,64,0.6445648670000007],[1730,6952,64,0.6439457420000007],[1729,6948,64,0.6433164510000007],[1728,6944,64,0.6426654090000007],[1727,6940,64,0.6420227840000007],[1726,6936,64,0.6413914510000007],[1725,6932,64,0.6407595760000008],[1724,6928,64,0.6401187840000008],[1723,6924,64,0.6394862840000007],[1722,6920,64,0.6388656170000008],[1721,6916,64,0.6382243260000008],[1720,6912,64,0.6376021180000008],[1719,6908,64,0.6369452430000008],[1718,6904,64,0.6363301180000007],[1717,6900,64,0.6357022840000007],[1716,6896,64,0.6350870340000008],[1715,6892,64,0.6344632430000008],[1714,6888,64,0.6338244930000008],[1713,6884,64,0.6331968680000007],[1712,6880,64,0.6325843260000007],[1711,6876,64,0.6319565340000007],[1710,6872,64,0.6313362420000007],[1709,6868,64,0.6307096170000007],[1708,6864,64,0.6300952010000007],[1707,6860,64,0.6294370760000008],[1706,6856,64,0.6288275340000008],[1705,6852,64,0.6282012010000008],[1704,6848,64,0.6275906170000007],[1703,6844,64,0.6269700750000008],[1702,6840,64,0.6263364080000008],[1701,6836,64,0.6256803670000007],[1700,6832,64,0.6250672830000007],[1699,6828,64,0.6244372830000007],[1698,6824,64,0.6238134500000007],[1697,6820,64,0.6231925330000007],[1696,6816,64,0.6225632830000006],[1695,6812,64,0.6219382000000007],[1694,6808,64,0.6212884080000006],[1693,6804,64,0.6206624080000006],[1692,6800,64,0.6200546580000006],[1691,6796,64,0.6194337000000006],[1690,6792,64,0.6188056170000007],[1689,6788,64,0.6181332830000007],[1688,6784,64,0.6175108670000007],[1687,6780,64,0.6168667000000007],[1686,6776,64,0.6162572420000006],[1685,6772,64,0.6156399080000007],[1684,6768,64,0.6150399500000007],[1683,6764,64,0.6144071160000006],[1682,6760,64,0.6138004080000007],[1681,6756,64,0.6131839500000007],[1680,6752,64,0.6125784080000007],[1679,6748,64,0.6119587830000007],[1678,6744,64,0.6113574500000007],[1677,6740,64,0.6107189500000008],[1676,6736,64,0.6101161580000007],[1675,6732,64,0.6094675330000008],[1674,6728,64,0.6088408250000008],[1673,6724,64,0.6082014910000008],[1672,6720,64,0.6075989910000008],[1671,6716,64,0.6069850750000008],[1670,6712,64,0.6063593660000007],[1669,6708,64,0.6057445330000008],[1668,6704,64,0.6051414910000007],[1667,6700,64,0.6045291580000007],[1666,6696,64,0.6039347830000007],[1665,6692,64,0.6033232830000007],[1664,6688,64,0.6026990330000007],[1663,6684,64,0.6020854920000007],[1662,6680,64,0.6014824500000007],[1661,6676,64,0.6008613670000007],[1660,6672,64,0.6002694500000006],[1659,6668,64,0.5996559920000006],[1658,6664,64,0.5990587010000006],[1657,6660,64,0.5984189090000006],[1656,6656,64,0.5978216180000006],[1655,6652,64,0.5972112010000006],[1654,6648,64,0.5966089090000006],[1653,6644,64,0.5960017010000006],[1652,6640,64,0.5954053260000006],[1651,6636,64,0.5947944930000006],[1650,6632,64,0.5941720340000006],[1649,6628,64,0.5935694090000007],[1648,6624,64,0.5929754090000007],[1647,6620,64,0.5923590340000007],[1646,6616,64,0.5917640340000007],[1645,6612,64,0.5911394090000006],[1644,6608,64,0.5905357010000006],[1643,6604,64,0.5899263260000006],[1642,6600,64,0.5893282840000006],[1641,6596,64,0.5887229510000006],[1640,6592,64,0.5881208680000006],[1639,6588,64,0.5875124930000006],[1638,6584,64,0.5869225350000007],[1637,6580,64,0.5862964100000007],[1636,6576,64,0.5857073260000006],[1635,6572,64,0.5851057850000007],[1634,6568,64,0.5845139100000006],[1633,6564,64,0.5839044100000006],[1632,6560,64,0.5833087850000006],[1631,6556,64,0.5826399930000006],[1630,6552,64,0.5820419520000005],[1629,6548,64,0.5814520350000005],[1628,6544,64,0.5808723270000006],[1627,6540,64,0.5802760770000006],[1626,6536,64,0.5796929520000006],[1625,6532,64,0.5791024520000005],[1624,6528,64,0.5784402020000006],[1623,6524,64,0.5778443680000006],[1622,6520,64,0.5772631600000006],[1621,6516,64,0.5766721180000005],[1620,6512,64,0.5760876180000005],[1619,6508,64,0.5754521590000006],[1618,6504,64,0.5748703260000005],[1617,6500,64,0.5742793680000006],[1616,6496,64,0.5736981180000006],[1615,6492,64,0.5731061180000006],[1614,6488,64,0.5725113680000006],[1613,6484,64,0.5719004930000006],[1612,6480,64,0.5713161180000006],[1611,6476,64,0.5707229930000006],[1610,6472,64,0.5701267840000006],[1609,6468,64,0.5695168680000006],[1608,6464,64,0.5689433260000005],[1607,6460,64,0.5683542850000005],[1606,6456,64,0.5677339930000005],[1605,6452,64,0.5671442850000005],[1604,6448,64,0.5665597430000004],[1603,6444,64,0.5659611180000005],[1602,6440,64,0.5653900760000005],[1601,6436,64,0.5647849930000005],[1600,6432,64,0.5642108260000005],[1599,6428,64,0.5636193260000005],[1598,6424,64,0.5630521180000005],[1597,6420,64,0.5624335350000006],[1596,6416,64,0.5618437430000006],[1595,6412,64,0.5612273270000007],[1594,6408,64,0.5606476190000007],[1593,6404,64,0.5600634520000007],[1592,6400,64,0.5594715770000007],[1591,6396,64,0.5588642850000007],[1590,6392,64,0.5582745350000008],[1589,6388,64,0.5576845350000008],[1588,6384,64,0.5570880760000008],[1587,6380,64,0.5564744930000007],[1586,6376,64,0.5559091600000008],[1585,6372,64,0.5553287850000008],[1584,6368,64,0.5547684100000009],[1583,6364,64,0.5541474510000008],[1582,6360,64,0.5535653680000009],[1581,6356,64,0.5529227430000009],[1580,6352,64,0.5523506180000008],[1579,6348,64,0.5517735770000008],[1578,6344,64,0.5512112850000008],[1577,6340,64,0.5506335770000008],[1576,6336,64,0.5500735350000008],[1575,6332,64,0.5494923260000008],[1574,6328,64,0.5489091600000008],[1573,6324,64,0.5483164930000007],[1572,6320,64,0.5477502850000008],[1571,6316,64,0.5471730350000008],[1570,6312,64,0.5466117430000008],[1569,6308,64,0.5460020770000008],[1568,6304,64,0.5454412850000008],[1567,6300,64,0.5448594100000008],[1566,6296,64,0.5442964930000008],[1565,6292,64,0.5437247430000008],[1564,6288,64,0.5431649100000009],[1563,6284,64,0.5425935760000009],[1562,6280,64,0.5420358260000009],[1561,6276,64,0.5414565760000009],[1560,6272,64,0.5408578260000009],[1559,6268,64,0.5402735340000009],[1558,6264,64,0.5397154510000008],[1557,6260,64,0.5391440760000008],[1556,6256,64,0.5385881170000008],[1555,6252,64,0.5379828260000008],[1554,6248,64,0.5374237420000008],[1553,6244,64,0.5368128260000008],[1552,6240,64,0.5362568670000007],[1551,6236,64,0.5356610340000008],[1550,6232,64,0.5350593260000007],[1549,6228,64,0.5344654920000007],[1548,6224,64,0.5338727420000007],[1547,6220,64,0.5333053260000007],[1546,6216,64,0.5327315760000007],[1545,6212,64,0.5321594930000006],[1544,6208,64,0.5316027010000006],[1543,6204,64,0.5310366590000006],[1542,6200,64,0.5304833670000006],[1541,6196,64,0.5298730340000006],[1540,6192,64,0.5293018670000006],[1539,6188,64,0.5286930340000006],[1538,6184,64,0.5281242840000006],[1537,6180,64,0.5275352840000006],[1536,6176,64,0.5269809090000006],[1535,6172,64,0.5263926590000007],[1534,6168,64,0.5258398670000006],[1533,6164,64,0.5252642000000006],[1532,6160,64,0.5246718250000006],[1531,6156,64,0.5241029920000007],[1530,6152,64,0.5235270750000006],[1529,6148,64,0.5229262420000006],[1528,6144,64,0.5223464080000007],[1527,6140,64,0.5217670330000006],[1526,6136,64,0.5211879080000006],[1525,6132,64,0.5205940330000006],[1524,6128,64,0.5200299910000006],[1523,6124,64,0.5194574080000006],[1522,6120,64,0.5188882410000006],[1521,6116,64,0.5183204910000007],[1520,6112,64,0.5177474080000006],[1519,6108,64,0.5171516580000006],[1518,6104,64,0.5166016160000007],[1517,6100,64,0.5160239910000006],[1516,6096,64,0.5154808240000006],[1515,6092,64,0.5148934910000006],[1514,6088,64,0.5143447410000006],[1513,6084,64,0.5137682820000006],[1512,6080,64,0.5132019490000006],[1511,6076,64,0.5126328660000006],[1510,6072,64,0.5120829910000005],[1509,6068,64,0.5115279910000006],[1508,6064,64,0.5109466160000006],[1507,6060,64,0.5103759500000006],[1506,6056,64,0.5098136160000005],[1505,6052,64,0.5092427410000006],[1504,6048,64,0.5086711160000006],[1503,6044,64,0.5081176990000006],[1502,6040,64,0.5075627410000005],[1501,6036,64,0.5069914070000006],[1500,6032,64,0.5064467410000005],[1499,6028,64,0.5058865330000005],[1498,6024,64,0.5053483240000005],[1497,6020,64,0.5047959080000005],[1496,6016,64,0.5042567830000005],[1495,6012,64,0.5036985750000006],[1494,6008,64,0.5031422000000005],[1493,6004,64,0.5025885330000005],[1492,6000,64,0.5020288660000005],[1491,5996,64,0.5014538250000005],[1490,5992,64,0.5008979910000004],[1489,5988,64,0.5003169910000004],[1488,5984,64,0.49976778300000035],[1487,5980,64,0.4991730330000004],[1486,5976,64,0.49863532500000035],[1485,5972,64,0.49806790800000034],[1484,5968,64,0.49751599200000035],[1483,5964,64,0.49693611700000034],[1482,5960,64,0.4963379080000003],[1481,5956,64,0.49575540800000034],[1480,5952,64,0.49516778300000036],[1479,5948,64,0.4945833240000004],[1478,5944,64,0.4940314490000004],[1477,5940,64,0.4934840330000004],[1476,5936,64,0.4929192410000004],[1475,5932,64,0.4923502410000004],[1474,5928,64,0.4917858660000004],[1473,5924,64,0.4912037410000004],[1472,5920,64,0.4906456570000004],[1471,5916,64,0.4900744070000004],[1470,5912,64,0.4895114490000004],[1469,5908,64,0.48893194900000037],[1468,5904,64,0.48836724100000034],[1467,5900,64,0.48782203200000035],[1466,5896,64,0.48727165700000036],[1465,5892,64,0.48672703200000034],[1464,5888,64,0.48618649000000036],[1463,5884,64,0.48559978200000037],[1462,5880,64,0.4850656980000004],[1461,5876,64,0.48449786500000036],[1460,5872,64,0.4839649070000004],[1459,5868,64,0.4833975320000004],[1458,5864,64,0.4828679480000004],[1457,5860,64,0.48232569800000036],[1456,5856,64,0.48178832300000035],[1455,5852,64,0.4812396570000004],[1454,5848,64,0.4806885320000004],[1453,5844,64,0.48014465700000036],[1452,5840,64,0.47959669900000035],[1451,5836,64,0.47905686500000033],[1450,5832,64,0.4785277400000003],[1449,5828,64,0.4779757820000003],[1448,5824,64,0.47744207400000027],[1447,5820,64,0.4769037820000003],[1446,5816,64,0.4763804070000003],[1445,5812,64,0.4758331160000003],[1444,5808,64,0.4753093250000003],[1443,5804,64,0.4747672840000003],[1442,5800,64,0.4742342430000003],[1441,5796,64,0.47368707600000026],[1440,5792,64,0.4731566600000003],[1439,5788,64,0.4726024100000003],[1438,5784,64,0.4720664100000003],[1437,5780,64,0.47151053500000034],[1436,5776,64,0.47096703500000037],[1435,5772,64,0.47042274300000037],[1434,5768,64,0.46989849300000036],[1433,5764,64,0.46935941000000037],[1432,5760,64,0.46883070100000035],[1431,5756,64,0.46827824300000037],[1430,5752,64,0.4677233260000004],[1429,5748,64,0.46718941000000036],[1428,5744,64,0.4666559930000004],[1427,5740,64,0.46611461800000037],[1426,5736,64,0.4655503680000004],[1425,5732,64,0.4649764100000004],[1424,5728,64,0.4644446180000004],[1423,5724,64,0.4638977850000004],[1422,5720,64,0.4633759100000004],[1421,5716,64,0.4628122020000004],[1420,5712,64,0.46228820200000037],[1419,5708,64,0.4617120360000004],[1418,5704,64,0.46116820200000036],[1417,5700,64,0.46062711900000036],[1416,5696,64,0.46008828600000035],[1415,5692,64,0.4595420360000003],[1414,5688,64,0.45899986900000034],[1413,5684,64,0.45843611900000036],[1412,5680,64,0.45791053600000037],[1411,5676,64,0.45735382800000035],[1410,5672,64,0.4568163280000003],[1409,5668,64,0.45627395300000034],[1408,5664,64,0.45573674500000033],[1407,5660,64,0.4552067860000003],[1406,5656,64,0.45469266100000033],[1405,5652,64,0.4541394110000003],[1404,5648,64,0.4535945780000003],[1403,5644,64,0.4530402030000003],[1402,5640,64,0.4525110780000003],[1401,5636,64,0.4519655370000003],[1400,5632,64,0.4514356620000003],[1399,5628,64,0.4508818700000003],[1398,5624,64,0.4503331620000003],[1397,5620,64,0.44979587000000026],[1396,5616,64,0.44927691200000025],[1395,5612,64,0.44874224600000023],[1394,5608,64,0.44821962100000023],[1393,5604,64,0.44769266200000024],[1392,5600,64,0.4471833710000002],[1391,5596,64,0.4466575790000002],[1390,5592,64,0.4461336210000002],[1389,5588,64,0.4456012040000002],[1388,5584,64,0.4450834950000002],[1387,5580,64,0.44455920300000024],[1386,5576,64,0.44405153600000025],[1385,5572,64,0.4435159950000003],[1384,5568,64,0.4430077860000003],[1383,5564,64,0.4424690780000003],[1382,5560,64,0.4419511200000003],[1381,5556,64,0.4414222030000003],[1380,5552,64,0.44090753600000027],[1379,5548,64,0.44038328600000026],[1378,5544,64,0.43986374500000025],[1377,5540,64,0.43933457800000025],[1376,5536,64,0.43882987000000023],[1375,5532,64,0.43829462000000025],[1374,5528,64,0.4377852860000003],[1373,5524,64,0.4372545780000003],[1372,5520,64,0.4367444530000003],[1371,5516,64,0.4362185360000003],[1370,5512,64,0.43571303600000033],[1369,5508,64,0.4351938700000003],[1368,5504,64,0.4346854110000003],[1367,5500,64,0.4341631610000003],[1366,5496,64,0.4336552450000003],[1365,5492,64,0.4331291200000003],[1364,5488,64,0.4326242450000003],[1363,5484,64,0.4320928280000003],[1362,5480,64,0.43158166100000034],[1361,5476,64,0.43105753600000035],[1360,5472,64,0.4305323270000003],[1359,5468,64,0.43000436900000033],[1358,5464,64,0.42950182700000034],[1357,5460,64,0.4289710770000003],[1356,5456,64,0.4283922860000003],[1355,5452,64,0.42785516100000026],[1354,5448,64,0.42734003600000026],[1353,5444,64,0.42681411900000027],[1352,5440,64,0.42630316100000026],[1351,5436,64,0.42572603600000025],[1350,5432,64,0.42517549400000026],[1349,5428,64,0.42464049400000026],[1348,5424,64,0.42413603500000024],[1347,5420,64,0.4235850350000002],[1346,5416,64,0.4230582850000002],[1345,5412,64,0.4225230350000002],[1344,5408,64,0.4219990350000002],[1343,5404,64,0.4214742430000002],[1342,5400,64,0.42097191000000017],[1341,5396,64,0.42042624300000014],[1340,5392,64,0.41991066000000016],[1339,5388,64,0.41937116000000013],[1338,5384,64,0.41885511800000014],[1337,5380,64,0.41831036800000015],[1336,5376,64,0.41781520100000014],[1335,5372,64,0.4172594510000001],[1334,5368,64,0.4167424100000001],[1333,5364,64,0.4162284100000001],[1332,5360,64,0.4157384930000001],[1331,5356,64,0.4152034100000001],[1330,5352,64,0.4147029100000001],[1329,5348,64,0.4141844100000001],[1328,5344,64,0.4136851600000001],[1327,5340,64,0.41315078500000013],[1326,5336,64,0.4126471600000001],[1325,5332,64,0.41212886800000015],[1324,5328,64,0.4116392010000001],[1323,5324,64,0.41109520100000013],[1322,5320,64,0.41060611800000013],[1321,5316,64,0.41009145200000013],[1320,5312,64,0.40959520200000016],[1319,5308,64,0.4090856600000002],[1318,5304,64,0.4085830350000002],[1317,5300,64,0.4080713690000002],[1316,5296,64,0.4075856600000002],[1315,5292,64,0.40707636900000016],[1314,5288,64,0.4065796600000002],[1313,5284,64,0.4060721600000002],[1312,5280,64,0.40558657700000017],[1311,5276,64,0.4050799520000002],[1310,5272,64,0.40458711900000016],[1309,5268,64,0.40404653500000015],[1308,5264,64,0.40355841000000015],[1307,5260,64,0.40303266000000015],[1306,5256,64,0.40252999400000017],[1305,5252,64,0.40201107700000016],[1304,5248,64,0.40148732700000017],[1303,5244,64,0.40095766000000016],[1302,5240,64,0.40046549400000014],[1301,5236,64,0.39993628500000017],[1300,5232,64,0.39944249400000015],[1299,5228,64,0.39890366100000013],[1298,5224,64,0.3983736190000001],[1297,5220,64,0.3978406610000001],[1296,5216,64,0.39735795200000007],[1295,5212,64,0.39683682700000006],[1294,5208,64,0.39634086900000004],[1293,5204,64,0.395796244],[1292,5200,64,0.395297869],[1291,5196,64,0.39476028500000004],[1290,5192,64,0.39425532700000004],[1289,5188,64,0.39370641000000006],[1288,5184,64,0.3932043680000001],[1287,5180,64,0.3926699930000001],[1286,5176,64,0.3921799510000001],[1285,5172,64,0.3916594920000001],[1284,5168,64,0.3911739090000001],[1283,5164,64,0.3906742840000001],[1282,5160,64,0.39016578400000007],[1281,5156,64,0.3896514510000001],[1280,5152,64,0.3891447420000001],[1279,5148,64,0.3886138250000001],[1278,5144,64,0.3881207000000001],[1277,5140,64,0.3876034920000001],[1276,5136,64,0.3871120340000001],[1275,5132,64,0.3865976170000001],[1274,5128,64,0.3861161590000001],[1273,5124,64,0.38560182600000015],[1272,5120,64,0.38512065900000014],[1271,5116,64,0.38457932500000014],[1270,5112,64,0.38409278400000013],[1269,5108,64,0.38357965900000013],[1268,5104,64,0.38310190900000013],[1267,5100,64,0.38260670000000013],[1266,5096,64,0.3821266170000001],[1265,5092,64,0.3816283250000001],[1264,5088,64,0.3811471170000001],[1263,5084,64,0.3806414920000001],[1262,5080,64,0.3801386580000001],[1261,5076,64,0.3796267830000001],[1260,5072,64,0.3791482830000001],[1259,5068,64,0.3786495740000001],[1258,5064,64,0.3781686160000001],[1257,5060,64,0.37766749100000013],[1256,5056,64,0.37718974100000013],[1255,5052,64,0.37667661600000013],[1254,5048,64,0.3761968250000001],[1253,5044,64,0.3756821160000001],[1252,5040,64,0.37519865800000013],[1251,5036,64,0.3747050750000001],[1250,5032,64,0.3742282000000001],[1249,5028,64,0.3737321160000001],[1248,5024,64,0.3732581580000001],[1247,5020,64,0.3727629920000001],[1246,5016,64,0.3722906170000001],[1245,5012,64,0.3717765330000001],[1244,5008,64,0.37129353300000006],[1243,5004,64,0.3706773240000001],[1242,5000,64,0.3700720330000001],[1241,4996,64,0.3695782000000001],[1240,4992,64,0.3691019080000001],[1239,4988,64,0.3686299500000001],[1238,4984,64,0.3681521580000001],[1237,4980,64,0.3676676170000001],[1236,4976,64,0.3671889500000001],[1235,4972,64,0.36671786700000014],[1234,4968,64,0.36624103400000013],[1233,4964,64,0.36576965900000014],[1232,4960,64,0.36529365900000016],[1231,4956,64,0.36481190900000016],[1230,4952,64,0.36430999200000014],[1229,4948,64,0.36383757600000016],[1228,4944,64,0.36337732600000017],[1227,4940,64,0.3629201590000002],[1226,4936,64,0.3624642010000002],[1225,4932,64,0.3620091180000002],[1224,4928,64,0.3615547850000002],[1223,4924,64,0.3610993690000002],[1222,4920,64,0.3606410770000002],[1221,4916,64,0.3601874100000002],[1220,4912,64,0.3597299100000002],[1219,4908,64,0.3592783680000002],[1218,4904,64,0.35882495100000017],[1217,4900,64,0.3583701180000002],[1216,4896,64,0.3579137010000002],[1215,4892,64,0.3574616180000002],[1214,4888,64,0.3570081180000002],[1213,4884,64,0.3565535760000002],[1212,4880,64,0.3560977850000002],[1211,4876,64,0.35564582700000025],[1210,4872,64,0.3551883690000002],[1209,4868,64,0.3547297020000002],[1208,4864,64,0.3542778690000002],[1207,4860,64,0.3538259940000002],[1206,4856,64,0.35337186900000017],[1205,4852,64,0.3529148690000002],[1204,4848,64,0.3524589940000002],[1203,4844,64,0.35200666100000017],[1202,4840,64,0.35155253600000014],[1201,4836,64,0.35110174400000016],[1200,4832,64,0.3506494940000002],[1199,4828,64,0.35019928600000017],[1198,4824,64,0.34974749400000016],[1197,4820,64,0.34929911900000016],[1196,4816,64,0.3488499110000002],[1195,4812,64,0.3483819940000002],[1194,4808,64,0.34793403600000017],[1193,4804,64,0.34748882700000017],[1192,4800,64,0.3470294110000002],[1191,4796,64,0.34657578600000016],[1190,4792,64,0.34613024400000014],[1189,4788,64,0.34568024400000014],[1188,4784,64,0.3452344940000001],[1187,4780,64,0.3447899520000001],[1186,4776,64,0.3443463270000001],[1185,4772,64,0.3438848690000001],[1184,4768,64,0.3434409940000001],[1183,4764,64,0.3429934940000001],[1182,4760,64,0.3425477440000001],[1181,4756,64,0.3420954940000001],[1180,4752,64,0.34142032700000013],[1179,4748,64,0.3409675360000001],[1178,4744,64,0.34051166100000013],[1177,4740,64,0.3400187020000001],[1176,4736,64,0.33956228500000013],[1175,4732,64,0.33911232700000016],[1174,4728,64,0.33865291100000017],[1173,4724,64,0.33820549400000016],[1172,4720,64,0.3377634520000002],[1171,4716,64,0.33732045200000016],[1170,4712,64,0.33686282700000014],[1169,4708,64,0.33641978500000014],[1168,4704,64,0.3359544520000001],[1167,4700,64,0.3355088680000001],[1166,4696,64,0.3350606600000001],[1165,4692,64,0.3345899100000001],[1164,4688,64,0.3341174520000001],[1163,4684,64,0.33365203500000007],[1162,4680,64,0.33317861900000006],[1161,4676,64,0.33268816000000007],[1160,4672,64,0.3322434940000001],[1159,4668,64,0.33177591000000006],[1158,4664,64,0.33133186900000006],[1157,4660,64,0.33084395200000005],[1156,4656,64,0.33038482700000005],[1155,4652,64,0.32994007700000005],[1154,4648,64,0.32947128500000006],[1153,4644,64,0.32900474400000007],[1152,4640,64,0.32856511900000007],[1151,4636,64,0.3281280350000001],[1150,4632,64,0.3276392020000001],[1149,4628,64,0.3272037020000001],[1148,4624,64,0.3267564940000001],[1147,4620,64,0.32629291100000013],[1146,4616,64,0.32583857800000016],[1145,4612,64,0.3253974940000002],[1144,4608,64,0.3249662440000002],[1143,4604,64,0.3245041190000002],[1142,4600,64,0.3240572860000002],[1141,4596,64,0.32362766100000023],[1140,4592,64,0.32317795300000024],[1139,4588,64,0.32271824500000024],[1138,4584,64,0.32227062000000023],[1137,4580,64,0.3218142450000002],[1136,4576,64,0.3213304110000002],[1135,4572,64,0.3208649110000002],[1134,4568,64,0.3204349110000002],[1133,4564,64,0.31997878600000024],[1132,4560,64,0.3195183700000002],[1131,4556,64,0.3190795780000002],[1130,4552,64,0.3186288700000002],[1129,4548,64,0.3181575360000002],[1128,4544,64,0.31773091100000017],[1127,4540,64,0.3172976610000002],[1126,4536,64,0.31686995300000015],[1125,4532,64,0.31642778600000016],[1124,4528,64,0.31599945300000015],[1123,4524,64,0.31556766100000017],[1122,4520,64,0.31509607700000014],[1121,4516,64,0.31466570200000016],[1120,4512,64,0.3142345770000002],[1119,4508,64,0.3138058270000002],[1118,4504,64,0.3133807860000002],[1117,4500,64,0.31295132700000017],[1116,4496,64,0.3125237020000002],[1115,4492,64,0.3120962440000002],[1114,4488,64,0.3116732860000002],[1113,4484,64,0.3112506610000002],[1112,4480,64,0.3108285780000002],[1111,4476,64,0.31040386900000017],[1110,4472,64,0.30998245300000016],[1109,4468,64,0.30953428600000016],[1108,4464,64,0.30910699500000016],[1107,4460,64,0.30868478600000016],[1106,4456,64,0.30825845300000015],[1105,4452,64,0.30783620300000014],[1104,4448,64,0.30741682800000014],[1103,4444,64,0.30699641100000014],[1102,4440,64,0.3065761610000001],[1101,4436,64,0.30614457700000014],[1100,4432,64,0.3057163270000001],[1099,4428,64,0.3052957020000001],[1098,4424,64,0.3048694110000001],[1097,4420,64,0.3044379940000001],[1096,4416,64,0.3040234520000001],[1095,4412,64,0.3036008270000001],[1094,4408,64,0.3031696610000001],[1093,4404,64,0.30274578600000007],[1092,4400,64,0.3023252860000001],[1091,4396,64,0.3018914110000001],[1090,4392,64,0.3014615360000001],[1089,4388,64,0.30103012000000007],[1088,4384,64,0.3006083280000001],[1087,4380,64,0.3001668280000001],[1086,4376,64,0.2997521200000001],[1085,4372,64,0.2993269530000001],[1084,4368,64,0.2988753280000001],[1083,4364,64,0.2984565780000001],[1082,4360,64,0.2980191610000001],[1081,4356,64,0.2975719110000001],[1080,4352,64,0.2970981610000001],[1079,4348,64,0.29666470200000006],[1078,4344,64,0.29623711900000005],[1077,4340,64,0.295764952],[1076,4336,64,0.295335744],[1075,4332,64,0.29490041100000003],[1074,4328,64,0.294471244],[1073,4324,64,0.29403616000000005],[1072,4320,64,0.29361836900000005],[1071,4316,64,0.29320982700000003],[1070,4312,64,0.292745036],[1069,4308,64,0.292319161],[1068,4304,64,0.291902494],[1067,4300,64,0.291457411],[1066,4296,64,0.291034203],[1065,4292,64,0.29061249499999997],[1064,4288,64,0.290180036],[1063,4284,64,0.28975045299999996],[1062,4280,64,0.289335912],[1061,4276,64,0.28891053699999997],[1060,4272,64,0.28846362],[1059,4268,64,0.288027245],[1058,4264,64,0.287620162],[1057,4260,64,0.28718337],[1056,4256,64,0.286752537],[1055,4252,64,0.28634066199999997],[1054,4248,64,0.285913995],[1053,4244,64,0.285493787],[1052,4240,64,0.285054287],[1051,4236,64,0.284648662],[1050,4232,64,0.284247329],[1049,4228,64,0.28382662],[1048,4224,64,0.283422079],[1047,4220,64,0.283017579],[1046,4216,64,0.28261699500000004],[1045,4212,64,0.28221745400000003],[1044,4208,64,0.281815662],[1043,4204,64,0.28141553700000005],[1042,4200,64,0.28101357900000007],[1041,4196,64,0.28061053700000005],[1040,4192,64,0.28020595400000003],[1039,4188,64,0.27979974500000004],[1038,4184,64,0.279399037],[1037,4180,64,0.27899882800000003],[1036,4176,64,0.27859695300000004],[1035,4172,64,0.27819666200000004],[1034,4168,64,0.27779791200000004],[1033,4164,64,0.27739891200000005],[1032,4160,64,0.2770023710000001],[1031,4156,64,0.27659762100000007],[1030,4152,64,0.27618503800000005],[1029,4148,64,0.27578116300000005],[1028,4144,64,0.27535528800000003],[1027,4140,64,0.27496016300000004],[1026,4136,64,0.274565121],[1025,4132,64,0.274161788],[1024,4128,64,0.273768288],[1023,4124,64,0.273370997],[1022,4120,64,0.272970997],[1021,4116,64,0.272574205],[1020,4112,64,0.272183288],[1019,4108,64,0.271788788],[1018,4104,64,0.271381955],[1017,4100,64,0.270988621],[1016,4096,64,0.270597955],[1015,4092,64,0.270206205],[1014,4088,64,0.269813121],[1013,4084,64,0.269422871],[1012,4080,64,0.269029746],[1011,4076,64,0.268634496],[1010,4072,64,0.268199912],[1009,4068,64,0.267801537],[1008,4064,64,0.267415246],[1007,4060,64,0.26700108],[1006,4056,64,0.26659408],[1005,4052,64,0.266180205],[1004,4048,64,0.265757664],[1003,4044,64,0.265367747],[1002,4040,64,0.264982997],[1001,4036,64,0.264585997],[1000,4032,64,0.26418883000000004],[999,4028,64,0.26377308000000005],[998,4024,64,0.26338637200000004],[997,4020,64,0.26299383000000004],[996,4016,64,0.26259233000000004],[995,4012,64,0.26220583000000003],[994,4008,64,0.26178733000000004],[993,4004,64,0.26138316400000006],[992,4000,64,0.2609825800000001],[991,3996,64,0.26057458000000006],[990,3992,64,0.26015666400000004],[989,3988,64,0.259763622],[988,3984,64,0.25936224700000005],[987,3980,64,0.25896512200000005],[986,3976,64,0.258568039],[985,3972,64,0.25815033000000004],[984,3968,64,0.257751914],[983,3964,64,0.257345539],[982,3960,64,0.256946664],[981,3956,64,0.256565789],[980,3952,64,0.256141872],[979,3948,64,0.255749789],[978,3944,64,0.255334122],[977,3940,64,0.25494558],[976,3936,64,0.254549121],[975,3932,64,0.254162038],[974,3928,64,0.25377970499999997],[973,3924,64,0.25335507999999995],[972,3920,64,0.25296166299999995],[971,3916,64,0.25256341299999996],[970,3912,64,0.252181705],[969,3908,64,0.251755246],[968,3904,64,0.25137262099999996],[967,3900,64,0.25098187099999997],[966,3896,64,0.25055607999999996],[965,3892,64,0.250162705],[964,3888,64,0.249786163],[963,3884,64,0.249393746],[962,3880,64,0.249005996],[961,3876,64,0.24862720400000002],[960,3872,64,0.248243538],[959,3868,64,0.24785578800000002],[958,3864,64,0.24748108000000002],[957,3860,64,0.24710320500000002],[956,3856,64,0.246724663],[955,3852,64,0.24634483000000001],[954,3848,64,0.24596916300000002],[953,3844,64,0.24557087100000002],[952,3840,64,0.245192913],[951,3836,64,0.24481924600000002],[950,3832,64,0.24441833000000002],[949,3828,64,0.244016205],[948,3824,64,0.243588663],[947,3820,64,0.24321716300000001],[946,3816,64,0.24284253800000002],[945,3812,64,0.24246870500000003],[944,3808,64,0.24209766300000005],[943,3804,64,0.24171945400000006],[942,3800,64,0.24134020400000006],[941,3796,64,0.24095407900000007],[940,3792,64,0.24058491200000007],[939,3788,64,0.24020774500000006],[938,3784,64,0.23983770400000007],[937,3780,64,0.23946253700000006],[936,3776,64,0.23908562100000005],[935,3772,64,0.23872045500000005],[934,3768,64,0.23834220500000006],[933,3764,64,0.23795183000000006],[932,3760,64,0.23757612100000006],[931,3756,64,0.23720487100000007],[930,3752,64,0.23682645500000007],[929,3748,64,0.23645449600000007],[928,3744,64,0.23608495400000007],[927,3740,64,0.23570199600000008],[926,3736,64,0.2353337460000001],[925,3732,64,0.2349715790000001],[924,3728,64,0.2346011210000001],[923,3724,64,0.2342255380000001],[922,3720,64,0.2338454960000001],[921,3716,64,0.2334827460000001],[920,3712,64,0.2331043300000001],[919,3708,64,0.2327385380000001],[918,3704,64,0.23235420500000012],[917,3700,64,0.23196799700000012],[916,3696,64,0.2315890380000001],[915,3692,64,0.23121741300000012],[914,3688,64,0.23084691300000013],[913,3684,64,0.23045933000000013],[912,3680,64,0.23008295500000012],[911,3676,64,0.2296822050000001],[910,3672,64,0.22930578900000012],[909,3668,64,0.22891824700000013],[908,3664,64,0.22854528900000012],[907,3660,64,0.22815645600000012],[906,3656,64,0.2277596220000001],[905,3652,64,0.2273908720000001],[904,3648,64,0.2270225800000001],[903,3644,64,0.22660924700000012],[902,3640,64,0.22625249700000014],[901,3636,64,0.22589278800000012],[900,3632,64,0.2255358720000001],[899,3628,64,0.2251599970000001],[898,3624,64,0.22480420600000012],[897,3620,64,0.22444041400000012],[896,3616,64,0.22407545600000012],[895,3612,64,0.22370183100000013],[894,3608,64,0.22332403900000014],[893,3604,64,0.22296541400000014],[892,3600,64,0.22260883100000015],[891,3596,64,0.22224728900000015],[890,3592,64,0.22189412300000017],[889,3588,64,0.22153533100000017],[888,3584,64,0.22117928900000017],[887,3580,64,0.22067920600000016],[886,3576,64,0.22032545600000014],[885,3572,64,0.21996728900000015],[884,3568,64,0.21961078900000014],[883,3564,64,0.21925449800000013],[882,3560,64,0.21890245600000013],[881,3556,64,0.21855024800000014],[880,3552,64,0.21820158100000014],[879,3548,64,0.21784941400000016],[878,3544,64,0.21749916400000016],[877,3540,64,0.21712995600000015],[876,3536,64,0.21677291400000015],[875,3532,64,0.21640903900000014],[874,3528,64,0.21606195600000014],[873,3524,64,0.21571345600000014],[872,3520,64,0.21535978900000013],[871,3516,64,0.21500103900000014],[870,3512,64,0.21463945500000015],[869,3508,64,0.21428933000000014],[868,3504,64,0.21391862200000014],[867,3500,64,0.21355858000000014],[866,3496,64,0.21321008000000014],[865,3492,64,0.21285683000000014],[864,3488,64,0.21249374700000015],[863,3484,64,0.21212458000000015],[862,3480,64,0.21177858000000013],[861,3476,64,0.21140987200000014],[860,3472,64,0.21106474700000014],[859,3468,64,0.21069028900000014],[858,3464,64,0.21034383100000015],[857,3460,64,0.20999828900000014],[856,3456,64,0.20965408100000013],[855,3452,64,0.20930895600000013],[854,3448,64,0.20893641400000013],[853,3444,64,0.20858837300000013],[852,3440,64,0.20823978900000012],[851,3436,64,0.2078709980000001],[850,3432,64,0.2075290400000001],[849,3428,64,0.2071767060000001],[848,3424,64,0.2068337900000001],[847,3420,64,0.2064794570000001],[846,3416,64,0.2061379570000001],[845,3412,64,0.2057986660000001],[844,3408,64,0.2054575410000001],[843,3404,64,0.2051197070000001],[842,3400,64,0.2047829570000001],[841,3396,64,0.2044448740000001],[840,3392,64,0.2041037080000001],[839,3388,64,0.20376204100000012],[838,3384,64,0.2034220410000001],[837,3380,64,0.20308574900000012],[836,3376,64,0.2027395820000001],[835,3372,64,0.2023971660000001],[834,3368,64,0.2020585820000001],[833,3364,64,0.2017237910000001],[832,3360,64,0.2013804990000001],[831,3356,64,0.2010459570000001],[830,3352,64,0.2006972910000001],[829,3348,64,0.20034845700000012],[828,3344,64,0.20001312400000013],[827,3340,64,0.19967133200000012],[826,3336,64,0.1993213740000001],[825,3332,64,0.19895808200000012],[824,3328,64,0.19861762400000013],[823,3324,64,0.19828204100000013],[822,3320,64,0.19794616600000012],[821,3316,64,0.19760129100000012],[820,3312,64,0.19726233300000012],[819,3308,64,0.19690150000000012],[818,3304,64,0.19650008300000013],[817,3300,64,0.19611083300000012],[816,3296,64,0.19571091700000012],[815,3292,64,0.19533041700000012],[814,3288,64,0.19493195800000013],[813,3284,64,0.19454425000000014],[812,3280,64,0.19412541700000013],[811,3276,64,0.19374554200000013],[810,3272,64,0.19336433400000014],[809,3268,64,0.19294979300000015],[808,3264,64,0.19256183400000015],[807,3260,64,0.19217400100000015],[806,3256,64,0.19179537600000016],[805,3252,64,0.19139250100000016],[804,3248,64,0.19101387600000017],[803,3244,64,0.19062808400000017],[802,3240,64,0.19023241800000018],[801,3236,64,0.1898575840000002],[800,3232,64,0.18948179200000018],[799,3228,64,0.18909683400000019],[798,3224,64,0.18867325000000018],[797,3220,64,0.1882918750000002],[796,3216,64,0.1879007500000002],[795,3212,64,0.1874924580000002],[794,3208,64,0.1871167910000002],[793,3204,64,0.1867427500000002],[792,3200,64,0.1863705410000002],[791,3196,64,0.1859474580000002],[790,3192,64,0.1855578330000002],[789,3188,64,0.1851777920000002],[788,3184,64,0.1847521670000002],[787,3180,64,0.18436175000000019],[786,3176,64,0.1839817500000002],[785,3172,64,0.1836010840000002],[784,3168,64,0.18321362500000019],[783,3164,64,0.1828417920000002],[782,3160,64,0.1824501670000002],[781,3156,64,0.1820789170000002],[780,3152,64,0.1817085420000002],[779,3148,64,0.1813396250000002],[778,3144,64,0.18096900000000019],[777,3140,64,0.1805997080000002],[776,3136,64,0.18022770800000018],[775,3132,64,0.1798608330000002],[774,3128,64,0.1794877910000002],[773,3124,64,0.1791172500000002],[772,3120,64,0.1787508750000002],[771,3116,64,0.17837787500000019],[770,3112,64,0.17801266600000018],[769,3108,64,0.17764783300000017],[768,3104,64,0.17727537500000018],[767,3100,64,0.17690933300000017],[766,3096,64,0.17652808300000017],[765,3092,64,0.17614591600000018],[764,3088,64,0.17577675000000018],[763,3084,64,0.17540579100000017],[762,3080,64,0.17503587500000017],[761,3076,64,0.1746684160000002],[760,3072,64,0.1742972910000002],[759,3068,64,0.1739343750000002],[758,3064,64,0.1735751250000002],[757,3060,64,0.1732115830000002],[756,3056,64,0.1728497500000002],[755,3052,64,0.17248750000000018],[754,3048,64,0.1721174170000002],[753,3044,64,0.1717417090000002],[752,3040,64,0.17138304200000018],[751,3036,64,0.17102204200000018],[750,3032,64,0.17066208400000019],[749,3028,64,0.17030341700000018],[748,3024,64,0.16993641700000017],[747,3020,64,0.16957945800000018],[746,3016,64,0.1692139580000002],[745,3012,64,0.1688382500000002],[744,3008,64,0.1684526250000002],[743,3004,64,0.16808562500000018],[742,3000,64,0.1677282920000002],[741,2996,64,0.1673635420000002],[740,2992,64,0.1669990840000002],[739,2988,64,0.1666042090000002],[738,2984,64,0.1662495840000002],[737,2980,64,0.1658936670000002],[736,2976,64,0.1655379170000002],[735,2972,64,0.1651827500000002],[734,2968,64,0.1647944580000002],[733,2964,64,0.1644306660000002],[732,2960,64,0.1640660830000002],[731,2956,64,0.1637044990000002],[730,2952,64,0.1633522080000002],[729,2948,64,0.1629980000000002],[728,2944,64,0.1626458750000002],[727,2940,64,0.16229416700000018],[726,2936,64,0.16194362500000017],[725,2932,64,0.16156487500000016],[724,2928,64,0.16120850000000017],[723,2924,64,0.16085262500000017],[722,2920,64,0.16049966700000018],[721,2916,64,0.16014679200000018],[720,2912,64,0.15975850000000016],[719,2908,64,0.15939545800000016],[718,2904,64,0.15902395800000016],[717,2900,64,0.15867441700000015],[716,2896,64,0.15831645800000016],[715,2892,64,0.15794987500000016],[714,2888,64,0.15759170800000016],[713,2884,64,0.15723016700000017],[712,2880,64,0.15688345800000017],[711,2876,64,0.15652958300000017],[710,2872,64,0.15616299900000016],[709,2868,64,0.15581849900000017],[708,2864,64,0.15543262400000016],[707,2860,64,0.15506987400000016],[706,2856,64,0.15472666500000015],[705,2852,64,0.15437704000000016],[704,2848,64,0.15400408200000015],[703,2844,64,0.15365395700000015],[702,2840,64,0.15331133200000013],[701,2836,64,0.15293820700000013],[700,2832,64,0.15259758200000012],[699,2828,64,0.1522084990000001],[698,2824,64,0.1518389150000001],[697,2820,64,0.1514788320000001],[696,2816,64,0.1511226650000001],[695,2812,64,0.1507799990000001],[694,2808,64,0.1504201240000001],[693,2804,64,0.1500767910000001],[692,2800,64,0.1497346660000001],[691,2796,64,0.1493940410000001],[690,2792,64,0.14904545800000008],[689,2788,64,0.14868683300000007],[688,2784,64,0.14834337500000008],[687,2780,64,0.1480019160000001],[686,2776,64,0.1476631240000001],[685,2772,64,0.1473247490000001],[684,2768,64,0.1469884570000001],[683,2764,64,0.1466468740000001],[682,2760,64,0.1463028320000001],[681,2756,64,0.1459676660000001],[680,2752,64,0.1456128320000001],[679,2748,64,0.1452762910000001],[678,2744,64,0.14493879100000012],[677,2740,64,0.14460349900000014],[676,2736,64,0.14426787400000013],[675,2732,64,0.14393058300000014],[674,2728,64,0.14359883300000015],[673,2724,64,0.14324445800000016],[672,2720,64,0.14288824900000016],[671,2716,64,0.14255491600000017],[670,2712,64,0.14220870800000018],[669,2708,64,0.14187308300000018],[668,2704,64,0.1415141660000002],[667,2700,64,0.1411842080000002],[666,2696,64,0.1408483750000002],[665,2692,64,0.1405135830000002],[664,2688,64,0.1401746240000002],[663,2684,64,0.13984237400000019],[662,2680,64,0.13950312400000017],[661,2676,64,0.13914241600000019],[660,2672,64,0.13879508300000018],[659,2668,64,0.1384445000000002],[658,2664,64,0.1381140420000002],[657,2660,64,0.13778520900000019],[656,2656,64,0.1374421250000002],[655,2652,64,0.13710566700000018],[654,2648,64,0.13676566700000017],[653,2644,64,0.13643645900000018],[652,2640,64,0.13607895900000017],[651,2636,64,0.13571137500000016],[650,2632,64,0.13532725000000015],[649,2628,64,0.13498900000000014],[648,2624,64,0.13466158400000014],[647,2620,64,0.13433354200000014],[646,2616,64,0.13400816700000015],[645,2612,64,0.13366495900000014],[644,2608,64,0.13333737500000015],[643,2604,64,0.13301229200000014],[642,2600,64,0.13267333400000014],[641,2596,64,0.13235133400000015],[640,2592,64,0.13202104200000014],[639,2588,64,0.13169895900000014],[638,2584,64,0.13137145900000013],[637,2580,64,0.13105041700000014],[636,2576,64,0.13072687500000013],[635,2572,64,0.13039858400000012],[634,2568,64,0.1300734590000001],[633,2564,64,0.1297471250000001],[632,2560,64,0.1294109170000001],[631,2556,64,0.1290676260000001],[630,2552,64,0.1287415840000001],[629,2548,64,0.1284171670000001],[628,2544,64,0.1280914590000001],[627,2540,64,0.1277709170000001],[626,2536,64,0.12745212500000008],[625,2532,64,0.12713262500000008],[624,2528,64,0.1268134160000001],[623,2524,64,0.12649541600000008],[622,2520,64,0.12617987400000008],[621,2516,64,0.12586274900000008],[620,2512,64,0.12554458200000007],[619,2508,64,0.12522720700000006],[618,2504,64,0.12490520700000007],[617,2500,64,0.12459124800000007],[616,2496,64,0.12427924800000006],[615,2492,64,0.12396474800000007],[614,2488,64,0.12364533200000007],[613,2484,64,0.12332829000000006],[612,2480,64,0.12301254000000006],[611,2476,64,0.12269833200000006],[610,2472,64,0.12238529100000006],[609,2468,64,0.12206766600000006],[608,2464,64,0.12175512400000006],[607,2460,64,0.12144120800000006],[606,2456,64,0.12113020800000006],[605,2452,64,0.12081862400000005],[604,2448,64,0.12050904000000005],[603,2444,64,0.12019420700000005],[602,2440,64,0.11988508200000006],[601,2436,64,0.11956124900000006],[600,2432,64,0.11924345700000007],[599,2428,64,0.11893587400000007],[598,2424,64,0.11862487400000006],[597,2420,64,0.11829366600000006],[596,2416,64,0.11794666600000006],[595,2412,64,0.11763479100000006],[594,2408,64,0.11731945800000006],[593,2404,64,0.11700337400000006],[592,2400,64,0.11669570800000006],[591,2396,64,0.11638579100000006],[590,2392,64,0.11607024900000006],[589,2388,64,0.11575191600000005],[588,2384,64,0.11544699900000005],[587,2380,64,0.11513708200000004],[586,2376,64,0.11482291600000004],[585,2372,64,0.11451483200000004],[584,2368,64,0.11421054000000004],[583,2364,64,0.11378704000000005],[582,2360,64,0.11347899800000005],[581,2356,64,0.11315874800000006],[580,2352,64,0.11285133100000005],[579,2348,64,0.11250912300000006],[578,2344,64,0.11218687300000006],[577,2340,64,0.11188474800000006],[576,2336,64,0.11156499800000007],[575,2332,64,0.11126341500000007],[574,2328,64,0.11096449800000008],[573,2324,64,0.11065045700000008],[572,2320,64,0.11034770700000007],[571,2316,64,0.11004758200000007],[570,2312,64,0.10974104000000007],[569,2308,64,0.10943245700000007],[568,2304,64,0.10913058200000007],[567,2300,64,0.10882345700000007],[566,2296,64,0.10851333200000007],[565,2292,64,0.10819433200000007],[564,2288,64,0.10789195700000008],[563,2284,64,0.10759516500000008],[562,2280,64,0.10729766500000007],[561,2276,64,0.10700274900000006],[560,2272,64,0.10669129100000006],[559,2268,64,0.10637766600000007],[558,2264,64,0.10605150000000006],[557,2260,64,0.10575516600000007],[556,2256,64,0.10546120700000007],[555,2252,64,0.10515220700000007],[554,2248,64,0.10485170700000007],[553,2244,64,0.10455912300000007],[552,2240,64,0.10426587300000008],[551,2236,64,0.10397083200000008],[550,2232,64,0.10366862300000008],[549,2228,64,0.10337245700000008],[548,2224,64,0.10307704000000008],[547,2220,64,0.10278520700000007],[546,2216,64,0.10249233200000007],[545,2212,64,0.10220033200000007],[544,2208,64,0.10191041500000007],[543,2204,64,0.10159391500000008],[542,2200,64,0.10130433200000008],[541,2196,64,0.10101124800000008],[540,2192,64,0.10069908200000008],[539,2188,64,0.10037866500000008],[538,2184,64,0.10009099800000007],[537,2180,64,0.09979683200000007],[536,2176,64,0.09950920700000007],[535,2172,64,0.09922087300000007],[534,2168,64,0.09893195700000007],[533,2164,64,0.09864241500000007],[532,2160,64,0.09834033200000007],[531,2156,64,0.09804820700000007],[530,2152,64,0.09773804000000007],[529,2148,64,0.09745433200000007],[528,2144,64,0.09716749900000007],[527,2140,64,0.09685958300000007],[526,2136,64,0.09657212400000006],[525,2132,64,0.09627554100000006],[524,2128,64,0.09599270800000007],[523,2124,64,0.09570637500000007],[522,2120,64,0.09542145800000007],[521,2116,64,0.09513891700000007],[520,2112,64,0.09484462500000007],[519,2108,64,0.09456833300000007],[518,2104,64,0.09427562500000007],[517,2100,64,0.09399958300000007],[516,2096,64,0.09371841700000007],[515,2092,64,0.09343525000000007],[514,2088,64,0.09315737500000007],[513,2084,64,0.09287862500000008],[512,2080,64,0.09260350000000007],[511,2076,64,0.09232616700000007],[510,2072,64,0.09205179200000008],[509,2068,64,0.09177404200000008],[508,2064,64,0.09146487600000008],[507,2060,64,0.09118025100000009],[506,2056,64,0.09089379300000008],[505,2052,64,0.09060308400000008],[504,2048,64,0.09032883400000008],[503,2044,64,0.09005691700000008],[502,2040,64,0.08978291700000009],[501,2036,64,0.08950279200000008],[500,2032,64,0.08921670800000008],[499,2028,64,0.08892762500000008],[498,2024,64,0.08864637500000008],[497,2020,64,0.08836191700000008],[496,2016,64,0.08809066700000008],[495,2012,64,0.08781083300000007],[494,2008,64,0.08753254100000007],[493,2004,64,0.08726016600000007],[492,2000,64,0.08698458300000007],[491,1996,64,0.08671458300000007],[490,1992,64,0.08644537400000006],[489,1988,64,0.08617495800000007],[488,1984,64,0.08590387400000006],[487,1980,64,0.08562820700000007],[486,1976,64,0.08535729100000007],[485,1972,64,0.08505766600000007],[484,1968,64,0.08477633300000008],[483,1964,64,0.08449345800000008],[482,1960,64,0.08421891600000007],[481,1956,64,0.08393595800000007],[480,1952,64,0.08365733300000007],[479,1948,64,0.08339525000000007],[478,1944,64,0.08312625000000007],[477,1940,64,0.08285504100000007],[476,1936,64,0.08259383300000007],[475,1932,64,0.08233270800000007],[474,1928,64,0.08206616600000008],[473,1924,64,0.08180358300000008],[472,1920,64,0.08154291600000008],[471,1916,64,0.08124925000000008],[470,1912,64,0.08099062500000008],[469,1908,64,0.08072320800000007],[468,1904,64,0.08044041600000007],[467,1900,64,0.08017504100000007],[466,1896,64,0.07991462400000007],[465,1892,64,0.07965329100000007],[464,1888,64,0.07939062400000008],[463,1884,64,0.07913024900000008],[462,1880,64,0.07887120700000008],[461,1876,64,0.07860066600000008],[460,1872,64,0.07832616600000009],[459,1868,64,0.07804283200000009],[458,1864,64,0.07777254100000008],[457,1860,64,0.07751358200000008],[456,1856,64,0.07725799800000008],[455,1852,64,0.07699924800000008],[454,1848,64,0.07672499800000007],[453,1844,64,0.07646824800000007],[452,1840,64,0.07620799800000007],[451,1836,64,0.07594833200000006],[450,1832,64,0.07569066500000006],[449,1828,64,0.07543437300000005],[448,1824,64,0.07517870700000005],[447,1820,64,0.07491279000000005],[446,1816,64,0.07465899800000005],[445,1812,64,0.07440337300000005],[444,1808,64,0.07414241500000004],[443,1804,64,0.07387699800000004],[442,1800,64,0.07362729000000004],[441,1796,64,0.07337774800000003],[440,1792,64,0.07308733100000003],[439,1788,64,0.07276870600000003],[438,1784,64,0.07251712300000003],[437,1780,64,0.07226737300000002],[436,1776,64,0.07201053900000003],[435,1772,64,0.07175041400000003],[434,1768,64,0.07148128900000003],[433,1764,64,0.07123374700000003],[432,1760,64,0.07098733000000003],[431,1756,64,0.07074141400000003],[430,1752,64,0.07049553900000002],[429,1748,64,0.07024908000000002],[428,1744,64,0.07000508000000003],[427,1740,64,0.06975920500000002],[426,1736,64,0.06949445500000002],[425,1732,64,0.06924903900000003],[424,1728,64,0.06900387200000002],[423,1724,64,0.06875966400000003],[422,1720,64,0.06851324700000003],[421,1716,64,0.06826899700000003],[420,1712,64,0.06801374700000003],[419,1708,64,0.06773274700000002],[418,1704,64,0.06747120500000002],[417,1700,64,0.06722741400000003],[416,1696,64,0.06698495500000003],[415,1692,64,0.06671516400000002],[414,1688,64,0.06646320500000003],[413,1684,64,0.06622187200000003],[412,1680,64,0.06596266400000003],[411,1676,64,0.06571378900000004],[410,1672,64,0.06545799800000003],[409,1668,64,0.06521083100000002],[408,1664,64,0.06493974700000002],[407,1660,64,0.06468216300000001],[406,1656,64,0.06444112200000002],[405,1652,64,0.06419533000000002],[404,1648,64,0.06393945500000002],[403,1644,64,0.06369816400000002],[402,1640,64,0.06349191400000001],[401,1636,64,0.06326791400000001],[400,1632,64,0.06306203900000001],[399,1628,64,0.06285578900000001],[398,1624,64,0.062638414],[397,1620,64,0.06243491400000001],[396,1616,64,0.062214581000000005],[395,1612,64,0.062003206000000005],[394,1608,64,0.06178295600000001],[393,1604,64,0.06157228900000001],[392,1600,64,0.06135420600000001],[391,1596,64,0.06114791400000001],[390,1592,64,0.06093837300000001],[389,1588,64,0.06071245600000001],[388,1584,64,0.060512123000000015],[387,1580,64,0.060301831000000014],[386,1576,64,0.06010016400000001],[385,1572,64,0.05989453900000001],[384,1568,64,0.05967212200000001],[383,1564,64,0.05946958100000001],[382,1560,64,0.05926691400000001],[381,1556,64,0.05905478900000001],[380,1552,64,0.058838122000000014],[379,1548,64,0.05860658000000001],[378,1544,64,0.05840378900000001],[377,1540,64,0.05817691400000001],[376,1536,64,0.05797699700000001],[375,1532,64,0.05776874700000001],[374,1528,64,0.05753791400000001],[373,1524,64,0.05733687200000001],[372,1520,64,0.05710824700000001],[371,1516,64,0.05690699700000001],[370,1512,64,0.05669508000000001],[369,1508,64,0.05647712200000001],[368,1504,64,0.05627891400000001],[367,1500,64,0.056069247000000016],[366,1496,64,0.05585541400000002],[365,1492,64,0.05565824700000002],[364,1488,64,0.05545233000000002],[363,1484,64,0.055237997000000025],[362,1480,64,0.055030789000000024],[361,1476,64,0.054820455000000025],[360,1472,64,0.05461466300000002],[359,1468,64,0.05442066300000002],[358,1464,64,0.05422770500000002],[357,1460,64,0.05402108000000002],[356,1456,64,0.05382745500000002],[355,1452,64,0.05357266300000002],[354,1448,64,0.05336228800000002],[353,1444,64,0.05316912200000002],[352,1440,64,0.05296016300000002],[351,1436,64,0.05276812200000002],[350,1432,64,0.05257733000000002],[349,1428,64,0.052385788000000016],[348,1424,64,0.05218933000000002],[347,1420,64,0.05196745500000002],[346,1416,64,0.051743997000000014],[345,1412,64,0.05151037200000001],[344,1408,64,0.05129695500000001],[343,1404,64,0.05109887200000001],[342,1400,64,0.05090562200000001],[341,1396,64,0.050710247000000014],[340,1392,64,0.05049824700000002],[339,1388,64,0.050303330000000014],[338,1384,64,0.050112413000000015],[337,1380,64,0.04992120500000002],[336,1376,64,0.049727497000000016],[335,1372,64,0.04952174700000002],[334,1368,64,0.049332538000000016],[333,1364,64,0.04914253800000001],[332,1360,64,0.048935288000000014],[331,1356,64,0.04874299600000002],[330,1352,64,0.048549579000000016],[329,1348,64,0.048360246000000016],[328,1344,64,0.048168871000000016],[327,1340,64,0.047962163000000016],[326,1336,64,0.047774413000000016],[325,1332,64,0.047535621000000014],[324,1328,64,0.047348830000000015],[323,1324,64,0.04715633000000002],[322,1320,64,0.046963955000000016],[321,1316,64,0.046771580000000014],[320,1312,64,0.046577871000000014],[319,1308,64,0.04639412100000001],[318,1304,64,0.04621016300000001],[317,1300,64,0.04602716300000001],[316,1296,64,0.04584483000000001],[315,1292,64,0.04566283000000001],[314,1288,64,0.04545537200000001],[313,1284,64,0.04527299700000001],[312,1280,64,0.04509108100000001],[311,1276,64,0.04490499700000001],[310,1272,64,0.04472274700000001],[309,1268,64,0.04454120600000001],[308,1264,64,0.044358664000000006],[307,1260,64,0.04417495600000001],[306,1256,64,0.04399358100000001],[305,1252,64,0.04381316400000001],[304,1248,64,0.04362708100000001],[303,1244,64,0.04344328900000001],[302,1240,64,0.04326133100000001],[301,1236,64,0.043065123000000004],[300,1232,64,0.042880123000000006],[299,1228,64,0.042696498000000006],[298,1224,64,0.042515581000000004],[297,1220,64,0.042332581],[296,1216,64,0.042151373],[295,1212,64,0.041953373],[294,1208,64,0.041772915],[293,1204,64,0.041593957],[292,1200,64,0.041413873000000004],[291,1196,64,0.041227832000000006],[290,1192,64,0.04104749900000001],[289,1188,64,0.040844040000000005],[288,1184,64,0.040662582],[287,1180,64,0.040453791],[286,1176,64,0.040260458000000006],[285,1172,64,0.040084374000000006],[284,1168,64,0.03985162400000001],[283,1164,64,0.03967087400000001],[282,1160,64,0.03949224900000001],[281,1156,64,0.039308208000000004],[280,1152,64,0.039122291000000003],[279,1148,64,0.038939374000000006],[278,1144,64,0.03875024900000001],[277,1140,64,0.03856841600000001],[276,1136,64,0.038388041000000005],[275,1132,64,0.038213082],[274,1128,64,0.038030749],[273,1124,64,0.037851207000000005],[272,1120,64,0.037677041],[271,1116,64,0.037503416000000005],[270,1112,64,0.037319291000000004],[269,1108,64,0.03714412400000001],[268,1104,64,0.03697129100000001],[267,1100,64,0.03680024900000001],[266,1096,64,0.03662879100000001],[265,1092,64,0.03641770800000001],[264,1088,64,0.036206708000000004],[263,1084,64,0.035971291],[262,1080,64,0.035725124000000004],[261,1076,64,0.035542041],[260,1072,64,0.035360374],[259,1068,64,0.03514954],[258,1064,64,0.034967123],[257,1060,64,0.034786165],[256,1056,64,0.034604498],[255,1052,64,0.034420248],[254,1048,64,0.034239748],[253,1044,64,0.034054748],[252,1040,64,0.033873915000000004],[251,1036,64,0.033680124000000006],[250,1032,64,0.033508457000000005],[249,1028,64,0.033333957000000004],[248,1024,64,0.033162124],[247,1020,64,0.032993916],[246,1016,64,0.032825208],[245,1012,64,0.03265675],[244,1008,64,0.032485083],[243,1004,64,0.032317123999999996],[242,1000,64,0.032148831999999995],[241,996,64,0.031980124],[240,992,64,0.031813166],[239,988,64,0.031647040999999994],[238,984,64,0.031480416],[237,980,64,0.031314166],[236,976,64,0.031148957999999997],[235,972,64,0.030984165999999997],[234,968,64,0.030818748999999996],[233,964,64,0.030654290999999997],[232,960,64,0.030490248999999997],[231,956,64,0.030325249],[230,952,64,0.030161248999999998],[229,948,64,0.029994457999999998],[228,944,64,0.029825040999999997],[227,940,64,0.029650832999999998],[226,936,64,0.029488415999999996],[225,932,64,0.029325290999999996],[224,928,64,0.029162498999999998],[223,924,64,0.029000333],[222,920,64,0.028837083],[221,916,64,0.028668458],[220,912,64,0.028504666],[219,908,64,0.028341541],[218,904,64,0.028178666],[217,900,64,0.028015958],[216,896,64,0.027854124],[215,892,64,0.027655583],[214,888,64,0.027493208],[213,884,64,0.027329499],[212,880,64,0.027165665],[211,876,64,0.027001914999999998],[210,872,64,0.026839581999999997],[209,868,64,0.026684164999999996],[208,864,64,0.026529164999999997],[207,860,64,0.026373456999999996],[206,856,64,0.026216790999999996],[205,852,64,0.026062498999999996],[204,848,64,0.025909373999999995],[203,844,64,0.025756248999999995],[202,840,64,0.025604248999999996],[201,836,64,0.025452123999999996],[200,832,64,0.025300248999999997],[199,828,64,0.025147998999999997],[198,824,64,0.024997039999999998],[197,820,64,0.024846164999999996],[196,816,64,0.024694706999999996],[195,812,64,0.024544164999999996],[194,808,64,0.024393831999999997],[193,804,64,0.024243498999999998],[192,800,64,0.024093539999999997],[191,796,64,0.023944873999999998],[190,792,64,0.023795664999999997],[189,788,64,0.023645707],[188,784,64,0.023497790999999997],[187,780,64,0.023349581999999997],[186,776,64,0.023194291],[185,772,64,0.023046749],[184,768,64,0.022900082],[183,764,64,0.022753666],[182,760,64,0.022606749],[181,756,64,0.022458999],[180,752,64,0.022309541],[179,748,64,0.022162249],[178,744,64,0.022015082],[177,740,64,0.021868998999999997],[176,736,64,0.021722331999999997],[175,732,64,0.021576915999999998],[174,728,64,0.021431331999999997],[173,724,64,0.021285956999999998],[172,720,64,0.02113979],[171,716,64,0.020995165],[170,712,64,0.020850957],[169,708,64,0.020708165],[168,704,64,0.02056579],[167,700,64,0.020424207],[166,696,64,0.020280499],[165,692,64,0.020138707],[164,688,64,0.019997789999999998],[163,684,64,0.019855289999999998],[162,680,64,0.019713624],[161,676,64,0.019570999],[160,672,64,0.019430915],[159,668,64,0.019291665],[158,664,64,0.01914629],[157,660,64,0.019007165],[156,656,64,0.018861957],[155,652,64,0.018721456999999997],[154,648,64,0.018582498999999995],[153,644,64,0.018444081999999997],[152,640,64,0.018306539999999996],[151,636,64,0.018168206999999995],[150,632,64,0.018030998999999995],[149,628,64,0.017894206999999995],[148,624,64,0.017755456999999995],[147,620,64,0.017617706999999996],[146,616,64,0.017480748999999997],[145,612,64,0.017344331999999997],[144,608,64,0.017208165999999997],[143,604,64,0.017071623999999997],[142,600,64,0.016935791],[141,596,64,0.016800499],[140,592,64,0.016663832],[139,588,64,0.016524749],[138,584,64,0.016389415999999997],[137,580,64,0.016253456999999995],[136,576,64,0.016119165999999994],[135,572,64,0.015967290999999995],[134,568,64,0.015834331999999996],[133,564,64,0.015700873999999997],[132,560,64,0.015567915999999998],[131,556,64,0.015429915999999998],[130,552,64,0.015297166],[129,548,64,0.015165373999999999],[128,544,64,0.015034206999999999],[127,540,64,0.014901873999999999],[126,536,64,0.014768790999999998],[125,532,64,0.014637790999999999],[124,528,64,0.014508499],[123,524,64,0.014379165999999999],[122,520,64,0.014249791],[121,516,64,0.014120665999999999],[120,512,64,0.013991582999999998],[119,508,64,0.013862540999999999],[118,504,64,0.013734125],[117,500,64,0.013604792],[116,496,64,0.013475332999999999],[115,492,64,0.013347708],[114,488,64,0.013220041],[113,484,64,0.013091999],[112,480,64,0.012965333],[111,476,64,0.012838499000000001],[110,472,64,0.012711124],[109,468,64,0.012584583],[108,464,64,0.012457998999999999],[107,460,64,0.012330915],[106,456,64,0.012204915],[105,452,64,0.012078999],[104,448,64,0.011950957],[103,444,64,0.011811874],[102,440,64,0.011685415],[101,436,64,0.011560249],[100,432,64,0.011434415],[99,428,64,0.011309582],[98,424,64,0.011186249],[97,420,64,0.011063041000000001],[96,416,64,0.010940374000000001],[95,412,64,0.010816999],[94,408,64,0.010693916000000001],[93,404,64,0.010571375000000001],[92,400,64,0.01043],[91,396,64,0.010307875],[90,392,64,0.010186457999999999],[89,388,64,0.010064374],[88,384,64,0.009942791],[87,380,64,0.009821666],[86,376,64,0.009692749],[85,372,64,0.009570790000000001],[84,368,64,0.009446082000000001],[83,364,64,0.009325707],[82,360,64,0.009205749000000001],[81,356,64,0.009086624000000001],[80,352,64,0.008967208],[79,348,64,0.008845291000000002],[78,344,64,0.008721458000000001],[77,340,64,0.008603583000000001],[76,336,64,0.008485666000000001],[75,332,64,0.008368666],[74,328,64,0.008251083000000001],[73,324,64,0.008131958000000002],[72,320,64,0.008009499000000002],[71,316,64,0.007891458000000002],[70,312,64,0.007765666000000002],[69,308,64,0.007650250000000002],[68,304,64,0.007535333000000002],[67,300,64,0.007420000000000002],[66,296,64,0.0073049160000000024],[65,292,64,0.007191166000000002],[64,288,64,0.007077291000000002],[63,284,64,0.006963541000000002],[62,280,64,0.006850041000000002],[61,276,64,0.006735000000000002],[60,272,64,0.006610666000000002],[59,268,64,0.006496791000000002],[58,264,64,0.006384166000000002],[57,260,64,0.0062683320000000015],[56,256,64,0.006156291000000001],[55,252,64,0.006035332000000001],[54,248,64,0.005915249000000001],[53,244,64,0.005802832000000001],[52,240,64,0.005684916000000001],[51,236,64,0.005571749000000001],[50,232,64,0.005453833000000001],[49,228,64,0.005343041000000001],[48,224,64,0.005224708000000001],[47,220,64,0.005106333],[46,216,64,0.004994833000000001],[45,212,64,0.004883125],[44,208,64,0.004772333],[43,204,64,0.004662625],[42,200,64,0.004553333],[41,196,64,0.004444458],[40,192,64,0.00433575],[39,188,64,0.004227417],[38,184,64,0.004118875],[37,180,64,0.00401075],[36,176,64,0.0038990420000000006],[35,172,64,0.0037889170000000006],[34,168,64,0.0036743330000000005],[33,164,64,0.0035674990000000005],[32,160,64,0.0034614160000000006],[31,156,64,0.0033463740000000005],[30,152,64,0.0032400830000000004],[29,148,64,0.0031342910000000004],[28,144,64,0.0030272490000000005],[27,140,64,0.0029217070000000004],[26,136,64,0.0028167490000000003],[25,132,64,0.002712457],[24,128,64,0.002608332],[23,124,64,0.002499582],[22,120,64,0.0023957910000000004],[21,116,64,0.0022924160000000002],[20,112,64,0.0021878740000000002],[19,108,64,0.0020790820000000003],[18,104,64,0.0019714990000000003],[17,100,64,0.001859832],[16,96,64,0.001748041],[15,92,64,0.0016381660000000001],[14,88,64,0.0015363330000000002],[13,84,64,0.0014349580000000003],[12,80,64,0.0013171670000000004],[11,76,64,0.0012160000000000003],[10,72,64,0.0011151670000000002],[9,68,64,0.0010139580000000001],[8,64,64,0.0008975830000000001],[7,60,64,0.0007954580000000001],[6,56,64,0.000693916],[5,52,64,0.00058925],[4,48,64,0.000481333],[3,40,64,0.000369375],[2,33,64,0.000272125],[1,24,64,0.00017066599999999998],[0,10,88,9.0083e-5]],"inputs":[["(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (pow.f64 1 1/3))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))","(*.f64 (pow.f64 1 1/3) (/.f64 (sin.f64 z) (cos.f64 z)))","(*.f64 (/.f64 (sin.f64 z) (cos.f64 z)) 1)","(/.f64 (sin.f64 z) (cos.f64 z))"]],"stop":[["node limit",1]],"time":1085.443115234375,"type":"simplify"},{"compiler":[[6158,2093]],"time":36.2978515625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.938530756191232],["(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","fresh",0.3361477702848725],["(fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))","fresh",36.21730714439693],["(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))","fresh",0.33169762774200373],["(log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))","fresh",11.897997357336079],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (pow.f64 (cbrt.f64 (tan.f64 z)) 3)) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","done",0.28463274329487404],["(-.f64 x (-.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a))))) (tan.f64 (+.f64 y z))))","fresh",11.970277744690124],["(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","fresh",0.31641123373900387],["(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","fresh",0.3375416670832918],["(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","fresh",11.918424486953176],["(pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)","fresh",12.14139015872713],["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 1 (/.f64 (cos.f64 z) (sin.f64 z)))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","fresh",0.2581751682686252]],"compiler":[[21,13],[39,23],[21,12],[23,15],[19,15],[38,26],[24,16],[51,23],[53,27],[19,12],[29,17],[40,25]],"count":[[160,12]],"kept":[{"done":[0,0],"fresh":[11,10],"new":[148,1],"picked":[1,1]}],"min-error":[0.03515625],"time":45.339111328125,"type":"prune"},{"accuracy":[0.25781145965772095],"baseline":[0.257811459657721],"branch":[["x",0.257811459657721,1],["y",0.25781145965772095,1],["z",0.25781145965772095,1],["a",0.257811459657721,1],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))",0.257811459657721,1],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",0.257811459657721,1],["(tan.f64 (+.f64 y z))",0.257811459657721,1],["(tan.f64 (+.f64 y z))",0.257811459657721,1],["(+.f64 y z)",0.25781145965772095,1],["(+.f64 y z)",0.25781145965772095,1],["(tan.f64 a)",0.257811459657721,1],["(tan.f64 a)",0.257811459657721,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,9],[11,8],[8,6],[8,6],[7,5],[7,5],[6,5],[6,5],[572,200]],"count":[[21,1]],"inputs":[["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 1 (/.f64 (cos.f64 z) (sin.f64 z)))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (pow.f64 (cbrt.f64 (tan.f64 z)) 3)) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(+.f64 (/.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))))) (+.f64 (-.f64 x (/.f64 (sin.f64 a) (cos.f64 a))) (/.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (-.f64 1 (*.f64 (/.f64 (sin.f64 y) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z)))))))","(-.f64 (+.f64 (/.f64 (sin.f64 z) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 z))) x) (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 -1 (/.f64 (sin.f64 y) (*.f64 (-.f64 1 (/.f64 (*.f64 (sin.f64 z) (sin.f64 y)) (*.f64 (cos.f64 z) (cos.f64 y)))) (cos.f64 y))))))","(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 z) (tan.f64 y)))) 3))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (pow.f64 (cbrt.f64 (tan.f64 z)) 3))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (/.f64 1 (/.f64 (cos.f64 z) (sin.f64 z))))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","(fma.f64 (cbrt.f64 (pow.f64 (tan.f64 (+.f64 y z)) 2)) (cbrt.f64 (tan.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","(fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 a))) (tan.f64 (+.f64 y z)))","(fma.f64 (+.f64 (tan.f64 y) (tan.f64 z)) (/.f64 1 (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z)))) (-.f64 x (tan.f64 a)))","(-.f64 x (-.f64 (tan.f64 a) (/.f64 1 (/.f64 (cos.f64 (+.f64 y z)) (sin.f64 (+.f64 y z))))))","(fma.f64 (sin.f64 (+.f64 y z)) (/.f64 1 (cos.f64 (+.f64 y z))) (-.f64 x (tan.f64 a)))","(pow.f64 (/.f64 (-.f64 (+.f64 x (tan.f64 a)) (tan.f64 (+.f64 y z))) (-.f64 (*.f64 x x) (pow.f64 (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))) 2))) -1)","(-.f64 x (/.f64 (fma.f64 (sin.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))) (neg.f64 (*.f64 (cos.f64 a) (+.f64 (tan.f64 y) (tan.f64 z))))) (*.f64 (cos.f64 a) (-.f64 1 (*.f64 (tan.f64 y) (tan.f64 z))))))","(log.f64 (/.f64 (/.f64 (exp.f64 x) (exp.f64 (tan.f64 a))) (/.f64 1 (exp.f64 (tan.f64 (+.f64 y z))))))","(-.f64 x (-.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 a))))) (tan.f64 (+.f64 y z))))","(-.f64 (+.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 z) 2) (pow.f64 (cos.f64 z) 2)))) y) (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) x)) (/.f64 (sin.f64 a) (cos.f64 a)))","(-.f64 x (-.f64 (tan.f64 a) (tan.f64 (+.f64 y z))))","(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))"]],"link":["."],"name":["tan-example"],"oracle":[44.68071078767903],"outputs":[["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))"]],"time":95.755859375,"times":[["x",6.968994140625],["y",6.9150390625],["z",6.89306640625],["a",7.112060546875],["(+.f64 x (-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a)))",7.6591796875],["(-.f64 (tan.f64 (+.f64 y z)) (tan.f64 a))",7.14990234375],["(tan.f64 (+.f64 y z))",7.174072265625],["(tan.f64 (+.f64 y z))",7.29296875],["(+.f64 y z)",7.59814453125],["(+.f64 y z)",7.131103515625],["(tan.f64 a)",7.259033203125],["(tan.f64 a)",7.282958984375]],"type":"regimes"},{"compiler":[[37,22]],"egraph":[[9,276,54,0.0027637490000000002],[8,262,54,0.002326458],[7,240,54,0.001853083],[6,222,54,0.001420916],[5,182,54,0.001035125],[4,132,54,0.000683],[3,101,54,0.000431625],[2,71,56,0.000264208],[1,43,56,0.000141625],[0,24,56,5.8583e-5]],"inputs":[["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (/.f64 (sin.f64 z) (*.f64 (cos.f64 z) (cos.f64 y))) (sin.f64 y))))))","(-.f64 x (+.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (-.f64 (/.f64 (neg.f64 (sin.f64 y)) (cos.f64 y)) (/.f64 (sin.f64 z) (cos.f64 z))) (-.f64 1 (*.f64 (sin.f64 y) (/.f64 (sin.f64 z) (*.f64 (cos.f64 y) (cos.f64 z))))))))","(-.f64 x (-.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (/.f64 (+.f64 (/.f64 (sin.f64 z) (cos.f64 z)) (/.f64 (sin.f64 y) (cos.f64 y))) (-.f64 1 (*.f64 (sin.f64 y) (/.f64 (sin.f64 z) (*.f64 (cos.f64 y) (cos.f64 z))))))))"]],"stop":[["fuel",1],["saturated",1]],"time":12.39404296875,"type":"simplify"},{"time":0.02099609375,"type":"soundness"},{"compiler":[[37,22],[37,22],[37,22]],"remove-preprocessing":[[]],"time":22.375,"type":"end"}]