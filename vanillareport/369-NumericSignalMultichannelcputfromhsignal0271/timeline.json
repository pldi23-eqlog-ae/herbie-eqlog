[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.22222169292036953,0.7758266121255006,0.0019516949541298345],[11,0.18713405719610066,0.8109142478497695,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":130.09912109375,"type":"analyze"},{"outcomes":[["body",256,"invalid",34.484375,773],["body",256,"valid",368.16552734375,8256]],"time":410.991943359375,"type":"sample"},{"compiler":[[13,8]],"egraph":[[0,4,4,2.459e-6],[6,5972,91,0.030858],[5,2213,91,0.016384125],[4,904,91,0.005672584],[3,350,91,0.002154667],[2,142,91,0.000774334],[1,82,91,0.000339792],[0,28,91,0.000115334]],"inputs":[["0","1","2","3"],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(*.f64 (/.f64 (-.f64 y x) (-.f64 z x)) t)","(*.f64 (/.f64 (-.f64 z y) (-.f64 x y)) t)","(*.f64 (/.f64 (-.f64 t y) (-.f64 z y)) x)","(*.f64 (/.f64 (-.f64 x z) (-.f64 y z)) t)","(*.f64 (/.f64 (-.f64 x t) (-.f64 z t)) y)","(*.f64 (/.f64 (-.f64 x y) (-.f64 t y)) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))","(*.f64 (-.f64 y x) (/.f64 t (-.f64 y z)))","(*.f64 (/.f64 (-.f64 y x) (-.f64 z x)) t)","(*.f64 t (/.f64 (-.f64 y x) (-.f64 z x)))","(*.f64 (/.f64 t (-.f64 z x)) (-.f64 y x))","(/.f64 (-.f64 y x) (/.f64 (-.f64 z x) t))","(*.f64 (-.f64 x y) (/.f64 t (-.f64 x z)))","(*.f64 (/.f64 (-.f64 z y) (-.f64 x y)) t)","(*.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (-.f64 z y) (/.f64 t (-.f64 x y)))","(*.f64 (/.f64 (-.f64 t y) (-.f64 z y)) x)","(*.f64 x (/.f64 (-.f64 t y) (-.f64 z y)))","(*.f64 x (/.f64 (-.f64 y t) (-.f64 y z)))","(*.f64 (/.f64 (-.f64 x z) (-.f64 y z)) t)","(*.f64 t (/.f64 (-.f64 x z) (-.f64 y z)))","(*.f64 (/.f64 (-.f64 x t) (-.f64 z t)) y)","(*.f64 y (/.f64 (-.f64 x t) (-.f64 z t)))","(*.f64 (-.f64 x t) (/.f64 y (-.f64 z t)))","(*.f64 (/.f64 (-.f64 x y) (-.f64 t y)) z)","(*.f64 z (/.f64 (-.f64 x y) (-.f64 t y)))","(/.f64 (-.f64 x y) (/.f64 (-.f64 t y) z))","(*.f64 (-.f64 x y) (/.f64 z (-.f64 t y)))","(*.f64 (-.f64 y x) (/.f64 z (-.f64 y t)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":55.534912109375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,6635,13,0.033179751],[7,2095,13,0.019911542],[6,711,13,0.0057471250000000005],[5,324,13,0.0022485],[4,167,13,0.001038916],[3,68,13,0.000483125],[2,30,13,0.000211625],[1,18,13,0.000107291],[0,9,13,4.375e-5]],"inputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))"]],"stop":[["node limit",1]],"time":44.781005859375,"type":"simplify"},{"compiler":[[22,10]],"time":0.345947265625,"type":"eval"},{"alts":[["(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))","fresh",11.78621634880871],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","next",1.836332818938797]],"compiler":[[13,8],[13,8],[13,8],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.08203125],"time":1.236083984375,"type":"prune"},{"compiler":[[30,8]],"locations":[["(/.f64 (-.f64 x y) (-.f64 z y))",0.02734375,true],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",1.7723398250667735,true]],"time":5.410888671875,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 (-.f64 x y) (-.f64 z y))","z","-inf",0.31201171875],["(/.f64 (-.f64 x y) (-.f64 z y))","z","inf",0.4970703125],["(/.f64 (-.f64 x y) (-.f64 z y))","z","0",1.700927734375],["(/.f64 (-.f64 x y) (-.f64 z y))","y","-inf",0.31396484375],["(/.f64 (-.f64 x y) (-.f64 z y))","y","inf",0.324951171875],["(/.f64 (-.f64 x y) (-.f64 z y))","y","0",0.434814453125],["(/.f64 (-.f64 x y) (-.f64 z y))","x","-inf",0.39306640625],["(/.f64 (-.f64 x y) (-.f64 z y))","x","inf",0.30419921875],["(/.f64 (-.f64 x y) (-.f64 z y))","x","0",0.337158203125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","-inf",0.302001953125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","inf",0.47998046875],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","t","0",0.589111328125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","-inf",0.3740234375],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","inf",0.80810546875],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","z","0",0.48486328125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","-inf",0.41796875],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","inf",0.501953125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","y","0",0.578125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","-inf",0.677978515625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","inf",0.56689453125],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","x","0",0.56591796875]],"time":11.280029296875,"type":"series"},{"count":[[2,254]],"egraph":[[2,3248,23,0.026882958999999998],[1,208,23,0.0040160840000000005],[0,9,23,0.000204125]],"inputs":[["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)","(/.f64 (-.f64 x y) (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y)))) (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) t) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 x y) t)) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 x y) t) (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 x y)) t) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (neg.f64 (-.f64 x y))) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3) (pow.f64 t 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 t 3) (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z y)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 z y)))) (sqrt.f64 (/.f64 y (-.f64 z y))) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z y)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 1 (-.f64 z y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 z y))) y (*.f64 (/.f64 1 (-.f64 z y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (-.f64 z y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 z y))) 1 (*.f64 (/.f64 y (-.f64 z y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 z y))) (cbrt.f64 (/.f64 y (-.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 z y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 z y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 z y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 z y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 z y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 z y)))) (/.f64 1 (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 z y))) (/.f64 1 (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 z y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y z) (*.f64 z z))) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y z) (*.f64 z z)) (/.f64 y (-.f64 (pow.f64 z 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y z)) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))) (*.f64 (+.f64 y z) (/.f64 y (-.f64 (*.f64 z z) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 (-.f64 x y) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y z) (*.f64 z z)) (neg.f64 (/.f64 y (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 y z) (neg.f64 (/.f64 y (-.f64 z y))))))))"]],"rules":[["egg-rr",225],["egg-rr",29]],"stop":[["node limit",1]],"time":81.921142578125,"type":"rewrite"},{"count":[[338,330]],"egraph":[[2,2488,1722,0.016236083999999998],[1,646,2218,0.004351917],[0,200,2458,0.000878959]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(*.f64 -1 (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(neg.f64 (/.f64 y (/.f64 (-.f64 z y) t)))","(/.f64 (*.f64 (neg.f64 y) t) (-.f64 z y))","(*.f64 (/.f64 y (-.f64 z y)) (neg.f64 t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) x))","(*.f64 (/.f64 t (-.f64 z y)) x)","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) x))","(*.f64 (/.f64 t (-.f64 z y)) x)","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 t (/.f64 z x)) (*.f64 y (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z))))))","(fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (/.f64 t (/.f64 z x)))","(fma.f64 y (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (*.f64 (/.f64 t z) x))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z)))) y (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z)))) (/.f64 z (*.f64 y y)))))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (*.f64 (/.f64 y (/.f64 z y)) (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))))))","(+.f64 (*.f64 (/.f64 t z) x) (*.f64 (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (+.f64 y (*.f64 (/.f64 y z) y))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z)))) y (+.f64 (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z)))) (/.f64 z (*.f64 y y))) (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 (*.f64 t x) (*.f64 z z)))) (/.f64 (*.f64 z z) (pow.f64 y 3))))))","(+.f64 (/.f64 t (/.f64 z x)) (+.f64 (*.f64 (/.f64 y (/.f64 z y)) (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z)))) (fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (*.f64 (/.f64 (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) z) (/.f64 (pow.f64 y 3) z)))))","(+.f64 (fma.f64 y (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (*.f64 (/.f64 t z) x)) (*.f64 (/.f64 (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) z) (+.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 t (-.f64 (/.f64 (neg.f64 (*.f64 t x)) y) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y))","(-.f64 t (*.f64 (/.f64 t y) (-.f64 x z)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (+.f64 t (-.f64 (/.f64 (neg.f64 (*.f64 t x)) y) (/.f64 (neg.f64 (*.f64 t z)) y))))","(-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 t (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 t (-.f64 z x)) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (+.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 z z))))) (/.f64 (neg.f64 (*.f64 t z)) y))","(-.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) (pow.f64 y 3)) (*.f64 z z))) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (*.f64 (/.f64 (*.f64 t (-.f64 z x)) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 t (-.f64 (/.f64 (neg.f64 (*.f64 t x)) y) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y))","(-.f64 t (*.f64 (/.f64 t y) (-.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (+.f64 t (-.f64 (/.f64 (neg.f64 (*.f64 t x)) y) (/.f64 (neg.f64 (*.f64 t z)) y))))","(-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 t (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 t (-.f64 z x)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(-.f64 (+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (+.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 z z))))) (/.f64 (neg.f64 (*.f64 t z)) y))","(-.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) (pow.f64 y 3)) (*.f64 z z))) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (*.f64 (/.f64 (*.f64 t (-.f64 z x)) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(neg.f64 (/.f64 t (/.f64 y (-.f64 x y))))","(/.f64 (neg.f64 t) (/.f64 y (-.f64 x y)))","(*.f64 (/.f64 t y) (neg.f64 (-.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(*.f64 -1 (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (/.f64 t (/.f64 y (-.f64 x y)))))","(-.f64 (/.f64 (neg.f64 t) (/.f64 y (-.f64 x y))) (*.f64 (*.f64 (/.f64 t y) z) (+.f64 (/.f64 x y) -1)))","(neg.f64 (*.f64 (/.f64 t y) (+.f64 (-.f64 x y) (/.f64 (*.f64 z (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) (-.f64 x y)))) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y))))))","(-.f64 (-.f64 (/.f64 (neg.f64 t) (/.f64 y (-.f64 x y))) (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 z (*.f64 z (-.f64 x y))))) (*.f64 (*.f64 (/.f64 t y) z) (+.f64 (/.f64 x y) -1)))","(-.f64 (*.f64 (/.f64 t y) (neg.f64 (-.f64 x y))) (*.f64 (+.f64 (/.f64 x y) -1) (+.f64 (*.f64 (/.f64 z y) t) (/.f64 (*.f64 t (*.f64 z z)) (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) (-.f64 x y)))) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 4) (*.f64 (-.f64 x y) (pow.f64 z 3)))) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 t) (/.f64 y (-.f64 x y))) (*.f64 (/.f64 t (pow.f64 y 4)) (*.f64 (-.f64 x y) (pow.f64 z 3)))) (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 z (*.f64 z (-.f64 x y))))) (*.f64 (*.f64 (/.f64 t y) z) (+.f64 (/.f64 x y) -1)))","(-.f64 (neg.f64 (*.f64 (/.f64 (-.f64 x y) (*.f64 y y)) (+.f64 (/.f64 (*.f64 t (*.f64 z z)) y) (/.f64 (*.f64 t (pow.f64 z 3)) (*.f64 y y))))) (*.f64 (/.f64 t y) (+.f64 (-.f64 x y) (/.f64 (*.f64 z (-.f64 x y)) y))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (*.f64 t (-.f64 x y)))))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (*.f64 t (-.f64 x y)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (*.f64 z z)) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (*.f64 t (-.f64 x y)))))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (*.f64 t (-.f64 x y)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(+.f64 (neg.f64 (/.f64 y (/.f64 (-.f64 z y) t))) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 y (-.f64 z y)) t))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(*.f64 -1 (/.f64 y (-.f64 z y)))","(neg.f64 (/.f64 y (-.f64 z y)))","(/.f64 (neg.f64 y) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 z y))) (/.f64 x (-.f64 z y)))","(fma.f64 -1 (/.f64 y (-.f64 z y)) (/.f64 x (-.f64 z y)))","(-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))","(/.f64 x z)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (/.f64 x z))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (/.f64 x z))","(-.f64 (/.f64 x z) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(-.f64 (/.f64 (-.f64 x y) z) (/.f64 (neg.f64 y) (*.f64 (/.f64 z x) z)))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z)))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (neg.f64 (/.f64 x (pow.f64 z 3))))) (/.f64 x z)))","(-.f64 (-.f64 (/.f64 x z) (*.f64 y (*.f64 y (-.f64 (/.f64 (/.f64 1 z) z) (/.f64 x (pow.f64 z 3)))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z)))))","(-.f64 (/.f64 x z) (*.f64 y (+.f64 (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z))) (*.f64 (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3))) y))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 4))) (/.f64 1 (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (*.f64 -1 (/.f64 x (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3)))))) (/.f64 x z))))","(fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1 (/.f64 x (pow.f64 z 4)) (/.f64 1 (pow.f64 z 3)))) (fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 z) (/.f64 (neg.f64 x) (*.f64 z z)))) (fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (neg.f64 (/.f64 x (pow.f64 z 3))))) (/.f64 x z))))","(-.f64 (-.f64 (-.f64 (/.f64 x z) (*.f64 y (*.f64 y (-.f64 (/.f64 (/.f64 1 z) z) (/.f64 x (pow.f64 z 3)))))) (*.f64 y (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z))))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 z 3)) (/.f64 x (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 x z) (*.f64 y (+.f64 (-.f64 (/.f64 1 z) (/.f64 x (*.f64 z z))) (*.f64 (-.f64 (/.f64 1 (*.f64 z z)) (/.f64 x (pow.f64 z 3))) y)))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 z 3)) (/.f64 x (pow.f64 z 4)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 z y)))","(+.f64 1 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (neg.f64 z) y)))","(-.f64 1 (/.f64 (-.f64 x z) y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 z y)))","(+.f64 1 (-.f64 (+.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 z) y)))","(-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 z y) (/.f64 (-.f64 x z) y)))","(+.f64 1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 z x) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 z)) z) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))))) (*.f64 -1 (/.f64 z y)))","(+.f64 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 z z))) (+.f64 1 (-.f64 (+.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 z) y))))","(-.f64 (-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) (-.f64 x z)))) (*.f64 (/.f64 z y) (/.f64 (-.f64 x z) y)))","(+.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 (-.f64 z x) (*.f64 y y)) (+.f64 (/.f64 (*.f64 z z) y) z)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y)))","(+.f64 1 (-.f64 (neg.f64 (/.f64 x y)) (/.f64 (neg.f64 z) y)))","(-.f64 1 (/.f64 (-.f64 x z) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x z) y))))","(+.f64 1 (-.f64 (+.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 z) y)))","(-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 z y) (/.f64 (-.f64 x z) y)))","(+.f64 1 (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 z x) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) z) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x z) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 x z) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (pow.f64 y 3) (*.f64 z z))) (+.f64 1 (-.f64 (+.f64 (neg.f64 (/.f64 x y)) (/.f64 (*.f64 -1 (-.f64 x z)) (/.f64 (*.f64 y y) z))) (/.f64 (neg.f64 z) y))))","(-.f64 (-.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) (-.f64 x z)))) (*.f64 (/.f64 z y) (/.f64 (-.f64 x z) y)))","(+.f64 (-.f64 1 (/.f64 (-.f64 x z) y)) (*.f64 (/.f64 (-.f64 z x) (*.f64 y y)) (+.f64 (/.f64 (*.f64 z z) y) z)))","(*.f64 -1 (/.f64 (-.f64 x y) y))","(neg.f64 (/.f64 (-.f64 x y) y))","(neg.f64 (+.f64 (/.f64 x y) -1))","(-.f64 1 (/.f64 x y))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (*.f64 -1 (/.f64 (-.f64 x y) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (-.f64 x y) y)))","(-.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 x y) -1))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y)))","(+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y)))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (fma.f64 -1 (/.f64 (-.f64 x y) y) (/.f64 (*.f64 z z) (/.f64 y (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))))))","(fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 z z) y) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 x y) -1)))","(+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (+.f64 z (/.f64 (*.f64 z z) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (pow.f64 y 2)) (+.f64 (*.f64 z (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x y) y)) (/.f64 (*.f64 (pow.f64 z 2) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 2)))) y))))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (fma.f64 -1 (/.f64 (-.f64 x y) y) (/.f64 (*.f64 z z) (/.f64 y (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))))))) (/.f64 (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (*.f64 y y)))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 (*.f64 (/.f64 (*.f64 z z) y) (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y)))) (+.f64 (/.f64 x y) -1))) (*.f64 (/.f64 (pow.f64 z 3) y) (/.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) y)))","(+.f64 (fma.f64 z (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (-.f64 1 (/.f64 x y))) (*.f64 (-.f64 (/.f64 1 y) (/.f64 x (*.f64 y y))) (+.f64 (/.f64 (*.f64 z z) y) (/.f64 (pow.f64 z 3) (*.f64 y y)))))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))))) (/.f64 y z))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (-.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (+.f64 (/.f64 x z) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y))))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y)))) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (-.f64 x y) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (/.f64 x z)) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (/.f64 x z))) (/.f64 y z))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))))) (/.f64 y z))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))","(-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 x y)) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 x y)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 x z)))) (/.f64 y z))","(+.f64 (/.f64 (*.f64 y (-.f64 x y)) (*.f64 z z)) (-.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (-.f64 x y))) (+.f64 (/.f64 x z) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y))))) (/.f64 y z)))","(+.f64 (*.f64 (/.f64 (-.f64 x y) z) (/.f64 y z)) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 x y)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (-.f64 x y)))) (/.f64 (-.f64 x y) z)))","(+.f64 (*.f64 (-.f64 x y) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 x y) z)))"]],"stop":[["node limit",1]],"time":48.11181640625,"type":"simplify"},{"compiler":[[13541,4004]],"time":73.153076171875,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","fresh",12.196995885130884],["(/.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))","fresh",12.201479660050312],["(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","fresh",12.059096143459826],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","next",1.696087738412388],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 3) t)","fresh",2.0581079654654273],["(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","fresh",1.820707818938797]],"compiler":[[13,8],[15,10],[21,12],[13,8],[16,11],[17,9],[13,8],[15,10],[21,12],[13,8],[16,11],[17,9]],"count":[[332,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[330,6],"picked":[1,0]}],"min-error":[0],"time":116.071044921875,"type":"prune"},{"compiler":[[30,8]],"locations":[["(/.f64 (-.f64 z y) (-.f64 x y))",0.025722509768442016,true],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))",1.6647467221799008,true]],"time":5.325927734375,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 (-.f64 z y) (-.f64 x y))","x","-inf",0.342041015625],["(/.f64 (-.f64 z y) (-.f64 x y))","x","inf",0.3720703125],["(/.f64 (-.f64 z y) (-.f64 x y))","x","0",0.39599609375],["(/.f64 (-.f64 z y) (-.f64 x y))","y","-inf",0.301025390625],["(/.f64 (-.f64 z y) (-.f64 x y))","y","inf",0.31689453125],["(/.f64 (-.f64 z y) (-.f64 x y))","y","0",0.488037109375],["(/.f64 (-.f64 z y) (-.f64 x y))","z","-inf",0.386962890625],["(/.f64 (-.f64 z y) (-.f64 x y))","z","inf",0.345947265625],["(/.f64 (-.f64 z y) (-.f64 x y))","z","0",0.3388671875],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","x","-inf",0.177978515625],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","x","inf",0.195068359375],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","x","0",0.169921875],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","y","-inf",0.245849609375],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","y","inf",0.213134765625],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","y","0",0.2431640625],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","z","-inf",0.218994140625],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","z","inf",0.236083984375],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","z","0",0.216064453125],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","t","-inf",0.260009765625],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","t","inf",0.47705078125],["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","t","0",0.208984375]],"time":6.447998046875,"type":"series"},{"count":[[2,274]],"egraph":[[2,3501,23,0.028211917000000003],[1,214,23,0.004262251],[0,9,23,0.000213917]],"inputs":[["(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 t (-.f64 z y))) (*.f64 (neg.f64 y) (/.f64 t (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 t (-.f64 z y)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y)))) (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 t) 2) (*.f64 (cbrt.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) (pow.f64 (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) 2) (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) (sqrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 1 (/.f64 (neg.f64 (-.f64 z y)) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) (-.f64 z y)) (/.f64 (sqrt.f64 t) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (/.f64 t (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (-.f64 z y)) (/.f64 (cbrt.f64 t) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2)) (/.f64 t (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2)) (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2)) (/.f64 (sqrt.f64 t) (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))) (/.f64 t (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))) (/.f64 (cbrt.f64 t) (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t 1) (/.f64 (-.f64 x y) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (neg.f64 (-.f64 z y))) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 t (-.f64 z y)) 1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 t (-.f64 z y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 t (-.f64 z y)) (sqrt.f64 (-.f64 x y))) (sqrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 z y) (-.f64 x y)) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (/.f64 (neg.f64 (-.f64 z y)) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 t) (/.f64 (-.f64 x y) (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 t 3) (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (/.f64 (-.f64 x y) (-.f64 z y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 t (-.f64 z y)) (*.f64 (neg.f64 y) (/.f64 t (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (-.f64 z y)) x (*.f64 (/.f64 t (-.f64 z y)) (neg.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) (-.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (sqrt.f64 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) (-.f64 x y)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 y (-.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (-.f64 x y))) 1 (*.f64 (/.f64 y (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (cbrt.f64 (*.f64 y y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (cbrt.f64 (pow.f64 (-.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (/.f64 1 (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (/.f64 1 (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 y x) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 y x) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 y x)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 y x) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z y) (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (*.f64 (cbrt.f64 (-.f64 z y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z y)) (*.f64 (sqrt.f64 (-.f64 z y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (-.f64 z y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 (-.f64 z y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 z y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z y)) 1) (/.f64 (sqrt.f64 (-.f64 z y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 (-.f64 z y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (-.f64 z y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z y) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 z y) 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 z (cbrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 z (sqrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 x y))) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y x) (*.f64 x x)) (neg.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 y x) (neg.f64 (/.f64 y (-.f64 x y))))))))"]],"rules":[["egg-rr",224],["egg-rr",50]],"stop":[["node limit",1]],"time":84.68310546875,"type":"rewrite"},{"count":[[358,351]],"egraph":[[2,2657,1682,0.01654025],[1,677,1974,0.0046845],[0,210,2245,0.00093225]],"inputs":[["(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(*.f64 -1 (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(/.f64 z x)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (/.f64 z x))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (+.f64 (/.f64 z x) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 -1 (/.f64 z (pow.f64 x 3))))))))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 x 4))) (/.f64 1 (pow.f64 x 3))))) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 -1 (/.f64 z (pow.f64 x 3)))))))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) (*.f64 -1 (/.f64 x y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) x) (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) x) (pow.f64 y 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z x) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) x) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) (pow.f64 x 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) x) (pow.f64 y 2))))))","(*.f64 -1 (/.f64 (-.f64 z y) y))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 2)) y) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 2)) y) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 3)) (pow.f64 y 2)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x))))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z y)) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3))))) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z y)) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3))))) (/.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t (-.f64 x y)) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(neg.f64 (/.f64 t (/.f64 y (-.f64 x y))))","(/.f64 (*.f64 (neg.f64 t) (-.f64 x y)) y)","(*.f64 (/.f64 t y) (neg.f64 (-.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 (-.f64 x y) z))) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y)))))","(-.f64 (/.f64 (*.f64 (neg.f64 t) (-.f64 x y)) y) (*.f64 (/.f64 z (/.f64 y t)) (/.f64 (-.f64 x y) y)))","(neg.f64 (*.f64 (/.f64 t y) (+.f64 (-.f64 x y) (/.f64 (*.f64 (-.f64 x y) z) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 (-.f64 x y) z))) (*.f64 -1 (+.f64 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (-.f64 x y) (*.f64 z z)))) (/.f64 t (/.f64 y (-.f64 x y))))))","(-.f64 (-.f64 (/.f64 (neg.f64 t) (/.f64 (pow.f64 y 3) (*.f64 (-.f64 x y) (*.f64 z z)))) (*.f64 (/.f64 t y) (-.f64 x y))) (*.f64 (/.f64 z (/.f64 y t)) (/.f64 (-.f64 x y) y)))","(-.f64 (*.f64 (/.f64 t y) (neg.f64 (-.f64 x y))) (*.f64 (/.f64 t (*.f64 y y)) (+.f64 (*.f64 (-.f64 x y) z) (/.f64 (*.f64 (-.f64 x y) (*.f64 z z)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 (-.f64 x y) z))) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (-.f64 x y) (*.f64 z z)))) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 4) (*.f64 (-.f64 x y) (pow.f64 z 3)))) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 t) (*.f64 (-.f64 x y) (pow.f64 z 3))) (pow.f64 y 4)) (*.f64 (/.f64 t y) (-.f64 x y))) (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 (-.f64 x y) (*.f64 z z)))) (*.f64 (/.f64 z (/.f64 y t)) (/.f64 (-.f64 x y) y)))","(-.f64 (neg.f64 (*.f64 (/.f64 (-.f64 x y) (*.f64 y y)) (+.f64 (/.f64 (*.f64 t (*.f64 z z)) y) (/.f64 (*.f64 t (pow.f64 z 3)) (*.f64 y y))))) (*.f64 (/.f64 t y) (+.f64 (-.f64 x y) (/.f64 (*.f64 (-.f64 x y) z) y))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))))","(*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (*.f64 t (-.f64 x y)))))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y))) (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))) (/.f64 (*.f64 t (-.f64 x y)) (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))))","(*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) (*.f64 t (-.f64 x y)))))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y))) (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 t (-.f64 x y))) (/.f64 (*.f64 t (-.f64 x y)) (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 y z) 1) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (*.f64 t (-.f64 x y)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y))","(+.f64 (/.f64 t (/.f64 z x)) (*.f64 y (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x))))))","(fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (*.f64 (/.f64 t z) x))","(fma.f64 y (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (*.f64 (/.f64 t z) x))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))))) z)))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x)))) y (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x)))) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 (/.f64 t z) x) (fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (/.f64 (*.f64 y y) (/.f64 z (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z)))))))","(+.f64 (*.f64 (/.f64 t z) x) (*.f64 (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (+.f64 y (*.f64 (/.f64 y z) y))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 3)) (pow.f64 z 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 t z)) (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2)))) (pow.f64 y 2)) z))))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x)))) y (+.f64 (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x)))) (/.f64 z (*.f64 y y))) (/.f64 (*.f64 -1 (-.f64 (/.f64 t z) (/.f64 t (/.f64 (*.f64 z z) x)))) (/.f64 (*.f64 z z) (pow.f64 y 3))))))","(+.f64 (*.f64 (/.f64 t z) x) (+.f64 (fma.f64 y (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (/.f64 (*.f64 y y) (/.f64 z (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z)))))) (*.f64 (/.f64 (fma.f64 -1 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 x z))) (*.f64 z z)) (pow.f64 y 3))))","(+.f64 (fma.f64 y (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) (*.f64 (/.f64 t z) x)) (*.f64 (/.f64 (*.f64 (/.f64 t z) (+.f64 -1 (/.f64 x z))) z) (+.f64 (*.f64 y y) (/.f64 (pow.f64 y 3) z))))","t","(-.f64 (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(-.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (neg.f64 (*.f64 t z)) y))","(-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y))","(-.f64 t (*.f64 (/.f64 t y) (-.f64 x z)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y)))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (-.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 t (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 t (-.f64 z x)) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) z) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 t x)) (*.f64 -1 (*.f64 t z))) (pow.f64 z 2)) (pow.f64 y 3)) (+.f64 t (*.f64 -1 (/.f64 (*.f64 t x) y))))) (*.f64 -1 (/.f64 (*.f64 t z) y)))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (-.f64 (+.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 z z)))) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (/.f64 t (/.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (-.f64 x z)))) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (*.f64 (/.f64 (*.f64 t (-.f64 z x)) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))))","t","(+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)))","(-.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (neg.f64 (*.f64 t z)) y))","(-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y))","(-.f64 t (*.f64 (/.f64 t y) (-.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y))))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (-.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 t (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (*.f64 t (-.f64 z x)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) z) (pow.f64 y 2))) (+.f64 t (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 t x) (*.f64 t z)) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 t x) (*.f64 t z)) (pow.f64 z 2)) (pow.f64 y 3))))))","(+.f64 (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (*.f64 y y) z)) (-.f64 (+.f64 (+.f64 t (/.f64 (neg.f64 (*.f64 t x)) y)) (/.f64 (*.f64 -1 (*.f64 t (-.f64 x z))) (/.f64 (pow.f64 y 3) (*.f64 z z)))) (/.f64 (neg.f64 (*.f64 t z)) y)))","(-.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t (-.f64 x z)) y)) (/.f64 t (/.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (-.f64 x z)))) (*.f64 (/.f64 (*.f64 t (-.f64 x z)) y) (/.f64 z y)))","(+.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (*.f64 (/.f64 (*.f64 t (-.f64 z x)) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))))","(*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y)))","(neg.f64 (/.f64 (*.f64 t y) (-.f64 z y)))","(/.f64 (neg.f64 y) (/.f64 (-.f64 z y) t))","(*.f64 (/.f64 y (-.f64 z y)) (neg.f64 t))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 (/.f64 t (-.f64 z y)) x)","(/.f64 t (/.f64 (-.f64 z y) x))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(/.f64 (*.f64 t x) (-.f64 z y))","(*.f64 (/.f64 t (-.f64 z y)) x)","(/.f64 t (/.f64 (-.f64 z y) x))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (/.f64 t (-.f64 z y)) (-.f64 x y))","(*.f64 -1 (/.f64 y (-.f64 x y)))","(neg.f64 (/.f64 y (-.f64 x y)))","(/.f64 (neg.f64 y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 x y))) (/.f64 z (-.f64 x y)))","(/.f64 (-.f64 z y) (-.f64 x y))","(/.f64 z x)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (/.f64 z x))","(fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (/.f64 (neg.f64 z) (*.f64 x x)))) (/.f64 z x))","(-.f64 (/.f64 z x) (*.f64 y (-.f64 (/.f64 1 x) (/.f64 z (*.f64 x x)))))","(-.f64 (/.f64 z x) (-.f64 (/.f64 y x) (*.f64 y (/.f64 z (*.f64 x x)))))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (+.f64 (/.f64 z x) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 -1 (/.f64 z (pow.f64 x 3))))))))","(+.f64 (fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (/.f64 (neg.f64 z) (*.f64 x x)))) (/.f64 z x)) (neg.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 (neg.f64 z) (pow.f64 x 3))))))","(-.f64 (-.f64 (/.f64 z x) (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 z (pow.f64 x 3))))) (*.f64 y (-.f64 (/.f64 1 x) (/.f64 z (*.f64 x x)))))","(-.f64 (/.f64 z x) (+.f64 (-.f64 (/.f64 y x) (*.f64 y (/.f64 z (*.f64 x x)))) (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 z (pow.f64 x 3))))))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 z (pow.f64 x 2)))))) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 x 4))) (/.f64 1 (pow.f64 x 3))))) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 -1 (/.f64 z (pow.f64 x 3)))))))))","(+.f64 (fma.f64 -1 (*.f64 y (+.f64 (/.f64 1 x) (/.f64 (neg.f64 z) (*.f64 x x)))) (/.f64 z x)) (*.f64 -1 (+.f64 (*.f64 (pow.f64 y 3) (fma.f64 -1 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))) (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 (neg.f64 z) (pow.f64 x 3)))))))","(-.f64 (fma.f64 -1 (fma.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 z (pow.f64 x 4))) (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 z (pow.f64 x 3))))) (/.f64 z x)) (*.f64 y (-.f64 (/.f64 1 x) (/.f64 z (*.f64 x x)))))","(-.f64 (-.f64 (/.f64 z x) (-.f64 (/.f64 y x) (*.f64 y (/.f64 z (*.f64 x x))))) (*.f64 (*.f64 y y) (+.f64 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 z (pow.f64 x 3))) (*.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 z (pow.f64 x 4))) y))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) (*.f64 -1 (/.f64 x y)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 z) y) (/.f64 (neg.f64 x) y)))","(+.f64 1 (/.f64 (-.f64 x z) y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) x) (pow.f64 y 2)))) (*.f64 -1 (/.f64 x y)))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 z y) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (*.f64 y y) x))) (/.f64 (neg.f64 x) y)))","(+.f64 1 (+.f64 (/.f64 (-.f64 x z) y) (*.f64 (/.f64 x y) (/.f64 (-.f64 x z) y))))","(-.f64 1 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (-.f64 z x) y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) x) (pow.f64 y 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 x y)))","(+.f64 1 (-.f64 (+.f64 (fma.f64 -1 (/.f64 z y) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (*.f64 y y) x))) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (pow.f64 y 3) (*.f64 x x)))) (/.f64 (neg.f64 x) y)))","(+.f64 (-.f64 (/.f64 (-.f64 x z) y) (*.f64 (/.f64 (-.f64 z x) (pow.f64 y 3)) (*.f64 x x))) (+.f64 (*.f64 (/.f64 x y) (/.f64 (-.f64 x z) y)) 1))","(+.f64 (/.f64 (-.f64 x z) y) (+.f64 1 (*.f64 (/.f64 (-.f64 x z) (*.f64 y y)) (+.f64 x (/.f64 (*.f64 x x) y)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z x) y)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 z) y) (/.f64 (neg.f64 x) y)))","(+.f64 1 (/.f64 (-.f64 x z) y))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) x) (pow.f64 y 2)))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 z y) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (*.f64 y y) x))) (/.f64 (neg.f64 x) y)))","(+.f64 1 (+.f64 (/.f64 (-.f64 x z) y) (*.f64 (/.f64 x y) (/.f64 (-.f64 x z) y))))","(-.f64 1 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (-.f64 z x) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) (pow.f64 x 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) x) (pow.f64 y 2))))))","(+.f64 1 (-.f64 (+.f64 (fma.f64 -1 (/.f64 z y) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (*.f64 y y) x))) (/.f64 (*.f64 -1 (-.f64 z x)) (/.f64 (pow.f64 y 3) (*.f64 x x)))) (/.f64 (neg.f64 x) y)))","(+.f64 (-.f64 (/.f64 (-.f64 x z) y) (*.f64 (/.f64 (-.f64 z x) (pow.f64 y 3)) (*.f64 x x))) (+.f64 (*.f64 (/.f64 x y) (/.f64 (-.f64 x z) y)) 1))","(+.f64 (/.f64 (-.f64 x z) y) (+.f64 1 (*.f64 (/.f64 (-.f64 x z) (*.f64 y y)) (+.f64 x (/.f64 (*.f64 x x) y)))))","(*.f64 -1 (/.f64 (-.f64 z y) y))","(neg.f64 (/.f64 (-.f64 z y) y))","(/.f64 (neg.f64 (-.f64 z y)) y)","(-.f64 1 (/.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x))","(fma.f64 -1 (/.f64 (-.f64 z y) y) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y)))) (+.f64 (/.f64 z y) -1))","(fma.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (-.f64 1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 2)) y) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x)))","(fma.f64 -1 (/.f64 (-.f64 z y) y) (+.f64 (*.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y)))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 y (*.f64 x x)))))","(-.f64 (fma.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 y (*.f64 x x)))) (+.f64 (/.f64 z y) -1))","(+.f64 (fma.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (-.f64 1 (/.f64 z y))) (*.f64 (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) y) (*.f64 x x)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 z y) y)) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 2)) y) (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) (pow.f64 x 3)) (pow.f64 y 2)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 z (pow.f64 y 2))) x))))","(fma.f64 -1 (/.f64 (-.f64 z y) y) (+.f64 (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 y (*.f64 x x))) (+.f64 (*.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y)))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (-.f64 (fma.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (/.f64 y (*.f64 x x)))) (+.f64 (/.f64 z y) -1)) (*.f64 (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (*.f64 y y)) (pow.f64 x 3)))","(+.f64 (*.f64 (/.f64 (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) y) (+.f64 (*.f64 x x) (/.f64 (pow.f64 x 3) y))) (fma.f64 x (-.f64 (/.f64 1 y) (/.f64 z (*.f64 y y))) (-.f64 1 (/.f64 z y))))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x))) (/.f64 y x))","(+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (/.f64 (-.f64 z y) x))","(*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x)) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 z y))))) (/.f64 y x))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) (-.f64 z y))) (/.f64 (-.f64 z y) x))","(+.f64 (*.f64 (*.f64 (/.f64 y (pow.f64 x 3)) y) (-.f64 z y)) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x)))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z y)) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3))))) (/.f64 y x))","(+.f64 (/.f64 z x) (-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 z y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 z y))))) (/.f64 y x)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) (-.f64 z y)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 z y))))) (/.f64 (-.f64 z y) x))","(+.f64 (*.f64 (-.f64 z y) (+.f64 (*.f64 (/.f64 y (pow.f64 x 3)) y) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x)))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x))) (/.f64 y x))","(+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (/.f64 (-.f64 z y) x))","(*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x)) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 z y))))) (/.f64 y x))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) (-.f64 z y))) (/.f64 (-.f64 z y) x))","(+.f64 (*.f64 (*.f64 (/.f64 y (pow.f64 x 3)) y) (-.f64 z y)) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x)))","(-.f64 (+.f64 (/.f64 z x) (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z y)) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 2) (-.f64 z y)) (pow.f64 x 3))))) (/.f64 y x))","(+.f64 (/.f64 z x) (-.f64 (+.f64 (/.f64 (*.f64 y (-.f64 z y)) (*.f64 x x)) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 z y))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 z y))))) (/.f64 y x)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 z y) x) (/.f64 y x)) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) (-.f64 z y)) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 z y))))) (/.f64 (-.f64 z y) x))","(+.f64 (*.f64 (-.f64 z y) (+.f64 (*.f64 (/.f64 y (pow.f64 x 3)) y) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 y x) 1) (/.f64 (-.f64 z y) x)))"]],"stop":[["node limit",1]],"time":47.77392578125,"type":"simplify"},{"compiler":[[13920,3894]],"time":73.66015625,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","fresh",12.196995885130884],["(/.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))","fresh",12.201479660050312],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y))))","fresh",1.766400238412388],["(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","fresh",1.820707818938797],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","next",1.703900238412388],["(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","fresh",12.059096143459826]],"compiler":[[13,8],[15,10],[37,21],[17,9],[19,11],[21,12],[13,8],[15,10],[37,21],[17,9],[19,11],[21,12]],"count":[[357,6]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[351,3],"picked":[1,0]}],"min-error":[0],"time":129.5,"type":"prune"},{"compiler":[[56,17]],"locations":[["(/.f64 1 (-.f64 x y))",0.0234375,true],["(/.f64 y (-.f64 x y))",0.03515625,true],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))",0.109375,true],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))",1.6647467221799008,true]],"time":9.510986328125,"type":"localize"},{"count":[[4,132]],"series":[["(/.f64 1 (-.f64 x y))","y","-inf",0.200927734375],["(/.f64 1 (-.f64 x y))","y","inf",0.22607421875],["(/.f64 1 (-.f64 x y))","y","0",0.177001953125],["(/.f64 1 (-.f64 x y))","x","-inf",0.203857421875],["(/.f64 1 (-.f64 x y))","x","inf",0.215087890625],["(/.f64 1 (-.f64 x y))","x","0",0.260009765625],["(/.f64 y (-.f64 x y))","x","-inf",0.18408203125],["(/.f64 y (-.f64 x y))","x","inf",0.184814453125],["(/.f64 y (-.f64 x y))","x","0",0.2021484375],["(/.f64 y (-.f64 x y))","y","-inf",0.84716796875],["(/.f64 y (-.f64 x y))","y","inf",0.234130859375],["(/.f64 y (-.f64 x y))","y","0",0.22216796875],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","y","-inf",0.27001953125],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","y","inf",0.279052734375],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","y","0",0.24609375],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","x","-inf",0.351806640625],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","x","inf",0.328125],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","x","0",0.265869140625],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","z","-inf",0.31103515625],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","z","inf",0.198974609375],["(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","z","0",0.35888671875],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","y","-inf",0.73193359375],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","y","inf",0.773193359375],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","y","0",1.196044921875],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","x","-inf",1.215087890625],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","x","inf",3.050048828125],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","x","0",1.447998046875],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","z","-inf",0.362060546875],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","z","inf",0.276123046875],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","z","0",0.343017578125],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","t","-inf",0.491943359375],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","t","inf",0.60302734375],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","t","0",1.120849609375]],"time":18.001953125,"type":"series"},{"count":[[4,387]],"egraph":[[2,3621,49,0.027442833],[1,259,49,0.004730458],[0,12,55,0.000299208]],"inputs":[["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y))))","(/.f64 y (-.f64 x y))","(/.f64 1 (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (cbrt.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 1 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 t) (/.f64 1 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2) (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (/.f64 1 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) (sqrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 1 (+.f64 (neg.f64 (/.f64 z (-.f64 x y))) (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) 1) (/.f64 (cbrt.f64 t) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2))) (/.f64 t (cbrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2))) (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) (/.f64 t (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 t t)) (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) (/.f64 (cbrt.f64 t) (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) t) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (+.f64 (neg.f64 (/.f64 z (-.f64 x y))) (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 t 3) (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 t (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (/.f64 y (-.f64 x y)) 1 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 y) (/.f64 1 (-.f64 x y)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 -1 (/.f64 y (-.f64 x y)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 1 (/.f64 y (-.f64 x y)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (sqrt.f64 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y))))) (sqrt.f64 (/.f64 y (-.f64 x y))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (/.f64 y (-.f64 x y)) -1 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 z (-.f64 x y)) 1) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 x y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2)))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 x y)))) (pow.f64 (-.f64 x y) -1/2) (*.f64 (/.f64 y (sqrt.f64 (-.f64 x y))) (pow.f64 (-.f64 x y) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 x y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 x y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 x y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (fma.f64 (neg.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (fma.f64 y (+.f64 x y) (*.f64 x x)) (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y)))))) (fma.f64 (neg.f64 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (+.f64 x y) (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 (-.f64 x y)))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 x y) -1/2)) (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (*.f64 (pow.f64 (-.f64 x y) -1/2) (*.f64 y (pow.f64 (-.f64 x y) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 x y)) z (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (/.f64 1 (-.f64 x y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 x y))) (cbrt.f64 (/.f64 z (-.f64 x y)))) (cbrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (-.f64 x y))) (sqrt.f64 (/.f64 z (-.f64 x y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (*.f64 (sqrt.f64 z) (pow.f64 (-.f64 x y) -1/2)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 z (-.f64 x y)) 0) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2)) (cbrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 z (-.f64 x y)) 3) (pow.f64 (/.f64 y (-.f64 x y)) 3)) (fma.f64 (/.f64 z (-.f64 x y)) (/.f64 z (-.f64 x y)) (-.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) (*.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 z (-.f64 x y)) (/.f64 z (-.f64 x y)) (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 z (-.f64 x y))) (exp.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 z (-.f64 x y))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (-.f64 x y))) (exp.f64 (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 x y)))) (exp.f64 (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 z (-.f64 x y))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (exp.f64 (/.f64 y (-.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (neg.f64 (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2) (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 y (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (sqrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 y (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 x y)))) (sqrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 x y) -2))) (/.f64 1 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (-.f64 x y) -1/2)) (pow.f64 (-.f64 x y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 x y)))) (sqrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x y) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (neg.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 (-.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 x y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 x y)))) (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) -2)) (/.f64 1 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/2) (pow.f64 (-.f64 x y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 1 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x y) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 x y))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",58],["egg-rr",264],["egg-rr",37]],"stop":[["node limit",1]],"time":100.27783203125,"type":"rewrite"},{"count":[[519,523]],"egraph":[[2,6650,4508,0.028366123],[1,1531,4612,0.011634207],[0,433,5058,0.002180416]],"inputs":[["(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y))))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2)))))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3))) (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 z (pow.f64 y 4))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 z y))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))))))","(/.f64 (*.f64 t x) (-.f64 z y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (/.f64 (*.f64 t x) (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (-.f64 z y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z)) t)) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 (pow.f64 y 3) z) (*.f64 -1 (pow.f64 y 4)))) (pow.f64 (-.f64 z y) 2)))) (pow.f64 x 2))))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3) x))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3) x))) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (-.f64 (*.f64 y z) (pow.f64 y 2)))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3)))) (-.f64 (*.f64 y z) (pow.f64 y 2))) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))) (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 y 4))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2)))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y))))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 3)))) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 t (*.f64 (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3))) (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) x)) z)))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) (pow.f64 y 2))))))","t","(+.f64 t (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) t) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (pow.f64 y 2)))))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 t (+.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 x 2))) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (+.f64 (*.f64 -1 z) x))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) (*.f64 t (+.f64 (*.f64 -1 z) x)))) (*.f64 t (+.f64 (*.f64 -1 (*.f64 z (pow.f64 x 2))) (pow.f64 x 3))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) t) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (pow.f64 y 2))))))","t","(+.f64 t (/.f64 (*.f64 (-.f64 z x) t) y))","(+.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t))) (pow.f64 y 2))) t))","(+.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 x 3)) t) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (-.f64 z x) t)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t)))) (pow.f64 y 3))))))))","(*.f64 -1 (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (*.f64 -1 (/.f64 z y))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (*.f64 -1 (/.f64 z y)))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 z (pow.f64 y 4)))) (pow.f64 x 3))))))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 (*.f64 y z) (pow.f64 x 2)))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) z) (pow.f64 x 3)) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 (*.f64 y z) (pow.f64 x 2)))))) (/.f64 y x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) z) (pow.f64 x 3)) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (*.f64 y z) (pow.f64 x 2)))))))) (/.f64 y x))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x)))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(/.f64 z x)","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (/.f64 z x))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (+.f64 (/.f64 z x) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))) (+.f64 (/.f64 z x) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (pow.f64 y 2)))))","1","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 z y))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 z y))))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 x y) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -1 (/.f64 z y))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z x) y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 z x) y)))) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 x 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(neg.f64 (/.f64 t (/.f64 y (-.f64 x y))))","(/.f64 (*.f64 (neg.f64 t) (-.f64 x y)) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))","(*.f64 -1 (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (/.f64 t (/.f64 y (-.f64 x y)))))","(-.f64 (/.f64 (*.f64 (neg.f64 t) (-.f64 x y)) y) (*.f64 (/.f64 t (*.f64 y y)) (*.f64 z (-.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (fma.f64 -1 (/.f64 (*.f64 (*.f64 t (*.f64 z z)) (-.f64 x y)) (pow.f64 y 3)) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y))))))","(-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 t) (*.f64 (-.f64 x y) (*.f64 z z))) (pow.f64 y 3)) (*.f64 (/.f64 t y) (-.f64 x y))) (*.f64 (/.f64 t (*.f64 y y)) (*.f64 z (-.f64 x y))))","(-.f64 (/.f64 (*.f64 (*.f64 t (neg.f64 z)) (-.f64 x y)) (*.f64 y y)) (+.f64 (*.f64 (/.f64 t y) (-.f64 x y)) (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 (-.f64 x y) (*.f64 z z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4))) (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y)))) (fma.f64 -1 (/.f64 (*.f64 (*.f64 t (*.f64 z z)) (-.f64 x y)) (pow.f64 y 3)) (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 y 4) (*.f64 (-.f64 x y) (pow.f64 z 3)))) (neg.f64 (/.f64 t (/.f64 y (-.f64 x y)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 t) (*.f64 (-.f64 x y) (*.f64 z z))) (pow.f64 y 3)) (/.f64 (*.f64 t (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (-.f64 x y)))) (*.f64 (/.f64 t y) (-.f64 x y))) (*.f64 (/.f64 t (*.f64 y y)) (*.f64 z (-.f64 x y))))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 t (neg.f64 z)) (-.f64 x y)) (*.f64 y y)) (+.f64 (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 (-.f64 x y) (*.f64 z z))) (/.f64 (*.f64 t (pow.f64 z 3)) (/.f64 (pow.f64 y 4) (-.f64 x y))))) (*.f64 (/.f64 t y) (-.f64 x y)))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 (*.f64 t (-.f64 x y)) (pow.f64 y 3)) (pow.f64 z 4)))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y))) (+.f64 (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (*.f64 t (-.f64 x y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (/.f64 (*.f64 t (-.f64 x y)) z)))","(+.f64 (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 y (/.f64 (*.f64 z z) (*.f64 t (-.f64 x y)))) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (/.f64 (*.f64 (*.f64 t (-.f64 x y)) (pow.f64 y 3)) (pow.f64 z 4)))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y))) (+.f64 (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (*.f64 t (-.f64 x y)))))","(/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y))))","(/.f64 t (+.f64 1 (/.f64 (neg.f64 z) y)))","(/.f64 t (-.f64 1 (/.f64 z y)))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))))","(+.f64 (/.f64 t (+.f64 1 (/.f64 (neg.f64 z) y))) (neg.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (*.f64 x (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))))))))","(-.f64 (/.f64 t (-.f64 1 (/.f64 z y))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)))))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2)))))","(+.f64 (/.f64 t (+.f64 1 (/.f64 (neg.f64 z) y))) (*.f64 -1 (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (*.f64 x (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y)))))) (*.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3))))) (neg.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) 2))))) (*.f64 x x)))))","(-.f64 (-.f64 (/.f64 t (-.f64 1 (/.f64 z y))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y))))) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2))))))","(-.f64 (/.f64 t (-.f64 1 (/.f64 z y))) (+.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)))) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2)))))))","(+.f64 (/.f64 t (+.f64 1 (*.f64 -1 (/.f64 z y)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3))) (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 z (pow.f64 y 4))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (+.f64 1 (*.f64 -1 (/.f64 z y))))))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 x (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3))))) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) 2)) (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))))))","(+.f64 (/.f64 t (+.f64 1 (/.f64 (neg.f64 z) y))) (fma.f64 -1 (*.f64 (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 3) (*.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3)))))) (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (neg.f64 z) (pow.f64 y 4))))) (neg.f64 (/.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3))))) (neg.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) 2))))) (/.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y)))))))) (pow.f64 x 3)) (*.f64 -1 (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (*.f64 x (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y)))))) (*.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 2) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3))))) (neg.f64 (/.f64 t (/.f64 (pow.f64 (+.f64 1 (/.f64 (neg.f64 z) y)) 3) (pow.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) 2))))) (*.f64 x x))))))","(+.f64 (/.f64 t (-.f64 1 (/.f64 z y))) (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 x) t) (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y))) (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2)))))) (*.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 z (pow.f64 y 4)))) (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2))) (/.f64 (-.f64 1 (/.f64 z y)) (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y))))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))))) (pow.f64 x 3))))","(-.f64 (-.f64 (/.f64 t (-.f64 1 (/.f64 z y))) (+.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)))) (*.f64 x (*.f64 x (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2))))))) (*.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 z (pow.f64 y 4)))) (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 2)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (pow.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) 2))) (/.f64 (-.f64 1 (/.f64 z y)) (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y))))) (*.f64 (/.f64 t (pow.f64 (-.f64 1 (/.f64 z y)) 3)) (*.f64 (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3)))))) (pow.f64 x 3)))","(/.f64 (*.f64 t x) (-.f64 z y))","(/.f64 t (/.f64 (-.f64 z y) x))","(*.f64 (/.f64 t (-.f64 z y)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (/.f64 (*.f64 t x) (-.f64 z y)))","(fma.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (-.f64 z y) 2)) (/.f64 t (/.f64 (-.f64 z y) x)))","(-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) x))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (-.f64 z y) 2)) (/.f64 t (/.f64 (-.f64 z y) x))) (neg.f64 (/.f64 (fma.f64 -1 (/.f64 (-.f64 (*.f64 z y) (*.f64 y y)) (/.f64 (pow.f64 (-.f64 z y) 3) (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))))) (/.f64 (*.f64 t (fma.f64 -1 (pow.f64 y 3) (*.f64 z (*.f64 y y)))) (pow.f64 (-.f64 z y) 2))) x)))","(-.f64 (-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y)))) (/.f64 (-.f64 (/.f64 t (/.f64 (pow.f64 (-.f64 z y) 2) (*.f64 (*.f64 y y) (-.f64 z y)))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) x))","(-.f64 (-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y)))) (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 (*.f64 y y) (-.f64 z y))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) x)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z)))) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z))) (pow.f64 (-.f64 z y) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 y z))) (-.f64 z y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 y z) (*.f64 -1 (pow.f64 y 2))) (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 3)) (*.f64 (pow.f64 y 2) z)) t)) (pow.f64 (-.f64 z y) 3))) (/.f64 (*.f64 t (+.f64 (*.f64 (pow.f64 y 3) z) (*.f64 -1 (pow.f64 y 4)))) (pow.f64 (-.f64 z y) 2)))) (pow.f64 x 2))))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (-.f64 z y) 2)) (/.f64 t (/.f64 (-.f64 z y) x))) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1 (/.f64 (-.f64 (*.f64 z y) (*.f64 y y)) (/.f64 (pow.f64 (-.f64 z y) 3) (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))))) (/.f64 (*.f64 t (fma.f64 -1 (pow.f64 y 3) (*.f64 z (*.f64 y y)))) (pow.f64 (-.f64 z y) 2))) x) (/.f64 (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (-.f64 (*.f64 z y) (*.f64 y y)) (/.f64 (pow.f64 (-.f64 z y) 3) (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))))) (/.f64 (*.f64 t (fma.f64 -1 (pow.f64 y 3) (*.f64 z (*.f64 y y)))) (pow.f64 (-.f64 z y) 2))) (/.f64 (-.f64 z y) (-.f64 (*.f64 z y) (*.f64 y y)))) (fma.f64 -1 (/.f64 (-.f64 (*.f64 z y) (*.f64 y y)) (/.f64 (pow.f64 (-.f64 z y) 3) (*.f64 t (fma.f64 -1 (pow.f64 y 3) (*.f64 z (*.f64 y y)))))) (/.f64 t (/.f64 (pow.f64 (-.f64 z y) 2) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4)))))) (*.f64 x x)))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (/.f64 (-.f64 (/.f64 t (/.f64 (pow.f64 (-.f64 z y) 2) (*.f64 (*.f64 y y) (-.f64 z y)))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) x)) (/.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4))) (*.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 (-.f64 z y) 3)) (*.f64 t (*.f64 (*.f64 y y) (-.f64 z y))))) (*.f64 (/.f64 (-.f64 (/.f64 t (/.f64 (pow.f64 (-.f64 z y) 2) (*.f64 (*.f64 y y) (-.f64 z y)))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) (-.f64 z y)) (*.f64 y (-.f64 z y)))) (*.f64 x x))) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y))))","(-.f64 (-.f64 (*.f64 (/.f64 t (-.f64 z y)) x) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y)))) (+.f64 (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 (*.f64 y y) (-.f64 z y))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) x) (/.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4))) (*.f64 (/.f64 (*.f64 y (-.f64 z y)) (pow.f64 (-.f64 z y) 3)) (*.f64 t (*.f64 (*.f64 y y) (-.f64 z y))))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 (*.f64 y y) (-.f64 z y))) (/.f64 (*.f64 t (pow.f64 (*.f64 y (-.f64 z y)) 2)) (pow.f64 (-.f64 z y) 3))) (-.f64 z y)) (*.f64 y (-.f64 z y)))) (*.f64 x x))))","(*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y))))","(neg.f64 (/.f64 (*.f64 t x) (*.f64 -1 (-.f64 z y))))","(*.f64 1 (*.f64 (/.f64 t (-.f64 z y)) x))","(/.f64 (*.f64 (neg.f64 x) t) (-.f64 y z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (*.f64 -1 (-.f64 z y)) 2)) (/.f64 (*.f64 t x) (*.f64 -1 (-.f64 z y)))))","(-.f64 (*.f64 1 (*.f64 (/.f64 t (-.f64 z y)) x)) (*.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (*.f64 y (-.f64 z y))))","(-.f64 (/.f64 (neg.f64 t) (/.f64 (pow.f64 (-.f64 z y) 2) (*.f64 y (-.f64 z y)))) (/.f64 (*.f64 t x) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3) x))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))))))","(fma.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (*.f64 -1 (-.f64 z y)) 2)) (+.f64 (*.f64 (/.f64 t (pow.f64 (*.f64 -1 (-.f64 z y)) 2)) (/.f64 (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3))) x)) (fma.f64 -1 (*.f64 (/.f64 t (pow.f64 (*.f64 -1 (-.f64 z y)) 3)) (/.f64 (pow.f64 (-.f64 (*.f64 z y) (*.f64 y y)) 2) x)) (neg.f64 (/.f64 (*.f64 t x) (*.f64 -1 (-.f64 z y)))))))","(-.f64 (fma.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) x) (neg.f64 (fma.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 3)) (/.f64 (pow.f64 (*.f64 y (-.f64 z y)) 2) x) (/.f64 (*.f64 t x) (fma.f64 z -1 y))))) (*.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (*.f64 y (-.f64 z y))))","(-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (neg.f64 t) (*.f64 (*.f64 y y) (-.f64 z y))) x) (pow.f64 (-.f64 z y) 2)) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y)))) (fma.f64 (/.f64 t (pow.f64 (-.f64 y z) 3)) (/.f64 (pow.f64 (*.f64 y (-.f64 z y)) 2) x) (/.f64 (*.f64 t x) (-.f64 y z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y z) (pow.f64 y 2))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3) x))) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (*.f64 (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2) x)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (-.f64 (*.f64 y z) (pow.f64 y 2)))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3)))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (-.f64 (*.f64 y z) (pow.f64 y 2)) 2)) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 3)))) (-.f64 (*.f64 y z) (pow.f64 y 2))) (-.f64 (*.f64 -1 z) (*.f64 -1 y)))) (/.f64 (*.f64 t (-.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 y 4))) (pow.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) 2)))) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 t x) (-.f64 (*.f64 -1 z) (*.f64 -1 y))))))))","(fma.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 z y) (*.f64 y y))) (pow.f64 (*.f64 -1 (-.f64 z y)) 2)) (fma.f64 -1 (*.f64 (/.f64 t (pow.f64 (*.f64 -1 (-.f64 z y)) 3)) (/.f64 (pow.f64 (-.f64 (*.f64 z y) (*.f64 y y)) 2) x)) (+.f64 (*.f64 (/.f64 t (pow.f64 (*.f64 -1 (-.f64 z y)) 2)) (/.f64 (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3))) x)) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (-.f64 z y)) 3) (*.f64 (-.f64 (*.f64 z y) (*.f64 y y)) (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3)))))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (-.f64 z y)) 2) (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3))))) (neg.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (-.f64 z y)) 3) (pow.f64 (-.f64 (*.f64 z y) (*.f64 y y)) 2))))) (/.f64 (*.f64 -1 (-.f64 z y)) (-.f64 (*.f64 z y) (*.f64 y y)))) (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (-.f64 z y)) 2) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4)))))) (*.f64 x x)) (neg.f64 (/.f64 (*.f64 t x) (*.f64 -1 (-.f64 z y))))))))","(-.f64 (+.f64 (fma.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) x) (neg.f64 (fma.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 3)) (/.f64 (pow.f64 (*.f64 y (-.f64 z y)) 2) x) (/.f64 (*.f64 t x) (fma.f64 z -1 y))))) (/.f64 (neg.f64 (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y)))) (/.f64 t (/.f64 (pow.f64 (fma.f64 z -1 y) 3) (pow.f64 (*.f64 y (-.f64 z y)) 2)))) (fma.f64 z -1 y)) (*.f64 y (-.f64 z y)))) (/.f64 t (/.f64 (pow.f64 (fma.f64 z -1 y) 3) (*.f64 (*.f64 y (-.f64 z y)) (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y)))))))) (*.f64 x x))) (*.f64 (/.f64 t (pow.f64 (fma.f64 z -1 y) 2)) (*.f64 y (-.f64 z y))))","(-.f64 (-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (neg.f64 t) (*.f64 (*.f64 y y) (-.f64 z y))) x) (pow.f64 (-.f64 z y) 2)) (fma.f64 (/.f64 t (pow.f64 (-.f64 y z) 3)) (/.f64 (pow.f64 (*.f64 y (-.f64 z y)) 2) x) (/.f64 (*.f64 t x) (-.f64 y z)))) (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (-.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 y 4))) (+.f64 (/.f64 t (/.f64 (pow.f64 (-.f64 y z) 3) (*.f64 (*.f64 y (-.f64 z y)) (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y)))))) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y)))) (/.f64 t (/.f64 (pow.f64 (-.f64 y z) 3) (pow.f64 (*.f64 y (-.f64 z y)) 2)))) (-.f64 y z)) (*.f64 y (-.f64 z y))))) (*.f64 x x))) (*.f64 (/.f64 t (pow.f64 (-.f64 z y) 2)) (*.f64 y (-.f64 z y))))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) (/.f64 (*.f64 z z) (*.f64 y (*.f64 t (*.f64 x x)))))))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 (*.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x))) z) (/.f64 (*.f64 t (*.f64 x x)) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) (pow.f64 y 2)))))","(+.f64 (/.f64 t (/.f64 z x)) (*.f64 -1 (+.f64 (/.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) (/.f64 (*.f64 z z) (*.f64 y (*.f64 t (*.f64 x x))))) (*.f64 (*.f64 y y) (+.f64 (/.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (/.f64 (*.f64 z z) (*.f64 t (*.f64 x x)))) (neg.f64 (/.f64 (pow.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) 2) (/.f64 (pow.f64 z 3) (*.f64 t (pow.f64 x 3))))))))))","(-.f64 (-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 (*.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x))) z) (/.f64 (*.f64 t (*.f64 x x)) z))) (*.f64 y (*.f64 y (-.f64 (*.f64 (/.f64 (*.f64 t (*.f64 x x)) z) (/.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) z)) (*.f64 (/.f64 (pow.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) 2) (pow.f64 z 3)) (*.f64 t (pow.f64 x 3)))))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 y (*.f64 t (pow.f64 x 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 3)))) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 t (*.f64 (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3))) (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) x)) z)))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (*.f64 t (pow.f64 x 2))) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) 2) (*.f64 t (pow.f64 x 3))) (pow.f64 z 3)))) (pow.f64 y 2))))))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 -1 (/.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) (/.f64 (*.f64 z z) (*.f64 y (*.f64 t (*.f64 x x))))) (fma.f64 -1 (*.f64 (pow.f64 y 3) (fma.f64 -1 (/.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) (/.f64 (pow.f64 z 3) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (*.f64 t (pow.f64 x 3))))) (+.f64 (/.f64 t (/.f64 (*.f64 z z) (*.f64 (*.f64 x x) (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))))) (neg.f64 (/.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) (/.f64 z (*.f64 x (+.f64 (/.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (/.f64 (*.f64 z z) (*.f64 t (*.f64 x x)))) (neg.f64 (/.f64 (pow.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) 2) (/.f64 (pow.f64 z 3) (*.f64 t (pow.f64 x 3))))))))))))) (neg.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (/.f64 (*.f64 z z) (*.f64 t (*.f64 x x)))) (neg.f64 (/.f64 (pow.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) 2) (/.f64 (pow.f64 z 3) (*.f64 t (pow.f64 x 3)))))))))))","(+.f64 (-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 (*.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x))) z) (/.f64 (*.f64 t (*.f64 x x)) z))) (neg.f64 (fma.f64 (pow.f64 y 3) (-.f64 (-.f64 (*.f64 (/.f64 (*.f64 t (+.f64 (/.f64 z (pow.f64 x 4)) (/.f64 -1 (pow.f64 x 3)))) z) (/.f64 x (/.f64 z x))) (*.f64 (/.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) z) (*.f64 x (-.f64 (*.f64 (/.f64 (*.f64 t (*.f64 x x)) z) (/.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) z)) (*.f64 (/.f64 (pow.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) 2) (pow.f64 z 3)) (*.f64 t (pow.f64 x 3))))))) (*.f64 (/.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) (pow.f64 z 3)) (*.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (*.f64 t (pow.f64 x 3))))) (*.f64 y (*.f64 y (-.f64 (*.f64 (/.f64 (*.f64 t (*.f64 x x)) z) (/.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) z)) (*.f64 (/.f64 (pow.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) 2) (pow.f64 z 3)) (*.f64 t (pow.f64 x 3)))))))))","(-.f64 (-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 (*.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x))) z) (/.f64 (*.f64 t (*.f64 x x)) z))) (fma.f64 (pow.f64 y 3) (-.f64 (-.f64 (*.f64 (/.f64 (*.f64 t (+.f64 (/.f64 z (pow.f64 x 4)) (/.f64 -1 (pow.f64 x 3)))) z) (/.f64 x (/.f64 z x))) (*.f64 (/.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) z) (*.f64 x (-.f64 (*.f64 (/.f64 (*.f64 t (*.f64 x x)) z) (/.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) z)) (*.f64 (/.f64 (pow.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) 2) (pow.f64 z 3)) (*.f64 t (pow.f64 x 3))))))) (*.f64 (/.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) (pow.f64 z 3)) (*.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (*.f64 t (pow.f64 x 3))))) (*.f64 y (*.f64 y (-.f64 (*.f64 (/.f64 (*.f64 t (*.f64 x x)) z) (/.f64 (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) z)) (*.f64 (/.f64 (pow.f64 (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) 2) (pow.f64 z 3)) (*.f64 t (pow.f64 x 3))))))))","t","(+.f64 t (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)))","(+.f64 t (neg.f64 (/.f64 t (/.f64 y (fma.f64 -1 z x)))))","(-.f64 t (*.f64 (/.f64 t y) (-.f64 x z)))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) t) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (pow.f64 y 2)))))","(+.f64 t (*.f64 -1 (+.f64 (/.f64 t (/.f64 y (fma.f64 -1 z x))) (/.f64 (fma.f64 t (fma.f64 -1 (*.f64 z x) (*.f64 x x)) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z x) 2)))) (*.f64 y y)))))","(-.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (/.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t))) (*.f64 y y)))","(-.f64 t (+.f64 (*.f64 (/.f64 t y) (-.f64 x z)) (/.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t))) (*.f64 y y))))","(+.f64 t (+.f64 (*.f64 -1 (/.f64 (*.f64 t (+.f64 (*.f64 -1 z) x)) y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 t (+.f64 (*.f64 -1 (*.f64 z x)) (pow.f64 x 2))) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (+.f64 (*.f64 -1 z) x))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) (*.f64 t (+.f64 (*.f64 -1 z) x)))) (*.f64 t (+.f64 (*.f64 -1 (*.f64 z (pow.f64 x 2))) (pow.f64 x 3))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (pow.f64 x 2) (*.f64 -1 (*.f64 z x))) t) (*.f64 -1 (*.f64 t (pow.f64 (+.f64 (*.f64 -1 z) x) 2)))) (pow.f64 y 2))))))","(+.f64 t (fma.f64 -1 (/.f64 t (/.f64 y (fma.f64 -1 z x))) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 z x) (fma.f64 t (fma.f64 -1 (*.f64 z x) (*.f64 x x)) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z x) 2))))) (fma.f64 -1 (*.f64 (*.f64 t (fma.f64 -1 z x)) (fma.f64 -1 (*.f64 z x) (*.f64 x x))) (*.f64 t (fma.f64 -1 (*.f64 z (*.f64 x x)) (pow.f64 x 3))))) (pow.f64 y 3)) (neg.f64 (/.f64 (fma.f64 t (fma.f64 -1 (*.f64 z x) (*.f64 x x)) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z x) 2)))) (*.f64 y y))))))","(+.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (-.f64 (/.f64 (neg.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t)))) (*.f64 y y)) (/.f64 (fma.f64 (neg.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t)))) (-.f64 x z) (fma.f64 t (*.f64 (*.f64 x x) (-.f64 x z)) (*.f64 (*.f64 x (-.f64 x z)) (*.f64 (neg.f64 t) (-.f64 x z))))) (pow.f64 y 3))))","(-.f64 (-.f64 t (*.f64 (/.f64 t y) (-.f64 x z))) (+.f64 (/.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t))) (*.f64 y y)) (/.f64 (fma.f64 (neg.f64 (fma.f64 t (*.f64 x (-.f64 x z)) (*.f64 (pow.f64 (-.f64 x z) 2) (neg.f64 t)))) (-.f64 x z) (fma.f64 t (*.f64 (*.f64 x x) (-.f64 x z)) (*.f64 (*.f64 x (-.f64 x z)) (*.f64 (neg.f64 t) (-.f64 x z))))) (pow.f64 y 3))))","t","(+.f64 t (/.f64 (*.f64 (-.f64 z x) t) y))","(+.f64 t (/.f64 (-.f64 z x) (/.f64 y t)))","(+.f64 t (*.f64 (/.f64 (-.f64 z x) y) t))","(+.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t))) (pow.f64 y 2))) t))","(+.f64 (/.f64 (-.f64 z x) (/.f64 y t)) (fma.f64 -1 (/.f64 (fma.f64 (*.f64 -1 (-.f64 (*.f64 z x) (*.f64 x x))) t (neg.f64 (*.f64 t (pow.f64 (-.f64 z x) 2)))) (*.f64 y y)) t))","(+.f64 t (-.f64 (*.f64 (/.f64 (-.f64 z x) y) t) (/.f64 (*.f64 t (+.f64 (*.f64 x (-.f64 x z)) (neg.f64 (pow.f64 (-.f64 z x) 2)))) (*.f64 y y))))","(+.f64 t (fma.f64 (/.f64 (-.f64 z x) y) t (/.f64 (neg.f64 (*.f64 t (-.f64 (*.f64 x (-.f64 x z)) (pow.f64 (-.f64 z x) 2)))) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 t (-.f64 z x)) y) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 x 3)) t) (pow.f64 y 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) (*.f64 (-.f64 z x) t)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t))) (pow.f64 y 2))) (+.f64 t (*.f64 -1 (/.f64 (*.f64 (-.f64 z x) (+.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (pow.f64 x 2))) t) (*.f64 -1 (*.f64 (pow.f64 (-.f64 z x) 2) t)))) (pow.f64 y 3))))))))","(+.f64 (+.f64 (/.f64 (-.f64 z x) (/.f64 y t)) (/.f64 (-.f64 (*.f64 z (*.f64 x x)) (pow.f64 x 3)) (/.f64 (pow.f64 y 3) t))) (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (*.f64 z x) (*.f64 x x))) (/.f64 (pow.f64 y 3) (*.f64 t (-.f64 z x)))) (+.f64 (fma.f64 -1 (/.f64 (fma.f64 (*.f64 -1 (-.f64 (*.f64 z x) (*.f64 x x))) t (neg.f64 (*.f64 t (pow.f64 (-.f64 z x) 2)))) (*.f64 y y)) t) (neg.f64 (/.f64 (*.f64 (-.f64 z x) (fma.f64 (*.f64 -1 (-.f64 (*.f64 z x) (*.f64 x x))) t (neg.f64 (*.f64 t (pow.f64 (-.f64 z x) 2))))) (pow.f64 y 3))))))","(+.f64 (*.f64 (/.f64 (-.f64 z x) y) t) (+.f64 (-.f64 (-.f64 t (/.f64 (*.f64 t (+.f64 (*.f64 x (-.f64 x z)) (neg.f64 (pow.f64 (-.f64 z x) 2)))) (*.f64 y y))) (*.f64 (/.f64 (-.f64 z x) (pow.f64 y 3)) (*.f64 t (+.f64 (*.f64 x (-.f64 x z)) (neg.f64 (pow.f64 (-.f64 z x) 2)))))) (-.f64 (/.f64 (*.f64 (*.f64 x x) (-.f64 z x)) (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (*.f64 x (-.f64 x z)) (pow.f64 y 3)) (*.f64 t (-.f64 z x))))))","(+.f64 (*.f64 (/.f64 (-.f64 z x) y) t) (-.f64 (+.f64 (-.f64 (/.f64 (*.f64 (*.f64 x x) (-.f64 z x)) (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (*.f64 x (-.f64 x z)) (pow.f64 y 3)) (*.f64 t (-.f64 z x)))) (-.f64 t (/.f64 (*.f64 t (-.f64 (*.f64 x (-.f64 x z)) (pow.f64 (-.f64 z x) 2))) (*.f64 y y)))) (*.f64 (/.f64 (-.f64 z x) (pow.f64 y 3)) (*.f64 t (-.f64 (*.f64 x (-.f64 x z)) (pow.f64 (-.f64 z x) 2))))))","(*.f64 -1 (/.f64 y (-.f64 x y)))","(/.f64 (neg.f64 y) (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(/.f64 z (-.f64 x y))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (/.f64 y (-.f64 x y))))","(-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y)))","(+.f64 1 (*.f64 -1 (/.f64 z y)))","(+.f64 1 (/.f64 (neg.f64 z) y))","(-.f64 1 (/.f64 z y))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (*.f64 -1 (/.f64 z y))))","(+.f64 1 (fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) x (/.f64 (neg.f64 z) y)))","(+.f64 (-.f64 1 (/.f64 z y)) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (*.f64 -1 (/.f64 z y)))))","(+.f64 1 (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3))) (*.f64 x x) (fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) x (/.f64 (neg.f64 z) y))))","(+.f64 1 (-.f64 (fma.f64 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3))) (*.f64 x x) (*.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)))) (/.f64 z y)))","(+.f64 1 (+.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 z (pow.f64 y 3)))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) x) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 z (pow.f64 y 4)))) (pow.f64 x 3))))))","(+.f64 1 (fma.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 z) (pow.f64 y 3))) (*.f64 x x) (fma.f64 (+.f64 (/.f64 1 y) (/.f64 (neg.f64 z) (*.f64 y y))) x (fma.f64 -1 (/.f64 z y) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (neg.f64 z) (pow.f64 y 4))) (pow.f64 x 3))))))","(+.f64 1 (fma.f64 (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 z (pow.f64 y 3))) (*.f64 x x) (fma.f64 x (-.f64 (/.f64 1 y) (/.f64 (/.f64 z y) y)) (fma.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 z (pow.f64 y 4))) (pow.f64 x 3) (/.f64 (neg.f64 z) y)))))","(/.f64 (-.f64 z y) x)","(-.f64 (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (/.f64 (*.f64 y z) (pow.f64 x 2)))) (/.f64 y x))","(+.f64 (/.f64 z x) (-.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y (/.f64 (*.f64 x x) z))) (/.f64 y x)))","(+.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (-.f64 z y) x))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) z) (pow.f64 x 3)) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 (*.f64 y z) (pow.f64 x 2)))))) (/.f64 y x))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) z)) (/.f64 z x)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y (/.f64 (*.f64 x x) z))))) (/.f64 y x))","(+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) z) (+.f64 (-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (-.f64 z y) x)))","(+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) z) (+.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (pow.f64 (/.f64 y x) 3))) (/.f64 (-.f64 z y) x)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) z) (pow.f64 x 3)) (+.f64 (/.f64 z x) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (*.f64 y z) (pow.f64 x 2)))))))) (/.f64 y x))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) z)) (/.f64 z x)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (/.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 x 4)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 y (/.f64 (*.f64 x x) z))))))) (/.f64 y x))","(+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) z) (+.f64 (-.f64 (+.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (-.f64 (/.f64 z (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (-.f64 z y) x)))","(+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 x 3) y)) z) (+.f64 (+.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (+.f64 (pow.f64 (/.f64 y x) 3) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (-.f64 (/.f64 z (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (*.f64 (/.f64 y x) (/.f64 y x)))) (/.f64 (-.f64 z y) x)))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))","(neg.f64 (/.f64 (*.f64 -1 (-.f64 z y)) x))","(/.f64 (*.f64 1 (-.f64 z y)) x)","(/.f64 (neg.f64 (-.f64 y z)) x)","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y (/.f64 (*.f64 x x) z)) (-.f64 (neg.f64 (/.f64 (*.f64 -1 (-.f64 z y)) x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (fma.f64 z -1 y) x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (-.f64 y z) x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x)))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (/.f64 y (/.f64 (*.f64 x x) z)) (neg.f64 (/.f64 (*.f64 -1 (-.f64 z y)) x)))) (/.f64 (*.f64 y y) (*.f64 x x)))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (fma.f64 z -1 y) x)) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) (pow.f64 x 3))) (*.f64 (/.f64 y x) (/.f64 y x)))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (-.f64 y z) x)) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) (pow.f64 x 3)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) z)) (*.f64 -1 (pow.f64 y 3))) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) z) (pow.f64 x 4)) (+.f64 (/.f64 (*.f64 y z) (pow.f64 x 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 z) (*.f64 -1 y)) x))))) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 -1 (-.f64 (*.f64 z (*.f64 y y)) (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 (*.f64 z (pow.f64 y 3)) (pow.f64 x 4)) (/.f64 y (/.f64 (*.f64 x x) z))) (neg.f64 (/.f64 (*.f64 -1 (-.f64 z y)) x)))) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(-.f64 (+.f64 (/.f64 z (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (fma.f64 z -1 y) x)) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) (pow.f64 x 3)))) (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (-.f64 (/.f64 z (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (/.f64 (neg.f64 (*.f64 (*.f64 y y) (-.f64 z y))) (pow.f64 x 3))) (-.f64 (-.f64 (*.f64 (/.f64 z x) (/.f64 y x)) (/.f64 (-.f64 y z) x)) (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(/.f64 z x)","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (/.f64 z x))","(fma.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) y (/.f64 z x))","(fma.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) (/.f64 z x))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (+.f64 (/.f64 z x) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (pow.f64 y 2))))","(+.f64 (fma.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) y (/.f64 z x)) (*.f64 (*.f64 y y) (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x)))))","(fma.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) (fma.f64 (*.f64 y y) (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (/.f64 z x)))","(+.f64 (*.f64 (-.f64 (/.f64 z (pow.f64 x 2)) (/.f64 1 x)) y) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))) (+.f64 (/.f64 z x) (*.f64 (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (pow.f64 x 2))) (pow.f64 y 2)))))","(fma.f64 (-.f64 (/.f64 z (*.f64 x x)) (/.f64 1 x)) y (fma.f64 (pow.f64 y 3) (-.f64 (/.f64 z (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 z x) (*.f64 (*.f64 y y) (-.f64 (/.f64 z (pow.f64 x 3)) (/.f64 1 (*.f64 x x)))))))","(fma.f64 y (+.f64 (/.f64 z (*.f64 x x)) (/.f64 -1 x)) (fma.f64 (pow.f64 y 3) (+.f64 (/.f64 z (pow.f64 x 4)) (/.f64 -1 (pow.f64 x 3))) (fma.f64 (*.f64 y y) (+.f64 (/.f64 z (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (/.f64 z x))))","1","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 z y))))","(+.f64 1 (+.f64 (/.f64 (neg.f64 z) y) (/.f64 x y)))","(+.f64 (-.f64 1 (/.f64 z y)) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 z y))))))","(+.f64 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1) (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (+.f64 (/.f64 (neg.f64 z) y) (/.f64 x y))))","(+.f64 1 (+.f64 (-.f64 (-.f64 (/.f64 x y) (/.f64 z y)) (*.f64 (/.f64 (/.f64 z y) y) x)) (/.f64 x (/.f64 (*.f64 y y) x))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (/.f64 x y) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 -1 (/.f64 z y))))))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 z (/.f64 (pow.f64 y 3) (*.f64 x x))) (+.f64 1 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (neg.f64 z) y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (-.f64 (+.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 z y)) (-.f64 1 (*.f64 (/.f64 (/.f64 z y) y) x))) (*.f64 (/.f64 z (pow.f64 y 3)) (*.f64 x x))))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (+.f64 (-.f64 1 (*.f64 (/.f64 (/.f64 z y) y) x)) (-.f64 (-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 z y)) (*.f64 (/.f64 z (pow.f64 y 3)) (*.f64 x x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 z x) y)))","(+.f64 1 (neg.f64 (/.f64 (-.f64 z x) y)))","(-.f64 1 (/.f64 (-.f64 z x) y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 z x) y)))) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (-.f64 (*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 (-.f64 z x) y))) (/.f64 (neg.f64 (*.f64 x x)) (*.f64 y y))))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (-.f64 (-.f64 1 (*.f64 (/.f64 (/.f64 z y) y) x)) (/.f64 (-.f64 z x) y)))","(+.f64 1 (+.f64 (/.f64 (neg.f64 (-.f64 z x)) y) (/.f64 (*.f64 x (-.f64 x z)) (*.f64 y y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 z x) y)) (*.f64 -1 (/.f64 (-.f64 (*.f64 z (pow.f64 x 2)) (pow.f64 x 3)) (pow.f64 y 3)))))) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (-.f64 z x) y) (/.f64 (-.f64 (*.f64 z (*.f64 x x)) (pow.f64 x 3)) (pow.f64 y 3))))) (/.f64 (neg.f64 (*.f64 x x)) (*.f64 y y))))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (+.f64 (-.f64 (/.f64 (neg.f64 (-.f64 z x)) y) (/.f64 (*.f64 (*.f64 x x) (-.f64 z x)) (pow.f64 y 3))) (-.f64 1 (*.f64 (/.f64 (/.f64 z y) y) x))))","(+.f64 1 (+.f64 (-.f64 (/.f64 (neg.f64 (-.f64 z x)) y) (/.f64 (*.f64 (*.f64 x x) (-.f64 z x)) (pow.f64 y 3))) (/.f64 (*.f64 x (-.f64 x z)) (*.f64 y y))))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (pow.f64 (/.f64 y x) 3)))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(fma.f64 -1 (/.f64 x y) -1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(+.f64 (/.f64 (neg.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 -1 (/.f64 x y) -1))","(fma.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","(-.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x (/.f64 (*.f64 y y) x))))","(fma.f64 -1 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(fma.f64 -1 (/.f64 x y) -1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(+.f64 (/.f64 (neg.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 -1 (/.f64 x y) -1))","(fma.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","(-.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x (/.f64 (*.f64 y y) x))))","(fma.f64 -1 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(fma.f64 -1 (/.f64 x y) -1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(+.f64 (/.f64 (neg.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 -1 (/.f64 x y) -1))","(fma.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","(-.f64 -1 (+.f64 (/.f64 x y) (/.f64 x (/.f64 (*.f64 y y) x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))) -1)","(+.f64 -1 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x (/.f64 (*.f64 y y) x))))","(fma.f64 -1 (+.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (/.f64 x (/.f64 (*.f64 y y) x))) -1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (pow.f64 (/.f64 y x) 3)))","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 3)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)) (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (pow.f64 (/.f64 y x) 3)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 x x) (pow.f64 y 3)) (/.f64 x (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (pow.f64 y 3) x))) (/.f64 -1 y))","(-.f64 (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y))) (/.f64 x (/.f64 (pow.f64 y 3) x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (pow.f64 y 3)) (*.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (/.f64 (pow.f64 y 3) x)) (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)))","(-.f64 (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)) (/.f64 x (/.f64 (pow.f64 y 3) x)))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 y x) x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x)) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 y x) x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x)) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 1 x)","(+.f64 (/.f64 y (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 y (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 y x) x))","(+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y))))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 4)) (+.f64 (/.f64 y (pow.f64 x 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (+.f64 (/.f64 y (*.f64 x x)) (/.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 1 x)) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 y x) x) (/.f64 y (/.f64 (pow.f64 x 3) y)))) (/.f64 (pow.f64 y 3) (pow.f64 x 4)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 x x) (pow.f64 y 3)) (/.f64 x (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (pow.f64 y 3) x))) (/.f64 -1 y))","(-.f64 (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y))) (/.f64 x (/.f64 (pow.f64 y 3) x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (pow.f64 y 3)) (*.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (/.f64 (pow.f64 y 3) x)) (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)))","(-.f64 (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)) (/.f64 x (/.f64 (pow.f64 y 3) x)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 x (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (*.f64 y y)) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 x (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 x x) (pow.f64 y 3)) (/.f64 x (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (pow.f64 y 3) x))) (/.f64 -1 y))","(-.f64 (-.f64 (/.f64 -1 y) (/.f64 x (*.f64 y y))) (/.f64 x (/.f64 (pow.f64 y 3) x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (pow.f64 y 3)) (*.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))))) (/.f64 1 y))","(fma.f64 -1 (/.f64 x (/.f64 (pow.f64 y 3) x)) (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)))","(-.f64 (fma.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 4))) (/.f64 -1 y)) (/.f64 x (/.f64 (pow.f64 y 3) x)))"]],"stop":[["node limit",1]],"time":82.709228515625,"type":"simplify"},{"compiler":[[22095,8241]],"time":144.454833984375,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","fresh",12.196995885130884],["(/.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))","fresh",12.201479660050312],["(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","fresh",1.820707818938797],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","done",1.703900238412388],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","next",1.7123765079492719],["(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","fresh",12.059096143459826]],"compiler":[[13,8],[15,10],[17,9],[19,11],[70,34],[21,12],[13,8],[15,10],[17,9],[70,34],[21,12]],"count":[[529,6]],"kept":[{"done":[0,0],"fresh":[5,4],"new":[523,1],"picked":[1,1]}],"min-error":[0],"time":250.156005859375,"type":"prune"},{"compiler":[[293,101]],"locations":[["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)",0.524765039073768,true],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))",1.6647467221799008,true],["(cbrt.f64 (/.f64 y (-.f64 x y)))",4.071151543751272,true],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))",23.167894652122488,true]],"time":48.130126953125,"type":"localize"},{"count":[[4,87]],"series":[["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","-inf",0.322998046875],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","inf",0.35498046875],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","0",0.89990234375],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","-inf",0.506103515625],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","inf",0.43603515625],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","0",1.506103515625],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","y","-inf",1.67822265625],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","y","inf",3.559814453125],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","y","0",0.593994140625],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","x","-inf",0.764892578125],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","x","inf",0.81201171875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","x","0",2.421875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","z","-inf",0.43701171875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","z","inf",0.546875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","z","0",0.64013671875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","t","-inf",0.563232421875],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","t","inf",1.14892578125],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","t","0",4.591064453125],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","-inf",3.388916015625],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","inf",0.64697265625],["(cbrt.f64 (/.f64 y (-.f64 x y)))","x","0",0.490966796875],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","-inf",0.31298828125],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","inf",0.4150390625],["(cbrt.f64 (/.f64 y (-.f64 x y)))","y","0",0.620849609375],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","x","-inf",0.966796875],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","x","inf",0.697998046875],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","x","0",1.80419921875],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","y","-inf",5.468017578125],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","y","inf",2.251953125],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","y","0",0.76806640625]],"time":40.62890625,"type":"series"},{"count":[[4,140]],"egraph":[[2,6966,59,0.040523292],[1,500,59,0.009439375],[0,23,178,0.000537917]],"inputs":[["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))","(cbrt.f64 (/.f64 y (-.f64 x y)))","(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","(pow.f64 (cbrt.f64 (-.f64 x y)) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 x y)) (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 y (-.f64 x y)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y (-.f64 x y)) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (/.f64 y (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (+.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) 2) (cbrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) (sqrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 y (-.f64 x y)) 3) (pow.f64 (/.f64 y (-.f64 x y)) 3)) (+.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) (-.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) (pow.f64 (/.f64 y (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2) (pow.f64 (/.f64 y (-.f64 x y)) 2)) (-.f64 (/.f64 y (-.f64 x y)) (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y (-.f64 x y)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y (-.f64 x y)) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (pow.f64 (/.f64 1 (-.f64 x y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 1 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) (neg.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 x y)) 1/6) (pow.f64 (/.f64 y (-.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (-.f64 x y)) 1/6) (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2))) 2)) (sqrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) 1/3) (pow.f64 (sqrt.f64 (/.f64 y (-.f64 x y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)) 1) (/.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 1/6) 1) (/.f64 (pow.f64 y 1/6) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 1/6) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (/.f64 (pow.f64 y 1/6) (cbrt.f64 (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (-.f64 x y) 1/6)) (/.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)) (pow.f64 (-.f64 x y) 1/6)) (/.f64 (cbrt.f64 (cbrt.f64 y)) (pow.f64 (-.f64 x y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 y (-.f64 x y)) 1/6)) (pow.f64 (/.f64 y (-.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))) (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (/.f64 y (-.f64 x y)) 1/6)) (pow.f64 (/.f64 y (-.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 x y)) (+.f64 0 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (*.f64 0 (cbrt.f64 (/.f64 y (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (-.f64 x y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 1/6) (/.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 y 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 y (cbrt.f64 (-.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 2))) (sqrt.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 y)) (neg.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 y) (pow.f64 (-.f64 x y) 1/6)) (pow.f64 (-.f64 x y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 y) 1) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 x y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 x y)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 y (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 x y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 1 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (pow.f64 (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 2) (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 t) 2) (*.f64 (cbrt.f64 t) (/.f64 1 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (sqrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (/.f64 1 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 t) (/.f64 1 (neg.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2)) (/.f64 t (cbrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2)) (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2)) (/.f64 (sqrt.f64 t) (cbrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (/.f64 t (sqrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) (/.f64 (cbrt.f64 t) (sqrt.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (+.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 3) (pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 3))) (+.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2) (*.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (-.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (-.f64 (pow.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) 2) (pow.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) 2))) (-.f64 (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))) (*.f64 (/.f64 y (-.f64 x y)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 t (neg.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 t 3) (pow.f64 (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 t (+.f64 (*.f64 (/.f64 y (-.f64 x y)) 0) (+.f64 (/.f64 y (-.f64 x y)) (/.f64 z (-.f64 x y)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 1/6) (*.f64 (pow.f64 (-.f64 x y) 1/6) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (-.f64 x y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (-.f64 x y)))) 1))))))"]],"rules":[["egg-rr",18],["egg-rr",35],["egg-rr",61],["egg-rr",26]],"stop":[["node limit",1]],"time":70.541015625,"type":"rewrite"},{"count":[[227,256]],"egraph":[[1,2230,6016,0.01759775],[0,630,6961,0.003402958]],"inputs":[["(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y))))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))))))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x) (pow.f64 y 3)))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (cbrt.f64 -1)) (pow.f64 y 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))))))))))) 1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y))))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y)))))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3))) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3))))) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 -2 (pow.f64 x 3))) x)) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -8/27 (pow.f64 x 3))))) x)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 x 2))) (*.f64 -4/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 x 2))))))) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3))) x)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) 2)) (*.f64 -1 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 4))) (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))))))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x)) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x)))) 1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x))) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (cbrt.f64 -1) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (cbrt.f64 -1) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x))) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (cbrt.f64 -1) (pow.f64 x 2))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(cbrt.f64 -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y))))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (/.f64 (*.f64 t (-.f64 x y)) z))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3))))) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 4))) (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 3))))))))) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) t)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3))))) (pow.f64 x 3))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y)))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) z) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) z))) x))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) (*.f64 z x)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (*.f64 z x))))))","(/.f64 (*.f64 t x) z)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x))))))))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x)))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 t (*.f64 z (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 t (*.f64 z (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x)))) x)))) (pow.f64 y 3))))))","(*.f64 -1 (/.f64 t (cbrt.f64 -1)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1 (/.f64 t (cbrt.f64 -1))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 t (cbrt.f64 -1))) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t))) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 t (cbrt.f64 -1))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t)))) (cbrt.f64 -1)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1 (*.f64 z (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (cbrt.f64 -1))) (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x) (pow.f64 (cbrt.f64 -1) 2))))))) t) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t))) (pow.f64 y 2))))))","t","(+.f64 t (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y))","(+.f64 t (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))))))))) (pow.f64 y 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (*.f64 z (pow.f64 x 2)))))) t) (pow.f64 y 3)) (+.f64 t (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 2))))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 y)))) (pow.f64 x 3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 x))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))","(+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(fma.f64 -1 (cbrt.f64 -1) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)) (fma.f64 -1 (/.f64 x y) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)))))) -1)","(+.f64 (-.f64 (+.f64 (*.f64 (/.f64 x y) (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1)) (*.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x))) (cbrt.f64 -1)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1)) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 1/3 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (/.f64 (*.f64 y y) (cbrt.f64 -1))) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 x y) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 x x) (*.f64 y y))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)))))))))) -1)","(+.f64 (-.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 (*.f64 y y) (*.f64 (*.f64 x x) -5/3))) (-.f64 (-.f64 (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)))))) (/.f64 x y)) (*.f64 (/.f64 x y) (/.f64 x y)))) (cbrt.f64 -1)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1)) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x) (pow.f64 y 3)))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (*.f64 -1 (/.f64 x y)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (cbrt.f64 -1)) (pow.f64 y 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))))))))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (/.f64 (*.f64 y y) (cbrt.f64 -1))) (fma.f64 2/9 (*.f64 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (pow.f64 y 3)) (/.f64 x (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 1/3 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 x (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 x 3) (/.f64 (*.f64 (pow.f64 x 3) -1/27) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (/.f64 (pow.f64 y 3) x))) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)) (fma.f64 -1 (/.f64 x y) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 x x) (*.f64 y y))) (*.f64 1/3 (+.f64 (/.f64 (fma.f64 2 (pow.f64 x 3) (fma.f64 -4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) 8/27)))) (/.f64 (pow.f64 y 3) (cbrt.f64 -1))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))))))))))))))) -1)","(+.f64 (-.f64 (-.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 (*.f64 y y) (*.f64 (*.f64 x x) -5/3))) (fma.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (/.f64 (pow.f64 y 3) (/.f64 x (pow.f64 (cbrt.f64 -1) 2)))) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))))) (fma.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 3))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 (*.f64 (*.f64 x x) -5/3) (pow.f64 y 3)) x)) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x) (-.f64 (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 1/3 (+.f64 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 y 3) (fma.f64 2 (pow.f64 x 3) (fma.f64 (*.f64 x (*.f64 (*.f64 x x) -5/3)) -4/3 (fma.f64 2 (*.f64 -3 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 8/27)))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y))))) (/.f64 x y))))) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (/.f64 x y))) (cbrt.f64 -1)) -1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y))","(neg.f64 (/.f64 (fma.f64 -2/3 x (*.f64 2/3 x)) y))","(/.f64 (neg.f64 (*.f64 x 0)) y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y))))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -2/3) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (*.f64 y y)) (fma.f64 2/9 (/.f64 (*.f64 x x) (*.f64 y y)) (neg.f64 (/.f64 (fma.f64 -2/3 x (*.f64 2/3 x)) y))))))","(-.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -5/3) (*.f64 y y)) (-.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)) (/.f64 (*.f64 x 0) y)))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y)))))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -2/3) (*.f64 y y)) (fma.f64 -1 (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) -62/27))) (fma.f64 2/9 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (fma.f64 1/9 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -1/3 (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3))) (pow.f64 x 3))))) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (*.f64 y y)) (fma.f64 2/9 (/.f64 (*.f64 x x) (*.f64 y y)) (neg.f64 (/.f64 (fma.f64 -2/3 x (*.f64 2/3 x)) y)))))))","(-.f64 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -5/3) (*.f64 y y)) (-.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)) (/.f64 (*.f64 x 0) y))) (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (*.f64 (*.f64 x x) -5/3)) (fma.f64 (pow.f64 x 3) -62/27 (*.f64 (*.f64 6 (*.f64 x x)) x))) (fma.f64 2/9 (*.f64 (pow.f64 x 3) -2/3) (fma.f64 (*.f64 x (*.f64 (*.f64 x x) -5/3)) 1/9 (fma.f64 -1/3 (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3))) (pow.f64 x 3))))) (pow.f64 y 3)))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3))) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 x 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3))))) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) x)) y)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 -2 (pow.f64 x 3))) x)) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -8/27 (pow.f64 x 3))))) x)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 x 2))) (*.f64 -4/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 x 2))))))) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3))) x)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) 2)) (*.f64 -1 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 4))) (*.f64 2/9 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 2/9 (/.f64 (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3))) (/.f64 (pow.f64 y 4) x)) (fma.f64 -1 (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) -62/27))) (fma.f64 2/9 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (fma.f64 1/9 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -1/3 (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3))) (pow.f64 x 3))))) (pow.f64 y 3)) (fma.f64 1/9 (/.f64 (fma.f64 4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) -62/27))) (/.f64 (pow.f64 y 4) x)) (fma.f64 -1 (/.f64 (fma.f64 -2/3 x (*.f64 2/3 x)) y) (fma.f64 -1/3 (/.f64 (fma.f64 -2 (*.f64 x (*.f64 -2 (+.f64 (*.f64 x (*.f64 -3 (*.f64 x x))) (pow.f64 x 3)))) (fma.f64 4/3 (*.f64 x (fma.f64 4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) -62/27)))) (fma.f64 1/3 (pow.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) 2) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 -3 (*.f64 x x))) (*.f64 -4/9 (*.f64 (*.f64 x x) (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))))))))) (pow.f64 y 4)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/9 (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) -2/3)) (fma.f64 2/3 (*.f64 x (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3)))) (fma.f64 1/3 (pow.f64 (*.f64 (*.f64 x x) -2/3) 2) (neg.f64 (pow.f64 x 4))))) (pow.f64 y 4)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -2/3) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/3 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (*.f64 y y)) (fma.f64 1/9 (/.f64 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (/.f64 (pow.f64 y 4) (*.f64 (*.f64 x x) -2/3))) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 2/9))))))))))))","(-.f64 (fma.f64 2/9 (/.f64 (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3))) (/.f64 (pow.f64 y 4) x)) (-.f64 (fma.f64 1/9 (/.f64 (fma.f64 4/3 (*.f64 x (*.f64 (*.f64 x x) -5/3)) (fma.f64 (pow.f64 x 3) -62/27 (*.f64 (*.f64 6 (*.f64 x x)) x))) (/.f64 (pow.f64 y 4) x)) (-.f64 (fma.f64 -1/3 (/.f64 (fma.f64 (*.f64 4 (+.f64 (*.f64 -3 (pow.f64 x 3)) (pow.f64 x 3))) x (fma.f64 4/3 (*.f64 x (fma.f64 4/3 (*.f64 x (*.f64 (*.f64 x x) -5/3)) (fma.f64 (pow.f64 x 3) -62/27 (*.f64 (*.f64 6 (*.f64 x x)) x)))) (fma.f64 1/3 (pow.f64 (*.f64 (*.f64 x x) -5/3) 2) (-.f64 (*.f64 (*.f64 x x) (*.f64 (*.f64 (*.f64 x x) -5/3) -4/9)) (*.f64 -3 (pow.f64 x 4)))))) (pow.f64 y 4)) (+.f64 (fma.f64 -1/3 (/.f64 (fma.f64 -1/9 (*.f64 (pow.f64 x 4) -2/3) (-.f64 (fma.f64 2/3 (*.f64 x (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3)))) (*.f64 1/3 (*.f64 (pow.f64 x 4) 4/9))) (pow.f64 x 4))) (pow.f64 y 4)) (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y))) (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 x x) -5/3) (*.f64 y y)) (fma.f64 1/9 (*.f64 (/.f64 (*.f64 (*.f64 x x) -5/3) (pow.f64 y 4)) (*.f64 (*.f64 x x) -2/3)) (*.f64 (/.f64 (*.f64 x x) y) (/.f64 2/9 y)))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) (/.f64 (*.f64 x 0) y))) (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (*.f64 (*.f64 x x) -5/3)) (fma.f64 (pow.f64 x 3) -62/27 (*.f64 (*.f64 6 (*.f64 x x)) x))) (fma.f64 2/9 (*.f64 (pow.f64 x 3) -2/3) (fma.f64 (*.f64 x (*.f64 (*.f64 x x) -5/3)) 1/9 (fma.f64 -1/3 (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3))) (pow.f64 x 3))))) (pow.f64 y 3)))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(fma.f64 -1 (cbrt.f64 -1) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x)) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (*.f64 x (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)))) -1)","(fma.f64 -1 (cbrt.f64 -1) (fma.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 -1 y))) -1))","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 (-.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (*.f64 y y))) (*.f64 x x) (*.f64 x (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y))))) -1)","(+.f64 (-.f64 (fma.f64 (*.f64 x x) (+.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y))))) (/.f64 -1 (*.f64 y y))) (*.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 -1 y))))) (cbrt.f64 -1)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (pow.f64 y 2))) (pow.f64 x 2)) (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)) x)))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 (-.f64 (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2))) (*.f64 5/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 (pow.f64 y 3))) (pow.f64 x 3) (fma.f64 (-.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2))))) (/.f64 1 (*.f64 y y))) (*.f64 x x) (*.f64 x (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y))) (/.f64 1 y)))))) -1)","(+.f64 (-.f64 (fma.f64 (pow.f64 x 3) (+.f64 (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (-.f64 (+.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 -1 (pow.f64 y 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) y)) 2/3)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2))) (*.f64 5/27 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 y 3)))))) (/.f64 -1 (pow.f64 y 3))) (fma.f64 (*.f64 x x) (+.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y))))) (/.f64 -1 (*.f64 y y))) (*.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 -1 y)))))) (cbrt.f64 -1)) -1)","(/.f64 y x)","(+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))","(+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x)))","(neg.f64 (/.f64 y (*.f64 x (cbrt.f64 -1))))","(/.f64 (neg.f64 y) (*.f64 x (cbrt.f64 -1)))","(+.f64 (*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x))) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (cbrt.f64 -1) (pow.f64 x 2)))))","(fma.f64 -1 (/.f64 y (*.f64 x (cbrt.f64 -1))) (neg.f64 (/.f64 (*.f64 y y) (*.f64 (*.f64 x x) (cbrt.f64 -1)))))","(-.f64 (/.f64 (neg.f64 y) (*.f64 x (cbrt.f64 -1))) (*.f64 (/.f64 y (cbrt.f64 -1)) (/.f64 y (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (cbrt.f64 -1) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 y (*.f64 (cbrt.f64 -1) x))) (*.f64 -1 (/.f64 (pow.f64 y 2) (*.f64 (cbrt.f64 -1) (pow.f64 x 2))))))","(fma.f64 -1 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) (cbrt.f64 -1))) (fma.f64 -1 (/.f64 y (*.f64 x (cbrt.f64 -1))) (neg.f64 (/.f64 (*.f64 y y) (*.f64 (*.f64 x x) (cbrt.f64 -1))))))","(-.f64 (-.f64 (/.f64 (neg.f64 y) (*.f64 x (cbrt.f64 -1))) (*.f64 (/.f64 y (cbrt.f64 -1)) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) (cbrt.f64 -1))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (cbrt.f64 -1) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 x y)))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)) -1/3 (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 x y))))","(fma.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) -1/3 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)) -1/3 (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (*.f64 (pow.f64 y 2) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 x (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 x 3) (/.f64 (*.f64 (pow.f64 x 3) -1/27) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))))))","(fma.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2))) -1/3 (fma.f64 -1/3 (+.f64 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))))) (fma.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 3))) (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))) (cbrt.f64 -1)))","(cbrt.f64 -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (cbrt.f64 -1))","(fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)) (cbrt.f64 -1))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2)))))","(+.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)) (cbrt.f64 -1)) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -2/3)) (*.f64 y y))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x) (cbrt.f64 -1)) (/.f64 (*.f64 (*.f64 x (*.f64 x 2/9)) (cbrt.f64 -1)) (*.f64 y y)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (pow.f64 y 3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) x) y)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))))))","(fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3))))) (+.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 y x)) (cbrt.f64 -1)) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -2/3)) (*.f64 y y)))))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 y 3)) (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3)))) (+.f64 (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) y) x) (cbrt.f64 -1)) (/.f64 (*.f64 (*.f64 x (*.f64 x 2/9)) (cbrt.f64 -1)) (*.f64 y y))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))","(+.f64 (cbrt.f64 -1) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 x y)))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)) -1/3 (cbrt.f64 -1))","(+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y)))))","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (+.f64 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y)))))","(fma.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 x x)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 x y))))))","(fma.f64 1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (+.f64 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (+.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 -1 (pow.f64 y 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) y)) 2/3)))) (fma.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 x x)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 x y))) (cbrt.f64 -1)))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 y (-.f64 x y))))))","(/.f64 t (+.f64 (/.f64 z (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(/.f64 t (-.f64 (/.f64 z (-.f64 x y)) (/.f64 y (-.f64 x y))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y)))","(*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y))","(/.f64 (neg.f64 t) (/.f64 y (-.f64 x y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)) (*.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y))))))","(-.f64 (/.f64 (neg.f64 t) (/.f64 y (-.f64 x y))) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y)))))","(+.f64 (*.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)) (*.f64 -1 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (-.f64 x y) (*.f64 z z)))))))","(-.f64 (-.f64 (/.f64 (neg.f64 t) (/.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (-.f64 x y))) (*.f64 (/.f64 t y) (-.f64 x y))) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 (-.f64 x y) y)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 z (-.f64 x y))) (pow.f64 y 2)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 3) (-.f64 x y))) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (pow.f64 z 2) (-.f64 x y))) (pow.f64 y 3)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (-.f64 x y)) y))))))","(+.f64 (*.f64 -1 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z (-.f64 x y))))) (+.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 x y)) y)) (*.f64 -1 (/.f64 t (/.f64 (pow.f64 y 3) (*.f64 (-.f64 x y) (*.f64 z z)))))) (*.f64 -1 (/.f64 t (/.f64 (pow.f64 y 4) (*.f64 (-.f64 x y) (pow.f64 z 3)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 t) (/.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (-.f64 x y))) (*.f64 (/.f64 t y) (-.f64 x y))) (/.f64 (*.f64 (*.f64 t (-.f64 x y)) (pow.f64 z 3)) (pow.f64 y 4))) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 (-.f64 x y) y)))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (/.f64 (*.f64 t (-.f64 x y)) z))","(fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (/.f64 t (/.f64 z (-.f64 x y))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)))))","(+.f64 (fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (/.f64 t (/.f64 z (-.f64 x y)))) (*.f64 1 (/.f64 (*.f64 (*.f64 y y) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (fma.f64 1 (/.f64 (*.f64 (*.f64 (pow.f64 y 3) t) (-.f64 x y)) (pow.f64 z 4)) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (*.f64 1 (/.f64 (*.f64 (*.f64 y y) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(/.f64 (*.f64 t (-.f64 x y)) z)","(/.f64 t (/.f64 z (-.f64 x y)))","(*.f64 (/.f64 t z) (-.f64 x y))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (/.f64 (*.f64 t (-.f64 x y)) z))","(fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (/.f64 t (/.f64 z (-.f64 x y))))","(+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3)))))","(+.f64 (fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (/.f64 t (/.f64 z (-.f64 x y)))) (*.f64 1 (/.f64 (*.f64 (*.f64 y y) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (*.f64 t (-.f64 x y))) (pow.f64 z 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 t (-.f64 x y))) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 t (-.f64 x y)) z) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(fma.f64 1 (/.f64 (*.f64 (*.f64 y t) (-.f64 x y)) (*.f64 z z)) (fma.f64 1 (/.f64 (*.f64 (*.f64 (pow.f64 y 3) t) (-.f64 x y)) (pow.f64 z 4)) (+.f64 (/.f64 t (/.f64 z (-.f64 x y))) (*.f64 1 (/.f64 (*.f64 (*.f64 y y) (*.f64 t (-.f64 x y))) (pow.f64 z 3))))))","(+.f64 (*.f64 (*.f64 (/.f64 t z) (-.f64 x y)) (/.f64 y z)) (+.f64 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) (/.f64 (pow.f64 z 4) (pow.f64 y 3))) (*.f64 (/.f64 t z) (-.f64 x y))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (*.f64 t (-.f64 x y)))))","(/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))","(/.f64 t (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))))","(/.f64 t (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y)))))","(fma.f64 -1 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) (*.f64 x t))) (/.f64 t (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y)))))","(-.f64 (/.f64 t (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y))) (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2) (*.f64 x t))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))))","(fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (fma.f64 -1 (/.f64 z (pow.f64 y 3)) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) t)) (neg.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 3) (pow.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) 2)))))) (fma.f64 -1 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) (*.f64 x t))) (/.f64 t (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))))))","(-.f64 (-.f64 (/.f64 t (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y))) (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2) (*.f64 x t)))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y)) (-.f64 (/.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))))) (/.f64 z (pow.f64 y 3))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2)) t) (*.f64 (/.f64 t (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 3)) (pow.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 t (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3)))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (*.f64 t x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) 2) t) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3))))) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))))) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) y)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 4))) (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 3))))))))) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 y 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 y 2)))) (+.f64 (*.f64 -1 (/.f64 z (pow.f64 y 3))) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 y 2))))) (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 y))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) t)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y))) 3))))) (pow.f64 x 3))) (/.f64 t (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 z y)))))))","(fma.f64 -1 (*.f64 (*.f64 x x) (+.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (fma.f64 -1 (/.f64 z (pow.f64 y 3)) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) t)) (neg.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 3) (pow.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) 2)))))) (fma.f64 -1 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) (*.f64 x t))) (fma.f64 -1 (*.f64 (pow.f64 x 3) (fma.f64 -1 (/.f64 (*.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) (+.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (fma.f64 -1 (/.f64 z (pow.f64 y 3)) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) t)) (neg.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 3) (pow.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y)))) 2)))))) (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y)))) (+.f64 (/.f64 t (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 2) (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) y)))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1 (/.f64 z (pow.f64 y 4)) (*.f64 5/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (pow.f64 y 3)))))))))) (neg.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 y y))) (fma.f64 -1 (/.f64 z (pow.f64 y 3)) (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (/.f64 1 (*.f64 y y)))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y))) 3) (*.f64 t (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 y)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) y) (/.f64 (neg.f64 z) (*.f64 y y))))))))))) (/.f64 t (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 z y)))))))","(-.f64 (-.f64 (-.f64 (/.f64 t (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y))) (*.f64 (pow.f64 x 3) (-.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2)) (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 y 3)) (fma.f64 -1/3 (/.f64 (-.f64 (+.f64 (/.f64 1/27 (*.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 -1 (pow.f64 y 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) y)) 2/3)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))) (*.f64 y (pow.f64 (cbrt.f64 -1) 2))) (-.f64 (*.f64 5/27 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 y 3))) (/.f64 z (pow.f64 y 4))))))) (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y)) (-.f64 (/.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))))) (/.f64 z (pow.f64 y 3))))) (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 3) (*.f64 t (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))))))) (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y))) (-.f64 (*.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y)) (-.f64 (/.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))))) (/.f64 z (pow.f64 y 3))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2)) t) (*.f64 (/.f64 t (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 3)) (pow.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) 2))))))) (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2) (*.f64 x t)))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (/.f64 (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 y y)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y y)) (-.f64 (/.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 y y))))) (/.f64 z (pow.f64 y 3))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 2)) t) (*.f64 (/.f64 t (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 z y)) 3)) (pow.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) y) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) y)) (/.f64 z (*.f64 y y)))) 2)))))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) z) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) z))) x))))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) t) (*.f64 z x)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) t) (*.f64 z x))))))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(/.f64 (*.f64 t x) z)","(/.f64 t (/.f64 z x))","(*.f64 (/.f64 t z) x)","(+.f64 (/.f64 (*.f64 t x) z) (*.f64 -1 (/.f64 (*.f64 y t) z)))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x))))))))","(+.f64 (/.f64 t (/.f64 z x)) (neg.f64 (/.f64 (*.f64 y t) z)))","(-.f64 (*.f64 (/.f64 t z) x) (*.f64 (/.f64 y z) t))","(+.f64 (/.f64 (*.f64 t x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) z)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x)))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 t (*.f64 z (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 t (*.f64 z (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (/.f64 t (*.f64 z x)) (*.f64 -1 (/.f64 t (*.f64 z x)))) x)))) (pow.f64 y 3))))))","(+.f64 (/.f64 t (/.f64 z x)) (fma.f64 -1 (/.f64 (*.f64 y t) z) (fma.f64 -1 (*.f64 (*.f64 y y) (*.f64 0 (/.f64 (/.f64 t z) x))) (neg.f64 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 t (*.f64 (*.f64 x x) z)) (fma.f64 -1 (/.f64 t (*.f64 (*.f64 x x) z)) (neg.f64 (/.f64 (*.f64 0 (/.f64 (/.f64 t z) x)) x)))))))))","(+.f64 (*.f64 (/.f64 t z) x) (-.f64 (*.f64 y 0) (*.f64 (/.f64 y z) t)))","(*.f64 -1 (/.f64 t (cbrt.f64 -1)))","(neg.f64 (/.f64 t (cbrt.f64 -1)))","(/.f64 (neg.f64 t) (cbrt.f64 -1))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1 (/.f64 t (cbrt.f64 -1))))","(*.f64 -1 (+.f64 (*.f64 (/.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2))) (/.f64 t (cbrt.f64 -1))))","(neg.f64 (fma.f64 (/.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (/.f64 t (cbrt.f64 -1))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 t (cbrt.f64 -1))) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t))) (pow.f64 y 2)))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -1 (+.f64 (/.f64 t (cbrt.f64 -1)) (/.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1 (*.f64 x z) (*.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))))))))) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) 2)))) (*.f64 y y)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (/.f64 t (cbrt.f64 -1)))) (/.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (-.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -5/3))) (*.f64 x z))))) (*.f64 t (pow.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) 2))) (*.f64 y y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) t) (*.f64 y (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1 (/.f64 t (cbrt.f64 -1))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t)))) (cbrt.f64 -1)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))) (+.f64 (*.f64 -1 (*.f64 z (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x))) (+.f64 (pow.f64 x 3) (*.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 8/27 (pow.f64 x 3))))) (cbrt.f64 -1))) (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) x) (pow.f64 (cbrt.f64 -1) 2))))))) t) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 t (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) (cbrt.f64 -1))))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 z) (+.f64 (*.f64 -2/3 (*.f64 (cbrt.f64 -1) x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))) 2) t))) (pow.f64 y 2))))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1 (/.f64 t (cbrt.f64 -1)) (*.f64 -1 (+.f64 (/.f64 (+.f64 (/.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (/.f64 (cbrt.f64 -1) (+.f64 (/.f64 t (/.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1 (*.f64 x z) (*.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))))))))) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) 2)))))) (+.f64 (/.f64 (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))))) (fma.f64 -1 (*.f64 (*.f64 x x) z) (fma.f64 1/3 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 x (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 x 3) (/.f64 (*.f64 (pow.f64 x 3) -1/27) (pow.f64 (cbrt.f64 -1) 2)))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 2 (pow.f64 x 3) (fma.f64 -4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) 8/27))))) (*.f64 2/9 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) t)) (neg.f64 (*.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) (*.f64 t (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1 (*.f64 x z) (*.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))))))))))))) (pow.f64 y 3)) (/.f64 (+.f64 (/.f64 t (/.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1 (*.f64 x z) (*.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))))))))) (neg.f64 (*.f64 t (pow.f64 (fma.f64 -1 z (fma.f64 -2/3 (*.f64 x (cbrt.f64 -1)) (*.f64 1/3 (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) 2)))) (*.f64 y y))))))","(fma.f64 -1 (fma.f64 (/.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) y) (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (/.f64 t (cbrt.f64 -1))) (-.f64 (/.f64 (neg.f64 (-.f64 (*.f64 (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (-.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -5/3))) (*.f64 x z))))) (*.f64 t (pow.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) 2)))) (*.f64 y y)) (/.f64 (-.f64 (+.f64 (*.f64 (/.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) (cbrt.f64 -1)) (-.f64 (*.f64 (/.f64 t (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (-.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -5/3))) (*.f64 x z))))) (*.f64 t (pow.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) 2)))) (/.f64 (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 x (*.f64 (*.f64 x x) -5/3))) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))))) (fma.f64 -1/27 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 3))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (fma.f64 2 (pow.f64 x 3) (fma.f64 (*.f64 x (*.f64 (*.f64 x x) -5/3)) -4/3 (fma.f64 2 (*.f64 -3 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 8/27))))) (/.f64 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) 2/9) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x)))) (*.f64 x (*.f64 x z)))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) t))) (*.f64 t (*.f64 (-.f64 (*.f64 x (+.f64 (*.f64 -2/3 (cbrt.f64 -1)) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) z) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (-.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 x x) -5/3))) (*.f64 x z))))))) (pow.f64 y 3))))","t","(+.f64 t (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y))","(+.f64 t (/.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (/.f64 y t)))","(+.f64 t (/.f64 t (/.f64 y (+.f64 (*.f64 x -1) z))))","(+.f64 t (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 2)))))","(+.f64 t (+.f64 (/.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (/.f64 y t)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (*.f64 t (fma.f64 -2/3 x (fma.f64 -1/3 x z)))) (*.f64 t (fma.f64 2/9 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (fma.f64 -1 (*.f64 x z) (*.f64 -1/3 (*.f64 (*.f64 x x) -2/3))))))) (*.f64 y y)))))","(+.f64 t (-.f64 (/.f64 t (/.f64 y (+.f64 (*.f64 x -1) z))) (/.f64 (fma.f64 t (fma.f64 (*.f64 x x) 2/9 (fma.f64 (*.f64 (*.f64 x x) -5/3) -1/3 (-.f64 (*.f64 x (*.f64 x 2/9)) (*.f64 x z)))) (*.f64 (*.f64 (+.f64 (*.f64 x -1) z) (+.f64 (*.f64 x -1) z)) (neg.f64 t))) (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))))))))) (pow.f64 y 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (pow.f64 x 2)) x)) (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 3)))))) (+.f64 (*.f64 2/9 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))) x)) (+.f64 (*.f64 -1/27 (pow.f64 x 3)) (pow.f64 x 3)))) (+.f64 (*.f64 1/9 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2))) x)) (*.f64 z (pow.f64 x 2)))))) t) (pow.f64 y 3)) (+.f64 t (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) t) y) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/3 x) (+.f64 (*.f64 -2/3 x) z)) (*.f64 (+.f64 (*.f64 -2/3 x) (+.f64 (*.f64 -1/3 x) z)) t))) (*.f64 t (+.f64 (*.f64 2/9 (pow.f64 x 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 x 2)) (+.f64 (*.f64 4/3 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2))))))))) (pow.f64 y 2))))))))","(fma.f64 -1 (/.f64 (*.f64 t (*.f64 (fma.f64 -2/3 x (fma.f64 -1/3 x z)) (fma.f64 2/9 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (fma.f64 -1 (*.f64 x z) (*.f64 -1/3 (*.f64 (*.f64 x x) -2/3))))))) (pow.f64 y 3)) (fma.f64 -1 (/.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (/.f64 (pow.f64 y 3) (fma.f64 -1 (*.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (*.f64 t (fma.f64 -2/3 x (fma.f64 -1/3 x z)))) (*.f64 t (fma.f64 2/9 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (fma.f64 -1 (*.f64 x z) (*.f64 -1/3 (*.f64 (*.f64 x x) -2/3))))))))) (+.f64 (+.f64 t (+.f64 (/.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (/.f64 y t)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (fma.f64 -1/3 x (fma.f64 -2/3 x z)) (*.f64 t (fma.f64 -2/3 x (fma.f64 -1/3 x z)))) (*.f64 t (fma.f64 2/9 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x))) (fma.f64 -1 (*.f64 x z) (*.f64 -1/3 (*.f64 (*.f64 x x) -2/3))))))) (*.f64 y y))))) (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (fma.f64 -2 (*.f64 x (*.f64 -3 (*.f64 x x))) (*.f64 (pow.f64 x 3) -62/27))) (fma.f64 2/9 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (fma.f64 -1/3 (fma.f64 2/3 (*.f64 x (*.f64 (*.f64 x x) -2/3)) (*.f64 26/27 (pow.f64 x 3))) (fma.f64 1/9 (*.f64 x (fma.f64 -4 (*.f64 x x) (*.f64 7/3 (*.f64 x x)))) (*.f64 (*.f64 x x) z))))) (/.f64 (pow.f64 y 3) t)))))","(-.f64 (-.f64 (+.f64 (+.f64 t (-.f64 (/.f64 t (/.f64 y (+.f64 (*.f64 x -1) z))) (/.f64 (fma.f64 t (fma.f64 (*.f64 x x) 2/9 (fma.f64 (*.f64 (*.f64 x x) -5/3) -1/3 (-.f64 (*.f64 x (*.f64 x 2/9)) (*.f64 x z)))) (*.f64 (*.f64 (+.f64 (*.f64 x -1) z) (+.f64 (*.f64 x -1) z)) (neg.f64 t))) (*.f64 y y)))) (/.f64 (fma.f64 -1/3 (fma.f64 4/3 (*.f64 x (*.f64 (*.f64 x x) -5/3)) (fma.f64 (pow.f64 x 3) -62/27 (*.f64 (*.f64 6 (*.f64 x x)) x))) (fma.f64 2/9 (*.f64 (pow.f64 x 3) -2/3) (fma.f64 -1/3 (fma.f64 2/3 (*.f64 (pow.f64 x 3) -2/3) (*.f64 26/27 (pow.f64 x 3))) (fma.f64 (*.f64 x (*.f64 (*.f64 x x) -5/3)) 1/9 (*.f64 x (*.f64 x z)))))) (/.f64 (pow.f64 y 3) t))) (*.f64 (/.f64 (+.f64 (*.f64 x -1) z) (pow.f64 y 3)) (fma.f64 t (fma.f64 (*.f64 x x) 2/9 (fma.f64 (*.f64 (*.f64 x x) -5/3) -1/3 (-.f64 (*.f64 x (*.f64 x 2/9)) (*.f64 x z)))) (*.f64 (*.f64 (+.f64 (*.f64 x -1) z) (+.f64 (*.f64 x -1) z)) (neg.f64 t))))) (*.f64 (/.f64 t (pow.f64 y 3)) (*.f64 (+.f64 (*.f64 x -1) z) (fma.f64 (*.f64 x x) 2/9 (fma.f64 (*.f64 (*.f64 x x) -5/3) -1/3 (-.f64 (*.f64 x (*.f64 x 2/9)) (*.f64 x z)))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 x (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y))))","(fma.f64 2/3 (*.f64 (pow.f64 y 1/18) (*.f64 (pow.f64 y 1/18) (*.f64 x (cbrt.f64 (cbrt.f64 -1))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 x (cbrt.f64 (cbrt.f64 -1)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y)))))","(fma.f64 (*.f64 x x) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) -1/9)) (fma.f64 2/3 (*.f64 (pow.f64 y 1/18) (*.f64 (pow.f64 y 1/18) (*.f64 x (cbrt.f64 (cbrt.f64 -1))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 y)))) (pow.f64 x 3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 x (cbrt.f64 (cbrt.f64 -1)))) (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 y)) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 1 (*.f64 y y))))) (*.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (*.f64 y y)))) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1))) (*.f64 (/.f64 1 y) 2/27)) (pow.f64 x 3) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y))))))","(fma.f64 (*.f64 x x) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) -1/9)) (fma.f64 2/3 (*.f64 (pow.f64 y 1/18) (*.f64 (pow.f64 y 1/18) (*.f64 x (cbrt.f64 (cbrt.f64 -1))))) (fma.f64 (pow.f64 x 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 y))) (/.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (cbrt.f64 -1)) (/.f64 2/27 y)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (cbrt.f64 (*.f64 y y))))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))","(+.f64 (fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (cbrt.f64 (*.f64 x x))) (*.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9)))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 x))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (pow.f64 y 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (*.f64 x x)))) (*.f64 -1/27 (cbrt.f64 (/.f64 1 (*.f64 x x)))))) (*.f64 2/27 (/.f64 1 x))) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9)))))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (pow.f64 y 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) 5/27) (/.f64 2/27 x)) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 x x)))))"]],"stop":[["node limit",1]],"time":69.925048828125,"type":"simplify"},{"compiler":[[38030,18940]],"time":300.305908203125,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","fresh",12.196995885130884],["(/.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))","fresh",12.201479660050312],["(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","fresh",1.820707818938797],["(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","done",1.703900238412388],["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","done",1.7123765079492719],["(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","fresh",12.059096143459826]],"compiler":[[13,8],[15,10],[17,9],[19,11],[70,34],[21,12]],"count":[[486,6]],"kept":[{"done":[1,1],"fresh":[4,4],"new":[480,0],"picked":[1,1]}],"min-error":[0],"time":221.590087890625,"type":"prune"},{"accuracy":[0.49647366947359084],"baseline":[1.696087738412388],"branch":[["x",1.6960877384123878,1],["y",0.6069365882366679,3],["z",1.696087738412388,1],["t",1.6960877384123876,1],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",0.49647366947359084,3],["(/.f64 (-.f64 x y) (-.f64 z y))",0.5003799194735908,3],["(/.f64 (-.f64 x y) (-.f64 z y))",0.5003799194735908,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[11,7],[11,7],[224,85]],"count":[[12,3]],"inputs":[["(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))","(/.f64 t (+.f64 (fma.f64 1 (/.f64 z (-.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x y))) y (*.f64 (/.f64 1 (-.f64 x y)) y))))","(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 1 (/.f64 (-.f64 z y) (*.f64 (-.f64 x y) t)))","(+.f64 (/.f64 (*.f64 t x) (-.f64 z y)) (*.f64 -1 (/.f64 (*.f64 y t) (-.f64 z y))))","(/.f64 t (/.f64 (-.f64 z y) (-.f64 x y)))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z y))) 3) t)","(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","(*.f64 (-.f64 x y) (/.f64 t (-.f64 z y)))","(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)"]],"link":["."],"name":["Numeric.Signal.Multichannel:$cput from hsignal-0.2.7.1"],"oracle":[26.060060952035965],"outputs":[["(*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t)","(/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t))","(/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))"]],"time":70.880859375,"times":[["x",5.196044921875],["y",14.47412109375],["z",5.197021484375],["t",5.23681640625],["(*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t)",13.37890625],["(/.f64 (-.f64 x y) (-.f64 z y))",12.0419921875],["(/.f64 (-.f64 x y) (-.f64 z y))",11.902099609375]],"type":"regimes"},{"bstep":[[-0.0,6.907e-321,0.01513671875],[-8.893742328508623e-261,-1.596292144554586e-277,0.117919921875]],"compiler":[[7,6],[13,8]],"method":["left-value","left-value"],"time":0.281982421875,"type":"bsearch"},{"compiler":[[65,26]],"egraph":[[4,57,90,0.000333876],[3,55,90,0.00026929199999999997],[2,50,90,0.000194167],[1,40,90,0.000121001],[0,28,90,6.3334e-5]],"inputs":[["(if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) -5539569662801113/1107913932560222642718302084617242634394213707491304322373697056856707228094640652496493097019312046907692196808899173923175472949106175979816042319761510659592576951121881510274623639758153063707231876091920910184135845830200523203728421733043088080742988814006853038686339072) (*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t) (if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 0) (/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t)) (/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) -5539569662801113/1107913932560222642718302084617242634394213707491304322373697056856707228094640652496493097019312046907692196808899173923175472949106175979816042319761510659592576951121881510274623639758153063707231876091920910184135845830200523203728421733043088080742988814006853038686339072) (*.f64 (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y))) t) (if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 0) (/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t)) (/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (neg.f64 (/.f64 y (-.f64 x y)))))))","(if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) -5539569662801113/1107913932560222642718302084617242634394213707491304322373697056856707228094640652496493097019312046907692196808899173923175472949106175979816042319761510659592576951121881510274623639758153063707231876091920910184135845830200523203728421733043088080742988814006853038686339072) (*.f64 t (-.f64 (/.f64 x (-.f64 z y)) (/.f64 y (-.f64 z y)))) (if (<=.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z y)) t) 0) (/.f64 (-.f64 x y) (/.f64 (-.f64 z y) t)) (/.f64 t (fma.f64 z (/.f64 1 (-.f64 x y)) (/.f64 (neg.f64 y) (-.f64 x y))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.76123046875,"type":"simplify"},{"time":0.019775390625,"type":"soundness"},{"compiler":[[65,26]],"remove-preprocessing":[[]],"time":13.945068359375,"type":"end"}]