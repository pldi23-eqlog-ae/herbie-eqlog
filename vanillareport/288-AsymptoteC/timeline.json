[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":2.9130859375,"type":"analyze"},{"outcomes":[["body",512,"valid",73.77099609375,1085],["body",1024,"valid",199.8173828125,2017],["body",256,"valid",188.084228515625,4968],["body",2048,"valid",31.162353515625,186]],"time":500.788818359375,"type":"sample"},{"compiler":[[14,10]],"egraph":[[0,1,1,1.25e-6],[18,4415,19,0.08324671],[17,4415,19,0.075862877],[16,4405,19,0.06900771],[15,4403,19,0.062116085],[14,4401,19,0.055260335],[13,4359,19,0.048424335],[12,4063,19,0.041315251],[11,3248,19,0.033191251],[10,2931,19,0.023406418],[9,2296,19,0.015540793],[8,966,19,0.009495126],[7,381,19,0.0037022920000000003],[6,207,19,0.001756084],[5,100,19,0.000899417],[4,60,19,0.000510667],[3,34,19,0.00030400100000000003],[2,22,19,0.000166959],[1,16,19,9.929200000000001e-5],[0,8,19,5.5167e-5]],"inputs":[["0"],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))","(+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (-.f64 -1 x) (+.f64 x -1)))","(+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 1 x)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":107.092041015625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[18,4415,19,0.08211846],[17,4415,19,0.07476196],[16,4405,19,0.067903168],[15,4403,19,0.061018085],[14,4401,19,0.054146918],[13,4359,19,0.047322002],[12,4063,19,0.040238960000000004],[11,3248,19,0.03238871],[10,2931,19,0.02277696],[9,2296,19,0.015270252],[8,966,19,0.00932771],[7,381,19,0.003639876],[6,207,19,0.0017462099999999998],[5,100,19,0.0008941679999999999],[4,60,19,0.0005090009999999999],[3,34,19,0.00030345899999999996],[2,22,19,0.000166709],[1,16,19,9.8792e-5],[0,8,19,5.1542e-5]],"inputs":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))","(+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (-.f64 -1 x) (+.f64 x -1)))","(+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 1 x)))"]],"stop":[["saturated",1]],"time":93.6240234375,"type":"simplify"},{"compiler":[[27,19]],"time":0.444091796875,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","next",27.185551827362957]],"compiler":[[14,10],[14,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[27.185551827362957],"time":0.9208984375,"type":"prune"},{"compiler":[[34,23]],"locations":[["(/.f64 x (+.f64 x 1))",0.00390625,true],["(/.f64 (+.f64 x 1) (-.f64 x 1))",0.01171875,true],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))",2.658870357189796,true]],"time":7.93017578125,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 x (+.f64 x 1))","x","-inf",0.171142578125],["(/.f64 x (+.f64 x 1))","x","inf",0.278076171875],["(/.f64 x (+.f64 x 1))","x","0",0.181884765625],["(/.f64 (+.f64 x 1) (-.f64 x 1))","x","-inf",0.172119140625],["(/.f64 (+.f64 x 1) (-.f64 x 1))","x","inf",0.2060546875],["(/.f64 (+.f64 x 1) (-.f64 x 1))","x","0",0.201904296875],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","x","-inf",0.34814453125],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","x","inf",0.843017578125],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","x","0",0.3818359375]],"time":2.92578125,"type":"series"},{"count":[[3,225]],"egraph":[[2,3244,36,0.026956041],[1,195,36,0.003959416],[0,8,36,0.000233625]],"inputs":[["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))","(/.f64 (+.f64 x 1) (-.f64 x 1))","(/.f64 x (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x 1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (/.f64 1 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (/.f64 1 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x -1) (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2) (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (fma.f64 x x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2))) (neg.f64 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3))) (neg.f64 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2))) (neg.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (/.f64 (+.f64 x -1) (+.f64 x 1)) (fma.f64 -1 x -1)) (*.f64 (+.f64 x 1) (/.f64 (+.f64 x -1) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (+.f64 x -1) (+.f64 x 1)) (*.f64 (/.f64 (+.f64 x 1) x) 1)) (*.f64 (/.f64 (+.f64 x 1) x) (/.f64 (+.f64 x -1) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 x) (/.f64 (+.f64 x -1) (+.f64 x 1)) (neg.f64 (*.f64 (fma.f64 -1 x -1) 1))) (*.f64 (fma.f64 -1 x -1) (/.f64 (+.f64 x -1) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 x -1) (*.f64 (/.f64 (+.f64 x 1) x) (+.f64 x 1))) (*.f64 (/.f64 (+.f64 x 1) x) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (+.f64 x -1)) (*.f64 (fma.f64 -1 x -1) (+.f64 x 1))) (*.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (fma.f64 -1 x 1)) (*.f64 (+.f64 x 1) (fma.f64 -1 x -1))) (*.f64 (+.f64 x 1) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 -1 x 1) (*.f64 (/.f64 (+.f64 x 1) x) (fma.f64 -1 x -1))) (*.f64 (/.f64 (+.f64 x 1) x) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (fma.f64 -1 x 1)) (pow.f64 (fma.f64 -1 x -1) 2)) (*.f64 (fma.f64 -1 x -1) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 3)) (+.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (-.f64 (pow.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 2) (*.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 2)) (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (+.f64 x 1)) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x -1) (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2) (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1)))) (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 x (+.f64 x 1))) (+.f64 1 (expm1.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1)))) (+.f64 1 (expm1.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1)))) (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1)))) (pow.f64 (E.f64) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (E.f64) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x 1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x 1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x 1) (neg.f64 (/.f64 1 (+.f64 x -1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x 1)) 1 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x 1)) 1 (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1 (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1 (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 1 (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2) (cbrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (cbrt.f64 (/.f64 x (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 x (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) (neg.f64 (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (fma.f64 -1 x -1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (fma.f64 -1 x -1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -1 x -1) (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (/.f64 1 (fma.f64 x x -1)) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (/.f64 1 (fma.f64 x x -1)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (/.f64 1 (fma.f64 x x -1)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (+.f64 x -1)) (pow.f64 (+.f64 x 1) 2)) (/.f64 1 (fma.f64 x x -1)) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (/.f64 1 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (/.f64 1 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (/.f64 1 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3)) (/.f64 1 (pow.f64 (hypot.f64 (/.f64 x (+.f64 x 1)) (hypot.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) (sqrt.f64 (/.f64 (*.f64 x (+.f64 x 1)) (fma.f64 x x -1))))) 2)) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x 1)) x (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x 1)) x (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (+.f64 x 1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1)))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) 2) (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) -2) (/.f64 x (cbrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) -2) (/.f64 x (cbrt.f64 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) -1/2) (/.f64 x (sqrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) -1/2) (/.f64 x (sqrt.f64 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x 1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x 1)) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (/.f64 x (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x 1))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x 1))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x 1))) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x -1))) (+.f64 x 1) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (-.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) (+.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2)) (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) x) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) x) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (fma.f64 x x -1)) (+.f64 x -1) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (fma.f64 x x -1)) (+.f64 x -1) (*.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x 1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x 1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2) (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) (*.f64 (cbrt.f64 (+.f64 x 1)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) (*.f64 (sqrt.f64 (+.f64 x 1)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1 x -1) (/.f64 1 (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x 1)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x 1)) 1) (/.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) -2) (/.f64 (+.f64 x 1) (cbrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) (cbrt.f64 (pow.f64 (+.f64 x -1) 2))) (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (pow.f64 (+.f64 x -1) 2))) (/.f64 (sqrt.f64 (+.f64 x 1)) (cbrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -1/2) (/.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) (sqrt.f64 (+.f64 x -1))) (/.f64 (cbrt.f64 (+.f64 x 1)) (sqrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (fma.f64 x x -1)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x 1) (+.f64 (pow.f64 x 3) -1)) (+.f64 (fma.f64 x x 1) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x -1) (+.f64 x 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x -1) (+.f64 x 1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x 1) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x 1) (+.f64 x -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x 1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 x) (log.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 x) (log.f64 (+.f64 x -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (cbrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x 1)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) -2) (/.f64 x (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) -1/2) (/.f64 x (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x 1))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 x x -1)) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x 1) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x 1) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",39],["egg-rr",147]],"stop":[["node limit",1]],"time":62.55810546875,"type":"rewrite"},{"count":[[261,265]],"egraph":[[4,4981,429,0.025480708],[3,1732,429,0.012415958000000001],[2,589,432,0.004200375],[1,205,439,0.001294333],[0,64,466,0.000322875]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","-1","(-.f64 (*.f64 -2 x) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 x)) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 1 x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","1","(+.f64 1 (*.f64 2 (/.f64 1 x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (fma.f64 3 x 1) (*.f64 x x))","(fma.f64 3 x (fma.f64 x x 1))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(fma.f64 3 x (fma.f64 3 (pow.f64 x 3) (+.f64 1 (*.f64 x x))))","(fma.f64 3 x (fma.f64 3 (pow.f64 x 3) (fma.f64 x x 1)))","(fma.f64 3 (+.f64 x (pow.f64 x 3)) (fma.f64 x x 1))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x)))","(-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x))) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x)) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 x) (/.f64 -3 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 x) (/.f64 3 (pow.f64 x 3))))))","(+.f64 (/.f64 -1 (pow.f64 x 4)) (+.f64 (-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x))) (/.f64 -3 (pow.f64 x 3))))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x)) (-.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (-.f64 (/.f64 -3 x) (/.f64 1 (pow.f64 x 4)))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x)))","(-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x))) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x)) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 x) (/.f64 -3 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3)))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 x) (/.f64 3 (pow.f64 x 3))))))","(+.f64 (/.f64 -1 (pow.f64 x 4)) (+.f64 (-.f64 (/.f64 -3 x) (/.f64 1 (*.f64 x x))) (/.f64 -3 (pow.f64 x 3))))","(+.f64 (-.f64 (/.f64 -3 x) (/.f64 (/.f64 1 x) x)) (-.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (-.f64 (/.f64 -3 x) (/.f64 1 (pow.f64 x 4)))))","-1","(-.f64 (*.f64 -2 x) 1)","(fma.f64 -2 x -1)","(fma.f64 x -2 -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 x)) 1)","(+.f64 (*.f64 -2 (+.f64 (*.f64 x x) x)) -1)","(fma.f64 -2 (fma.f64 x x x) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 -2 (*.f64 x x) (*.f64 -2 (+.f64 x (pow.f64 x 3)))) -1)","(+.f64 -1 (*.f64 -2 (+.f64 (fma.f64 x x x) (pow.f64 x 3))))","(fma.f64 -2 (*.f64 x (+.f64 (fma.f64 x x 1) x)) -1)","(fma.f64 -2 (+.f64 x (*.f64 x (fma.f64 x x x))) -1)","(fma.f64 -2 (+.f64 (pow.f64 x 3) (fma.f64 x x x)) -1)","1","(+.f64 1 (*.f64 2 (/.f64 1 x)))","(+.f64 1 (/.f64 2 x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x))))","(+.f64 (/.f64 2 x) (+.f64 1 (/.f64 2 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (+.f64 1 (/.f64 2 x)) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 x) (+.f64 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))) 1))","(+.f64 (/.f64 2 x) (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3)))))","1","(+.f64 1 (*.f64 2 (/.f64 1 x)))","(+.f64 1 (/.f64 2 x))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x))))","(+.f64 (/.f64 2 x) (+.f64 1 (/.f64 2 (*.f64 x x))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (+.f64 1 (/.f64 2 x)) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 x) (+.f64 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))) 1))","(+.f64 (/.f64 2 x) (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3)))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(fma.f64 -1 (*.f64 x x) x)","(-.f64 x (*.f64 x x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(fma.f64 -1 (*.f64 x x) (+.f64 x (pow.f64 x 3)))","(+.f64 (pow.f64 x 3) (-.f64 x (*.f64 x x)))","(*.f64 x (-.f64 (fma.f64 x x 1) x))","(fma.f64 (*.f64 x x) (+.f64 x -1) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","(fma.f64 -1 (*.f64 x x) (fma.f64 -1 (pow.f64 x 4) (+.f64 x (pow.f64 x 3))))","(-.f64 (-.f64 (+.f64 x (pow.f64 x 3)) (pow.f64 x 4)) (*.f64 x x))","(-.f64 (+.f64 x (pow.f64 x 3)) (fma.f64 x x (pow.f64 x 4)))","(*.f64 (fma.f64 x x 1) (-.f64 x (*.f64 x x)))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x)))","(+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 (/.f64 1 x) x) (/.f64 -1 x)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x))) (/.f64 1 (pow.f64 x 3)))","(+.f64 1 (-.f64 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (/.f64 1 x))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) -1)))","(+.f64 (+.f64 1 (/.f64 (/.f64 1 x) x)) (+.f64 (/.f64 -1 x) (/.f64 -1 (pow.f64 x 3))))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x)))","(+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (/.f64 1 x)))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 (/.f64 1 x) x) (/.f64 -1 x)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x))) (/.f64 1 (pow.f64 x 3)))","(+.f64 1 (-.f64 (-.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (/.f64 1 x))) (/.f64 1 (pow.f64 x 3)))","(-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) -1)))","(+.f64 (+.f64 1 (/.f64 (/.f64 1 x) x)) (+.f64 (/.f64 -1 x) (/.f64 -1 (pow.f64 x 3))))"]],"stop":[["node limit",1]],"time":44.576904296875,"type":"simplify"},{"compiler":[[6319,4679]],"time":76.238037109375,"type":"eval"},{"alts":[["(fma.f64 (/.f64 1 (+.f64 x 1)) x (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","fresh",27.581988234853174],["(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","fresh",34.38317483761557],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","next",27.176962383602923],["(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","fresh",34.47656380954808]],"compiler":[[16,12],[21,18],[18,14],[10,7],[16,12],[21,18],[18,14],[10,7]],"count":[[266,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[265,4],"picked":[1,0]}],"min-error":[0.0078125],"time":70.73095703125,"type":"prune"},{"compiler":[[75,55]],"locations":[["(*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1))))",0.01171875,true],["(exp.f64 (/.f64 x (+.f64 x 1)))",0.015625,true],["(exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))",0.02734375,true],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))",2.666042708408843,true]],"time":21.43701171875,"type":"localize"},{"count":[[4,48]],"series":[["(*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1))))","x","-inf",0.343994140625],["(*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1))))","x","inf",0.381103515625],["(*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1))))","x","0",0.2900390625],["(exp.f64 (/.f64 x (+.f64 x 1)))","x","-inf",0.176025390625],["(exp.f64 (/.f64 x (+.f64 x 1)))","x","inf",0.22802734375],["(exp.f64 (/.f64 x (+.f64 x 1)))","x","0",0.194091796875],["(exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","x","-inf",0.208984375],["(exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","x","inf",0.494873046875],["(exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","x","0",0.2509765625],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","x","-inf",1.219970703125],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","x","inf",1.64404296875],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","x","0",1.283935546875]],"time":6.967041015625,"type":"series"},{"count":[[4,149]],"egraph":[[2,3693,64,0.028129542],[1,269,64,0.004862167000000001],[0,13,64,0.000358042]],"inputs":[["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","(exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","(exp.f64 (/.f64 x (+.f64 x 1)))","(*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))) (*.f64 1/3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (log.f64 (*.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) (*.f64 2 (*.f64 1/3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (+.f64 x 1))) (log.f64 (*.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (/.f64 x (+.f64 x 1)))) (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 2))) (*.f64 1/3 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))) (*.f64 1/2 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (exp.f64 (/.f64 x (+.f64 x 1))) (cbrt.f64 (exp.f64 (*.f64 2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (*.f64 1/3 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (exp.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (*.f64 1/2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 2) (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -1 x -1) (+.f64 x 1) (*.f64 (-.f64 x 1) x)) (*.f64 (-.f64 x 1) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 x 1) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) x)) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (fma.f64 -1 x -1)) (+.f64 x 1) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -1 x -1) (/.f64 (+.f64 x 1) x) (-.f64 x 1)) (*.f64 (-.f64 x 1) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 x 1) x) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) 1)) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (fma.f64 -1 x -1)) (/.f64 (+.f64 x 1) x) (*.f64 (-.f64 1 x) 1)) (*.f64 (-.f64 1 x) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 -1 x -1) 2) (*.f64 (-.f64 x 1) (neg.f64 x))) (*.f64 (-.f64 x 1) (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 -1 x -1) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) (neg.f64 x))) (*.f64 (/.f64 (-.f64 x 1) (fma.f64 -1 x -1)) (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 (fma.f64 -1 x -1)) (fma.f64 -1 x -1) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) 3) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (+.f64 (pow.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) 2) (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (*.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) 2) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (-.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -1 x -1) (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) 1 (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 x 1)) 1 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 2) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 2) (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2) (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 -1 x -1)) 2) (*.f64 (cbrt.f64 (fma.f64 -1 x -1)) (/.f64 -1 (-.f64 1 x))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (sqrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 -1 x -1)) (*.f64 (sqrt.f64 (fma.f64 -1 x -1)) (/.f64 -1 (-.f64 1 x))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (fma.f64 -1 x -1)) (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (fma.f64 -1 x -1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) (fma.f64 -1 x -1) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x 1)) x (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1 x -1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 -1 x -1)) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (fma.f64 -1 x -1)) 1) (/.f64 (sqrt.f64 (fma.f64 -1 x -1)) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x 1)) 2)) (/.f64 (fma.f64 -1 x -1) (cbrt.f64 (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1 x -1)) 2) (pow.f64 (cbrt.f64 (-.f64 x 1)) 2)) (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (fma.f64 -1 x -1)) (pow.f64 (cbrt.f64 (-.f64 x 1)) 2)) (/.f64 (sqrt.f64 (fma.f64 -1 x -1)) (cbrt.f64 (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (sqrt.f64 (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1 x -1)) 2) (sqrt.f64 (-.f64 x 1))) (/.f64 (cbrt.f64 (fma.f64 -1 x -1)) (sqrt.f64 (-.f64 x 1))) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 x (cbrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x 1))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 1 (sqrt.f64 x))) (/.f64 x (hypot.f64 1 (sqrt.f64 x))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (hypot.f64 1 (sqrt.f64 x))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (sqrt.f64 x))) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 -1 x -1) (fma.f64 x x -1)) (+.f64 x 1) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) x) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (fma.f64 x x -1)) (-.f64 x 1) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))) (cbrt.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (cbrt.f64 (exp.f64 (*.f64 2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))) (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (fma.f64 -1 x -1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 2)) (cbrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))) (sqrt.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (exp.f64 (*.f64 2 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1))))) (cbrt.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1))))))) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (/.f64 x (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 2) (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 x) (/.f64 1 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (*.f64 3 (/.f64 x (+.f64 x 1)))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x 1)))) (sqrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (/.f64 x (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (exp.f64 (*.f64 3 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (/.f64 x (+.f64 x 1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (cbrt.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))) (sqrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 2)) (cbrt.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 3) (exp.f64 (*.f64 3 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (exp.f64 (*.f64 3 (/.f64 x (+.f64 x 1)))) (pow.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)) (/.f64 x (+.f64 x 1))))))))"]],"rules":[["egg-rr",20],["egg-rr",23],["egg-rr",23],["egg-rr",83]],"stop":[["node limit",1]],"time":60.048095703125,"type":"rewrite"},{"count":[[197,210]],"egraph":[[2,2519,763,0.016577291],[1,1003,899,0.005648666],[0,242,1088,0.001821166]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 2) (pow.f64 (exp.f64 1) 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1)))) (exp.f64 1)))) (pow.f64 x 2)))))","(+.f64 (*.f64 3 x) (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 22/3 (exp.f64 1)) (+.f64 (*.f64 -1 (exp.f64 1)) (*.f64 1/6 (exp.f64 1))))) (exp.f64 1))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 3) (pow.f64 (exp.f64 1) 3))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1))))) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 2) (pow.f64 (exp.f64 1) 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1)))) (exp.f64 1)))) (pow.f64 x 2))))))","(log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))","(-.f64 (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (exp.f64 -1) (exp.f64 1))) (+.f64 (*.f64 -13/6 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -3 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 3) (*.f64 (pow.f64 (exp.f64 -1) 3) (pow.f64 (exp.f64 1) 3)))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2)))))) (pow.f64 x 3))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 3 (/.f64 1 x)))","(log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))","(-.f64 (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 3 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (exp.f64 -1) (exp.f64 1))) (+.f64 (*.f64 13/6 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 3) (*.f64 (pow.f64 (exp.f64 -1) 3) (pow.f64 (exp.f64 1) 3)))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2)))))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 3 (/.f64 1 x)))","(exp.f64 1)","(+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (exp.f64 1))","(+.f64 (*.f64 4 (*.f64 (exp.f64 1) (pow.f64 x 2))) (+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (exp.f64 1)))","(+.f64 (*.f64 4 (*.f64 (exp.f64 1) (pow.f64 x 2))) (+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (+.f64 (*.f64 22/3 (*.f64 (exp.f64 1) (pow.f64 x 3))) (exp.f64 1))))","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1)))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4))))))","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1)))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4))))))","1","(+.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x)))","(exp.f64 1)","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (exp.f64 1))","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1)))","(+.f64 (*.f64 -13/6 (/.f64 (exp.f64 1) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1))))","(exp.f64 1)","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (exp.f64 1))","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1)))","(+.f64 (*.f64 -13/6 (/.f64 (exp.f64 1) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1))))","(E.f64)","(+.f64 (E.f64) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x))","(+.f64 (E.f64) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (*.f64 2 (E.f64)))) (pow.f64 x 2)) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x)))","(+.f64 (E.f64) (+.f64 (*.f64 (+.f64 (*.f64 -1 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (+.f64 (*.f64 22/3 (E.f64)) (*.f64 1/6 (E.f64))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (*.f64 2 (E.f64)))) (pow.f64 x 2)) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x))))","(*.f64 (E.f64) (exp.f64 -1))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2)))))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 -13/6 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (*.f64 -3 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))))))))))","(*.f64 (E.f64) (exp.f64 -1))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (*.f64 (E.f64) (exp.f64 -1)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (E.f64) (exp.f64 -1))) (+.f64 (*.f64 13/6 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 3 (*.f64 (E.f64) (exp.f64 -1))))) (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 2) (pow.f64 (exp.f64 1) 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1)))) (exp.f64 1)))) (pow.f64 x 2)))))","(+.f64 (fma.f64 3 x 1) (*.f64 1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (*.f64 3 (E.f64)) 2) (pow.f64 (E.f64) 2)) (*.f64 2 (/.f64 (fma.f64 4 (E.f64) (*.f64 (E.f64) 3/2)) (E.f64)))) (*.f64 x x))))","(fma.f64 3 x (fma.f64 1/2 (*.f64 x (*.f64 x (-.f64 (/.f64 (*.f64 2 (*.f64 (E.f64) 11/2)) (E.f64)) (/.f64 (*.f64 9 (exp.f64 2)) (exp.f64 2))))) 1))","(fma.f64 (+.f64 (/.f64 (*.f64 -9 (exp.f64 2)) (exp.f64 2)) (/.f64 (*.f64 (E.f64) 11) (E.f64))) (*.f64 x (*.f64 x 1/2)) (fma.f64 3 x 1))","(+.f64 (*.f64 3 x) (+.f64 1 (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 22/3 (exp.f64 1)) (+.f64 (*.f64 -1 (exp.f64 1)) (*.f64 1/6 (exp.f64 1))))) (exp.f64 1))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 3) (pow.f64 (exp.f64 1) 3))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1))))) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 2 (exp.f64 1)) (exp.f64 1)) 2) (pow.f64 (exp.f64 1) 2))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (exp.f64 1)) (+.f64 (*.f64 -1/2 (exp.f64 1)) (*.f64 2 (exp.f64 1)))) (exp.f64 1)))) (pow.f64 x 2))))))","(+.f64 (fma.f64 3 x 1) (fma.f64 1/6 (*.f64 (fma.f64 6 (/.f64 (fma.f64 4 (E.f64) (fma.f64 22/3 (E.f64) (*.f64 (E.f64) -5/6))) (E.f64)) (fma.f64 2 (/.f64 (pow.f64 (*.f64 3 (E.f64)) 3) (pow.f64 (E.f64) 3)) (*.f64 -6 (/.f64 (*.f64 (*.f64 3 (E.f64)) (fma.f64 4 (E.f64) (*.f64 (E.f64) 3/2))) (pow.f64 (E.f64) 2))))) (pow.f64 x 3)) (*.f64 1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (*.f64 3 (E.f64)) 2) (pow.f64 (E.f64) 2)) (*.f64 2 (/.f64 (fma.f64 4 (E.f64) (*.f64 (E.f64) 3/2)) (E.f64)))) (*.f64 x x)))))","(+.f64 (fma.f64 1/6 (*.f64 (fma.f64 6 (/.f64 (-.f64 (*.f64 (E.f64) 23/2) (E.f64)) (E.f64)) (fma.f64 2 (/.f64 (*.f64 27 (pow.f64 (E.f64) 3)) (pow.f64 (E.f64) 3)) (/.f64 (*.f64 -6 (*.f64 (*.f64 3 (E.f64)) (*.f64 (E.f64) 11/2))) (exp.f64 2)))) (pow.f64 x 3)) (*.f64 1/2 (*.f64 x (*.f64 x (-.f64 (/.f64 (*.f64 2 (*.f64 (E.f64) 11/2)) (E.f64)) (/.f64 (*.f64 9 (exp.f64 2)) (exp.f64 2))))))) (fma.f64 3 x 1))","(fma.f64 3 x (fma.f64 1/2 (*.f64 x (*.f64 x (+.f64 (/.f64 (*.f64 -9 (exp.f64 2)) (exp.f64 2)) (/.f64 (*.f64 (E.f64) 11) (E.f64))))) (fma.f64 1/6 (*.f64 (+.f64 (/.f64 (*.f64 -18 (*.f64 (exp.f64 2) 11/2)) (exp.f64 2)) (fma.f64 6 (/.f64 (*.f64 (E.f64) 21/2) (E.f64)) (/.f64 (*.f64 54 (exp.f64 3)) (exp.f64 3)))) (pow.f64 x 3)) 1)))","(log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))","0","(-.f64 (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (/.f64 1 x)))","(+.f64 0 (/.f64 -3 x))","(/.f64 -3 x)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 3 (/.f64 1 x)))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 7 (/.f64 -9 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2)))) (*.f64 x x)) 0) (/.f64 -3 x))","(-.f64 (/.f64 -1 (*.f64 x x)) (/.f64 3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 2/3 (*.f64 (exp.f64 -1) (exp.f64 1))) (+.f64 (*.f64 -13/6 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -3 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 3) (*.f64 (pow.f64 (exp.f64 -1) 3) (pow.f64 (exp.f64 1) 3)))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 -2 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2)))))) (pow.f64 x 3))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 3 (/.f64 1 x)))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 7 (/.f64 -9 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2)))) (*.f64 x x)) (fma.f64 1/6 (/.f64 (+.f64 -27 (+.f64 (/.f64 -54 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (exp.f64 -1) 3))) (/.f64 63 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2))))) (pow.f64 x 3)) 0)) (/.f64 -3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (/.f64 -54 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (exp.f64 -1) 3))) 36) (pow.f64 x 3))) (/.f64 -3 x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -3 x)))","(log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))","0","(-.f64 (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (/.f64 1 x)))","(+.f64 0 (/.f64 -3 x))","(/.f64 -3 x)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 3 (/.f64 1 x)))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 7 (/.f64 -9 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2)))) (*.f64 x x)) 0) (/.f64 -3 x))","(-.f64 (/.f64 -1 (*.f64 x x)) (/.f64 3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(-.f64 (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (exp.f64 -1) (exp.f64 1))) (+.f64 (*.f64 13/6 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 3 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 3) (*.f64 (pow.f64 (exp.f64 -1) 3) (pow.f64 (exp.f64 1) 3)))) (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2)))))) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3/2 (*.f64 (exp.f64 -1) (exp.f64 1))) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 (exp.f64 -1) (exp.f64 1)))) (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 (exp.f64 -1) (exp.f64 1)) (*.f64 2 (*.f64 (exp.f64 -1) (exp.f64 1)))) 2) (*.f64 (pow.f64 (exp.f64 -1) 2) (pow.f64 (exp.f64 1) 2))))) (pow.f64 x 2))) (log.f64 (*.f64 (exp.f64 -1) (exp.f64 1))))) (*.f64 3 (/.f64 1 x)))","(+.f64 (fma.f64 1/2 (/.f64 (+.f64 7 (/.f64 -9 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2)))) (*.f64 x x)) (fma.f64 1/6 (/.f64 (+.f64 -27 (+.f64 (/.f64 -54 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (exp.f64 -1) 3))) (/.f64 63 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (exp.f64 -1) 2))))) (pow.f64 x 3)) 0)) (/.f64 -3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (/.f64 -54 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (exp.f64 -1) 3))) 36) (pow.f64 x 3))) (/.f64 -3 x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -3 x)))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (exp.f64 1))","(fma.f64 2 (*.f64 x (E.f64)) (E.f64))","(fma.f64 (E.f64) (*.f64 2 x) (E.f64))","(+.f64 (*.f64 4 (*.f64 (exp.f64 1) (pow.f64 x 2))) (+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (exp.f64 1)))","(fma.f64 4 (*.f64 (E.f64) (*.f64 x x)) (fma.f64 2 (*.f64 x (E.f64)) (E.f64)))","(fma.f64 (E.f64) (*.f64 2 x) (fma.f64 (E.f64) (*.f64 x (*.f64 x 4)) (E.f64)))","(+.f64 (*.f64 4 (*.f64 (exp.f64 1) (pow.f64 x 2))) (+.f64 (*.f64 2 (*.f64 (exp.f64 1) x)) (+.f64 (*.f64 22/3 (*.f64 (exp.f64 1) (pow.f64 x 3))) (exp.f64 1))))","(fma.f64 4 (*.f64 (E.f64) (*.f64 x x)) (fma.f64 2 (*.f64 x (E.f64)) (fma.f64 22/3 (*.f64 (E.f64) (pow.f64 x 3)) (E.f64))))","(+.f64 (fma.f64 (E.f64) (*.f64 22/3 (pow.f64 x 3)) (E.f64)) (*.f64 (E.f64) (+.f64 (*.f64 2 x) (*.f64 4 (*.f64 x x)))))","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1))","(fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1)))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1)))","(+.f64 (exp.f64 -1) (*.f64 (/.f64 (exp.f64 -1) x) (+.f64 -2 (/.f64 2/3 (*.f64 x x)))))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4))))))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (+.f64 (fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1)) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)))))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (exp.f64 -1) x) (fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)) (exp.f64 -1))))","(+.f64 (fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)) (exp.f64 -1)) (*.f64 (/.f64 (exp.f64 -1) x) (+.f64 -2 (/.f64 2/3 (*.f64 x x)))))","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1))","(fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (exp.f64 -1)))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1)))","(+.f64 (exp.f64 -1) (*.f64 (/.f64 (exp.f64 -1) x) (+.f64 -2 (/.f64 2/3 (*.f64 x x)))))","(+.f64 (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (exp.f64 -1) x)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4))))))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (+.f64 (fma.f64 -2 (/.f64 (exp.f64 -1) x) (exp.f64 -1)) (*.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)))))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (exp.f64 -1) x) (fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)) (exp.f64 -1))))","(+.f64 (fma.f64 2/3 (/.f64 (exp.f64 -1) (pow.f64 x 4)) (exp.f64 -1)) (*.f64 (/.f64 (exp.f64 -1) x) (+.f64 -2 (/.f64 2/3 (*.f64 x x)))))","1","(+.f64 1 x)","(+.f64 x 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) x))","(+.f64 x (fma.f64 x (*.f64 x -1/2) 1))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) x)))","(fma.f64 1/6 (pow.f64 x 3) (+.f64 1 (fma.f64 -1/2 (*.f64 x x) x)))","(+.f64 (fma.f64 -1/2 (*.f64 x x) x) (fma.f64 1/6 (pow.f64 x 3) 1))","(+.f64 (fma.f64 1/6 (pow.f64 x 3) (fma.f64 x (*.f64 x -1/2) x)) 1)","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (exp.f64 1))","(fma.f64 -1 (/.f64 (E.f64) x) (E.f64))","(-.f64 (E.f64) (/.f64 (E.f64) x))","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1)))","(fma.f64 -1 (/.f64 (E.f64) x) (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)))","(-.f64 (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)) (/.f64 (E.f64) x))","(+.f64 (E.f64) (*.f64 (/.f64 (E.f64) x) (+.f64 (/.f64 3/2 x) -1)))","(+.f64 (*.f64 -13/6 (/.f64 (exp.f64 1) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1))))","(fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (E.f64) x) (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64))))","(fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (-.f64 (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)) (/.f64 (E.f64) x)))","(+.f64 (fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (*.f64 (/.f64 (E.f64) x) (+.f64 (/.f64 3/2 x) -1))) (E.f64))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (exp.f64 1))","(fma.f64 -1 (/.f64 (E.f64) x) (E.f64))","(-.f64 (E.f64) (/.f64 (E.f64) x))","(+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1)))","(fma.f64 -1 (/.f64 (E.f64) x) (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)))","(-.f64 (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)) (/.f64 (E.f64) x))","(+.f64 (E.f64) (*.f64 (/.f64 (E.f64) x) (+.f64 (/.f64 3/2 x) -1)))","(+.f64 (*.f64 -13/6 (/.f64 (exp.f64 1) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (exp.f64 1) x)) (+.f64 (*.f64 3/2 (/.f64 (exp.f64 1) (pow.f64 x 2))) (exp.f64 1))))","(fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (E.f64) x) (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64))))","(fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (-.f64 (fma.f64 3/2 (/.f64 (E.f64) (*.f64 x x)) (E.f64)) (/.f64 (E.f64) x)))","(+.f64 (fma.f64 -13/6 (/.f64 (E.f64) (pow.f64 x 3)) (*.f64 (/.f64 (E.f64) x) (+.f64 (/.f64 3/2 x) -1))) (E.f64))","(E.f64)","(+.f64 (E.f64) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x))","(+.f64 (E.f64) (*.f64 x (*.f64 3 (E.f64))))","(fma.f64 x (*.f64 3 (E.f64)) (E.f64))","(*.f64 (fma.f64 3 x 1) (E.f64))","(+.f64 (E.f64) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (*.f64 2 (E.f64)))) (pow.f64 x 2)) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x)))","(+.f64 (E.f64) (fma.f64 (fma.f64 -1/2 (E.f64) (*.f64 (E.f64) 6)) (*.f64 x x) (*.f64 x (*.f64 3 (E.f64)))))","(+.f64 (*.f64 (*.f64 (E.f64) 11/2) (*.f64 x x)) (fma.f64 x (*.f64 3 (E.f64)) (E.f64)))","(fma.f64 x (*.f64 x (*.f64 (E.f64) 11/2)) (*.f64 (fma.f64 3 x 1) (E.f64)))","(+.f64 (E.f64) (+.f64 (*.f64 (+.f64 (*.f64 -1 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (+.f64 (*.f64 22/3 (E.f64)) (*.f64 1/6 (E.f64))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (E.f64)) (+.f64 (*.f64 4 (E.f64)) (*.f64 2 (E.f64)))) (pow.f64 x 2)) (*.f64 (+.f64 (E.f64) (*.f64 2 (E.f64))) x))))","(+.f64 (E.f64) (fma.f64 (fma.f64 -1 (E.f64) (fma.f64 4 (E.f64) (*.f64 (E.f64) 15/2))) (pow.f64 x 3) (fma.f64 (fma.f64 -1/2 (E.f64) (*.f64 (E.f64) 6)) (*.f64 x x) (*.f64 x (*.f64 3 (E.f64))))))","(+.f64 (E.f64) (fma.f64 (pow.f64 x 3) (-.f64 (*.f64 (E.f64) 23/2) (E.f64)) (fma.f64 x (*.f64 3 (E.f64)) (*.f64 (*.f64 (E.f64) 11/2) (*.f64 x x)))))","(fma.f64 (pow.f64 x 3) (*.f64 (E.f64) 21/2) (fma.f64 x (*.f64 x (*.f64 (E.f64) 11/2)) (*.f64 (fma.f64 3 x 1) (E.f64))))","(*.f64 (E.f64) (exp.f64 -1))","1","(+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x))))","(+.f64 (/.f64 -2 x) (+.f64 1 (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 -2 x)))","(+.f64 1 (/.f64 -3 x))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2)))))))","(+.f64 (/.f64 3/2 (*.f64 x x)) (+.f64 (/.f64 -2 x) (+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 2 (*.f64 x x))))))","(+.f64 (/.f64 -2 x) (+.f64 (+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 2 (*.f64 x x)))) (/.f64 3/2 (*.f64 x x))))","(+.f64 (+.f64 1 (/.f64 -3 x)) (*.f64 (/.f64 1 (*.f64 x x)) 7/2))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 -13/6 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) x)) (+.f64 (*.f64 2/3 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (*.f64 -3 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 3))))))))))","(+.f64 (/.f64 3/2 (*.f64 x x)) (+.f64 (/.f64 -2 x) (+.f64 (/.f64 -13/6 (pow.f64 x 3)) (+.f64 1 (+.f64 (/.f64 -1 x) (+.f64 (/.f64 2/3 (pow.f64 x 3)) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 -3 (pow.f64 x 3)))))))))","(+.f64 (/.f64 3/2 (*.f64 x x)) (+.f64 (+.f64 (/.f64 -1 x) (+.f64 (+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 2/3 (pow.f64 x 3)))) 1)) (+.f64 (/.f64 -2 x) (/.f64 -13/6 (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 3/2 x) x) (+.f64 (/.f64 -13/6 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 -1 x) (+.f64 (+.f64 (/.f64 2 (*.f64 x x)) (*.f64 (/.f64 1 (pow.f64 x 3)) -7/3)) 1)) (/.f64 -2 x))))","(*.f64 (E.f64) (exp.f64 -1))","1","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (*.f64 (E.f64) (exp.f64 -1)))","(+.f64 (/.f64 -2 x) (+.f64 1 (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 -2 x)))","(+.f64 1 (/.f64 -3 x))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))))))","(+.f64 (/.f64 3/2 (*.f64 x x)) (+.f64 (/.f64 -2 x) (+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 2 (*.f64 x x))))))","(+.f64 (/.f64 -2 x) (+.f64 (+.f64 1 (+.f64 (/.f64 -1 x) (/.f64 2 (*.f64 x x)))) (/.f64 3/2 (*.f64 x x))))","(+.f64 (+.f64 1 (/.f64 -3 x)) (*.f64 (/.f64 1 (*.f64 x x)) 7/2))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 (E.f64) (exp.f64 -1))) x)) (+.f64 (*.f64 (E.f64) (exp.f64 -1)) (+.f64 (*.f64 2 (/.f64 (*.f64 (E.f64) (exp.f64 -1)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2/3 (*.f64 (E.f64) (exp.f64 -1))) (+.f64 (*.f64 13/6 (*.f64 (E.f64) (exp.f64 -1))) (*.f64 3 (*.f64 (E.f64) (exp.f64 -1))))) (pow.f64 x 3)))))))","(+.f64 (/.f64 3/2 (*.f64 x x)) (+.f64 (/.f64 -3 x) (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 -9/2 (pow.f64 x 3))))))","(+.f64 (/.f64 -3 x) (+.f64 (+.f64 (+.f64 1 (/.f64 2 (*.f64 x x))) (/.f64 -9/2 (pow.f64 x 3))) (/.f64 3/2 (*.f64 x x))))","(+.f64 (+.f64 (+.f64 1 (/.f64 -3 x)) (*.f64 (/.f64 1 (*.f64 x x)) 7/2)) (/.f64 -9/2 (pow.f64 x 3)))"]],"stop":[["node limit",1]],"time":38.89501953125,"type":"simplify"},{"compiler":[[5276,4205]],"time":67.60888671875,"type":"eval"},{"alts":[["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","done",27.176962383602923],["(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","fresh",34.38317483761557],["(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","fresh",34.47656380954808],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","next",27.581988234853174]],"compiler":[[18,14],[21,18],[10,7],[16,12],[21,18],[10,7],[16,12]],"count":[[214,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[210,1],"picked":[1,1]}],"min-error":[0.0078125],"time":45.821044921875,"type":"prune"},{"compiler":[[42,31]],"locations":[["(/.f64 (fma.f64 -1 x -1) (-.f64 x 1))",0.01171875,true],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))",27.671993566738323,true]],"time":10.60498046875,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (fma.f64 -1 x -1) (-.f64 x 1))","x","-inf",0.1669921875],["(/.f64 (fma.f64 -1 x -1) (-.f64 x 1))","x","inf",0.198974609375],["(/.f64 (fma.f64 -1 x -1) (-.f64 x 1))","x","0",0.208984375],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","x","-inf",0.205078125],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","x","inf",0.23291015625],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","x","0",0.23291015625]],"time":1.35595703125,"type":"series"},{"count":[[2,80]],"egraph":[[2,2879,31,0.025244417],[1,215,31,0.003864584],[0,10,32,0.000296417]],"inputs":[["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","(/.f64 (fma.f64 -1 x -1) (-.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (+.f64 x 1)) 1) (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 2) (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 3) (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 3)) (+.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (-.f64 (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 2) (*.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 2)) (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 x (+.f64 x 1))) (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) (/.f64 x (+.f64 x 1)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -1 -1) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 2) (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1 -1)) 2) (*.f64 (cbrt.f64 (fma.f64 x -1 -1)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) (sqrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x -1 -1)) (*.f64 (sqrt.f64 (fma.f64 x -1 -1)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x -1 -1)) (/.f64 1 (fma.f64 x -1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) (fma.f64 x -1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1 -1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -1 -1)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -1 -1)) 1) (/.f64 (sqrt.f64 (fma.f64 x -1 -1)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) -2) (/.f64 (fma.f64 x -1 -1) (cbrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1 -1)) 2) (pow.f64 (cbrt.f64 (+.f64 x -1)) 2)) (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -1 -1)) (pow.f64 (cbrt.f64 (+.f64 x -1)) 2)) (/.f64 (sqrt.f64 (fma.f64 x -1 -1)) (cbrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -1/2) (/.f64 (fma.f64 x -1 -1) (sqrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1 -1)) 2) (sqrt.f64 (+.f64 x -1))) (/.f64 (cbrt.f64 (fma.f64 x -1 -1)) (sqrt.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 (pow.f64 x 3) -1)) (+.f64 (fma.f64 x x 1) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -1 -1) (fma.f64 x x -1)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x -1) (fma.f64 x -1 -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 x -1 -1) 3) (pow.f64 (+.f64 x -1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x -1) (fma.f64 x -1 -1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x -1 -1) (fma.f64 x -1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -1 -1) 3) (pow.f64 (+.f64 x -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x -1) (fma.f64 x -1 -1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -1 -1) (+.f64 x -1))) 1) 1))))))"]],"rules":[["egg-rr",46],["egg-rr",34]],"stop":[["node limit",1]],"time":47.301025390625,"type":"rewrite"},{"count":[[104,107]],"egraph":[[4,4212,296,0.025690666],[3,1598,299,0.0111],[2,510,299,0.003721542],[1,165,306,0.001094458],[0,51,334,0.000262625]],"inputs":[["1","(+.f64 (*.f64 3 x) 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 3 x) 1)","(fma.f64 3 x 1)","(+.f64 (*.f64 3 x) (+.f64 1 (pow.f64 x 2)))","(+.f64 (fma.f64 3 x 1) (*.f64 x x))","(fma.f64 3 x (fma.f64 x x 1))","(+.f64 (*.f64 3 x) (+.f64 (*.f64 3 (pow.f64 x 3)) (+.f64 1 (pow.f64 x 2))))","(fma.f64 3 x (fma.f64 3 (pow.f64 x 3) (+.f64 1 (*.f64 x x))))","(fma.f64 3 x (fma.f64 3 (pow.f64 x 3) (fma.f64 x x 1)))","(fma.f64 3 (+.f64 x (pow.f64 x 3)) (fma.f64 x x 1))","(*.f64 (fma.f64 3 x 1) (fma.f64 x x 1))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (/.f64 3 x)))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 x) (/.f64 3 (pow.f64 x 3))))))","(+.f64 (/.f64 -1 (pow.f64 x 4)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (-.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 4))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (/.f64 3 x)))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3)))","(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (*.f64 3 (/.f64 1 x))))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 x) (/.f64 3 (pow.f64 x 3))))))","(+.f64 (/.f64 -1 (pow.f64 x 4)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 -3 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (-.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (pow.f64 x 4))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(fma.f64 x 2 1)","(+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(fma.f64 2 (*.f64 x x) (fma.f64 2 x 1))","(fma.f64 2 (*.f64 x x) (fma.f64 x 2 1))","(fma.f64 2 (fma.f64 x x x) 1)","(+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 2 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1)))","(fma.f64 2 (pow.f64 x 3) (fma.f64 2 (*.f64 x x) (fma.f64 2 x 1)))","(fma.f64 2 (pow.f64 x 3) (fma.f64 2 (*.f64 x x) (fma.f64 x 2 1)))","(fma.f64 2 (pow.f64 x 3) (fma.f64 2 (fma.f64 x x x) 1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (/.f64 2 x)))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 -1 (neg.f64 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x)))))","(-.f64 -1 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x))))","(+.f64 -1 (+.f64 (/.f64 -2 x) (/.f64 (/.f64 -2 x) x)))","(+.f64 -1 (-.f64 (/.f64 -2 x) (/.f64 2 (*.f64 x x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))))))","(-.f64 -1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 -1 (-.f64 (/.f64 -2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x)))))","(+.f64 (-.f64 (/.f64 -2 x) (/.f64 2 (*.f64 x x))) (-.f64 -1 (/.f64 2 (pow.f64 x 3))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (/.f64 2 x)))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 -1 (neg.f64 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x)))))","(-.f64 -1 (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x))))","(+.f64 -1 (+.f64 (/.f64 -2 x) (/.f64 (/.f64 -2 x) x)))","(+.f64 -1 (-.f64 (/.f64 -2 x) (/.f64 2 (*.f64 x x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 2))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))))))","(-.f64 -1 (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))))","(+.f64 -1 (-.f64 (/.f64 -2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (*.f64 x x)))))","(+.f64 (-.f64 (/.f64 -2 x) (/.f64 2 (*.f64 x x))) (-.f64 -1 (/.f64 2 (pow.f64 x 3))))"]],"stop":[["node limit",1]],"time":40.696044921875,"type":"simplify"},{"compiler":[[2078,1605]],"time":28.087890625,"type":"eval"},{"alts":[["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","done",27.176962383602923],["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","done",27.581988234853174],["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","next",34.28942483761557]],"compiler":[[18,14],[16,12],[16,12],[16,12]],"count":[[111,3]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[107,1],"picked":[1,1]}],"min-error":[0.0078125],"time":18.2841796875,"type":"prune"},{"compiler":[[50,32]],"locations":[["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))",0.015625,true],["(/.f64 -3 (pow.f64 x 3))",0.2825404576756786,true],["(/.f64 -1 (*.f64 x x))",0.5119172693234718,true],["(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))",7.792968750000001,true]],"time":11.85693359375,"type":"localize"},{"count":[[4,36]],"series":[["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","x","-inf",0.199951171875],["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","x","inf",0.23095703125],["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","x","0",0.196044921875],["(/.f64 -3 (pow.f64 x 3))","x","-inf",0.205078125],["(/.f64 -3 (pow.f64 x 3))","x","inf",0.182861328125],["(/.f64 -3 (pow.f64 x 3))","x","0",0.376953125],["(/.f64 -1 (*.f64 x x))","x","-inf",0.139892578125],["(/.f64 -1 (*.f64 x x))","x","inf",0.203125],["(/.f64 -1 (*.f64 x x))","x","0",0.359130859375],["(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","x","-inf",0.205078125],["(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","x","inf",0.2998046875],["(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","x","0",1.02685546875]],"time":3.77587890625,"type":"series"},{"count":[[4,230]],"egraph":[[2,4354,44,0.031764125],[1,288,45,0.0058024999999999995],[0,12,52,0.000398875]],"inputs":[["(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 -1 (*.f64 x x))","(/.f64 -3 (pow.f64 x 3))","(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 9 (pow.f64 x 6)) (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))) (/.f64 (/.f64 1 (pow.f64 x 4)) (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 2) (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (/.f64 1 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) (/.f64 1 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 x 5) (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (pow.f64 x 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (+.f64 (/.f64 1 (pow.f64 x 4)) (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 3 (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3)))) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6)))) (neg.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4)))) (neg.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (*.f64 x x) (*.f64 (neg.f64 (pow.f64 x 3)) -1)) (*.f64 (neg.f64 (pow.f64 x 3)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (*.f64 (*.f64 (pow.f64 x 3) -1/3) -1)) (*.f64 (*.f64 (pow.f64 x 3) -1/3) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (*.f64 x (neg.f64 x)) (pow.f64 x 3)) (*.f64 (pow.f64 x 3) (*.f64 x (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (*.f64 x (neg.f64 x)) (*.f64 (neg.f64 (pow.f64 x 3)) 1)) (*.f64 (neg.f64 (pow.f64 x 3)) (*.f64 x (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (neg.f64 x) (*.f64 (*.f64 (pow.f64 x 3) -1/3) 1)) (*.f64 (*.f64 (pow.f64 x 3) -1/3) (*.f64 x (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (*.f64 (*.f64 x x) -1) (pow.f64 x 3)) (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (*.f64 (*.f64 x x) -1) (*.f64 (neg.f64 (pow.f64 x 3)) 1)) (*.f64 (neg.f64 (pow.f64 x 3)) (*.f64 (*.f64 x x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x x) -1 (*.f64 (*.f64 (pow.f64 x 3) -1/3) 1)) (*.f64 (*.f64 (pow.f64 x 3) -1/3) (*.f64 (*.f64 x x) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 x (*.f64 (pow.f64 x 3) (/.f64 -1 x))) (pow.f64 x 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 x (*.f64 (neg.f64 (pow.f64 x 3)) (/.f64 -1 x))) (*.f64 (neg.f64 (pow.f64 x 3)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (*.f64 (*.f64 (pow.f64 x 3) -1/3) (/.f64 -1 x))) (*.f64 (*.f64 (pow.f64 x 3) -1/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (*.f64 (*.f64 x (neg.f64 x)) -3)) (*.f64 (*.f64 x (neg.f64 x)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) -1) -3)) (*.f64 (*.f64 (*.f64 x x) -1) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 -1 x) (pow.f64 x 3) (*.f64 x -3)) (pow.f64 x 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (neg.f64 (pow.f64 x 3)) (*.f64 (*.f64 x x) 3)) (*.f64 (*.f64 x x) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 3) -1 (*.f64 (*.f64 x (neg.f64 x)) 3)) (*.f64 (*.f64 x (neg.f64 x)) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 3) -1 (*.f64 (*.f64 (*.f64 x x) -1) 3)) (*.f64 (*.f64 (*.f64 x x) -1) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 -1 x) (neg.f64 (pow.f64 x 3)) (*.f64 x 3)) (*.f64 x (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (*.f64 (pow.f64 x 3) -1/3) (*.f64 x x)) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 3) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 3) -1/3 (*.f64 (*.f64 x (neg.f64 x)) 1)) (*.f64 (*.f64 x (neg.f64 x)) (*.f64 (pow.f64 x 3) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 3) -1/3 (*.f64 (*.f64 (*.f64 x x) -1) 1)) (*.f64 (*.f64 (*.f64 x x) -1) (*.f64 (pow.f64 x 3) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 -1 x) (*.f64 (pow.f64 x 3) -1/3) x) (*.f64 x (*.f64 (pow.f64 x 3) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 9 (pow.f64 x 6))) (-.f64 (neg.f64 (pow.f64 x -2)) (*.f64 -3 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (pow.f64 x 3)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -3 (pow.f64 x -3)))) (exp.f64 (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3)) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -3 (pow.f64 x -3)))) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2)))) (pow.f64 (exp.f64 -3) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 x -2))) (+.f64 1 (expm1.f64 (*.f64 -3 (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2)))) (+.f64 1 (expm1.f64 (*.f64 -3 (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (/.f64 1 (neg.f64 (pow.f64 x 3))) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 (pow.f64 x -3)) 1 (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 x -2) (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 x -2)) 1 (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -3 (pow.f64 x -3)) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 x -2)) (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x -2))) (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (cbrt.f64 (neg.f64 (pow.f64 x -2))) (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 -3) x) (pow.f64 (/.f64 (cbrt.f64 -3) x) 2) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (cbrt.f64 -3) x) 2) (/.f64 (cbrt.f64 -3) x) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 -1) x) (/.f64 (sqrt.f64 -1) x) (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -2) -1 (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -3) -3 (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 x) (/.f64 1 x) (*.f64 -3 (pow.f64 x -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (pow.f64 x -2)))) (cbrt.f64 (exp.f64 (neg.f64 (pow.f64 x -2)))))) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (neg.f64 (pow.f64 x -2))))) (log.f64 (sqrt.f64 (exp.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (neg.f64 (pow.f64 x -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 x -2))) (cbrt.f64 (/.f64 1 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (cbrt.f64 (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 -1) x) (/.f64 (sqrt.f64 -1) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 x -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (pow.f64 x -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 -1) x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (pow.f64 x 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 -1 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (neg.f64 (pow.f64 x -2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3))) (cbrt.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -3 (pow.f64 x -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (pow.f64 x -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (/.f64 1 (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -3 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 -3) x) (pow.f64 (/.f64 (cbrt.f64 -3) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 -3) x) 2) (/.f64 (cbrt.f64 -3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -3) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -3 (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 -3) x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -27 (pow.f64 (pow.f64 x -3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) -1/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 9 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -3) (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -3 (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 -27 (pow.f64 (pow.f64 x -3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -3 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -3 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -3 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -3 (pow.f64 x -3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 9 (*.f64 x x)) (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))) (/.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2) (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) 2) (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 -3 x) 3) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3)) (/.f64 1 (fma.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)) (/.f64 9 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 9 (*.f64 x x)) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2)) (/.f64 1 (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)) (/.f64 9 (*.f64 x x))) (+.f64 (pow.f64 (/.f64 -3 x) 3) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (-.f64 (/.f64 9 (*.f64 x x)) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 -3 x) 3) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3)) (fma.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)) (/.f64 9 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 -3 x) 3) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3)) (+.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2) (-.f64 (/.f64 9 (*.f64 x x)) (*.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 9 (*.f64 x x)) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2)) (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 -3 x) 3) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 3))) (neg.f64 (fma.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)) (/.f64 9 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 9 (*.f64 x x)) (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2))) (neg.f64 (-.f64 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) x (*.f64 (pow.f64 x 5) -3)) (pow.f64 x 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) x (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) -3)) (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) x (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) -3)) (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (neg.f64 x) (*.f64 (pow.f64 x 5) 3)) (*.f64 (pow.f64 x 5) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (neg.f64 x) (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) 3)) (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) (neg.f64 x) (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) 3)) (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (*.f64 x -1/3) (*.f64 (pow.f64 x 5) 1)) (*.f64 (pow.f64 x 5) (*.f64 x -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (*.f64 x -1/3) (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) 1)) (*.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (*.f64 x -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) (*.f64 x -1/3) (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) 1)) (*.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (*.f64 x -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (pow.f64 x 5) (*.f64 x (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))))) (pow.f64 x 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (pow.f64 x 5) (*.f64 (neg.f64 x) (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))))) (*.f64 (neg.f64 x) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 5) (*.f64 (*.f64 x -1/3) (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))))) (*.f64 (*.f64 x -1/3) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (*.f64 x (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))))) (*.f64 x (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (*.f64 (neg.f64 x) (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))))) (*.f64 (neg.f64 x) (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5)))) (*.f64 (*.f64 x -1/3) (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))))) (*.f64 (*.f64 x -1/3) (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -3 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (*.f64 x (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))))) (*.f64 x (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (*.f64 (neg.f64 x) (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))))) (*.f64 (neg.f64 x) (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2)) (*.f64 (*.f64 x -1/3) (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))))) (*.f64 (*.f64 x -1/3) (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) 3) (/.f64 -1 (pow.f64 x 6))) (fma.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (-.f64 (/.f64 1 (pow.f64 x 4)) (*.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2) (/.f64 9 (*.f64 x x))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (/.f64 1 (pow.f64 x 4))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 x -2))) (exp.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2)))) (exp.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 x -2))) (*.f64 (exp.f64 (/.f64 -3 x)) (pow.f64 (exp.f64 -3) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2)))) (*.f64 (exp.f64 (/.f64 -3 x)) (pow.f64 (exp.f64 -3) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))) (exp.f64 (/.f64 -3 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (+.f64 1 (expm1.f64 (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))) (+.f64 1 (expm1.f64 (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -3 x))) (exp.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -3 x)) (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -3 x))) (+.f64 1 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (exp.f64 (/.f64 -3 x)) (pow.f64 (exp.f64 -3) (pow.f64 x -3))) (exp.f64 (neg.f64 (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (exp.f64 (/.f64 -3 x)) (pow.f64 (exp.f64 -3) (pow.f64 x -3))) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (pow.f64 x -3) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (/.f64 1 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 (+.f64 (/.f64 1 x) (pow.f64 x -3)) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (/.f64 -1 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 (/.f64 1 (neg.f64 (pow.f64 x 3))) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -3 (pow.f64 x -3)) 1 (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 x -2) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 x -2)) 1 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 1 (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -3 x) 1 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -3 (pow.f64 x -3)) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 x -2)) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -3 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -3 x)) (cbrt.f64 (/.f64 9 (*.f64 x x))) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 9 (*.f64 x x))) (cbrt.f64 (/.f64 -3 x)) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x -2))) (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (cbrt.f64 (neg.f64 (pow.f64 x -2))) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 -3) x) (pow.f64 (/.f64 (cbrt.f64 -3) x) 2) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (cbrt.f64 -3) x) 2) (/.f64 (cbrt.f64 -3) x) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 2) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) 2) (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -3 x)) (sqrt.f64 (/.f64 -3 x)) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 -1) x) (/.f64 (sqrt.f64 -1) x) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) (/.f64 (sqrt.f64 -3) (pow.f64 x 3/2)) (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2)))) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -3 (*.f64 x x) (neg.f64 (pow.f64 x 3))) (/.f64 1 (pow.f64 x 5)) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -27 (pow.f64 (pow.f64 x -3) 3) (/.f64 -1 (pow.f64 x 6))) (/.f64 1 (+.f64 (/.f64 9 (pow.f64 x 6)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 3 (pow.f64 x 5))))) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -2) -1 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -3) -3 (fma.f64 -1 (pow.f64 x -2) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) -3 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 9 (pow.f64 x 6)) (/.f64 1 (pow.f64 x 4))) (/.f64 1 (fma.f64 -3 (pow.f64 x -3) (pow.f64 x -2))) (/.f64 -3 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 x) (/.f64 1 x) (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)) 1 (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x)))) (cbrt.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (neg.f64 (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (sqrt.f64 (fma.f64 -3 (pow.f64 x -3) (/.f64 -3 x))) (neg.f64 (pow.f64 x -2)))))))"]],"rules":[["egg-rr",99],["egg-rr",25],["egg-rr",28],["egg-rr",78]],"stop":[["node limit",1]],"time":67.462158203125,"type":"rewrite"},{"count":[[266,241]],"egraph":[[5,6628,390,0.023664875],[4,1443,390,0.012934791999999999],[3,436,438,0.0035480419999999995],[2,162,438,0.001286792],[1,66,438,0.000482458],[0,25,474,0.000158083]],"inputs":[["(/.f64 -3 (pow.f64 x 3))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(/.f64 -1 (pow.f64 x 2))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -3 (pow.f64 x 3))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3))))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3))))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -3 (pow.f64 x 3))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -1 (pow.f64 x 2))","(/.f64 -1 (*.f64 x x))","(/.f64 (/.f64 -1 x) x)","(/.f64 -3 (pow.f64 x 3))","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3)))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 3))))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))","(/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3))))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 (pow.f64 x 3))))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(+.f64 (/.f64 (/.f64 -1 x) x) (/.f64 -3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))","(/.f64 -3 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x))))","(neg.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x)))","(+.f64 (/.f64 (/.f64 -1 x) x) (/.f64 -3 x))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(neg.f64 (+.f64 (/.f64 3 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 x))))","(+.f64 (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 (/.f64 -1 x) x)) (/.f64 -3 x))","(-.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x)) (/.f64 3 (pow.f64 x 3)))","(+.f64 (/.f64 (+.f64 -1 (/.f64 -3 x)) (*.f64 x x)) (/.f64 -3 x))"]],"stop":[["node limit",1]],"time":42.676025390625,"type":"simplify"},{"compiler":[[5213,4002]],"time":68.307861328125,"type":"eval"},{"alts":[["(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","done",27.581988234853174],["(/.f64 (-.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2) (/.f64 9 (*.f64 x x))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)))","fresh",49.37292781509605],["(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","done",27.176962383602923],["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","done",34.28942483761557],["(fma.f64 3 (/.f64 -1 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))","fresh",34.375362337615485]],"compiler":[[16,12],[32,25],[18,14],[16,12],[15,12]],"count":[[244,5]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[241,2],"picked":[1,1]}],"min-error":[0],"time":48.741943359375,"type":"prune"},{"accuracy":[0.015625],"baseline":[27.176962383602923],"branch":[["x",0.015625,3],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))",0.015625,2]],"compiler":[[2,1],[14,10],[150,112]],"count":[[9,2]],"inputs":[["(/.f64 (-.f64 (pow.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) 2) (/.f64 9 (*.f64 x x))) (-.f64 (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))) (/.f64 -3 x)))","(fma.f64 3 (/.f64 -1 x) (fma.f64 -3 (pow.f64 x -3) (neg.f64 (pow.f64 x -2))))","(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))","(fma.f64 (/.f64 1 (+.f64 x 1)) x (/.f64 (fma.f64 -1 x -1) (+.f64 x -1)))","(neg.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 3))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 3 (/.f64 1 x)))))","(log.f64 (*.f64 (exp.f64 (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))) (exp.f64 (/.f64 x (+.f64 x 1)))))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -3 x))","(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))"]],"link":["."],"name":["Asymptote C"],"oracle":[62.351191745457015],"outputs":[["(+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1)))"]],"time":19.110107421875,"times":[["x",12.803955078125],["(-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1)))",3.449951171875]],"type":"regimes"},{"bstep":[[2.3565260853786185e-10,0.09382216377213859,0.077880859375]],"compiler":[[4,3],[14,10]],"method":["left-value"],"time":0.205078125,"type":"bsearch"},{"compiler":[[47,35]],"egraph":[[6,58,67,0.000401625],[5,57,67,0.000339208],[4,54,67,0.00027625],[3,48,67,0.000209917],[2,41,67,0.000148542],[1,35,67,9.729199999999999e-5],[0,26,67,5.35e-5]],"inputs":[["(if (<=.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1))) 7737125245533627/19342813113834066795298816) (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (-.f64 x 1))) 7737125245533627/19342813113834066795298816) (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (-.f64 x 1))))","(if (<=.f64 (-.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) (+.f64 x -1))) 7737125245533627/19342813113834066795298816) (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))))","(if (<=.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 (-.f64 -1 x) (+.f64 x -1))) 7737125245533627/19342813113834066795298816) (+.f64 (/.f64 -3 x) (+.f64 (/.f64 -3 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x)))) (fma.f64 x (/.f64 1 (+.f64 x 1)) (/.f64 (fma.f64 -1 x -1) (+.f64 x -1))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.77685546875,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[47,35]],"remove-preprocessing":[[]],"time":20.322021484375,"type":"end"}]