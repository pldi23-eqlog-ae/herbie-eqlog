[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.48390209302306175,0.29560954472981393,0.22048836224712431],[11,0.48390209302306175,0.3102436806075275,0.20585422636941075],[10,0.46829234808683395,0.3395119523629546,0.19219569955021143],[9,0.46829234808683395,0.36682900600135326,0.16487864591181278],[8,0.43707285821437836,0.42146311327815056,0.14146402850747108],[7,0.43707285821437836,0.46829234808683395,0.09463479369878769],[6,0.24975591897964478,0.6868287771940231,0.06341530382633209],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":65.549072265625,"type":"analyze"},{"outcomes":[["body",512,"invalid",111.684814453125,1025],["body",256,"invalid",86.887451171875,1474],["body",1024,"invalid",371.31591796875,2067],["body",1024,"valid",410.58251953125,2089],["body",512,"valid",115.917724609375,1035],["body",2048,"valid",1.819091796875,4],["body",256,"valid",282.41748046875,5128]],"time":1394.1728515625,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.875e-6],[9,6102,22,0.033476751],[8,4698,22,0.022294584],[7,2263,22,0.014154251],[6,750,22,0.006640126],[5,379,22,0.002754667],[4,228,22,0.0014685000000000002],[3,121,22,0.0008010000000000001],[2,59,22,0.000423708],[1,28,22,0.00020933300000000002],[0,11,22,7.6958e-5]],"inputs":[["0","1"],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","(*.f64 (cosh.f64 y) (/.f64 (sin.f64 x) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","(/.f64 (*.f64 (cosh.f64 x) (sin.f64 y)) y)","(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","(/.f64 (sin.f64 y) (/.f64 y (cosh.f64 x)))","(*.f64 (cosh.f64 y) (/.f64 (sin.f64 x) x))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":57.8251953125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,7456,11,0.054547751],[12,6458,11,0.043562668],[11,5687,11,0.03285046],[10,4095,11,0.023655335],[9,3571,11,0.017571835],[8,3218,11,0.012947876],[7,1120,11,0.008357376],[6,386,11,0.003458251],[5,194,11,0.001549418],[4,118,11,0.0008457930000000001],[3,65,11,0.00048212600000000004],[2,33,11,0.000266376],[1,16,11,0.000133709],[0,7,11,5.275e-5]],"inputs":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))"]],"stop":[["node limit",1]],"time":65.8828125,"type":"simplify"},{"compiler":[[16,8]],"time":0.333984375,"type":"eval"},{"alts":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","next",0.1171875],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","fresh",0.16796875]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.05859375],"time":1.20703125,"type":"prune"},{"compiler":[[19,6]],"locations":[["(sin.f64 y)",0.0078125,true],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))",0.01171875,true],["(/.f64 (sin.f64 y) y)",0.1171875,true]],"time":4.93115234375,"type":"localize"},{"count":[[3,32]],"series":[["(sin.f64 y)","y","-inf",0.138916015625],["(sin.f64 y)","y","inf",0.156005859375],["(sin.f64 y)","y","0",0.221923828125],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","y","-inf",1.217041015625],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","y","inf",0.659912109375],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","y","0",0.525146484375],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","x","-inf",0.947998046875],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","x","inf",1.39599609375],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","x","0",0.776123046875],["(/.f64 (sin.f64 y) y)","y","-inf",0.545166015625],["(/.f64 (sin.f64 y) y)","y","inf",0.341064453125],["(/.f64 (sin.f64 y) y)","y","0",0.369140625]],"time":7.4609375,"type":"series"},{"count":[[3,77]],"egraph":[[2,2033,20,0.018785126],[1,149,20,0.002644126],[0,7,20,0.000168792]],"inputs":[["(/.f64 (sin.f64 y) y)","(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))","(sin.f64 y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sin.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (*.f64 (cbrt.f64 (sin.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 2) (cbrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 y)) (*.f64 (sqrt.f64 (sin.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 y) y)) (sqrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 y)) 1) (/.f64 (sqrt.f64 (sin.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 y)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (sin.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (sin.f64 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (sin.f64 y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 y) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 (sin.f64 y) (cosh.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (cosh.f64 x)) (*.f64 (/.f64 y (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 y) (cosh.f64 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (*.f64 2 (cosh.f64 x))) (*.f64 y 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 y)) (*.f64 2 (cosh.f64 x))) (*.f64 (neg.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (sin.f64 y)) (*.f64 2 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) 1) (*.f64 2 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (neg.f64 (sin.f64 y))) (*.f64 2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 y)) (cosh.f64 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (/.f64 (sin.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 2 (cosh.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (neg.f64 (sin.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cosh.f64 x)) (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3) (pow.f64 (cosh.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cosh.f64 x) 3) (pow.f64 (/.f64 (sin.f64 y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (cbrt.f64 (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 y)) (sqrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 y)))))))"]],"rules":[["egg-rr",16],["egg-rr",30],["egg-rr",31]],"stop":[["node limit",1]],"time":40.51806640625,"type":"rewrite"},{"count":[[109,108]],"egraph":[[4,7618,623,0.025125707999999997],[3,2324,623,0.014448125],[2,632,654,0.0046771669999999994],[1,216,716,0.0014666669999999998],[0,80,722,0.000385042]],"inputs":[["1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 (*.f64 -1/5040 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 1 (*.f64 -1/6 (*.f64 y y)))","(fma.f64 -1/6 (*.f64 y y) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))))","(fma.f64 -1/6 (*.f64 y y) (fma.f64 1/120 (pow.f64 y 4) 1))","(+.f64 (*.f64 -1/5040 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(fma.f64 -1/5040 (pow.f64 y 6) (+.f64 1 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4)))))","(+.f64 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))) (fma.f64 -1/5040 (pow.f64 y 6) 1))","(fma.f64 -1/5040 (pow.f64 y 6) (fma.f64 -1/6 (*.f64 y y) (fma.f64 1/120 (pow.f64 y 4) 1)))","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x)))))","(fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (*.f64 (sin.f64 y) (/.f64 (*.f64 x x) y)) (/.f64 (sin.f64 y) y))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (*.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (*.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)))))","(fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)) (/.f64 (sin.f64 y) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4)))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (fma.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))) (*.f64 1/720 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 6)))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)) (*.f64 1/720 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 6))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (*.f64 (/.f64 (sin.f64 y) y) (*.f64 1/720 (pow.f64 x 6))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/720 (/.f64 (pow.f64 x 6) (/.f64 y (sin.f64 y))) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))","(fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 y y) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -1/12)))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 y (*.f64 y -1/12))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(fma.f64 -1/12 (*.f64 y (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 4) 1/240))))","(fma.f64 (*.f64 y y) (fma.f64 (exp.f64 x) -1/12 (/.f64 -1/12 (exp.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 (pow.f64 y 4) 1/240))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 (*.f64 y y) (+.f64 -1/12 (*.f64 (*.f64 y y) 1/240)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 -1/10080 (*.f64 (pow.f64 y 6) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))))","(fma.f64 -1/12 (*.f64 y (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 6) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) -1/10080)))))","(+.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 y (*.f64 y -1/12)))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 (pow.f64 y 6) -1/10080) (*.f64 (pow.f64 y 4) 1/240))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (+.f64 1/2 (*.f64 y (*.f64 y -1/12))) (+.f64 (*.f64 (pow.f64 y 6) -1/10080) (*.f64 (pow.f64 y 4) 1/240))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(*.f64 (sin.f64 y) (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y))","y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(fma.f64 -1/6 (pow.f64 y 3) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 1/120 (pow.f64 y 5) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","(fma.f64 -1/6 (pow.f64 y 3) (+.f64 (fma.f64 1/120 (pow.f64 y 5) y) (*.f64 -1/5040 (pow.f64 y 7))))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 1/120 (pow.f64 y 5) (fma.f64 -1/5040 (pow.f64 y 7) y)))","(fma.f64 1/120 (pow.f64 y 5) (fma.f64 -1/6 (pow.f64 y 3) (fma.f64 -1/5040 (pow.f64 y 7) y)))"]],"stop":[["node limit",1]],"time":44.18896484375,"type":"simplify"},{"compiler":[[1413,656]],"time":14.9169921875,"type":"eval"},{"alts":[["(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","fresh",0.4291764649057245],["(*.f64 (cosh.f64 x) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 y) (cbrt.f64 y))))","fresh",0.8868905637471788],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","next",0.16472626953688402],["(*.f64 (cosh.f64 x) (/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y))) y))","fresh",0.717357861432355],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","fresh",0.16796875],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","fresh",0.16796875]],"compiler":[[21,15],[17,12],[11,8],[16,10],[9,6],[9,6],[21,15],[17,12],[11,8],[16,10],[9,6],[9,6]],"count":[[110,6]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[108,5],"picked":[1,0]}],"min-error":[0.0078125],"time":25.8740234375,"type":"prune"},{"compiler":[[30,8]],"locations":[["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))",0.01171875,true],["(expm1.f64 (sin.f64 y))",0.1015625,true],["(/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y)",0.1171875,true],["(log1p.f64 (expm1.f64 (sin.f64 y)))",0.13671875,true]],"time":7.4169921875,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","y","-inf",0.166015625],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","y","inf",0.1669921875],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","y","0",0.23193359375],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","x","-inf",0.16796875],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","x","inf",0.195068359375],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","x","0",0.18994140625],["(expm1.f64 (sin.f64 y))","y","-inf",0.216796875],["(expm1.f64 (sin.f64 y))","y","inf",0.198974609375],["(expm1.f64 (sin.f64 y))","y","0",0.26806640625],["(/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y)","y","-inf",0.140869140625],["(/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y)","y","inf",0.141845703125],["(/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y)","y","0",0.18505859375],["(log1p.f64 (expm1.f64 (sin.f64 y)))","y","-inf",0.152099609375],["(log1p.f64 (expm1.f64 (sin.f64 y)))","y","inf",0.16015625],["(log1p.f64 (expm1.f64 (sin.f64 y)))","y","0",0.244873046875]],"time":3.0478515625,"type":"series"},{"count":[[4,95]],"egraph":[[2,2241,25,0.020953874],[1,171,25,0.002954207],[0,9,25,0.000206416]],"inputs":[["(log1p.f64 (expm1.f64 (sin.f64 y)))","(/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y)","(expm1.f64 (sin.f64 y))","(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 y)) (pow.f64 (cbrt.f64 (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 y)) (sqrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 y)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sin.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (*.f64 (cbrt.f64 (sin.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 2) (cbrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 y)) (*.f64 (sqrt.f64 (sin.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 y) y)) (sqrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 y)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 y)) 1) (/.f64 (sqrt.f64 (sin.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 y)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (sin.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (sin.f64 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (sin.f64 y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 y) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (sin.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (sin.f64 y))) (pow.f64 (cbrt.f64 (expm1.f64 (sin.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (sin.f64 y))) 2) (cbrt.f64 (expm1.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (sin.f64 y))) (sqrt.f64 (expm1.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (sin.f64 y)) 3) 1) (+.f64 (*.f64 (exp.f64 (sin.f64 y)) (exp.f64 (sin.f64 y))) (+.f64 1 (*.f64 (exp.f64 (sin.f64 y)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 (sin.f64 y)) (exp.f64 (sin.f64 y))) 1) (+.f64 (exp.f64 (sin.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (sin.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (sin.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (sin.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (sin.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (sin.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 (sin.f64 y) (cosh.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 2 (cosh.f64 x)) (*.f64 (/.f64 y (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 y) (cosh.f64 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (*.f64 2 (cosh.f64 x))) (*.f64 y 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 y)) (*.f64 2 (cosh.f64 x))) (*.f64 (neg.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (sin.f64 y)) (*.f64 2 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) 1) (*.f64 2 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (neg.f64 (sin.f64 y))) (*.f64 2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 y)) (cosh.f64 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (cosh.f64 x)) (/.f64 (sin.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 2 (cosh.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cosh.f64 x) (neg.f64 (sin.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 y) y)) (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 y) y) 3) (pow.f64 (cosh.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cosh.f64 x) 3) (pow.f64 (/.f64 (sin.f64 y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))))))))"]],"rules":[["egg-rr",30],["egg-rr",18],["egg-rr",31],["egg-rr",16]],"stop":[["node limit",1]],"time":45.89404296875,"type":"rewrite"},{"count":[[155,133]],"egraph":[[4,7866,783,0.025688416],[3,2566,783,0.015321541],[2,708,814,0.005284166],[1,249,878,0.001628916],[0,93,886,0.000449708]],"inputs":[["y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 (*.f64 -1/5040 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","y","(+.f64 y (*.f64 1/2 (pow.f64 y 2)))","(+.f64 y (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 1/2 (pow.f64 y 2))))","(+.f64 y (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/15 (pow.f64 y 5)))))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(-.f64 (exp.f64 (sin.f64 y)) 1)","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))"]],"method":["egg-herbie"],"outputs":[["y","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) y)","(fma.f64 -1/6 (pow.f64 y 3) y)","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) y))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 1/120 (pow.f64 y 5) y))","(+.f64 (*.f64 -1/6 (pow.f64 y 3)) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (+.f64 y (*.f64 -1/5040 (pow.f64 y 7)))))","(fma.f64 -1/6 (pow.f64 y 3) (+.f64 (fma.f64 1/120 (pow.f64 y 5) y) (*.f64 -1/5040 (pow.f64 y 7))))","(fma.f64 -1/6 (pow.f64 y 3) (fma.f64 1/120 (pow.f64 y 5) (fma.f64 -1/5040 (pow.f64 y 7) y)))","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","(sin.f64 y)","1","(+.f64 1 (*.f64 -1/6 (pow.f64 y 2)))","(+.f64 1 (*.f64 -1/6 (*.f64 y y)))","(fma.f64 -1/6 (*.f64 y y) 1)","(fma.f64 y (*.f64 y -1/6) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))))","(fma.f64 y (*.f64 y -1/6) (fma.f64 1/120 (pow.f64 y 4) 1))","(+.f64 (*.f64 -1/5040 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(fma.f64 -1/5040 (pow.f64 y 6) (+.f64 1 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4)))))","(+.f64 (fma.f64 -1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))) (fma.f64 -1/5040 (pow.f64 y 6) 1))","(fma.f64 -1/5040 (pow.f64 y 6) (fma.f64 y (*.f64 y -1/6) (fma.f64 1/120 (pow.f64 y 4) 1)))","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","(/.f64 (sin.f64 y) y)","y","(+.f64 y (*.f64 1/2 (pow.f64 y 2)))","(+.f64 y (*.f64 (*.f64 y y) 1/2))","(fma.f64 (*.f64 y y) 1/2 y)","(fma.f64 y (*.f64 y 1/2) y)","(+.f64 y (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 1/2 (pow.f64 y 2))))","(+.f64 y (fma.f64 -1/8 (pow.f64 y 4) (*.f64 (*.f64 y y) 1/2)))","(+.f64 y (fma.f64 (pow.f64 y 4) -1/8 (*.f64 (*.f64 y y) 1/2)))","(fma.f64 (pow.f64 y 4) -1/8 (fma.f64 y (*.f64 y 1/2) y))","(fma.f64 y (*.f64 y 1/2) (fma.f64 (pow.f64 y 4) -1/8 y))","(+.f64 y (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/15 (pow.f64 y 5)))))","(+.f64 y (fma.f64 -1/8 (pow.f64 y 4) (fma.f64 1/2 (*.f64 y y) (*.f64 (pow.f64 y 5) -1/15))))","(+.f64 y (fma.f64 (pow.f64 y 4) -1/8 (fma.f64 (pow.f64 y 5) -1/15 (*.f64 (*.f64 y y) 1/2))))","(+.f64 y (fma.f64 (pow.f64 y 5) -1/15 (fma.f64 (pow.f64 y 4) -1/8 (*.f64 (*.f64 y y) 1/2))))","(+.f64 y (fma.f64 (*.f64 y y) 1/2 (fma.f64 (pow.f64 y 4) -1/8 (*.f64 -1/15 (pow.f64 y 5)))))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(-.f64 (exp.f64 (sin.f64 y)) 1)","(expm1.f64 (sin.f64 y))","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x)))))","(fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (*.f64 (sin.f64 y) (/.f64 (*.f64 x x) y)) (/.f64 (sin.f64 y) y))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (*.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (sin.f64 y) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4)))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (fma.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))) (*.f64 1/720 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 6)))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y) (*.f64 1/720 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 6))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/720 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 6)) (*.f64 (/.f64 (sin.f64 y) y) (*.f64 1/24 (pow.f64 x 4))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/720 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 6))) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))","(fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 -1/12 (*.f64 y y)) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 y (*.f64 y -1/12)) 1/2))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 y (*.f64 y -1/12))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(fma.f64 -1/12 (*.f64 y (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 4) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) 1/240))))","(fma.f64 (pow.f64 y 4) (fma.f64 (exp.f64 x) 1/240 (/.f64 1/240 (exp.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 y (*.f64 y -1/12)) 1/2)))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (+.f64 (*.f64 y (*.f64 y -1/12)) (*.f64 (pow.f64 y 4) 1/240))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(fma.f64 -1/12 (*.f64 (*.f64 y y) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 -1/10080 (*.f64 (pow.f64 y 6) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))))","(fma.f64 -1/12 (*.f64 y (*.f64 y (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))) (fma.f64 1/240 (*.f64 (pow.f64 y 4) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 6) -1/10080)))))","(+.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 y (*.f64 y -1/12)) 1/2)) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 (pow.f64 y 6) -1/10080) (*.f64 (pow.f64 y 4) 1/240))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (+.f64 1/2 (*.f64 y (*.f64 y -1/12))) (+.f64 (*.f64 (pow.f64 y 6) -1/10080) (*.f64 (pow.f64 y 4) 1/240))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 1/2 (*.f64 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y) (sin.f64 y)))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))"]],"stop":[["node limit",1]],"time":47.345947265625,"type":"simplify"},{"compiler":[[1780,840]],"time":19.045166015625,"type":"eval"},{"alts":[["(*.f64 (cosh.f64 x) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 y) (cbrt.f64 y))))","fresh",0.8868905637471788],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","fresh",0.16796875],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","done",0.16472626953688402],["(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","fresh",0.4291764649057245],["(*.f64 (cosh.f64 x) (/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y))) y))","fresh",0.717357861432355],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","next",0.16796875]],"compiler":[[17,12],[9,6],[11,8],[21,15],[16,10],[9,6],[17,12],[9,6],[21,15],[16,10],[9,6]],"count":[[139,6]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[133,2],"picked":[1,1]}],"min-error":[0.0078125],"time":32.905029296875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(sin.f64 y)",0.0078125,false],["(/.f64 (cosh.f64 x) y)",0.0078125,true],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))",0.15625,true]],"time":4.907958984375,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (cosh.f64 x) y)","y","-inf",0.31396484375],["(/.f64 (cosh.f64 x) y)","y","inf",0.297119140625],["(/.f64 (cosh.f64 x) y)","y","0",0.321044921875],["(/.f64 (cosh.f64 x) y)","x","-inf",0.35400390625],["(/.f64 (cosh.f64 x) y)","x","inf",0.35009765625],["(/.f64 (cosh.f64 x) y)","x","0",0.373046875],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","x","-inf",0.19384765625],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","x","inf",0.177978515625],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","x","0",0.18798828125],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","y","-inf",0.197998046875],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","y","inf",0.18603515625],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","y","0",0.282958984375]],"time":3.41796875,"type":"series"},{"count":[[2,53]],"egraph":[[2,2023,17,0.019096501000000002],[1,149,17,0.002634126],[0,7,17,0.000173542]],"inputs":[["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","(/.f64 (cosh.f64 x) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 y) (/.f64 y (cosh.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 (sin.f64 y) (cosh.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 y) (cosh.f64 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 y) (cosh.f64 x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cosh.f64 x)) (sin.f64 y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 y) (neg.f64 (cosh.f64 x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (cosh.f64 x) y)) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 y) 3) (pow.f64 (/.f64 (cosh.f64 x) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (cosh.f64 x) y) 3) (pow.f64 (sin.f64 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (cosh.f64 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cosh.f64 x) y)) (pow.f64 (cbrt.f64 (/.f64 (cosh.f64 x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (cosh.f64 x) y)) 2) (cbrt.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (*.f64 (cbrt.f64 (cosh.f64 x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (cosh.f64 x) y)) (sqrt.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cosh.f64 x)) (*.f64 (sqrt.f64 (cosh.f64 x)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cosh.f64 x)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) 1) (/.f64 (cbrt.f64 (cosh.f64 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cosh.f64 x)) 1) (/.f64 (sqrt.f64 (cosh.f64 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (cosh.f64 x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cosh.f64 x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (cosh.f64 x)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (cosh.f64 x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (cosh.f64 x)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cosh.f64 x) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cosh.f64 x) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cosh.f64 x) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cosh.f64 x) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (cosh.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cosh.f64 x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cosh.f64 x) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cosh.f64 x) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (cosh.f64 x) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cosh.f64 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cosh.f64 x) y)))))))"]],"rules":[["egg-rr",31],["egg-rr",22]],"stop":[["node limit",1]],"time":39.222900390625,"type":"rewrite"},{"count":[[101,79]],"egraph":[[4,7142,901,0.022907417],[3,1886,907,0.012662458],[2,541,938,0.003970583],[1,186,1020,0.001266042],[0,69,1024,0.000345792]],"inputs":[["(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 1/2 (/.f64 (pow.f64 x 2) y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) y)) (*.f64 1/2 (/.f64 (pow.f64 x 2) y))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 6) y)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) y)) (*.f64 1/2 (/.f64 (pow.f64 x 2) y)))))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))","(fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 y y) -1/12)))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 -1/12 (*.f64 y y))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 4) 1/240))))","(fma.f64 (*.f64 y y) (fma.f64 (exp.f64 x) -1/12 (/.f64 -1/12 (exp.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 1/240 (pow.f64 y 4)))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (+.f64 (*.f64 1/240 (pow.f64 y 4)) (*.f64 -1/12 (*.f64 y y)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (fma.f64 -1/10080 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 6)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 6) -1/10080)))))","(+.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 -1/12 (*.f64 y y)))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 1/240 (pow.f64 y 4)) (*.f64 -1/10080 (pow.f64 y 6)))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (+.f64 1/2 (*.f64 -1/12 (*.f64 y y))) (+.f64 (*.f64 1/240 (pow.f64 y 4)) (*.f64 -1/10080 (pow.f64 y 6)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (/.f64 (*.f64 1/2 (*.f64 (sin.f64 y) (*.f64 x x))) y))","(fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (/.f64 (*.f64 x x) (/.f64 y (sin.f64 y))) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (*.f64 x (/.f64 (sin.f64 y) (/.f64 y x))) (/.f64 (sin.f64 y) y))","(*.f64 (+.f64 (*.f64 1/2 (*.f64 x x)) 1) (/.f64 (sin.f64 y) y))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (*.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (*.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)))))","(fma.f64 1/2 (/.f64 (*.f64 x x) (/.f64 y (sin.f64 y))) (fma.f64 1/24 (/.f64 (pow.f64 x 4) (/.f64 y (sin.f64 y))) (/.f64 (sin.f64 y) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4)))))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (*.f64 (*.f64 x x) (+.f64 1/2 (*.f64 (*.f64 x x) 1/24)))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (fma.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))) (*.f64 1/720 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 6)))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/24 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 4)) (*.f64 1/720 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 6))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/24 (/.f64 (pow.f64 x 4) (/.f64 y (sin.f64 y))) (fma.f64 1/2 (/.f64 (*.f64 x x) (/.f64 y (sin.f64 y))) (*.f64 (/.f64 1/720 y) (*.f64 (sin.f64 y) (pow.f64 x 6))))))","(+.f64 (fma.f64 1/2 (*.f64 x (/.f64 (sin.f64 y) (/.f64 y x))) (/.f64 (sin.f64 y) y)) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 x x)) 1) (/.f64 (sin.f64 y) y)) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y) (sin.f64 y))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 1/2 (/.f64 (pow.f64 x 2) y)))","(+.f64 (/.f64 1 y) (*.f64 1/2 (/.f64 (*.f64 x x) y)))","(fma.f64 1/2 (/.f64 (*.f64 x x) y) (/.f64 1 y))","(fma.f64 1/2 (*.f64 (/.f64 x y) x) (/.f64 1 y))","(fma.f64 1/2 (*.f64 x (/.f64 x y)) (/.f64 1 y))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) y)) (*.f64 1/2 (/.f64 (pow.f64 x 2) y))))","(+.f64 (/.f64 1 y) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (*.f64 1/2 (/.f64 (*.f64 x x) y))))","(+.f64 (/.f64 1 y) (fma.f64 1/2 (/.f64 (*.f64 x x) y) (*.f64 1/24 (/.f64 (pow.f64 x 4) y))))","(fma.f64 1/2 (*.f64 (/.f64 x y) x) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (/.f64 1 y)))","(fma.f64 1/2 (*.f64 x (/.f64 x y)) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (/.f64 1 y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/720 (/.f64 (pow.f64 x 6) y)) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 x 4) y)) (*.f64 1/2 (/.f64 (pow.f64 x 2) y)))))","(+.f64 (/.f64 1 y) (fma.f64 1/720 (/.f64 (pow.f64 x 6) y) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (*.f64 1/2 (/.f64 (*.f64 x x) y)))))","(+.f64 (/.f64 1 y) (fma.f64 1/720 (/.f64 (pow.f64 x 6) y) (fma.f64 1/2 (/.f64 (*.f64 x x) y) (*.f64 1/24 (/.f64 (pow.f64 x 4) y)))))","(fma.f64 1/720 (/.f64 (pow.f64 x 6) y) (fma.f64 1/2 (*.f64 (/.f64 x y) x) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (/.f64 1 y))))","(fma.f64 1/720 (/.f64 (pow.f64 x 6) y) (fma.f64 1/2 (*.f64 x (/.f64 x y)) (fma.f64 1/24 (/.f64 (pow.f64 x 4) y) (/.f64 1 y))))","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)","(*.f64 1/2 (/.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) y))","(/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y 1/2))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) y)"]],"stop":[["node limit",1]],"time":46.01708984375,"type":"simplify"},{"compiler":[[1380,622]],"time":14.33203125,"type":"eval"},{"alts":[["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","next",0.16796875],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","done",0.16472626953688402],["(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","fresh",0.4291764649057245],["(*.f64 (sin.f64 y) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (cosh.f64 x) y))))","fresh",0.7323190918954708],["(*.f64 (cosh.f64 x) (/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y))) y))","fresh",0.717357861432355],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","done",0.16796875]],"compiler":[[9,6],[11,8],[21,15],[21,15],[16,10],[9,6],[9,6],[21,15],[21,15],[16,10]],"count":[[108,6]],"kept":[{"done":[1,1],"fresh":[4,3],"new":[102,1],"picked":[1,1]}],"min-error":[0.0078125],"time":26.031982421875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(sin.f64 y)",0.0078125,false],["(/.f64 y (sin.f64 y))",0.14453125,true],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))",0.16015625,true]],"time":5.449951171875,"type":"localize"},{"count":[[2,28]],"series":[["(/.f64 y (sin.f64 y))","y","-inf",0.419921875],["(/.f64 y (sin.f64 y))","y","inf",0.39501953125],["(/.f64 y (sin.f64 y))","y","0",0.244140625],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","y","-inf",0.208984375],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","y","inf",0.19189453125],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","y","0",0.241943359375],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","x","-inf",0.18798828125],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","x","inf",0.196044921875],["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","x","0",0.27197265625]],"time":2.51708984375,"type":"series"},{"count":[[2,72]],"egraph":[[2,2267,17,0.023582834],[1,155,17,0.003102292],[0,7,17,0.000208542]],"inputs":[["(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","(/.f64 y (sin.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (*.f64 (cbrt.f64 (cosh.f64 x)) (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) (pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) 2) (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cosh.f64 x)) (*.f64 (sqrt.f64 (cosh.f64 x)) (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) (sqrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cosh.f64 x)) (/.f64 1 (/.f64 (neg.f64 y) (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 y) y) (cosh.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) y) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) 1) (/.f64 (cbrt.f64 (cosh.f64 x)) (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cosh.f64 x)) 1) (/.f64 (sqrt.f64 (cosh.f64 x)) (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cosh.f64 x)) y) (/.f64 (sqrt.f64 (cosh.f64 x)) (/.f64 1 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (cosh.f64 x) (/.f64 1 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) y) (/.f64 (cbrt.f64 (cosh.f64 x)) (/.f64 1 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 2)) (/.f64 (cosh.f64 x) (cbrt.f64 (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 2)) (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (cosh.f64 x)) (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 2)) (/.f64 (sqrt.f64 (cosh.f64 x)) (cbrt.f64 (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 y (sin.f64 y)))) (/.f64 (cosh.f64 x) (sqrt.f64 (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (sqrt.f64 (/.f64 y (sin.f64 y)))) (/.f64 (cbrt.f64 (cosh.f64 x)) (sqrt.f64 (/.f64 y (sin.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) 1) (/.f64 (sin.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cosh.f64 x) (neg.f64 y)) (neg.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (cosh.f64 x) y) 1) (sin.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (cosh.f64 x) y) (pow.f64 (cbrt.f64 (sin.f64 y)) 2)) (cbrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (cosh.f64 x) y) (sqrt.f64 (sin.f64 y))) (sqrt.f64 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (*.f64 (cosh.f64 x) (sin.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cosh.f64 x) (/.f64 (neg.f64 y) (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cosh.f64 x)) (/.f64 (sin.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (cosh.f64 x) 3) (pow.f64 (/.f64 y (sin.f64 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 y (sin.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 2) (cbrt.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (sin.f64 y))) (sqrt.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sin.f64 y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (sin.f64 y)) 2)) (/.f64 y (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (sin.f64 y)) 2)) (cbrt.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (sin.f64 y)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (sin.f64 y))) (/.f64 y (sqrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (sin.f64 y))) (/.f64 (cbrt.f64 y) (sqrt.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (sin.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (sin.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (sin.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (sin.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (sin.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (sin.f64 y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (sin.f64 y))))))))"]],"rules":[["egg-rr",31],["egg-rr",41]],"stop":[["node limit",1]],"time":49.718017578125,"type":"rewrite"},{"count":[[100,96]],"egraph":[[4,6788,568,0.022436208],[3,1915,577,0.012082124999999999],[2,525,608,0.003780833],[1,174,670,0.001169958],[0,66,674,0.000312333]],"inputs":[["(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 7/360 (pow.f64 y 4))))","(+.f64 1 (+.f64 (*.f64 31/15120 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 7/360 (pow.f64 y 4)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (sin.f64 y) y)","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x)))))","(fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 x x) y) (sin.f64 y)) (/.f64 (sin.f64 y) y))","(fma.f64 1/2 (*.f64 (sin.f64 y) (/.f64 (*.f64 x x) y)) (/.f64 (sin.f64 y) y))","(*.f64 (+.f64 (*.f64 1/2 (*.f64 x x)) 1) (/.f64 (sin.f64 y) y))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (/.f64 (*.f64 1/24 (*.f64 (sin.f64 y) (pow.f64 x 4))) y)))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (/.f64 (*.f64 1/24 (*.f64 (sin.f64 y) (pow.f64 x 4))) y)))","(fma.f64 1/24 (*.f64 (/.f64 (pow.f64 x 4) y) (sin.f64 y)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 x x) y) (sin.f64 y)) (/.f64 (sin.f64 y) y)))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (*.f64 x x)) (*.f64 1/24 (pow.f64 x 4)))))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (*.f64 (*.f64 x x) (+.f64 1/2 (*.f64 (*.f64 x x) 1/24)))))","(+.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 2)) y)) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 4)) y)) (*.f64 1/720 (/.f64 (*.f64 (sin.f64 y) (pow.f64 x 6)) y)))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (/.f64 (sin.f64 y) (/.f64 y (*.f64 x x))) (fma.f64 1/24 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 4))) (*.f64 1/720 (/.f64 (sin.f64 y) (/.f64 y (pow.f64 x 6)))))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 y) y) (*.f64 x x)) (fma.f64 1/720 (*.f64 (/.f64 (sin.f64 y) y) (pow.f64 x 6)) (/.f64 (*.f64 1/24 (*.f64 (sin.f64 y) (pow.f64 x 4))) y))))","(+.f64 (/.f64 (sin.f64 y) y) (fma.f64 1/24 (*.f64 (/.f64 (pow.f64 x 4) y) (sin.f64 y)) (fma.f64 1/720 (/.f64 (pow.f64 x 6) (/.f64 y (sin.f64 y))) (/.f64 (sin.f64 y) (/.f64 (/.f64 y (*.f64 x x)) 1/2)))))","(+.f64 (fma.f64 1/2 (*.f64 (sin.f64 y) (/.f64 (*.f64 x x) y)) (/.f64 (sin.f64 y) y)) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))))","(+.f64 (/.f64 (sin.f64 y) y) (*.f64 (/.f64 (sin.f64 y) y) (+.f64 (*.f64 (*.f64 x x) (+.f64 1/2 (*.f64 (*.f64 x x) 1/24))) (*.f64 1/720 (pow.f64 x 6)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))","(*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))","(fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))","(fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 y y) -1/12)))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 -1/12 (*.f64 y y))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (pow.f64 y 4) 1/240))))","(fma.f64 (*.f64 y y) (fma.f64 (exp.f64 x) -1/12 (/.f64 -1/12 (exp.f64 x))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 1/240 (pow.f64 y 4)))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (+.f64 (*.f64 -1/12 (*.f64 y y)) (*.f64 1/240 (pow.f64 y 4)))))","(+.f64 (*.f64 -1/12 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 2))) (+.f64 (*.f64 1/240 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 4))) (+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (pow.f64 y 6))) (*.f64 1/2 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (fma.f64 -1/10080 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 6)) (*.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))))","(fma.f64 -1/12 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 y y)) (fma.f64 1/240 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (pow.f64 y 4)) (fma.f64 1/2 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (*.f64 (*.f64 -1/10080 (pow.f64 y 6)) (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x)))))))","(+.f64 (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 1/2 (*.f64 -1/12 (*.f64 y y)))) (*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (*.f64 1/240 (pow.f64 y 4)) (*.f64 -1/10080 (pow.f64 y 6)))))","(*.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (+.f64 (+.f64 1/2 (*.f64 -1/12 (*.f64 y y))) (+.f64 (*.f64 -1/10080 (pow.f64 y 6)) (*.f64 1/240 (pow.f64 y 4)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","(*.f64 1/2 (/.f64 (*.f64 (+.f64 (/.f64 1 (exp.f64 x)) (exp.f64 x)) (sin.f64 y)) y))","(*.f64 1/2 (/.f64 (+.f64 (exp.f64 x) (exp.f64 (neg.f64 x))) (/.f64 y (sin.f64 y))))","(/.f64 (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x))) (/.f64 y (sin.f64 y)))","(/.f64 (sin.f64 y) (/.f64 y (fma.f64 1/2 (exp.f64 x) (/.f64 1/2 (exp.f64 x)))))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (*.f64 (*.f64 y y) 1/6))","(fma.f64 (*.f64 y y) 1/6 1)","(fma.f64 y (*.f64 y 1/6) 1)","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 7/360 (pow.f64 y 4))))","(+.f64 1 (fma.f64 1/6 (*.f64 y y) (*.f64 (pow.f64 y 4) 7/360)))","(+.f64 (fma.f64 (*.f64 y y) 1/6 1) (*.f64 (pow.f64 y 4) 7/360))","(fma.f64 y (*.f64 y 1/6) (fma.f64 (pow.f64 y 4) 7/360 1))","(+.f64 1 (+.f64 (*.f64 31/15120 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 7/360 (pow.f64 y 4)))))","(+.f64 1 (fma.f64 31/15120 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y y) (*.f64 (pow.f64 y 4) 7/360))))","(+.f64 1 (fma.f64 (pow.f64 y 6) 31/15120 (fma.f64 (*.f64 y y) 1/6 (*.f64 (pow.f64 y 4) 7/360))))","(fma.f64 (pow.f64 y 6) 31/15120 (fma.f64 y (*.f64 y 1/6) (fma.f64 (pow.f64 y 4) 7/360 1)))"]],"stop":[["node limit",1]],"time":41.4169921875,"type":"simplify"},{"compiler":[[1594,686]],"time":16.142822265625,"type":"eval"},{"alts":[["(/.f64 (cosh.f64 x) (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 3))","fresh",0.45460527351637664],["(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","done",0.16472626953688402],["(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","fresh",0.4291764649057245],["(/.f64 (cosh.f64 x) (*.f64 (/.f64 1 (sin.f64 y)) y))","fresh",0.2949600586106521],["(*.f64 (cosh.f64 x) (/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y))) y))","fresh",0.717357861432355],["(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","done",0.16796875]],"compiler":[[12,9],[11,8],[21,15],[11,8],[16,10],[9,6]],"count":[[125,6]],"kept":[{"done":[2,2],"fresh":[3,2],"new":[119,2],"picked":[1,0]}],"min-error":[0.00390625],"time":29.028076171875,"type":"prune"},{"accuracy":[0.1171875],"baseline":[0.1171875],"branch":[["x",0.1171875,1],["y",0.1171875,1],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))",0.1171875,1],["(cosh.f64 x)",0.1171875,1],["(/.f64 (sin.f64 y) y)",0.1171875,1]],"compiler":[[3,2],[3,2],[9,6],[4,3],[6,4],[144,60]],"count":[[12,1]],"inputs":[["(/.f64 (cosh.f64 x) (pow.f64 (cbrt.f64 (/.f64 y (sin.f64 y))) 3))","(/.f64 (cosh.f64 x) (*.f64 (/.f64 1 (sin.f64 y)) y))","(*.f64 (sin.f64 y) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (cosh.f64 x)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (cosh.f64 x) y))))","(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","(*.f64 (cosh.f64 x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sin.f64 y) y))))","(*.f64 (cosh.f64 x) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 y) (cbrt.f64 y))))","(*.f64 (cosh.f64 x) (/.f64 (log1p.f64 (expm1.f64 (sin.f64 y))) y))","(*.f64 (cosh.f64 x) (/.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 y)) 2) (cbrt.f64 (sin.f64 y))) y))","(/.f64 (cosh.f64 x) (/.f64 y (sin.f64 y)))","(*.f64 (sin.f64 y) (/.f64 (cosh.f64 x) y))","(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))"]],"link":["."],"name":["Linear.Quaternion:$csinh from linear-1.19.1.3"],"oracle":[1.2772336303168141],"outputs":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))"]],"time":24.97509765625,"times":[["x",5.320068359375],["y",5.359130859375],["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))",4.764892578125],["(cosh.f64 x)",1.815185546875],["(/.f64 (sin.f64 y) y)",5.125]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,8,11,2.9249e-5],[0,7,11,1.7833e-5]],"inputs":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cosh.f64 x) (/.f64 (sin.f64 y) y))"]],"stop":[["fuel",1],["saturated",1]],"time":8.135986328125,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":8.14501953125,"type":"end"}]