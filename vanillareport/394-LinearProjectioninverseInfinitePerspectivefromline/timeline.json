[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.17153955242975893,0.7992183692750132,0.029242078295227847],[11,0.12475603813073377,0.8576977621487947,0.017546199720471556],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":134.6728515625,"type":"analyze"},{"outcomes":[["body",256,"invalid",106.72802734375,2446],["body",256,"valid",358.692138671875,8256]],"time":475.469970703125,"type":"sample"},{"compiler":[[13,8]],"egraph":[[1,4,4,8.084000000000001e-6],[0,4,4,6.875e-6],[16,4543,70,0.121930416],[15,4540,70,0.108225749],[14,4540,70,0.093560749],[13,4540,70,0.082608041],[12,4540,70,0.072099916],[11,4252,70,0.061652708],[10,3650,70,0.051955583],[9,3646,70,0.042168708],[8,3610,70,0.035179291],[7,3391,70,0.028028166],[6,2361,70,0.019949791],[5,1694,70,0.013005958000000001],[4,871,70,0.006888792],[3,502,70,0.0029112920000000002],[2,233,70,0.0013435],[1,95,70,0.000506208],[0,28,70,0.000131542]],"inputs":[["0","1","2","3"],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","(*.f64 (-.f64 (*.f64 y x) (*.f64 z x)) t)","(*.f64 (-.f64 (*.f64 z y) (*.f64 x y)) t)","(*.f64 (-.f64 (*.f64 t y) (*.f64 z y)) x)","(*.f64 (-.f64 (*.f64 x z) (*.f64 y z)) t)","(*.f64 (-.f64 (*.f64 x t) (*.f64 z t)) y)","(*.f64 (-.f64 (*.f64 x y) (*.f64 t y)) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","1"],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","(*.f64 (*.f64 y (-.f64 x z)) t)","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 (-.f64 (*.f64 y x) (*.f64 z x)) t)","(*.f64 t (*.f64 x (-.f64 y z)))","(*.f64 x (*.f64 t (-.f64 y z)))","(*.f64 (-.f64 (*.f64 z y) (*.f64 x y)) t)","(*.f64 t (*.f64 y (-.f64 z x)))","(*.f64 (*.f64 y t) (-.f64 z x))","(*.f64 y (*.f64 t (-.f64 z x)))","(*.f64 (-.f64 (*.f64 t y) (*.f64 z y)) x)","(*.f64 x (*.f64 y (-.f64 t z)))","(*.f64 (*.f64 x y) (-.f64 t z))","(*.f64 (-.f64 (*.f64 x z) (*.f64 y z)) t)","(*.f64 t (*.f64 z (-.f64 x y)))","(*.f64 (*.f64 z t) (-.f64 x y))","(*.f64 (-.f64 (*.f64 x t) (*.f64 z t)) y)","(*.f64 (*.f64 y (-.f64 x z)) t)","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 (-.f64 (*.f64 x y) (*.f64 t y)) z)","(*.f64 z (*.f64 y (-.f64 x t)))","(*.f64 y (*.f64 (-.f64 x t) z))","(*.f64 (*.f64 y z) (-.f64 x t))","(*.f64 y (*.f64 z (-.f64 x t)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort y t)"]],"time":148.199951171875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,2435,10,0.029902582999999996],[11,2435,10,0.025187957999999996],[10,2429,10,0.021574957999999998],[9,2374,10,0.017926583],[8,1673,10,0.014058082999999999],[7,917,10,0.008559041],[6,558,10,0.004648499],[5,348,10,0.002641083],[4,234,10,0.001467833],[3,111,10,0.000733624],[2,47,10,0.000326958],[1,20,10,0.000142333],[0,9,10,4.5708e-5]],"inputs":[["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","(*.f64 (*.f64 y (-.f64 x z)) t)","(*.f64 y (*.f64 t (-.f64 x z)))"]],"stop":[["saturated",1]],"time":40.76806640625,"type":"simplify"},{"compiler":[[20,11]],"time":0.333984375,"type":"eval"},{"alts":[["(*.f64 y (*.f64 t (-.f64 x z)))","next",7.163718512239753],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","fresh",9.383784952948453]],"compiler":[[11,7],[13,8],[11,7],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.12109375],"time":1.18408203125,"type":"prune"},{"compiler":[[23,7]],"locations":[["(*.f64 t (-.f64 x z))",0.0234375,true],["(*.f64 y (*.f64 t (-.f64 x z)))",6.799094620543033,true]],"time":4.365966796875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 t (-.f64 x z))","z","-inf",0.14990234375],["(*.f64 t (-.f64 x z))","z","inf",0.163818359375],["(*.f64 t (-.f64 x z))","z","0",0.153076171875],["(*.f64 t (-.f64 x z))","x","-inf",0.301025390625],["(*.f64 t (-.f64 x z))","x","inf",0.222900390625],["(*.f64 t (-.f64 x z))","x","0",0.1728515625],["(*.f64 t (-.f64 x z))","t","-inf",0.248046875],["(*.f64 t (-.f64 x z))","t","inf",0.2998046875],["(*.f64 t (-.f64 x z))","t","0",0.14599609375],["(*.f64 y (*.f64 t (-.f64 x z)))","z","-inf",0.337890625],["(*.f64 y (*.f64 t (-.f64 x z)))","z","inf",0.381103515625],["(*.f64 y (*.f64 t (-.f64 x z)))","z","0",0.339111328125],["(*.f64 y (*.f64 t (-.f64 x z)))","x","-inf",0.430908203125],["(*.f64 y (*.f64 t (-.f64 x z)))","x","inf",0.738037109375],["(*.f64 y (*.f64 t (-.f64 x z)))","x","0",0.358154296875],["(*.f64 y (*.f64 t (-.f64 x z)))","t","-inf",0.309814453125],["(*.f64 y (*.f64 t (-.f64 x z)))","t","inf",0.425048828125],["(*.f64 y (*.f64 t (-.f64 x z)))","t","0",0.6259765625],["(*.f64 y (*.f64 t (-.f64 x z)))","y","-inf",0.289794921875],["(*.f64 y (*.f64 t (-.f64 x z)))","y","inf",0.416015625],["(*.f64 y (*.f64 t (-.f64 x z)))","y","0",0.580078125]],"time":7.31103515625,"type":"series"},{"count":[[2,36]],"egraph":[[2,2326,17,0.021730709],[1,170,17,0.003001792],[0,8,17,0.000174458]],"inputs":[["(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (-.f64 x z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y t)) (*.f64 (neg.f64 z) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y t) x) (*.f64 (*.f64 y t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (*.f64 t (-.f64 x z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 t (-.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 t (-.f64 x z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (*.f64 t (-.f64 x z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 y t)) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 t (-.f64 x z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 t (-.f64 x z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 t (-.f64 x z)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 t (-.f64 x z)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x t) (*.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t x) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 t (-.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 x 3) (pow.f64 z 3)) t) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) t) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (-.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 x z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (-.f64 x z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (-.f64 x z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 x z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (-.f64 x z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 t 3) (pow.f64 (-.f64 x z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 x z) 3) (pow.f64 t 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (-.f64 x z))))))))"]],"rules":[["egg-rr",19],["egg-rr",17]],"stop":[["node limit",1]],"time":42.215087890625,"type":"rewrite"},{"count":[[84,48]],"egraph":[[11,2641,384,0.030093833],[10,2641,384,0.025403500000000002],[9,2627,384,0.021741583000000002],[8,1935,384,0.01802],[7,1372,384,0.0122455],[6,839,384,0.00734425],[5,477,384,0.0039306670000000005],[4,280,384,0.002133583],[3,183,384,0.001211667],[2,87,384,0.000655958],[1,34,546,0.000289958],[0,15,564,0.000105375]],"inputs":[["(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 (*.f64 t z) (neg.f64 y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 (*.f64 t z) (neg.f64 y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 (*.f64 t z) (neg.f64 y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(fma.f64 y (*.f64 t x) (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 y (*.f64 t x)) (*.f64 y (*.f64 t z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(*.f64 t x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 t x))","(fma.f64 -1 (*.f64 t z) (*.f64 t x))","(-.f64 (*.f64 t x) (*.f64 t z))","(*.f64 t (-.f64 x z))"]],"stop":[["saturated",1]],"time":50.72900390625,"type":"simplify"},{"compiler":[[507,180]],"time":4.85595703125,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","next",7.536586236913918],["(*.f64 y (*.f64 t (-.f64 x z)))","done",7.163718512239753],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","fresh",7.564006354135222],["(pow.f64 (sqrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 2)","fresh",31.22106109038729],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","fresh",9.383784952948453],["(/.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))","fresh",34.13933335520603],["(/.f64 (*.f64 (*.f64 y t) (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))","fresh",44.53920304273261],["(+.f64 (*.f64 (*.f64 y t) x) (*.f64 (*.f64 y t) (neg.f64 z)))","fresh",7.5629276002317125]],"compiler":[[14,10],[11,7],[14,10],[14,10],[13,8],[19,11],[24,15],[16,9],[14,10],[14,10],[14,10],[13,8],[19,11],[24,15],[16,9]],"count":[[50,8]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[48,6],"picked":[1,1]}],"min-error":[0.015625],"time":10.89599609375,"type":"prune"},{"compiler":[[42,11]],"locations":[["(*.f64 t (-.f64 x z))",0.0234375,false],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)",0.5834351562950725,true],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))",6.777448281271356,true],["(*.f64 y (*.f64 t (-.f64 x z)))",6.799094620543033,false]],"time":7.202880859375,"type":"localize"},{"count":[[2,16]],"series":[["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","z","-inf",0.4208984375],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","z","inf",1.0400390625],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","z","0",1.7109375],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","x","-inf",0.51416015625],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","x","inf",0.498046875],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","x","0",2.5],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","t","-inf",0.507080078125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","t","inf",0.468017578125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","t","0",0.376220703125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","y","-inf",0.76611328125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","y","inf",0.471923828125],["(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","y","0",0.721923828125],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","z","-inf",0.297119140625],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","z","inf",0.31005859375],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","z","0",0.8720703125],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","x","-inf",0.3681640625],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","x","inf",0.31591796875],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","x","0",1.349853515625],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","t","-inf",0.400146484375],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","t","inf",0.30078125],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","t","0",0.27294921875],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","y","-inf",1.087158203125],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","y","inf",0.31396484375],["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","y","0",0.666015625]],"time":16.943115234375,"type":"series"},{"count":[[2,82]],"egraph":[[2,2828,22,0.024787583000000002],[1,238,22,0.003951833],[0,11,22,0.000287125]],"inputs":[["(cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z))))","(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y t)) (cbrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (*.f64 (-.f64 x z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y t)) (*.f64 (neg.f64 z) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y t) x) (*.f64 (*.f64 y t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 (-.f64 x z) y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (*.f64 (-.f64 x z) y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 t (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (*.f64 (-.f64 x z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x z) (*.f64 y t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 x z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (*.f64 (-.f64 x z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2) (*.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 t (-.f64 x z))) (*.f64 (sqrt.f64 (*.f64 t (-.f64 x z))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y t) (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 5/6) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 x z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2)) (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (sqrt.f64 (*.f64 t (-.f64 x z)))) (sqrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (-.f64 x z)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 t (-.f64 x z)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) 1) (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 y)) (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y t) 1) (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y t) (cbrt.f64 (pow.f64 (-.f64 x z) 2))) (cbrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y t) (sqrt.f64 (-.f64 x z))) (sqrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 t) (*.f64 (-.f64 x z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 y t) (*.f64 (neg.f64 z) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y t) x (*.f64 (*.f64 y t) (neg.f64 z)))))))"]],"rules":[["egg-rr",50],["egg-rr",32]],"stop":[["node limit",1]],"time":46.505859375,"type":"rewrite"},{"count":[[98,114]],"egraph":[[2,3123,2012,0.018407375],[1,825,2196,0.006041209],[0,240,2394,0.001264917]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))))))","(pow.f64 (*.f64 y (*.f64 t x)) 1/3)","(+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)))","(+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 x 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 2) (pow.f64 x 2)))) 1/3) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3)))))) (+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 x 7)) 1/9) (pow.f64 z 2))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (cbrt.f64 -1))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (cbrt.f64 -1))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 t 2)) z))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y (*.f64 t z))) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))))))) (pow.f64 x 3)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z)))))))","(*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3))))) (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 t 2)) x))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3)))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)))","(fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x))) (*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2))))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 z 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x))))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x))) (*.f64 -1/9 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x)) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 z 7) (pow.f64 t 11))) 1/18)) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 z 7) (pow.f64 t 11))) 1/18)))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 z 7)) (pow.f64 t 11)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 z 7)) (pow.f64 t 11)) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 z z) (*.f64 t t)))) (/.f64 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 z 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x)))))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x))) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x)) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 z 7) (pow.f64 t 11))) 1/18)) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 z 7) (pow.f64 t 11))) 1/18)) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 t (*.f64 t (*.f64 z z))))))) (*.f64 (/.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 3)))))))","(fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (fma.f64 -1/9 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 z 7)) (pow.f64 t 11)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 z 7)) (pow.f64 t 11)) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 y y))))) (/.f64 (*.f64 (pow.f64 x 3) -1/3) (/.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2))) -5/27))))))","(pow.f64 (*.f64 y (*.f64 t x)) 1/3)","(cbrt.f64 (*.f64 y (*.f64 t x)))","(cbrt.f64 (*.f64 t (*.f64 x y)))","(+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)))","(+.f64 (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18))) z) (cbrt.f64 (*.f64 y (*.f64 t x))))","(fma.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) z)) (cbrt.f64 (*.f64 y (*.f64 t x))))","(fma.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) z)) (cbrt.f64 (*.f64 t (*.f64 x y))))","(+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 x 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 x 7)) 1/18))))) (cbrt.f64 (*.f64 y (*.f64 t x))))","(+.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) z)) (cbrt.f64 (*.f64 y (*.f64 t x)))) (*.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 x 7) (pow.f64 t 11))) 1/18) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 x 7) (pow.f64 t 11))) 1/18)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18))) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 x 7)) (pow.f64 t 11)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 x 7)) (pow.f64 t 11)) 1/18))) z))) (cbrt.f64 (*.f64 t (*.f64 x y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 2) (pow.f64 x 2)))) 1/3) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3)))))) (+.f64 (pow.f64 (*.f64 y (*.f64 t x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) z)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 11) (pow.f64 t 11))) (pow.f64 x 7)) 1/9) (pow.f64 z 2))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 x x) (*.f64 t t)))) (pow.f64 z 3)) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7)))) -1/27))) (+.f64 (fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 11) (pow.f64 t 11)) (pow.f64 x 7)) 1/18))))) (cbrt.f64 (*.f64 y (*.f64 t x)))))","(+.f64 (fma.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 x 7) (pow.f64 t 11))) 1/18) (pow.f64 (/.f64 (pow.f64 y 11) (/.f64 (pow.f64 x 7) (pow.f64 t 11))) 1/18))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) z)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 x x) (*.f64 (*.f64 y y) (*.f64 t t))))) (*.f64 (pow.f64 z 3) (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 5/27))) (cbrt.f64 (*.f64 y (*.f64 t x)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18))) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 x 7)) (pow.f64 t 11)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 11) (pow.f64 x 7)) (pow.f64 t 11)) 1/18))) z))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 5/27) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 x x) (*.f64 (*.f64 y y) (*.f64 t t))))) (pow.f64 z 3))) (cbrt.f64 (*.f64 t (*.f64 x y)))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z))))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 (*.f64 t z) (neg.f64 y))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z)))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (neg.f64 (*.f64 y (*.f64 t z))))","(-.f64 (*.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)))) (*.f64 y (*.f64 t z)))","(fma.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (*.f64 -1 (cbrt.f64 -1)))) (*.f64 (*.f64 t z) (neg.f64 y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (cbrt.f64 -1))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 x 2)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z))))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9)) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))) (*.f64 x x) (neg.f64 (*.f64 y (*.f64 t z)))))","(-.f64 (fma.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 (*.f64 x x) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 -1/9 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) -1/9)))))) (*.f64 y (*.f64 t z)))","(-.f64 (*.f64 x (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (*.f64 -1 (cbrt.f64 -1)))) (*.f64 (+.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1)) (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18)) (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) -1/9))) (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) z) (pow.f64 t 17)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) z) (pow.f64 t 17)) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1/9)) x))) (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4)))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (cbrt.f64 -1))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 17) (pow.f64 t 17))) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t z))) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 t 2)) z))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y (*.f64 t z))) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))))))) (pow.f64 x 3)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t z)))))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9)) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))) (*.f64 x x) (fma.f64 (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9)) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 2/27 (/.f64 (*.f64 y y) (/.f64 z (*.f64 t t)))) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (/.f64 1 y) (*.f64 t z)))) (/.f64 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))))) (cbrt.f64 -1))))) (+.f64 (*.f64 -2/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7)))))) (*.f64 -1/3 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 z z) (pow.f64 t 7))))))))))) (pow.f64 x 3) (neg.f64 (*.f64 y (*.f64 t z))))))","(fma.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (*.f64 (pow.f64 z 4) (pow.f64 y 13))) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) (-.f64 (fma.f64 (*.f64 x x) (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 -1/9 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 z (pow.f64 t 17))) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) -1/9)))) (*.f64 (pow.f64 x 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 z 4) (pow.f64 t 14))) 1/18) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (*.f64 (cbrt.f64 -1) (fma.f64 2/27 (/.f64 (*.f64 t t) (/.f64 z (*.f64 y y))) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 t z)))) (/.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (cbrt.f64 -1)))))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) -2/27)))))) (*.f64 y (*.f64 t z))))","(fma.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/18)) (cbrt.f64 (*.f64 -1 (cbrt.f64 -1)))) (-.f64 (*.f64 (*.f64 x x) (+.f64 (+.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1)) (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18)) (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) -1/9))) (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) z) (pow.f64 t 17)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) z) (pow.f64 t 17)) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1/9)) (*.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7)) 1/18)) (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 z 4)) (pow.f64 t 14)) 1/18)) -1/9))) (fma.f64 (*.f64 (cbrt.f64 (*.f64 y (*.f64 t z))) (cbrt.f64 -1)) (fma.f64 2/27 (*.f64 (/.f64 y (/.f64 z y)) (*.f64 t t)) (*.f64 (/.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (cbrt.f64 -1) -5/27)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 t z))))))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) (*.f64 z z)) (pow.f64 t 7))) (/.f64 -2/27 (pow.f64 (cbrt.f64 -1) 2)))))) x))) (*.f64 y (*.f64 t z))))","(*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(*.f64 t (*.f64 x y))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x))))","(fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18)) -1) (*.f64 y (*.f64 t x)))","(fma.f64 y (*.f64 t x) (*.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) -1))))","(fma.f64 y (*.f64 t x) (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18)) (neg.f64 z)))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x)))))","(fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18)) -1) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t x))) (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18))))) (*.f64 z z) (*.f64 y (*.f64 t x))))","(fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) -1)) (fma.f64 y (*.f64 t x) (*.f64 z (*.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18) (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y (*.f64 t x)))))))))))","(fma.f64 z (neg.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (cbrt.f64 (*.f64 t (*.f64 x y))) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) x) (pow.f64 t 17)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) x) (pow.f64 t 17)) 1/18)) 1/9)) (*.f64 t (*.f64 x y))))","(+.f64 (*.f64 z (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4)))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3))))) (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 t 2)) x))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (*.f64 (pow.f64 y 7) (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 t 7))) (pow.f64 x 2)) 1/3)))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y (*.f64 t x))) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 14) (pow.f64 t 14))) (pow.f64 x 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 y 17) (pow.f64 t 17))) x) 1/9)))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (*.f64 y (*.f64 t x))))))","(fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18)) -1) (fma.f64 (+.f64 (*.f64 2/27 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18) (pow.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18)) -1/9)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7)))) -1/27))) (*.f64 (cbrt.f64 (*.f64 y (*.f64 t x))) (+.f64 (*.f64 2/27 (/.f64 (*.f64 y y) (/.f64 x (*.f64 t t)))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7))))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 y 7) (/.f64 (*.f64 x x) (pow.f64 t 7)))) -1/27)) (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 t x))))))))))) (pow.f64 z 3) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y (*.f64 t x))) (*.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 14) (pow.f64 t 14)) (pow.f64 x 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18) (pow.f64 (/.f64 (*.f64 (pow.f64 y 17) (pow.f64 t 17)) x) 1/18))))) (*.f64 z z) (*.f64 y (*.f64 t x)))))","(fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) -1)) (fma.f64 (pow.f64 z 3) (fma.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 2/27 (fma.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18))) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18) (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 5/27) (*.f64 (cbrt.f64 (*.f64 y (*.f64 t x))) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 t x))))) (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 5/27) (*.f64 2/27 (*.f64 (/.f64 (*.f64 y y) x) (*.f64 t t)))))))) (fma.f64 y (*.f64 t x) (*.f64 z (*.f64 z (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18) (pow.f64 (/.f64 (pow.f64 y 17) (/.f64 x (pow.f64 t 17))) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18) (pow.f64 (/.f64 (pow.f64 y 14) (/.f64 (pow.f64 x 4) (pow.f64 t 14))) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y (*.f64 t x))))))))))))","(fma.f64 z (neg.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18) (pow.f64 (*.f64 (pow.f64 y 13) (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/18))) (fma.f64 (pow.f64 z 3) (fma.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 2/27 (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x)) 1/18)) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) -1/9))) (+.f64 (*.f64 (cbrt.f64 (*.f64 t (*.f64 x y))) (*.f64 (/.f64 (*.f64 2/27 (*.f64 y y)) x) (*.f64 t t))) (*.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 y 7) x) (/.f64 (pow.f64 t 7) x))) 5/27) (+.f64 (*.f64 (cbrt.f64 (*.f64 t (*.f64 x y))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 t (*.f64 x y)))))) -1/3))))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (cbrt.f64 (*.f64 t (*.f64 x y))) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 14) (pow.f64 x 4)) (pow.f64 t 14)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) x) (pow.f64 t 17)) 1/18) (pow.f64 (*.f64 (/.f64 (pow.f64 y 17) x) (pow.f64 t 17)) 1/18)) 1/9)) (*.f64 t (*.f64 x y)))))"]],"stop":[["node limit",1]],"time":45.613037109375,"type":"simplify"},{"compiler":[[4906,2984]],"time":52.026123046875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 y)) (cbrt.f64 (*.f64 t (-.f64 x z))))","fresh",16.596739842177954],["(*.f64 y (*.f64 t (-.f64 x z)))","done",7.163718512239753],["(pow.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1) 3)","fresh",9.71139891785418],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","fresh",9.383784952948453],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","fresh",7.564006354135222],["(*.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 t (-.f64 x z))))","fresh",7.626142645524316],["(/.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))","fresh",34.13933335520603],["(*.f64 (*.f64 y t) (-.f64 x z))","next",7.5629276002317125]],"compiler":[[24,15],[11,7],[16,12],[13,8],[14,10],[17,11],[19,11],[11,7],[24,15],[16,12],[13,8],[14,10],[17,11],[19,11],[11,7]],"count":[[170,8]],"kept":[{"done":[1,1],"fresh":[6,3],"new":[162,4],"picked":[1,0]}],"min-error":[0.00390625],"time":35.368896484375,"type":"prune"},{"compiler":[[21,7]],"locations":[["(*.f64 (*.f64 y t) (-.f64 x z))",7.375685942269115,true]],"time":4.300048828125,"type":"localize"},{"count":[[1,48]],"series":[["(*.f64 (*.f64 y t) (-.f64 x z))","z","-inf",0.178955078125],["(*.f64 (*.f64 y t) (-.f64 x z))","z","inf",0.162841796875],["(*.f64 (*.f64 y t) (-.f64 x z))","z","0",0.175048828125],["(*.f64 (*.f64 y t) (-.f64 x z))","x","-inf",0.1630859375],["(*.f64 (*.f64 y t) (-.f64 x z))","x","inf",0.2080078125],["(*.f64 (*.f64 y t) (-.f64 x z))","x","0",0.177978515625],["(*.f64 (*.f64 y t) (-.f64 x z))","t","-inf",0.157958984375],["(*.f64 (*.f64 y t) (-.f64 x z))","t","inf",0.177978515625],["(*.f64 (*.f64 y t) (-.f64 x z))","t","0",0.149169921875],["(*.f64 (*.f64 y t) (-.f64 x z))","y","-inf",0.162109375],["(*.f64 (*.f64 y t) (-.f64 x z))","y","inf",0.184814453125],["(*.f64 (*.f64 y t) (-.f64 x z))","y","0",0.195068359375]],"time":2.22705078125,"type":"series"},{"count":[[1,19]],"egraph":[[2,2324,10,0.021213917],[1,170,10,0.0029521250000000003],[0,8,10,0.000174875]],"inputs":[["(*.f64 (*.f64 y t) (-.f64 x z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y t)) (*.f64 (neg.f64 z) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y t) x) (*.f64 (*.f64 y t) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (*.f64 y t) (-.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 x 3) (pow.f64 z 3)) (*.f64 y t)) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) (*.f64 y t)) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y t) (-.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 y t) (-.f64 x z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y t) (-.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 y t) (-.f64 x z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 y t) (-.f64 x z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 x z)) (*.f64 y t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 y t) (-.f64 x z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y t) 3) (pow.f64 (-.f64 x z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 x z) 3) (pow.f64 (*.f64 y t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 y t) (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 y t) (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 y t) (-.f64 x z))))))))"]],"rules":[["egg-rr",19]],"stop":[["node limit",1]],"time":38.657958984375,"type":"rewrite"},{"count":[[67,27]],"egraph":[[11,2592,468,0.029876834000000005],[10,2592,468,0.025228376000000004],[9,2580,468,0.021545834000000003],[8,1938,468,0.017845001000000003],[7,1294,468,0.012158667000000001],[6,848,468,0.007063750000000001],[5,506,468,0.003921667],[4,319,468,0.002221792],[3,215,468,0.0012625420000000002],[2,92,468,0.000673292],[1,34,468,0.000277875],[0,16,468,0.00010725]],"inputs":[["(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 y t) x)","(*.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 y (*.f64 t z)))","(*.f64 y (neg.f64 (*.f64 t z)))","(*.f64 y (*.f64 t (neg.f64 z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(*.f64 y (*.f64 t (-.f64 x z)))"]],"stop":[["saturated",1]],"time":50.969970703125,"type":"simplify"},{"compiler":[[292,97]],"time":2.69189453125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 y)) (cbrt.f64 (*.f64 t (-.f64 x z))))","fresh",16.596739842177954],["(*.f64 y (*.f64 t (-.f64 x z)))","done",7.163718512239753],["(pow.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1) 3)","fresh",9.71139891785418],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)","fresh",9.383784952948453],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","next",7.564006354135222],["(*.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 t (-.f64 x z))))","fresh",7.626142645524316],["(/.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))","fresh",34.13933335520603],["(*.f64 (*.f64 y t) (-.f64 x z))","done",7.5629276002317125]],"compiler":[[24,15],[11,7],[16,12],[13,8],[14,10],[17,11],[19,11],[11,7],[24,15],[16,12],[13,8],[14,10],[17,11],[19,11]],"count":[[35,8]],"kept":[{"done":[1,1],"fresh":[6,6],"new":[27,0],"picked":[1,1]}],"min-error":[0.00390625],"time":7.338134765625,"type":"prune"},{"compiler":[[41,13]],"locations":[["(*.f64 t (-.f64 x z))",0.0234375,false],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)",0.6040002442110507,true],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))",6.799094620543033,true],["(cbrt.f64 (*.f64 t (-.f64 x z)))",7.764828366311306,true]],"time":7.7548828125,"type":"localize"},{"count":[[3,64]],"series":[["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","z","-inf",0.282958984375],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","z","inf",0.298828125],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","z","0",1.56005859375],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","x","-inf",0.2919921875],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","x","inf",0.2958984375],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","x","0",2.156982421875],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","t","-inf",0.2939453125],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","t","inf",0.294921875],["(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)","t","0",0.287109375],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","z","-inf",0.741943359375],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","z","inf",0.263916015625],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","z","0",0.239013671875],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","x","-inf",0.798828125],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","x","inf",0.26611328125],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","x","0",0.240966796875],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","t","-inf",1.8759765625],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","t","inf",0.373779296875],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","t","0",0.282958984375],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","y","-inf",0.239013671875],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","y","inf",0.3369140625],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","y","0",0.303955078125],["(cbrt.f64 (*.f64 t (-.f64 x z)))","z","-inf",0.2060546875],["(cbrt.f64 (*.f64 t (-.f64 x z)))","z","inf",0.194091796875],["(cbrt.f64 (*.f64 t (-.f64 x z)))","z","0",0.77099609375],["(cbrt.f64 (*.f64 t (-.f64 x z)))","x","-inf",0.219970703125],["(cbrt.f64 (*.f64 t (-.f64 x z)))","x","inf",0.218017578125],["(cbrt.f64 (*.f64 t (-.f64 x z)))","x","0",2.469970703125],["(cbrt.f64 (*.f64 t (-.f64 x z)))","t","-inf",0.23291015625],["(cbrt.f64 (*.f64 t (-.f64 x z)))","t","inf",0.197021484375],["(cbrt.f64 (*.f64 t (-.f64 x z)))","t","0",0.259033203125]],"time":16.924072265625,"type":"series"},{"count":[[3,104]],"egraph":[[2,2770,26,0.025041292],[1,237,26,0.0038910840000000004],[0,11,26,0.000289875]],"inputs":[["(cbrt.f64 (*.f64 t (-.f64 x z)))","(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","(pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (-.f64 x z))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 t (-.f64 x z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x z)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (-.f64 x z)) 1/6) (pow.f64 (*.f64 t (-.f64 x z)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (-.f64 x z)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 x z)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 x z)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (-.f64 x z))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 x z)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 t (-.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (*.f64 t (-.f64 x z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (*.f64 (-.f64 x z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (*.f64 t (-.f64 x z)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (*.f64 t (-.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (*.f64 t (-.f64 x z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (*.f64 t (-.f64 x z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t (*.f64 (-.f64 x z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 t (*.f64 (-.f64 x z) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x t) (*.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t x) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (-.f64 x z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 t) (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (-.f64 x z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 t) (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t (-.f64 x z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (-.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x z) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (-.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 t (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2) (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x z)) 2) (*.f64 (cbrt.f64 (-.f64 x z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 t) (*.f64 (cbrt.f64 (-.f64 x z)) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 t) 2) (*.f64 (cbrt.f64 t) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x z)) (*.f64 (sqrt.f64 (-.f64 x z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 t (-.f64 x z))) (sqrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (-.f64 x z)) 1/6) (pow.f64 (*.f64 t (-.f64 x z)) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 t (-.f64 x z)) 5/6) (pow.f64 (*.f64 t (-.f64 x z)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (pow.f64 (cbrt.f64 (-.f64 x z)) 2)) (cbrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 t (sqrt.f64 (-.f64 x z))) (sqrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x z) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x z) (sqrt.f64 t)) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2) 1) (cbrt.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 2) (cbrt.f64 t)) (cbrt.f64 (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 x 3) (pow.f64 z 3)) t) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 z z)) t) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (-.f64 x z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 t) (-.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (-.f64 x z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (-.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 t (-.f64 x z)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 t (-.f64 x z)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 t (-.f64 x z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 t (-.f64 x z))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 t (-.f64 x z)))) 3/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t x (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x t (*.f64 (neg.f64 z) t))))))"]],"rules":[["egg-rr",49],["egg-rr",21],["egg-rr",34]],"stop":[["node limit",1]],"time":49.466064453125,"type":"rewrite"},{"count":[[168,144]],"egraph":[[3,7529,2001,0.032861124],[2,2672,2006,0.016938874],[1,777,2019,0.005502958],[0,230,2288,0.001199833]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 11)) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 11)) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))))","(pow.f64 (*.f64 t x) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (pow.f64 (*.f64 t x) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 t x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 11)) (pow.f64 x 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 x 2))) 1/3))) (+.f64 (pow.f64 (*.f64 t x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 11)) (pow.f64 x 7)) 1/9) (pow.f64 z 2))))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 2) z)))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z))))))","(*.f64 (pow.f64 1 1/3) (*.f64 t x))","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 t x)))","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 t x)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)))))) (pow.f64 z 2))))","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 t x)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (pow.f64 (/.f64 1 (*.f64 t x)) 1/3))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 2) x))))) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))))))))) (pow.f64 z 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)))))) (pow.f64 z 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 11)) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x)))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))))))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)))) (*.f64 (*.f64 x x) -1/9))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 11)) (pow.f64 z 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 z z) (*.f64 t t)))) (/.f64 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 x x))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 t t))))) (*.f64 (/.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 3))) (fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)))))))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 t t))))) (*.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (pow.f64 (cbrt.f64 -1) 2) -5/27)) (pow.f64 x 3))) (fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) x)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 z 7)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)))) (*.f64 (*.f64 x x) -1/9)))))","(pow.f64 (*.f64 t x) 1/3)","(cbrt.f64 (*.f64 t x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (pow.f64 (*.f64 t x) 1/3))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (cbrt.f64 (*.f64 t x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 t x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 11)) (pow.f64 x 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (cbrt.f64 (*.f64 t x))) (*.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18)))))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (fma.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18))) (cbrt.f64 (*.f64 t x))))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (fma.f64 -1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18)))) (cbrt.f64 (*.f64 t x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) z)) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 x 2))) 1/3))) (+.f64 (pow.f64 (*.f64 t x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 11)) (pow.f64 x 7)) 1/9) (pow.f64 z 2))))))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (fma.f64 -1/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))))) (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (*.f64 (*.f64 x x) (*.f64 t t)))))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18)))) (cbrt.f64 (*.f64 t x)))))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (fma.f64 (*.f64 (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27)) (pow.f64 z 3)) (cbrt.f64 (/.f64 1 (*.f64 x (*.f64 x (*.f64 t t))))) (fma.f64 -1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18))) (cbrt.f64 (*.f64 t x)))))","(fma.f64 -1/3 (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18))) (fma.f64 (*.f64 (*.f64 -1/3 (pow.f64 z 3)) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27)) (cbrt.f64 (/.f64 1 (*.f64 (*.f64 t x) (*.f64 t x)))) (fma.f64 -1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 (pow.f64 t 11) (pow.f64 x 7)) 1/18)))) (cbrt.f64 (*.f64 t x)))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 (*.f64 t z) y))","(*.f64 y (*.f64 z (neg.f64 t)))","(*.f64 z (*.f64 y (neg.f64 t)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 t x) y)","(*.f64 t (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 t x) y)","(*.f64 t (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 y (*.f64 t x))","(*.f64 (*.f64 t x) y)","(*.f64 t (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 t z))) (*.f64 y (*.f64 t x)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 (*.f64 t z) y))","(*.f64 y (*.f64 z (neg.f64 t)))","(*.f64 z (*.f64 y (neg.f64 t)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 -1 (*.f64 y (*.f64 t z)))","(neg.f64 (*.f64 (*.f64 t z) y))","(*.f64 y (*.f64 z (neg.f64 t)))","(*.f64 z (*.f64 y (neg.f64 t)))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(+.f64 (*.f64 y (*.f64 t x)) (*.f64 -1 (*.f64 y (*.f64 t z))))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 t (*.f64 (-.f64 x z) y))","(*.f64 (-.f64 x z) (*.f64 t y))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z)))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (neg.f64 (*.f64 t z)))","(-.f64 (*.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4)))) (*.f64 t z))","(-.f64 (*.f64 x (*.f64 (*.f64 (cbrt.f64 (*.f64 -1 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18))) (*.f64 t z))","(-.f64 (*.f64 x (*.f64 (*.f64 (cbrt.f64 (neg.f64 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18))) (*.f64 t z))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z)))))","(fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9))))) (*.f64 x x) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (neg.f64 (*.f64 t z))))","(-.f64 (fma.f64 (*.f64 x x) (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1/9)) (*.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 t z))","(-.f64 (*.f64 x (+.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 -1 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (*.f64 x (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) 1/9)))))) (*.f64 t z))","(-.f64 (*.f64 x (+.f64 (*.f64 (*.f64 (cbrt.f64 (neg.f64 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (*.f64 x (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) 1/9)))))) (*.f64 t z))","(+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 17)) z) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))))))) (pow.f64 x 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 7)) (pow.f64 z 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 t 14)) (pow.f64 z 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 2) z)))) (cbrt.f64 -1))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 z 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 4))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) x) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 t z))))))","(fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9))))) (*.f64 x x) (fma.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9))) (fma.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (/.f64 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))))) (cbrt.f64 -1))) (*.f64 2/27 (/.f64 (*.f64 t t) z)))) (+.f64 (*.f64 -1/3 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))) (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))))))) (*.f64 -2/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)))))))) (pow.f64 x 3) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))) 1) x (neg.f64 (*.f64 t z)))))","(fma.f64 (*.f64 x x) (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1/9)) (-.f64 (fma.f64 (pow.f64 x 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (fma.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 z) t)) (/.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (cbrt.f64 -1))) (*.f64 2/27 (/.f64 t (/.f64 z t))))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -2/27)))) (*.f64 x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 4))))) (*.f64 t z)))","(fma.f64 (*.f64 x x) (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) 1/9))) (fma.f64 (pow.f64 x 3) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 -1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18))) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)))) (fma.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (/.f64 1 t) z))) (/.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (cbrt.f64 -1) -5/27)) (/.f64 2/27 (/.f64 z (*.f64 t t))))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (/.f64 -2/27 (pow.f64 (cbrt.f64 -1) 2)))))) (-.f64 (*.f64 x (*.f64 (*.f64 (cbrt.f64 (*.f64 -1 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18))) (*.f64 t z))))","(fma.f64 x (+.f64 (*.f64 (*.f64 (cbrt.f64 (neg.f64 (cbrt.f64 -1))) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 z 4)) 1/18)) (*.f64 (+.f64 (*.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 -1)))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) z) 1/18)) 1/9))) x)) (fma.f64 (pow.f64 x 3) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 -1/9 (*.f64 (*.f64 (cbrt.f64 (/.f64 -1 (cbrt.f64 -1))) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 z 4)) 1/18))) (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 z z)) 1/18)))) (fma.f64 (cbrt.f64 (*.f64 t z)) (*.f64 (cbrt.f64 -1) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (/.f64 1 t) z))) (/.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (cbrt.f64 -1) -5/27)) (/.f64 2/27 (/.f64 z (*.f64 t t))))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 z z))) (/.f64 -2/27 (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 z (neg.f64 t))))","(*.f64 (pow.f64 1 1/3) (*.f64 t x))","(*.f64 t x)","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 t x)))","(fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)) -1) (*.f64 t x))","(fma.f64 t x (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)) (neg.f64 z)))","(-.f64 (*.f64 t x) (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)) z))","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 t x)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)))))) (pow.f64 z 2))))","(+.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)) -1) (*.f64 t x)) (*.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)) -1/9))))))","(fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) -1)) (fma.f64 t x (*.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 t x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)))))","(fma.f64 z (neg.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)) (*.f64 t x)))","(+.f64 (*.f64 t x) (*.f64 z (-.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)) z) (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)))))","(+.f64 (*.f64 z (+.f64 (*.f64 -2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)) (*.f64 -1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 x 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 t x)) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3))) (pow.f64 (/.f64 1 (*.f64 t x)) 1/3))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 2) x))))) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 7)) (pow.f64 x 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 t 7) (pow.f64 x 2)) 1/3))))))))) (pow.f64 z 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 17)) x) 1/9)) (*.f64 (pow.f64 (*.f64 1 (*.f64 t x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 t 14)) (pow.f64 x 4)) 1/9)))))) (pow.f64 z 2)))))","(+.f64 (fma.f64 z (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)) -1) (*.f64 t x)) (fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)) -1/9)) (fma.f64 (cbrt.f64 (*.f64 t x)) (fma.f64 -2/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))))) (cbrt.f64 (/.f64 1 (*.f64 t x)))) (*.f64 2/27 (/.f64 (*.f64 t t) x))) (+.f64 (*.f64 2/27 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)))) (*.f64 -1/3 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) (*.f64 2/9 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))))))))) (pow.f64 z 3) (*.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)) -1/9)))))))","(fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) -1)) (fma.f64 t x (fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 t x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)) (*.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18)))) (fma.f64 (cbrt.f64 (*.f64 t x)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (cbrt.f64 (/.f64 1 (*.f64 t x)))) (*.f64 2/27 (/.f64 t (/.f64 x t)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 2/27))))))))","(fma.f64 z (neg.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18))) (fma.f64 t x (*.f64 (*.f64 z z) (+.f64 (+.f64 (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)) (*.f64 (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 t x)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (cbrt.f64 (/.f64 1 (*.f64 t x)))) (*.f64 2/27 (/.f64 t (/.f64 x t)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 2/27)))) z)))))","(+.f64 (fma.f64 t x (*.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 t 7) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 t x)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (cbrt.f64 (/.f64 1 (*.f64 t x)))) (*.f64 2/27 (/.f64 t (/.f64 x t)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 t 7) (*.f64 x x))) 2/27)))))) (*.f64 z (-.f64 (*.f64 (+.f64 (*.f64 (cbrt.f64 (*.f64 t x)) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 t 14) (pow.f64 x 4)) 1/18) -1/9))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18) (pow.f64 (/.f64 (pow.f64 t 17) x) 1/18)) 1/9)) z) (*.f64 (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18) (pow.f64 (*.f64 (pow.f64 t 13) (pow.f64 x 4)) 1/18)))))"]],"stop":[["node limit",1]],"time":64.296875,"type":"simplify"},{"compiler":[[4348,2672]],"time":47.22216796875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 y)) (cbrt.f64 (*.f64 t (-.f64 x z))))","fresh",16.596739842177954],["(*.f64 y (*.f64 t (-.f64 x z)))","done",7.163718512239753],["(*.f64 (*.f64 y t) (-.f64 x z))","done",7.5629276002317125],["(pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 3)","fresh",9.71139891785418],["(pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)","fresh",9.379878702948453],["(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","done",7.564006354135222],["(*.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 t (-.f64 x z))))","fresh",7.626142645524316],["(*.f64 y (*.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (-.f64 x z))))","fresh",20.080780078147537]],"compiler":[[24,15],[11,7],[11,7],[14,10],[13,9],[14,10],[17,11],[15,9]],"count":[[176,8]],"kept":[{"done":[2,2],"fresh":[5,2],"new":[168,3],"picked":[1,1]}],"min-error":[0.00390625],"time":36.347900390625,"type":"prune"},{"accuracy":[0.19921875],"baseline":[7.163718512239753],"branch":[["x",3.9685721070456124,3],["y",1.6295347151882067,2],["z",2.8182237014897136,6],["t",1.6451597151882067,2],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)",0.203125,5],["(-.f64 (*.f64 x y) (*.f64 z y))",0.19921875,5]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[11,7],[179,66]],"count":[[15,5]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 3)","(pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)","(*.f64 y (*.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (-.f64 x z))))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 2) (cbrt.f64 y)) (cbrt.f64 (*.f64 t (-.f64 x z))))","(pow.f64 (pow.f64 (cbrt.f64 (*.f64 t (*.f64 (-.f64 x z) y))) 1) 3)","(*.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (*.f64 t (-.f64 x z))))","(*.f64 (*.f64 y t) (-.f64 x z))","(pow.f64 (cbrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 3)","(*.f64 y (pow.f64 (cbrt.f64 (*.f64 t (-.f64 x z))) 3))","(pow.f64 (sqrt.f64 (*.f64 y (*.f64 t (-.f64 x z)))) 2)","(/.f64 (*.f64 (*.f64 y t) (-.f64 (*.f64 x x) (*.f64 z z))) (+.f64 x z))","(/.f64 (*.f64 (*.f64 y t) (-.f64 (pow.f64 x 3) (pow.f64 z 3))) (fma.f64 x x (*.f64 z (+.f64 x z))))","(+.f64 (*.f64 (*.f64 y t) x) (*.f64 (*.f64 y t) (neg.f64 z)))","(*.f64 y (*.f64 t (-.f64 x z)))","(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)"]],"link":["."],"name":["Linear.Projection:inverseInfinitePerspective from linear-1.19.1.3"],"oracle":[54.248718492133364],"outputs":[["(*.f64 y (*.f64 t (-.f64 x z)))","(pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)","(*.f64 y (*.f64 t (-.f64 x z)))","(pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1)","(*.f64 y (*.f64 t (-.f64 x z)))"]],"time":117.091064453125,"times":[["x",16.091064453125],["y",11.14501953125],["z",31.619140625],["t",11.0400390625],["(*.f64 (-.f64 (*.f64 x y) (*.f64 z y)) t)",21.505126953125],["(-.f64 (*.f64 x y) (*.f64 z y))",22.468017578125]],"type":"regimes"},{"bstep":[[1.860119148124245e+184,1.6153516744241205e+187,0.02685546875],[1.7737461947943508e-275,4.0944747028614775e-274,0.028076171875],[-4.053703906112138e-134,-4.735606172184124e-138,0.067138671875],[-7.478144950771806e+197,-2.931880261596075e+196,0.109130859375]],"compiler":[[9,7],[11,7]],"method":["left-value","left-value","left-value","left-value"],"time":0.376953125,"type":"bsearch"},{"compiler":[[79,24]],"egraph":[[5,66,110,0.000488416],[4,65,110,0.00040512400000000003],[3,61,110,0.000321249],[2,55,110,0.00023874900000000001],[1,43,110,0.00015208300000000001],[0,28,110,7.3208e-5]],"inputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) -500000000000000008767770783009700270768720932588600043072899052468170786152756596689141885761882182602450164015187267140930505552933938113792995399608025162783516999830380746528316254123530500702208) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) -8183476519740355/204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) 6237000967295999/311850048364799970571308236412006025948039259443040240859773006630814358104525635278899682108224328295209757319405077381870693435686499009490495593482004909425000886398607136955865268975681716747289586991334988123957939133612635998263883635695006899610487641699336881506618514879741251551232) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) 20000000000000000347133368339382573870453505234990611224736886462437054770952482249848261400637690118797395263364344950671345201327496585184494821583360107684373027385378753248237715456) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1) (*.f64 y (*.f64 t (-.f64 x z)))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) -500000000000000008767770783009700270768720932588600043072899052468170786152756596689141885761882182602450164015187267140930505552933938113792995399608025162783516999830380746528316254123530500702208) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) -8183476519740355/204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) 6237000967295999/311850048364799970571308236412006025948039259443040240859773006630814358104525635278899682108224328295209757319405077381870693435686499009490495593482004909425000886398607136955865268975681716747289586991334988123957939133612635998263883635695006899610487641699336881506618514879741251551232) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z y)) 20000000000000000347133368339382573870453505234990611224736886462437054770952482249848261400637690118797395263364344950671345201327496585184494821583360107684373027385378753248237715456) (pow.f64 (*.f64 t (*.f64 (-.f64 x z) y)) 1) (*.f64 y (*.f64 t (-.f64 x z)))))))","(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 y z)) -500000000000000008767770783009700270768720932588600043072899052468170786152756596689141885761882182602450164015187267140930505552933938113792995399608025162783516999830380746528316254123530500702208) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 y z)) -8183476519740355/204586912993508866875824356051724947013540127877691549342705710506008362275292159680204380770369009821930417757972504438076078534117837065833032974336) (*.f64 t (*.f64 y (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 y z)) 6237000967295999/311850048364799970571308236412006025948039259443040240859773006630814358104525635278899682108224328295209757319405077381870693435686499009490495593482004909425000886398607136955865268975681716747289586991334988123957939133612635998263883635695006899610487641699336881506618514879741251551232) (*.f64 y (*.f64 t (-.f64 x z))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 y z)) 20000000000000000347133368339382573870453505234990611224736886462437054770952482249848261400637690118797395263364344950671345201327496585184494821583360107684373027385378753248237715456) (*.f64 t (*.f64 y (-.f64 x z))) (*.f64 y (*.f64 t (-.f64 x z)))))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.6279296875,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[79,24],[79,24],[79,24]],"remove-preprocessing":[[]],"time":25.37109375,"type":"end"}]