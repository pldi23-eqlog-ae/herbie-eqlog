[{"compiler":[[22,17]],"method":["search"],"sampling":[[12,0.10526290717280662,0.5185172834808622,0.37621980934633115],[11,0.07017527144853775,0.6783609573358649,0.2514637712155974],[10,0.046783514299025164,0.7017527144853775,0.2514637712155974],[9,0.031189009532683443,0.7173472192517192,0.2514637712155974],[8,0.0,0.7485362287844026,0.2514637712155974],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":169.406982421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",916.1708984375,14929],["body",256,"valid",522.526123046875,8256]],"time":1459.196044921875,"type":"sample"},{"compiler":[[21,16]],"egraph":[[0,4,4,2.5e-6],[6,5892,175,0.032016250999999996],[5,3672,175,0.019144209],[4,1664,175,0.009845416999999999],[3,633,175,0.003972542],[2,242,175,0.001558125],[1,118,175,0.000626417],[0,51,175,0.000206625]],"inputs":[["0","1","2","3"],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 y 1/2) x) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 z 1/2) y) (sqrt.f64 (*.f64 x 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 t 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 x x) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) t) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 y y) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 t 2))) (exp.f64 (/.f64 (*.f64 z z) 2)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (sqrt.f64 (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (*.f64 (-.f64 (*.f64 y 1/2) x) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (sqrt.f64 (*.f64 z 2)) (-.f64 (*.f64 1/2 y) x)))","(*.f64 (-.f64 (*.f64 1/2 y) x) (*.f64 (sqrt.f64 (*.f64 z 2)) (sqrt.f64 (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 y) x)))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 y) x)))","(*.f64 (*.f64 (-.f64 (*.f64 z 1/2) y) (sqrt.f64 (*.f64 x 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 z) y) (sqrt.f64 (*.f64 x 2))))","(*.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 z) y)) (sqrt.f64 (*.f64 x 2)))","(*.f64 (sqrt.f64 (*.f64 x 2)) (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 z) y)))","(*.f64 (sqrt.f64 (*.f64 x 2)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 z) y)))","(*.f64 (-.f64 (*.f64 1/2 z) y) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 (*.f64 x 2))))","(*.f64 (*.f64 (-.f64 (*.f64 t 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 x x) 2)))","(*.f64 (*.f64 (sqrt.f64 (*.f64 z 2)) (-.f64 (*.f64 1/2 t) y)) (sqrt.f64 (exp.f64 (*.f64 x x))))","(*.f64 (fma.f64 1/2 t (neg.f64 y)) (*.f64 (sqrt.f64 (*.f64 z 2)) (sqrt.f64 (pow.f64 (exp.f64 x) x))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (fma.f64 1/2 t (neg.f64 y)) (sqrt.f64 (pow.f64 (exp.f64 x) x))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 1/2 t) y) (pow.f64 (sqrt.f64 (exp.f64 x)) x)))","(*.f64 (*.f64 (sqrt.f64 (*.f64 z 2)) (fma.f64 1/2 t (neg.f64 y))) (pow.f64 (sqrt.f64 (exp.f64 x)) x))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))))","(*.f64 (-.f64 (*.f64 x 1/2) z) (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (sqrt.f64 (*.f64 y 2))))","(*.f64 (sqrt.f64 (*.f64 y 2)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 x 1/2) z)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 x 1/2) z) (sqrt.f64 (*.f64 y 2))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) t) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 y y) 2)))","(*.f64 (-.f64 (*.f64 x 1/2) t) (*.f64 (sqrt.f64 (*.f64 z 2)) (sqrt.f64 (exp.f64 (*.f64 y y)))))","(*.f64 (-.f64 (*.f64 x 1/2) t) (*.f64 (sqrt.f64 (*.f64 z 2)) (sqrt.f64 (pow.f64 (exp.f64 y) y))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 x 1/2) t) (sqrt.f64 (exp.f64 (*.f64 y y)))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 x 1/2) t) (pow.f64 (sqrt.f64 (exp.f64 y)) y)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 t 2))) (exp.f64 (/.f64 (*.f64 z z) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 2 t))) (sqrt.f64 (exp.f64 (*.f64 z z))))","(*.f64 (sqrt.f64 (*.f64 2 t)) (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (pow.f64 (exp.f64 z) z))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 2 t))) (sqrt.f64 (pow.f64 (exp.f64 z) z)))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 2 t)) (pow.f64 (sqrt.f64 (exp.f64 z)) z)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":58.322998046875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,5981,25,0.033746708],[7,3740,25,0.020270708000000002],[6,1796,25,0.010657874000000001],[5,639,25,0.004505666],[4,289,25,0.001847791],[3,116,25,0.000810291],[2,52,25,0.000365208],[1,29,25,0.000171416],[0,16,25,6.5833e-5]],"inputs":[["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (sqrt.f64 (exp.f64 (*.f64 t t))))","(*.f64 (sqrt.f64 (*.f64 z 2)) (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (pow.f64 (exp.f64 t) t))))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (sqrt.f64 (pow.f64 (exp.f64 t) t)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))"]],"stop":[["node limit",1]],"time":45.05810546875,"type":"simplify"},{"compiler":[[37,27]],"time":0.539794921875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","next",0.25228500976844204],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))","fresh",0.258476269536884]],"compiler":[[20,15],[21,16],[20,15],[21,16]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.24609375],"time":1.623046875,"type":"prune"},{"compiler":[[61,31]],"locations":[["(pow.f64 (sqrt.f64 (exp.f64 t)) t)",0.0078125,true],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))",0.01171875,true],["(sqrt.f64 (exp.f64 t))",0.01171875,true],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))",0.234375,true]],"time":13.89208984375,"type":"localize"},{"count":[[4,56]],"series":[["(pow.f64 (sqrt.f64 (exp.f64 t)) t)","t","-inf",0.14306640625],["(pow.f64 (sqrt.f64 (exp.f64 t)) t)","t","inf",0.14599609375],["(pow.f64 (sqrt.f64 (exp.f64 t)) t)","t","0",0.196044921875],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","-inf",0.43994140625],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","inf",0.44287109375],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","0",0.4091796875],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","z","-inf",0.51513671875],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","z","inf",0.56298828125],["(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","z","0",0.48486328125],["(sqrt.f64 (exp.f64 t))","t","-inf",0.197998046875],["(sqrt.f64 (exp.f64 t))","t","inf",0.221923828125],["(sqrt.f64 (exp.f64 t))","t","0",0.193115234375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","t","-inf",0.71484375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","t","inf",0.9111328125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","t","0",0.905029296875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","z","-inf",0.743896484375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","z","inf",0.626220703125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","z","0",0.880859375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","y","-inf",0.47509765625],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","y","inf",0.5419921875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","y","0",1.55810546875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","x","-inf",1.45703125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","x","inf",0.666015625],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","x","0",4.404052734375]],"time":18.25390625,"type":"series"},{"count":[[4,91]],"egraph":[[2,4107,50,0.030997],[1,333,50,0.005988625],[0,16,54,0.000403792]],"inputs":[["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(sqrt.f64 (exp.f64 t))","(*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(pow.f64 (sqrt.f64 (exp.f64 t)) t)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 x 1/2) 3) (pow.f64 y 3)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 1/4 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 1/4 (*.f64 x x) (neg.f64 (*.f64 y y))) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 x 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (-.f64 (pow.f64 (*.f64 x 1/2) 3) (pow.f64 y 3))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 1/4 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (fma.f64 1/4 (*.f64 x x) (neg.f64 (*.f64 y y)))) (fma.f64 x 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x 1/2) y) 3) (pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3) (pow.f64 (-.f64 (*.f64 x 1/2) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (*.f64 x 1/2) (*.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) (neg.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 t)))) (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 t)))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (exp.f64 t))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (exp.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (exp.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 t)) (cbrt.f64 (sqrt.f64 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (exp.f64 t))) (cbrt.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 t) 1/4) (pow.f64 (exp.f64 t) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 t)) 2)) (sqrt.f64 (cbrt.f64 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 t)) 2) 1/2) (pow.f64 (cbrt.f64 (exp.f64 t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 t) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (exp.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (exp.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 t) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/2 t))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 t) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 z z) 3/2) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3) (pow.f64 (+.f64 z z) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 t (*.f64 1/2 t) (log.f64 (sqrt.f64 (+.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 t (*.f64 1/2 t) (log.f64 (sqrt.f64 (+.f64 z z)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t))))) (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))) (cbrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 t t))) (cbrt.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 t) (*.f64 1/4 t)) (pow.f64 (exp.f64 t) (*.f64 1/4 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (*.f64 1/2 t)) (sqrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 t)) 2) (*.f64 1/2 t)) (pow.f64 (cbrt.f64 (exp.f64 t)) (*.f64 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 t) (sqrt.f64 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 t)) t) (pow.f64 (cbrt.f64 (sqrt.f64 (exp.f64 t))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (exp.f64 t) 1/4) t) (pow.f64 (pow.f64 (exp.f64 t) 1/4) t))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (exp.f64 (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 t (*.f64 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 t (*.f64 1/2 t)) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",18],["egg-rr",25],["egg-rr",26]],"stop":[["node limit",1]],"time":57.968994140625,"type":"rewrite"},{"count":[[147,129]],"egraph":[[3,4002,1285,0.019354917],[2,828,1322,0.00720325],[1,270,1856,0.0018277089999999998],[0,94,1960,0.000490417]],"inputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","1","(+.f64 1 (*.f64 1/2 t))","(+.f64 1 (+.f64 (*.f64 1/2 t) (*.f64 1/8 (pow.f64 t 2))))","(+.f64 (*.f64 1/48 (pow.f64 t 3)) (+.f64 1 (+.f64 (*.f64 1/2 t) (*.f64 1/8 (pow.f64 t 2)))))","(*.f64 (sqrt.f64 2) (sqrt.f64 z))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z)))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z))))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","1","(+.f64 1 (*.f64 1/2 (pow.f64 t 2)))","(+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 1 (*.f64 1/2 (pow.f64 t 2))))","(+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 1 (+.f64 (*.f64 1/48 (pow.f64 t 6)) (*.f64 1/2 (pow.f64 t 2)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (sqrt.f64 z)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 z))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (neg.f64 y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 x (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 x (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 x (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (sqrt.f64 z)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 z))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (neg.f64 y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (sqrt.f64 z)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 z))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (neg.f64 y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y))))","(*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)) (sqrt.f64 z))) (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t))))))","(*.f64 (sqrt.f64 z) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (sqrt.f64 2))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (fma.f64 1/2 x (neg.f64 y)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)) (sqrt.f64 z))) (fma.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 z) (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4)) (sqrt.f64 z))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 (*.f64 1/8 (sqrt.f64 2)) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4))))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (sqrt.f64 2))) (*.f64 (pow.f64 t 4) (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) 1/8))))","(*.f64 (sqrt.f64 z) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (fma.f64 t (*.f64 t 1/2) (fma.f64 1/8 (pow.f64 t 4) 1)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)) (sqrt.f64 z))) (fma.f64 (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))) (sqrt.f64 z) (fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4)) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 6)) (sqrt.f64 z)))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)))))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (*.f64 1/8 (sqrt.f64 2)) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 6)))))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (sqrt.f64 2))) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))) (*.f64 (sqrt.f64 2) (*.f64 1/48 (pow.f64 t 6)))))))","(*.f64 (sqrt.f64 z) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (+.f64 (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (+.f64 1/8 (*.f64 (*.f64 t t) 1/48)))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (fma.f64 1/2 x (neg.f64 y)))))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","1","(+.f64 1 (*.f64 1/2 t))","(+.f64 1 (*.f64 t 1/2))","(fma.f64 t 1/2 1)","(+.f64 1 (+.f64 (*.f64 1/2 t) (*.f64 1/8 (pow.f64 t 2))))","(+.f64 1 (fma.f64 1/2 t (*.f64 (*.f64 t t) 1/8)))","(+.f64 1 (fma.f64 t 1/2 (*.f64 (*.f64 t t) 1/8)))","(fma.f64 t 1/2 (fma.f64 t (*.f64 t 1/8) 1))","(+.f64 (*.f64 1/48 (pow.f64 t 3)) (+.f64 1 (+.f64 (*.f64 1/2 t) (*.f64 1/8 (pow.f64 t 2)))))","(fma.f64 1/48 (pow.f64 t 3) (+.f64 1 (fma.f64 1/2 t (*.f64 (*.f64 t t) 1/8))))","(fma.f64 1/48 (pow.f64 t 3) (+.f64 1 (fma.f64 t 1/2 (*.f64 (*.f64 t t) 1/8))))","(fma.f64 1/48 (pow.f64 t 3) (fma.f64 t 1/2 (fma.f64 t (*.f64 t 1/8) 1)))","(*.f64 (sqrt.f64 2) (sqrt.f64 z))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)))))","(*.f64 (sqrt.f64 z) (*.f64 (fma.f64 1/2 (*.f64 t t) 1) (sqrt.f64 2)))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z)))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (sqrt.f64 z))))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))))))","(*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (fma.f64 1/8 (pow.f64 t 4) (*.f64 t (*.f64 t 1/2))))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (fma.f64 t (*.f64 t 1/2) (fma.f64 1/8 (pow.f64 t 4) 1))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z))))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (fma.f64 1/48 (*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (pow.f64 t 6))) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (sqrt.f64 z)))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t))) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))))) (*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6))))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (fma.f64 1/48 (pow.f64 t 6) 1) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (fma.f64 1/8 (pow.f64 t 4) (*.f64 t (*.f64 t 1/2))))))","(*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (fma.f64 1/8 (pow.f64 t 4) (fma.f64 t (*.f64 t 1/2) (*.f64 1/48 (pow.f64 t 6)))))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (sqrt.f64 z)))","1","(+.f64 1 (*.f64 1/2 (pow.f64 t 2)))","(+.f64 1 (*.f64 1/2 (*.f64 t t)))","(fma.f64 1/2 (*.f64 t t) 1)","(+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 1 (*.f64 1/2 (pow.f64 t 2))))","(fma.f64 1/8 (pow.f64 t 4) (+.f64 1 (*.f64 1/2 (*.f64 t t))))","(fma.f64 1/8 (pow.f64 t 4) (fma.f64 1/2 (*.f64 t t) 1))","(fma.f64 t (*.f64 t 1/2) (fma.f64 1/8 (pow.f64 t 4) 1))","(+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 1 (+.f64 (*.f64 1/48 (pow.f64 t 6)) (*.f64 1/2 (pow.f64 t 2)))))","(fma.f64 1/8 (pow.f64 t 4) (+.f64 1 (fma.f64 1/48 (pow.f64 t 6) (*.f64 1/2 (*.f64 t t)))))","(+.f64 (fma.f64 1/8 (pow.f64 t 4) (fma.f64 1/2 (*.f64 t t) 1)) (*.f64 1/48 (pow.f64 t 6)))","(fma.f64 1/8 (pow.f64 t 4) (fma.f64 1/48 (pow.f64 t 6) (fma.f64 1/2 (*.f64 t t) 1)))","(fma.f64 1/8 (pow.f64 t 4) (fma.f64 t (*.f64 t 1/2) (fma.f64 1/48 (pow.f64 t 6) 1)))"]],"stop":[["node limit",1]],"time":47.18212890625,"type":"simplify"},{"compiler":[[2834,1494]],"time":28.623046875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))","fresh",0.7765453735161247],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","next",0.4815025879159782],["(/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 x 1/2) 3) (pow.f64 y 3)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 1/4 (*.f64 x x))))","fresh",40.10924625437951],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","done",0.25228500976844204],["(*.f64 (-.f64 (*.f64 x 1/2) y) (cbrt.f64 (*.f64 (pow.f64 (+.f64 z z) 3/2) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3))))","fresh",18.832367952478982],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","fresh",33.58911539143938],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","fresh",0.5081825683790941],["(sqrt.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))","fresh",47.21374361625557],["(pow.f64 (sqrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 2)","fresh",34.276756347684426],["(pow.f64 (cbrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","fresh",0.7727091309692392],["(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2))","fresh",0.6371651856003985]],"compiler":[[22,16],[21,16],[35,24],[20,15],[24,18],[19,15],[21,16],[21,15],[22,16],[22,16],[22,16],[22,16],[21,16],[35,24],[24,18],[19,15],[21,16],[21,15],[22,16],[22,16],[22,16]],"count":[[131,11]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[129,10],"picked":[1,1]}],"min-error":[0.015625],"time":34.548828125,"type":"prune"},{"compiler":[[74,36]],"locations":[["(sqrt.f64 (exp.f64 t))",0.01171875,false],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))",0.015625,true],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))",0.3756637695368841,true],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))",0.40625,true]],"time":15.756103515625,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","y","-inf",0.177001953125],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","y","inf",0.195068359375],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","y","0",0.198974609375],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","x","-inf",0.264892578125],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","x","inf",0.195068359375],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","x","0",0.18994140625],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","t","-inf",0.180908203125],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","t","inf",0.1689453125],["(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","t","0",0.27880859375],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","z","-inf",0.719970703125],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","z","inf",0.31005859375],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","z","0",0.305908203125],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","y","-inf",0.211181640625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","y","inf",0.22900390625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","y","0",0.220947265625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","x","-inf",0.244140625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","x","inf",0.212890625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","x","0",0.22705078125],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","t","-inf",0.19287109375],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","t","inf",0.510009765625],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","t","0",0.2529296875],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","y","-inf",0.203125],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","y","inf",0.22021484375],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","y","0",0.200927734375],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","x","-inf",0.516845703125],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","x","inf",0.234130859375],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","x","0",0.2138671875],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","t","-inf",0.216064453125],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","t","inf",0.198974609375],["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","t","0",0.361083984375]],"time":8.366943359375,"type":"series"},{"count":[[3,68]],"egraph":[[2,4338,65,0.033011958],[1,353,65,0.006406541],[0,17,66,0.000425166]],"inputs":[["(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 x) (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (*.f64 1/2 x)) (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2)))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (-.f64 (*.f64 (pow.f64 x 3) 1/8) (pow.f64 y 3))) (fma.f64 y (fma.f64 1/2 x y) (*.f64 (*.f64 x x) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (fma.f64 (*.f64 x x) 1/4 (neg.f64 (*.f64 y y)))) (fma.f64 1/2 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3) (*.f64 2 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 1/2 (log.f64 2) (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 1/2 (log.f64 2) (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (*.f64 1/2 x) (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (exp.f64 (*.f64 t t)))) (neg.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))) 3) (pow.f64 z 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 z 3/2) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 z (*.f64 2 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y))) (log.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y))) (log.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 x) (sqrt.f64 (exp.f64 (*.f64 t t)))) (*.f64 (neg.f64 y) (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 1/2 x)) (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t))))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 (pow.f64 x 3) 1/8) (pow.f64 y 3)) (sqrt.f64 (exp.f64 (*.f64 t t)))) (fma.f64 y (fma.f64 1/2 x y) (*.f64 (*.f64 x x) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 x x) 1/4 (neg.f64 (*.f64 y y))) (sqrt.f64 (exp.f64 (*.f64 t t)))) (fma.f64 1/2 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 (pow.f64 x 3) 1/8) (pow.f64 y 3))) (fma.f64 y (fma.f64 1/2 x y) (*.f64 (*.f64 x x) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (fma.f64 (*.f64 x x) 1/4 (neg.f64 (*.f64 y y)))) (fma.f64 1/2 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 2) (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3) (pow.f64 (-.f64 (*.f64 1/2 x) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 1/2 x) y) 3) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (-.f64 (*.f64 1/2 x) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 1/2 x) (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (sqrt.f64 (exp.f64 (*.f64 t t))) (*.f64 (neg.f64 y) (sqrt.f64 (exp.f64 (*.f64 t t)))))))))"]],"rules":[["egg-rr",26],["egg-rr",18],["egg-rr",24]],"stop":[["node limit",1]],"time":58.888916015625,"type":"rewrite"},{"count":[[152,115]],"egraph":[[3,4183,1854,0.019807417],[2,830,1900,0.007503792],[1,265,2732,0.001877167],[0,86,2852,0.000518834]],"inputs":[["(*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))))))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y)))))))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(-.f64 (*.f64 1/2 x) y)","(-.f64 (+.f64 (*.f64 1/2 x) (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))) y)","(-.f64 (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (*.f64 1/8 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))))) y)","(-.f64 (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (*.f64 1/8 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))))) y)","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)))","(+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))))","(fma.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y) (*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t))))","(fma.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)))))","(*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4))) (fma.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y) (*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)))))","(fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4))) (fma.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t))))))","(fma.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))))))","(*.f64 (sqrt.f64 2) (*.f64 (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) 1) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y)))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4))) (fma.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 6)))))))","(fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4))) (fma.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 6)))))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 1/48 (pow.f64 t 6) (*.f64 1/2 (*.f64 t t))))) (*.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 2) 1/8)))))","(*.f64 (sqrt.f64 2) (fma.f64 1/2 x (fma.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) (*.f64 1/48 (pow.f64 t 6))) (neg.f64 y))))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (neg.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))) (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (neg.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 2) (neg.f64 y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 z)))","(*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (fma.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)) (sqrt.f64 z))) (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z) (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4)) (sqrt.f64 z))))))","(fma.f64 1/2 (*.f64 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))) (*.f64 (sqrt.f64 z) (fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4))) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y))))))","(*.f64 (sqrt.f64 z) (fma.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4)))))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) 1) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)) (sqrt.f64 z))) (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z) (fma.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4)) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 6)) (sqrt.f64 z)))))))","(+.f64 (*.f64 (sqrt.f64 z) (fma.f64 (sqrt.f64 2) (fma.f64 1/2 x (neg.f64 y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t)))))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 4)))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 6)))))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 1/48 (pow.f64 t 6) (*.f64 1/2 (*.f64 t t))))) (*.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 2) 1/8))))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (fma.f64 1/2 x (fma.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) (*.f64 1/48 (pow.f64 t 6))) (neg.f64 y)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (sqrt.f64 z)))))","(*.f64 (*.f64 (neg.f64 (sqrt.f64 z)) (*.f64 (sqrt.f64 2) y)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (neg.f64 (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 (*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))","(*.f64 1/2 (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 (*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))","(*.f64 1/2 (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 (*.f64 (*.f64 1/2 (sqrt.f64 2)) (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))","(*.f64 1/2 (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (sqrt.f64 z)))))","(*.f64 (*.f64 (neg.f64 (sqrt.f64 z)) (*.f64 (sqrt.f64 2) y)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (neg.f64 (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (sqrt.f64 z)))))","(*.f64 (*.f64 (neg.f64 (sqrt.f64 z)) (*.f64 (sqrt.f64 2) y)) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 y (neg.f64 (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))) (*.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (-.f64 (*.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (sqrt.f64 z))))","(-.f64 (*.f64 1/2 x) y)","(fma.f64 1/2 x (neg.f64 y))","(-.f64 (+.f64 (*.f64 1/2 x) (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y)))) y)","(-.f64 (*.f64 1/2 (+.f64 x (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)))) y)","(fma.f64 1/2 (+.f64 x (*.f64 (fma.f64 1/2 x (neg.f64 y)) (*.f64 t t))) (neg.f64 y))","(*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))","(-.f64 (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (*.f64 1/8 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))))) y)","(-.f64 (fma.f64 1/2 x (fma.f64 1/2 (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)) (*.f64 1/8 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4))))) y)","(-.f64 (fma.f64 1/2 x (*.f64 (fma.f64 1/2 x (neg.f64 y)) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/8 (pow.f64 t 4))))) y)","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) (*.f64 1/2 x)) y)","(*.f64 (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) 1) (-.f64 (*.f64 1/2 x) y))","(-.f64 (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (*.f64 1/8 (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))))) y)","(-.f64 (fma.f64 1/2 x (fma.f64 1/48 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 6)) (fma.f64 1/2 (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 t t)) (*.f64 1/8 (*.f64 (-.f64 (*.f64 1/2 x) y) (pow.f64 t 4)))))) y)","(-.f64 (fma.f64 1/2 x (fma.f64 1/48 (*.f64 (fma.f64 1/2 x (neg.f64 y)) (pow.f64 t 6)) (*.f64 (fma.f64 1/2 x (neg.f64 y)) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/8 (pow.f64 t 4)))))) y)","(-.f64 (fma.f64 1/2 x (*.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (*.f64 1/8 (pow.f64 t 4)) (fma.f64 1/48 (pow.f64 t 6) (*.f64 1/2 (*.f64 t t)))))) y)","(fma.f64 1/2 x (fma.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (fma.f64 1/2 (*.f64 t t) (*.f64 1/8 (pow.f64 t 4))) (*.f64 1/48 (pow.f64 t 6))) (neg.f64 y)))","(*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y))","(neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x))","(*.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (*.f64 1/2 x) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (*.f64 -1 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(fma.f64 1/2 (*.f64 x (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (neg.f64 y)))","(*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))"]],"stop":[["node limit",1]],"time":53.68701171875,"type":"simplify"},{"compiler":[[3402,1962]],"time":35.049072265625,"type":"eval"},{"alts":[["(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))","fresh",0.7765453735161247],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","done",0.4815025879159782],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","next",0.5081825683790941],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))) 3)) (sqrt.f64 z))","fresh",0.9182869384215974],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","done",0.25228500976844204],["(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))))","fresh",1.1167325254449767],["(*.f64 (cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3))) (sqrt.f64 z))","fresh",34.799669653577745],["(*.f64 (-.f64 (*.f64 x 1/2) y) (cbrt.f64 (*.f64 (pow.f64 (+.f64 z z) 3/2) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3))))","fresh",18.832367952478982],["(sqrt.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))","fresh",47.21374361625557],["(pow.f64 (cbrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","fresh",0.7727091309692392],["(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2))","fresh",0.6371651856003985]],"compiler":[[22,16],[21,16],[21,16],[24,19],[20,15],[23,18],[26,21],[24,18],[21,15],[22,16],[22,16],[22,16],[21,16],[24,19],[23,18],[26,21],[24,18],[21,15],[22,16],[22,16]],"count":[[158,11]],"kept":[{"done":[1,1],"fresh":[9,6],"new":[147,3],"picked":[1,1]}],"min-error":[0.01171875],"time":37.010986328125,"type":"prune"},{"compiler":[[68,32]],"locations":[["(sqrt.f64 (exp.f64 t))",0.01171875,false],["(*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t))",0.015625,true],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))",0.234375,true],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))",0.4576950195368841,true]],"time":14.195068359375,"type":"localize"},{"count":[[3,44]],"series":[["(*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","-inf",0.154052734375],["(*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","inf",0.181884765625],["(*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t))","t","0",0.235107421875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","z","-inf",0.35009765625],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","z","inf",0.492919921875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","z","0",0.307861328125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","t","-inf",0.18603515625],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","t","inf",0.200927734375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","t","0",0.23388671875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","y","-inf",0.22314453125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","y","inf",0.20703125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","y","0",0.22216796875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","x","-inf",0.210205078125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","x","inf",0.22607421875],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","x","0",0.2119140625],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","z","-inf",0.625],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","z","inf",0.25390625],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","z","0",0.274169921875],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","t","-inf",0.18310546875],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","t","inf",0.2119140625],["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","t","0",0.236083984375]],"time":5.761962890625,"type":"series"},{"count":[[3,62]],"egraph":[[2,4333,48,0.032351709],[1,353,48,0.006231167],[0,17,58,0.000411542]],"inputs":[["(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))) 3) (pow.f64 z 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 z 3/2) (pow.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y))) (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 (pow.f64 x 3) 1/8) (pow.f64 y 3)) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 (*.f64 x x) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 (*.f64 x x) 1/4) (*.f64 y y)) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (fma.f64 x 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 (pow.f64 x 3) 1/8) (pow.f64 y 3))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 (*.f64 x x) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 (*.f64 x x) 1/4) (*.f64 y y))) (fma.f64 x 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))) (-.f64 (*.f64 x 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) 3) (pow.f64 (-.f64 (*.f64 x 1/2) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x 1/2) y) 3) (pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 x 1/2) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))))) (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3) (*.f64 2 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 t (*.f64 t 1/2) (log.f64 (sqrt.f64 2))) 1))))))"]],"rules":[["egg-rr",18],["egg-rr",26],["egg-rr",18]],"stop":[["node limit",1]],"time":56.056884765625,"type":"rewrite"},{"count":[[106,92]],"egraph":[[3,3553,1150,0.018171209],[2,746,1186,0.006329],[1,240,1705,0.0015993749999999999],[0,82,1811,0.000439208]],"inputs":[["(*.f64 (sqrt.f64 2) (sqrt.f64 z))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z)))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2))))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2)))))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 2) (sqrt.f64 z))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z)))))","(*.f64 (sqrt.f64 z) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (sqrt.f64 2)))","(*.f64 (sqrt.f64 z) (fma.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 t t)) (sqrt.f64 2)))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z)))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (pow.f64 t 4))))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (*.f64 (sqrt.f64 z) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))))))","(*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/8 (pow.f64 t 4))))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (*.f64 1/8 (pow.f64 t 4)))))","(+.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (+.f64 (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (sqrt.f64 z))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 2)) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (sqrt.f64 z))))))","(fma.f64 (sqrt.f64 2) (sqrt.f64 z) (fma.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (sqrt.f64 z))) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 t t) (sqrt.f64 z))) (*.f64 1/8 (*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (pow.f64 t 4)))))))","(+.f64 (*.f64 (sqrt.f64 z) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))))) (*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6))))))","(*.f64 (sqrt.f64 z) (+.f64 (fma.f64 (sqrt.f64 2) (*.f64 1/8 (pow.f64 t 4)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/48 (pow.f64 t 6)) (*.f64 1/2 (*.f64 t t))))))","(*.f64 (sqrt.f64 z) (+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/48 (pow.f64 t 6)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 z) (neg.f64 y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z))) 1/2))","(*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z))) 1/2))","(*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) y)) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z)))","(*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))))","(*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 z))) 1/2))","(*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 z) (neg.f64 y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z)))","(neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 2) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (neg.f64 y))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (sqrt.f64 z) (neg.f64 y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x)) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t))) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 z)))","(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (-.f64 (*.f64 1/2 x) y)))","(*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 z)) (-.f64 (*.f64 1/2 x) y))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))","(fma.f64 1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (sqrt.f64 z))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y)))))","(*.f64 (sqrt.f64 z) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 t t)) (sqrt.f64 2))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))) (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z) (*.f64 1/8 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (-.f64 (*.f64 1/2 x) y))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 1/2 (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))) (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 (sqrt.f64 2) (*.f64 1/8 (pow.f64 t 4)) (sqrt.f64 2)))))","(*.f64 (sqrt.f64 z) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (+.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (*.f64 1/8 (pow.f64 t 4))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 2) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)) (+.f64 (*.f64 1/8 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))) (*.f64 1/48 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))) (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z) (fma.f64 1/8 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (-.f64 (*.f64 1/2 x) y))) (*.f64 1/48 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/2 x) y)) (sqrt.f64 z)))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 t t)) (-.f64 (*.f64 1/2 x) y))))) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 t 4) (-.f64 (*.f64 1/2 x) y)))) (*.f64 (*.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6))) (-.f64 (*.f64 1/2 x) y)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (-.f64 (*.f64 1/2 x) y) (fma.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 t t)) (sqrt.f64 2))) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 4)) (*.f64 1/48 (pow.f64 t 6)))))))","(*.f64 (sqrt.f64 z) (*.f64 (-.f64 (*.f64 1/2 x) y) (+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/48 (pow.f64 t 6))))))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) x) (sqrt.f64 z))) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 (sqrt.f64 (exp.f64 t)) t)))) (*.f64 1/2 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 x (sqrt.f64 2))))))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 x) y) (*.f64 (sqrt.f64 z) (pow.f64 (sqrt.f64 (exp.f64 t)) t))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))))","(sqrt.f64 2)","(+.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2))))","(+.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (sqrt.f64 2))","(fma.f64 (sqrt.f64 2) (*.f64 1/2 (*.f64 t t)) (sqrt.f64 2))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2)))))","(+.f64 (sqrt.f64 2) (fma.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)))))","(+.f64 (sqrt.f64 2) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4)))))","(+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/8 (pow.f64 t 4)))))","(*.f64 (sqrt.f64 2) (+.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (*.f64 1/8 (pow.f64 t 4))))","(+.f64 (sqrt.f64 2) (+.f64 (*.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6))) (+.f64 (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))) (*.f64 1/2 (*.f64 (sqrt.f64 2) (pow.f64 t 2))))))","(+.f64 (sqrt.f64 2) (fma.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (fma.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4)) (*.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t))))))","(+.f64 (sqrt.f64 2) (fma.f64 1/48 (*.f64 (sqrt.f64 2) (pow.f64 t 6)) (fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 t t)) (*.f64 1/8 (*.f64 (sqrt.f64 2) (pow.f64 t 4))))))","(+.f64 (fma.f64 (sqrt.f64 2) (*.f64 1/8 (pow.f64 t 4)) (sqrt.f64 2)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/48 (pow.f64 t 6)) (*.f64 1/2 (*.f64 t t)))))","(+.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/8 (pow.f64 t 4)) (+.f64 (*.f64 1/2 (*.f64 t t)) (*.f64 1/48 (pow.f64 t 6))))))"]],"stop":[["node limit",1]],"time":44.195068359375,"type":"simplify"},{"compiler":[[2780,1705]],"time":29.156982421875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","done",0.4815025879159782],["(sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))","fresh",47.21374361625557],["(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))))","fresh",1.1167325254449767],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","next",0.234375],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","done",0.5081825683790941],["(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) 3)","fresh",0.7727091309692392],["(*.f64 (cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3))) (sqrt.f64 z))","fresh",34.799669653577745],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))) 2) (sqrt.f64 z)))","fresh",0.5322838379159782]],"compiler":[[21,16],[21,16],[23,18],[29,19],[21,16],[22,17],[26,21],[23,18],[21,16],[23,18],[29,19],[22,17],[26,21],[23,18]],"count":[[135,8]],"kept":[{"done":[2,1],"fresh":[8,2],"new":[124,4],"picked":[1,1]}],"min-error":[0.01171875],"time":34.446044921875,"type":"prune"},{"compiler":[[82,37]],"locations":[["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))",0.01171875,true],["(exp.f64 (*.f64 t t))",0.016288769536884032,true],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))",0.109375,true],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))",0.234375,true]],"time":16.947021484375,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","t","-inf",0.1689453125],["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","t","inf",0.3349609375],["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","t","0",0.277099609375],["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","z","-inf",0.260009765625],["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","z","inf",0.41796875],["(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))","z","0",0.574951171875],["(exp.f64 (*.f64 t t))","t","-inf",0.15576171875],["(exp.f64 (*.f64 t t))","t","inf",0.14599609375],["(exp.f64 (*.f64 t t))","t","0",0.197021484375],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","y","-inf",0.23291015625],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","y","inf",0.240966796875],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","y","0",0.472900390625],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","t","-inf",0.251953125],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","t","inf",0.6240234375],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","t","0",1.149169921875],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","z","-inf",2.158935546875],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","z","inf",1.431884765625],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","z","0",2.25],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","x","-inf",0.465087890625],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","x","inf",0.44287109375],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","x","0",0.804931640625],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","t","-inf",0.21484375],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","t","inf",0.982177734375],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","t","0",1.6650390625],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","z","-inf",1.0390625],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","z","inf",0.472900390625],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","z","0",0.990966796875],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","y","-inf",0.22607421875],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","y","inf",2.89892578125],["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","y","0",1.52099609375]],"time":23.965087890625,"type":"series"},{"count":[[4,305]],"egraph":[[2,3808,56,0.034003666],[1,322,58,0.005704458],[0,16,76,0.000421583]],"inputs":[["(*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))))","(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","(exp.f64 (*.f64 t t))","(*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3/2) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3/2) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 1/2 (+.f64 (*.f64 t t) (log.f64 (*.f64 z 2))) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 1/2 (+.f64 (*.f64 t t) (log.f64 (*.f64 z 2))) (log.f64 y)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 -1 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 1 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y)))) (cbrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (cbrt.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y))) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (sqrt.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) 1) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) y (*.f64 (neg.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))) (fma.f64 (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) y) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) y) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4))))) (fma.f64 (neg.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (*.f64 y (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y)))))) (fma.f64 (neg.f64 (cbrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))) (*.f64 (cbrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (cbrt.f64 (*.f64 y y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y))))) (fma.f64 (neg.f64 (sqrt.f64 y)) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)) (*.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (sqrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (*.f64 x (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 x 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 x 1/2)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (*.f64 (sqrt.f64 (*.f64 x 1/2)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4)) (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1/4) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1)))) (fma.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1) (*.f64 y (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (fma.f64 x 1/2 y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (fma.f64 x 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (fma.f64 x 1/2 y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (fma.f64 x 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) 3) (pow.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 3)) (+.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) 2) (-.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y)) (*.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)) 2) (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y))) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (fma.f64 x 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (+.f64 1 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (exp.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (exp.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (+.f64 1 (expm1.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (fma.f64 x 1/2 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (exp.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (exp.f64 t) t))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (exp.f64 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (exp.f64 t) t)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (exp.f64 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 t) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 t) t)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 t) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 t) t)) 2) (cbrt.f64 (pow.f64 (exp.f64 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 t) t)) (sqrt.f64 (pow.f64 (exp.f64 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 1) (*.f64 (/.f64 t 2) t)) (pow.f64 (exp.f64 1) (*.f64 (/.f64 t 2) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 1) (*.f64 2 (*.f64 1/3 (*.f64 t t)))) (pow.f64 (exp.f64 1) (*.f64 1/3 (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 t) t)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) t) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (exp.f64 t) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (exp.f64 t) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (pow.f64 (cbrt.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 t)) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 (cbrt.f64 (pow.f64 t 4)))) (sqrt.f64 (pow.f64 (cbrt.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) 1) (pow.f64 (cbrt.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (cbrt.f64 t)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (cbrt.f64 (cbrt.f64 (pow.f64 t 4)))) (cbrt.f64 (pow.f64 (cbrt.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 t) 2)) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cbrt.f64 (pow.f64 t 4))) (sqrt.f64 (pow.f64 (cbrt.f64 t) 2))) (sqrt.f64 (pow.f64 (cbrt.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) 1) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 (pow.f64 t 4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (cbrt.f64 (pow.f64 t 4))) (pow.f64 (cbrt.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (sqrt.f64 t)) (*.f64 (sqrt.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 t (sqrt.f64 t))) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 t (pow.f64 (cbrt.f64 t) 2))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) 1) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 t)) 2)) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 t) 2))) (cbrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 (sqrt.f64 t))) (cbrt.f64 (sqrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (pow.f64 (cbrt.f64 t) 2)) (sqrt.f64 (cbrt.f64 t))) (sqrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 t)) 1) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 t)) (cbrt.f64 t)) (cbrt.f64 (sqrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 t)) (sqrt.f64 (pow.f64 (cbrt.f64 t) 2))) (sqrt.f64 (cbrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (exp.f64 t) (sqrt.f64 t)) (sqrt.f64 (sqrt.f64 t))) (sqrt.f64 (sqrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (exp.f64 t) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 t) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 t) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 t) t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (exp.f64 t) t)) 2) z)) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (exp.f64 t) t)) 2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (exp.f64 t) t)) 2) z))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (exp.f64 t) t)) 2) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 z 3) (pow.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)) 3) (pow.f64 z 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (pow.f64 (exp.f64 t) t)) 2) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 z 3) (pow.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)) 3) (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 t t) (log.f64 (*.f64 z 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (*.f64 t t) (log.f64 (*.f64 z 2))) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",50],["egg-rr",210],["egg-rr",24]],"stop":[["node limit",1]],"time":115.0859375,"type":"rewrite"},{"count":[[401,344]],"egraph":[[3,4506,2021,0.025537959],[2,1236,2128,0.011627918],[1,340,2419,0.002984459],[0,113,2793,0.000639834]],"inputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 y (pow.f64 t 4)))) (sqrt.f64 (/.f64 1 z))))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 y (pow.f64 t 4)))) (sqrt.f64 (/.f64 1 z)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) x)) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) y)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 4)) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)))))) (sqrt.f64 (/.f64 1 z)))) (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)))) x)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 6)) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) x)) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) y)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 4)) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","1","(+.f64 1 (pow.f64 t 2))","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(exp.f64 (pow.f64 t 2))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))","(neg.f64 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 z)))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 t t))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 t t)))))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))) (+.f64 -1 (*.f64 (*.f64 t t) -1/2)))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 y (pow.f64 t 4)))) (sqrt.f64 (/.f64 1 z))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 t t))) (fma.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 y (pow.f64 t 4))) (sqrt.f64 (/.f64 1 z)))))))","(+.f64 (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 (*.f64 y (pow.f64 t 4)) (sqrt.f64 2))) (*.f64 (sqrt.f64 (/.f64 1 z)) -1/2)) (*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 t t))))))","(fma.f64 (sqrt.f64 2) (*.f64 -1/2 (*.f64 (fma.f64 z 1/2 (*.f64 z -1/4)) (*.f64 (*.f64 y (pow.f64 t 4)) (sqrt.f64 (/.f64 1 z))))) (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))) (+.f64 -1 (*.f64 (*.f64 t t) -1/2))))","(*.f64 (sqrt.f64 2) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 (*.f64 z 1/4) (*.f64 (*.f64 y (pow.f64 t 4)) (sqrt.f64 (/.f64 1 z)))) (*.f64 y (*.f64 (*.f64 t t) (sqrt.f64 z))))) (*.f64 y (sqrt.f64 z))))","(+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (pow.f64 t 2))) (sqrt.f64 z))) (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (pow.f64 t 6) (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2))))))) (sqrt.f64 (/.f64 1 z)))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) (*.f64 y (pow.f64 t 4)))) (sqrt.f64 (/.f64 1 z)))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 t t))) (fma.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (*.f64 y (pow.f64 t 6)) (+.f64 (*.f64 z 1/6) (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))))) (sqrt.f64 (/.f64 1 z)))) (fma.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 y (pow.f64 t 4))) (sqrt.f64 (/.f64 1 z))))))))","(fma.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 (*.f64 t t) (sqrt.f64 z))) (fma.f64 -1/2 (*.f64 (*.f64 (pow.f64 t 6) (*.f64 y (fma.f64 z 1/6 (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)))))) (*.f64 (sqrt.f64 2) (sqrt.f64 (/.f64 1 z)))) (-.f64 (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 (*.f64 y (pow.f64 t 4)) (sqrt.f64 2))) (*.f64 (sqrt.f64 (/.f64 1 z)) -1/2)) (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))) (+.f64 -1 (*.f64 (*.f64 t t) -1/2))) (*.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 z))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (pow.f64 t 6) (fma.f64 z 1/6 (*.f64 -1/2 (fma.f64 z 1/2 (*.f64 z -1/4))))))) (*.f64 (sqrt.f64 2) (*.f64 (fma.f64 z 1/2 (*.f64 z -1/4)) (*.f64 y (pow.f64 t 4)))))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))) (+.f64 -1 (*.f64 (*.f64 t t) -1/2))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (/.f64 1 z))) (+.f64 (*.f64 (fma.f64 -1/2 (*.f64 z 1/4) (*.f64 z 1/6)) (*.f64 y (pow.f64 t 6))) (*.f64 y (*.f64 (*.f64 z 1/4) (pow.f64 t 4)))))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))","(*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (fma.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)) (*.f64 (*.f64 t t) (fma.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (*.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 z))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (*.f64 1/4 x) (sqrt.f64 2)) (*.f64 (*.f64 (sqrt.f64 2) y) -1/2)))))","(fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))) (*.f64 (*.f64 (*.f64 t t) (sqrt.f64 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2)))))","(*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) x)) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) y)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 4)) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (fma.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)) (fma.f64 (fma.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) x) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))) (sqrt.f64 (/.f64 1 z)))))) (pow.f64 t 4) (*.f64 (*.f64 t t) (fma.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (*.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 z)))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))) (fma.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (+.f64 (*.f64 1/4 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 (sqrt.f64 2) x))) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 y (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))))))) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (*.f64 1/4 x) (sqrt.f64 2)) (*.f64 (*.f64 (sqrt.f64 2) y) -1/2))))))","(fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))) (fma.f64 t (*.f64 t (*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2))))) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/2 (*.f64 y (fma.f64 z 1/2 (*.f64 z -1/4)))) (*.f64 1/4 (*.f64 (fma.f64 z 1/2 (*.f64 z -1/4)) x))))))))","(+.f64 (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2)))))) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 z 1/4))) (*.f64 1/4 (*.f64 (*.f64 z 1/4) x)))))))","(+.f64 (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 y (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)))))) (sqrt.f64 (/.f64 1 z)))) (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/6 z) (*.f64 1/2 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)))) x)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 6)) (+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) x)) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (*.f64 1/2 z) (pow.f64 (*.f64 1/2 (sqrt.f64 z)) 2)) y)) (sqrt.f64 (/.f64 1 z))))) (pow.f64 t 4)) (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/4 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 z))) (*.f64 -1/2 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (fma.f64 (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (*.f64 (sqrt.f64 2) y) (+.f64 (*.f64 z 1/6) (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)))))) (*.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (+.f64 (*.f64 z 1/6) (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)))) x) (sqrt.f64 (/.f64 1 z)))))) (pow.f64 t 6) (fma.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 z)) (fma.f64 (fma.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) x) (sqrt.f64 (/.f64 1 z)))) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 (*.f64 y (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))) (sqrt.f64 (/.f64 1 z)))))) (pow.f64 t 4) (*.f64 (*.f64 t t) (fma.f64 1/4 (*.f64 (sqrt.f64 2) (*.f64 x (sqrt.f64 z))) (*.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 2) y)) (sqrt.f64 z))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) x)) (fma.f64 (pow.f64 t 6) (*.f64 (sqrt.f64 (/.f64 1 z)) (+.f64 (*.f64 (*.f64 1/4 (*.f64 (sqrt.f64 2) (fma.f64 z 1/6 (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)))))) x) (*.f64 (*.f64 (*.f64 (sqrt.f64 2) y) -1/2) (fma.f64 z 1/6 (*.f64 -1/2 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))))))) (-.f64 (fma.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (+.f64 (*.f64 1/4 (*.f64 (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2)) (*.f64 (sqrt.f64 2) x))) (*.f64 -1/2 (*.f64 (sqrt.f64 2) (*.f64 y (-.f64 (*.f64 z 1/2) (pow.f64 (*.f64 (sqrt.f64 z) 1/2) 2))))))) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (*.f64 1/4 x) (sqrt.f64 2)) (*.f64 (*.f64 (sqrt.f64 2) y) -1/2))))) (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 z))))))","(fma.f64 (pow.f64 t 6) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/4 (*.f64 (fma.f64 z 1/6 (*.f64 -1/2 (fma.f64 z 1/2 (*.f64 z -1/4)))) x)) (*.f64 -1/2 (*.f64 y (fma.f64 z 1/6 (*.f64 -1/2 (fma.f64 z 1/2 (*.f64 z -1/4))))))))) (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))) (fma.f64 t (*.f64 t (*.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2))))) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/2 (*.f64 y (fma.f64 z 1/2 (*.f64 z -1/4)))) (*.f64 1/4 (*.f64 (fma.f64 z 1/2 (*.f64 z -1/4)) x)))))))))","(fma.f64 (pow.f64 t 6) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/2 (*.f64 y (fma.f64 -1/2 (*.f64 z 1/4) (*.f64 z 1/6)))) (*.f64 1/4 (*.f64 (fma.f64 -1/2 (*.f64 z 1/4) (*.f64 z 1/6)) x))))) (+.f64 (*.f64 (sqrt.f64 z) (+.f64 (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)) (*.f64 (*.f64 t t) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 x 1/4) (*.f64 y -1/2)))))) (*.f64 (pow.f64 t 4) (*.f64 (sqrt.f64 (/.f64 1 z)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 z 1/4))) (*.f64 1/4 (*.f64 (*.f64 z 1/4) x))))))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 1/2 (*.f64 (sqrt.f64 2) x)))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (*.f64 1/2 x)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2))))))","(neg.f64 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (sqrt.f64 2) y)))","(*.f64 y (neg.f64 (*.f64 (sqrt.f64 2) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))))","(*.f64 (*.f64 (sqrt.f64 2) y) (neg.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (sqrt.f64 2) y) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))) (*.f64 1/2 (*.f64 (*.f64 (sqrt.f64 2) x) (sqrt.f64 (*.f64 z (exp.f64 (pow.f64 t 2)))))))","(fma.f64 -1 (*.f64 (sqrt.f64 2) (*.f64 y (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))))) (*.f64 (*.f64 1/2 (*.f64 (sqrt.f64 2) x)) (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t))))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (+.f64 (neg.f64 (*.f64 (sqrt.f64 2) y)) (*.f64 1/2 (*.f64 (sqrt.f64 2) x))))","(*.f64 (sqrt.f64 (*.f64 z (exp.f64 (*.f64 t t)))) (*.f64 (sqrt.f64 2) (+.f64 (neg.f64 y) (*.f64 1/2 x))))","(*.f64 (sqrt.f64 (*.f64 z (pow.f64 (exp.f64 t) t))) (*.f64 (sqrt.f64 2) (-.f64 (*.f64 1/2 x) y)))","1","(+.f64 1 (pow.f64 t 2))","(+.f64 (*.f64 t t) 1)","(fma.f64 t t 1)","(+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4))))","(+.f64 (+.f64 (*.f64 t t) 1) (*.f64 1/2 (pow.f64 t 4)))","(+.f64 1 (fma.f64 1/2 (pow.f64 t 4) (*.f64 t t)))","(fma.f64 t t (fma.f64 1/2 (pow.f64 t 4) 1))","(+.f64 (*.f64 1/6 (pow.f64 t 6)) (+.f64 1 (+.f64 (pow.f64 t 2) (*.f64 1/2 (pow.f64 t 4)))))","(fma.f64 1/6 (pow.f64 t 6) (+.f64 (+.f64 (*.f64 t t) 1) (*.f64 1/2 (pow.f64 t 4))))","(fma.f64 (pow.f64 t 6) 1/6 (+.f64 1 (fma.f64 1/2 (pow.f64 t 4) (*.f64 t t))))","(fma.f64 (pow.f64 t 6) 1/6 (fma.f64 t t (fma.f64 1/2 (pow.f64 t 4) 1)))","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(exp.f64 (pow.f64 t 2))","(exp.f64 (*.f64 t t))","(pow.f64 (exp.f64 t) t)","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 z)","(+.f64 (*.f64 2 z) (*.f64 2 (*.f64 (pow.f64 t 2) z)))","(*.f64 2 (+.f64 z (*.f64 z (*.f64 t t))))","(*.f64 2 (*.f64 (fma.f64 t t 1) z))","(*.f64 z (fma.f64 2 (*.f64 t t) 2))","(*.f64 2 (fma.f64 z (*.f64 t t) z))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (*.f64 (pow.f64 t 4) z)))","(fma.f64 2 z (fma.f64 2 (*.f64 z (*.f64 t t)) (*.f64 z (pow.f64 t 4))))","(fma.f64 2 (*.f64 (fma.f64 t t 1) z) (*.f64 z (pow.f64 t 4)))","(*.f64 z (+.f64 2 (fma.f64 2 (*.f64 t t) (pow.f64 t 4))))","(+.f64 (*.f64 2 z) (+.f64 (*.f64 2 (*.f64 (pow.f64 t 2) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 t 6) z)) (*.f64 (pow.f64 t 4) z))))","(fma.f64 2 z (fma.f64 2 (*.f64 z (*.f64 t t)) (fma.f64 1/3 (*.f64 z (pow.f64 t 6)) (*.f64 z (pow.f64 t 4)))))","(fma.f64 2 (*.f64 (fma.f64 t t 1) z) (*.f64 z (+.f64 (pow.f64 t 4) (*.f64 (pow.f64 t 6) 1/3))))","(*.f64 z (+.f64 (fma.f64 2 (*.f64 t t) 2) (fma.f64 (pow.f64 t 6) 1/3 (pow.f64 t 4))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))","(*.f64 2 (*.f64 z (exp.f64 (pow.f64 t 2))))","(*.f64 (*.f64 2 z) (exp.f64 (*.f64 t t)))","(*.f64 (pow.f64 (exp.f64 t) t) (*.f64 2 z))","(*.f64 2 (*.f64 z (exp.f64 (*.f64 t t))))"]],"stop":[["node limit",1]],"time":71.657958984375,"type":"simplify"},{"compiler":[[20559,10955]],"time":182.991943359375,"type":"eval"},{"alts":[["(+.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))","fresh",0.3379288086106521],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))","fresh",0.3092575195368841],["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y))))","fresh",28.691111457438527],["(+.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))","fresh",0.3737488281475361],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))","fresh",0.39261630861065216],["(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))","fresh",0.4848214356003985],["(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","done",0.4815025879159782],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","done",0.5081825683790941],["(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))) 2) (sqrt.f64 z)))","fresh",0.5322838379159782]],"compiler":[[86,49],[86,49],[30,21],[59,37],[56,30],[76,48],[21,16],[21,16],[23,18]],"count":[[440,9]],"kept":[{"done":[2,2],"fresh":[5,1],"new":[432,6],"picked":[1,0]}],"min-error":[0.00390625],"time":234.235107421875,"type":"prune"},{"accuracy":[0.234375],"baseline":[0.234375],"branch":[["x",0.234375,1],["y",0.234375,1],["z",0.234375,1],["t",0.234375,1],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))",0.234375,1],["(*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2)))",0.234375,1],["(-.f64 (*.f64 x 1/2) y)",0.234375,1],["(-.f64 (*.f64 x 1/2) y)",0.234375,1],["(*.f64 x 1/2)",0.234375,1],["(sqrt.f64 (*.f64 z 2))",0.234375,1],["(sqrt.f64 (*.f64 z 2))",0.234375,1],["(*.f64 z 2)",0.234375,1],["(*.f64 z 2)",0.234375,1],["(exp.f64 (/.f64 (*.f64 t t) 2))",0.234375,1],["(/.f64 (*.f64 t t) 2)",0.234375,1],["(*.f64 t t)",0.234375,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[21,16],[14,11],[9,7],[9,7],[7,6],[8,7],[8,7],[7,6],[7,6],[10,8],[9,7],[7,5],[735,392]],"count":[[25,1]],"inputs":[["(+.f64 (fma.f64 x (*.f64 1/2 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y)) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) y) (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))","(+.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) (*.f64 y (cbrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))))))","(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y y))))","(+.f64 (fma.f64 (*.f64 (*.f64 x 1/2) (sqrt.f64 z)) (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))","(+.f64 (fma.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2) (neg.f64 (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 y (sqrt.f64 z)) (*.f64 (sqrt.f64 (*.f64 2 (pow.f64 (exp.f64 t) t))) (*.f64 y (sqrt.f64 z)))))","(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) 2) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t)))) (*.f64 x 1/2))) (neg.f64 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1))) (fma.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1 (*.f64 (*.f64 y (sqrt.f64 (*.f64 z (*.f64 2 (pow.f64 (exp.f64 t) t))))) -1)))","(sqrt.f64 (*.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))","(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","(pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (-.f64 (*.f64 x 1/2) y))) 3)","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 2 (exp.f64 (*.f64 t t))))) 2) (sqrt.f64 z)))","(*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y))) 3)) (sqrt.f64 z))","(*.f64 (sqrt.f64 2) (*.f64 (sqrt.f64 z) (*.f64 (+.f64 (*.f64 1/2 (*.f64 t t)) 1) (-.f64 (*.f64 1/2 x) y))))","(*.f64 (cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) (-.f64 (*.f64 1/2 x) y)) 3))) (sqrt.f64 z))","(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 3))","(*.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (-.f64 (*.f64 1/2 x) y))) (sqrt.f64 z))","(/.f64 (*.f64 (-.f64 (pow.f64 (*.f64 x 1/2) 3) (pow.f64 y 3)) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) (fma.f64 y (fma.f64 x 1/2 y) (*.f64 1/4 (*.f64 x x))))","(*.f64 (-.f64 (*.f64 x 1/2) y) (cbrt.f64 (*.f64 (pow.f64 (+.f64 z z) 3/2) (pow.f64 (sqrt.f64 (exp.f64 (*.f64 t t))) 3))))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sqrt.f64 (exp.f64 t)) t) (*.f64 (*.f64 (sqrt.f64 z) x) 1/2)))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sqrt.f64 (exp.f64 t)) t)) (sqrt.f64 z)))","(sqrt.f64 (*.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))) (pow.f64 (-.f64 (*.f64 x 1/2) y) 2)))","(pow.f64 (sqrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 2)","(pow.f64 (cbrt.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t)))))) 3)","(*.f64 (-.f64 (*.f64 x 1/2) y) (pow.f64 (sqrt.f64 (sqrt.f64 (*.f64 (+.f64 z z) (exp.f64 (*.f64 t t))))) 2))","(*.f64 (-.f64 (*.f64 x 1/2) y) (*.f64 (sqrt.f64 (*.f64 z 2)) (pow.f64 (sqrt.f64 (exp.f64 t)) t)))","(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))"]],"link":["."],"name":["Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, A"],"oracle":[59.37019063129713],"outputs":[["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))"]],"time":131.85791015625,"times":[["x",8.08203125],["y",8.150146484375],["z",8.153076171875],["t",8.18603515625],["(*.f64 (*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2))) (exp.f64 (/.f64 (*.f64 t t) 2)))",8.509033203125],["(*.f64 (-.f64 (*.f64 x 1/2) y) (sqrt.f64 (*.f64 z 2)))",8.302978515625],["(-.f64 (*.f64 x 1/2) y)",8.35302734375],["(-.f64 (*.f64 x 1/2) y)",8.117919921875],["(*.f64 x 1/2)",8.177001953125],["(sqrt.f64 (*.f64 z 2))",8.25],["(sqrt.f64 (*.f64 z 2))",8.373046875],["(*.f64 z 2)",8.30517578125],["(*.f64 z 2)",8.22900390625],["(exp.f64 (/.f64 (*.f64 t t) 2))",2.406005859375],["(/.f64 (*.f64 t t) 2)",4.266845703125],["(*.f64 t t)",4.594970703125]],"type":"regimes"},{"compiler":[[29,19]],"egraph":[[5,45,39,0.00029429200000000003],[4,44,39,0.00024166700000000002],[3,41,39,0.000188292],[2,34,39,0.000134375],[1,26,39,8.433400000000001e-5],[0,16,39,4.1792e-5]],"inputs":[["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (neg.f64 y) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t)))))))","(fma.f64 (*.f64 x 1/2) (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (*.f64 (sqrt.f64 (*.f64 z (*.f64 2 (exp.f64 (*.f64 t t))))) (neg.f64 y)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.281005859375,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[29,19]],"remove-preprocessing":[[]],"time":12.087890625,"type":"end"}]