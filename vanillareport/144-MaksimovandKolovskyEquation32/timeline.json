[{"compiler":[[35,24]],"method":["search"],"sampling":[[12,0.18704268314473538,0.8105182936271866,0.0024390232280779856],[11,0.18704268314473538,0.8105182936271866,0.0024390232280779856],[10,0.12469512209649025,0.8728658546754318,0.0024390232280779856],[9,0.12469512209649025,0.8728658546754318,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":376.0078125,"type":"analyze"},{"outcomes":[["body",512,"invalid",17.04736328125,89],["body",2048,"invalid",11.762451171875,25],["body",256,"invalid",36.471435546875,375],["body",1024,"valid",19.772705078125,63],["body",512,"valid",11.178466796875,58],["body",1024,"invalid",27.754638671875,93],["body",2048,"valid",0.610107421875,1],["body",256,"valid",782.083984375,8134]],"time":915.171142578125,"type":"sample"},{"compiler":[[34,23]],"egraph":[[1,5,5,9.041999999999999e-6],[0,5,5,7.375e-6],[3,3771,473,0.022770208],[2,1050,473,0.007884792],[1,433,495,0.002146667],[0,154,495,0.000576875]],"inputs":[["0","1","2","3","4"],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 m (+.f64 K n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 n (+.f64 m K)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m K) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 M (+.f64 m n)) 2) K)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 l (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 n m)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 n m))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 M n)) 2) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 M n) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 l n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 l n) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 l n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m M)) 2) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m l)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 m l))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) l)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) (-.f64 M (fabs.f64 (-.f64 m n))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1","3","4"],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m n))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m n)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (/.f64 K 2) (+.f64 m n) (neg.f64 M))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 m (+.f64 K n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 m (/.f64 2 (+.f64 K n))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 m 2) (+.f64 K n)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 K n) (/.f64 m 2)) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 K n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2))))","(/.f64 (cos.f64 (-.f64 (*.f64 (+.f64 K n) (/.f64 m 2)) M)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 K n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 n (+.f64 m K)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m K) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (-.f64 (/.f64 n (/.f64 2 (+.f64 K m))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 n 2) (+.f64 K m)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 K m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m K))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 (+.f64 K m) 2) n) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m K)) l) (pow.f64 (-.f64 (/.f64 (+.f64 K m) 2) M) 2))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 (+.f64 K m) 2) n) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 K m)) l) (pow.f64 (-.f64 (/.f64 (+.f64 K m) 2) M) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 M (+.f64 m n)) 2) K)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 M (/.f64 2 (+.f64 m n))) K)) (exp.f64 (+.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) l) (fabs.f64 (-.f64 m n)))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 M 2) (+.f64 m n)) K)) (exp.f64 (+.f64 (fabs.f64 (-.f64 m n)) (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2)) l))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m n) (/.f64 M 2)) K)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2))))","(/.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m n) (/.f64 M 2)) K)) (exp.f64 (+.f64 (-.f64 l (fabs.f64 (-.f64 m n))) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) K) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 l (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 l (/.f64 2 (+.f64 m n))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (+.f64 m n) (/.f64 2 l)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m n) (/.f64 l 2)) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) K) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2))))","(/.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m n) (/.f64 l 2)) M)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 K (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 n m)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n m) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 n m))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m n))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m n)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (fma.f64 (/.f64 K 2) (+.f64 m n) (neg.f64 M))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 M n)) 2) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 M n) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 n M))) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n M) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 n M)) m)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n M) 2) m) 2)) (-.f64 l (fabs.f64 (-.f64 M n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 n M) (/.f64 K 2)) m)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 M n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 n M) 2) m) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 l n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 l n) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 l n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 n l))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n l) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 n l))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 n l)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 n l) 2) M) 2)) (-.f64 m (fabs.f64 (-.f64 n l))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 n l) (/.f64 K 2)) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 l n)) m) (pow.f64 (-.f64 (/.f64 (+.f64 n l) 2) M) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m M)) 2) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m M))) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m M)) n)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2)) (-.f64 l (fabs.f64 (-.f64 m M))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m M) (/.f64 K 2)) n)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m M)) l) (pow.f64 (-.f64 (/.f64 (+.f64 m M) 2) n) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m l)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 m l))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m l))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 l m))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m l)) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2)) (-.f64 n (fabs.f64 (-.f64 l m))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m l) (/.f64 K 2)) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m l)) n) (pow.f64 (-.f64 (/.f64 (+.f64 m l) 2) M) 2))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) l)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) (-.f64 M (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m n))) l)) (exp.f64 (+.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) M) (fabs.f64 (-.f64 m n)))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m n)) l)) (exp.f64 (+.f64 (fabs.f64 (-.f64 m n)) (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2)) M))))","(*.f64 (cos.f64 (fma.f64 (/.f64 K 2) (+.f64 m n) (neg.f64 l))) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) M) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 l))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) l) 2) (-.f64 M (fabs.f64 (-.f64 m n))))))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort m n)"]],"time":50.43798828125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,7431,43,0.030166250999999998],[4,1767,43,0.016681334],[3,442,43,0.003800334],[2,135,43,0.001074251],[1,58,45,0.000342292],[0,22,45,0.000103542]],"inputs":[["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (/.f64 K (/.f64 2 (+.f64 m n))) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))","(*.f64 (cos.f64 (-.f64 (*.f64 (/.f64 K 2) (+.f64 m n)) M)) (exp.f64 (+.f64 (fabs.f64 (-.f64 m n)) (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) l))))","(*.f64 (cos.f64 (-.f64 (*.f64 (+.f64 m n) (/.f64 K 2)) M)) (exp.f64 (-.f64 (-.f64 (fabs.f64 (-.f64 m n)) l) (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 m n))))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))"]],"stop":[["node limit",1]],"time":41.60302734375,"type":"simplify"},{"compiler":[[62,39]],"time":0.679931640625,"type":"eval"},{"alts":[["(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","next",13.734338736241272]],"compiler":[[33,22],[33,22]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[13.734338736241272],"time":1.20703125,"type":"prune"},{"compiler":[[133,55]],"locations":[["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))",0.00390625,true],["(-.f64 l (fabs.f64 (-.f64 n m)))",0.00390625,true],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)",0.02734375,true],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))",33.664860736235866,true]],"time":29.0009765625,"type":"localize"},{"count":[[4,152]],"series":[["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","l","-inf",0.205078125],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","l","inf",0.197021484375],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","l","0",0.70703125],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","M","-inf",0.19384765625],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","M","inf",0.218017578125],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","M","0",0.3759765625],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","n","-inf",0.240966796875],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","n","inf",0.23486328125],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","n","0",0.234130859375],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","m","-inf",0.25],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","m","inf",0.218017578125],["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","m","0",0.258056640625],["(-.f64 l (fabs.f64 (-.f64 n m)))","m","-inf",0.18603515625],["(-.f64 l (fabs.f64 (-.f64 n m)))","m","inf",0.18603515625],["(-.f64 l (fabs.f64 (-.f64 n m)))","m","0",0.15478515625],["(-.f64 l (fabs.f64 (-.f64 n m)))","n","-inf",0.214111328125],["(-.f64 l (fabs.f64 (-.f64 n m)))","n","inf",0.171142578125],["(-.f64 l (fabs.f64 (-.f64 n m)))","n","0",0.162109375],["(-.f64 l (fabs.f64 (-.f64 n m)))","l","-inf",0.18994140625],["(-.f64 l (fabs.f64 (-.f64 n m)))","l","inf",0.223876953125],["(-.f64 l (fabs.f64 (-.f64 n m)))","l","0",0.200927734375],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","M","-inf",0.2548828125],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","M","inf",0.29296875],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","M","0",0.31103515625],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","n","-inf",0.31005859375],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","n","inf",0.3359375],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","n","0",0.325927734375],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","m","-inf",0.301025390625],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","m","inf",0.48193359375],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","m","0",0.343994140625],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","M","-inf",0.2099609375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","M","inf",0.18994140625],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","M","0",0.5],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","K","-inf",0.2158203125],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","K","inf",0.195068359375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","K","0",0.579833984375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","n","-inf",0.22900390625],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","n","inf",0.199951171875],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","n","0",0.52099609375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","m","-inf",0.239990234375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","m","inf",0.238037109375],["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","m","0",0.760009765625]],"time":12.656982421875,"type":"series"},{"count":[[4,148]],"egraph":[[2,6744,51,0.040729583],[1,449,51,0.008738958],[0,19,61,0.000470958]],"inputs":[["(cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M)))","(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)","(-.f64 l (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (+.f64 m n) (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (+.f64 m n) (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) 2) (cbrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) (sqrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (+.f64 m n) (*.f64 K 1/2))) (cos.f64 M) (neg.f64 (*.f64 (sin.f64 (*.f64 (+.f64 m n) (*.f64 K 1/2))) (sin.f64 M))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (fma.f64 M M (*.f64 M M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 m n) 1/2) (fma.f64 (+.f64 m n) 1/2 M)) (*.f64 M (fma.f64 (+.f64 m n) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 M) (*.f64 (+.f64 m n) 1/2)) (*.f64 (fma.f64 (+.f64 m n) 1/2 M) M))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 m n) 1/2 M) (fma.f64 (+.f64 m n) 1/2 M))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) 2) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) 2) (*.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) (fma.f64 (+.f64 m n) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) (*.f64 (sqrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) (fma.f64 (+.f64 m n) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 M) (sqrt.f64 (fma.f64 (+.f64 m n) 1/2 M))) (sqrt.f64 (fma.f64 (+.f64 m n) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 M) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) 2)) (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 3) (fma.f64 (+.f64 m n) 1/2 M))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3)) (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3))) (*.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (*.f64 (+.f64 m n) (*.f64 1/2 M))) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (*.f64 (+.f64 m n) (*.f64 1/2 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)) (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) 3) (pow.f64 (*.f64 M M) 3)) (+.f64 (*.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 (pow.f64 (+.f64 m n) 2) 1/4)) (+.f64 (*.f64 (*.f64 M M) (*.f64 M M)) (*.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 M M)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 (pow.f64 (+.f64 m n) 2) 1/4)) (*.f64 (*.f64 M M) (*.f64 M M))) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3)) (fma.f64 (+.f64 m n) 1/2 M)) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (*.f64 (+.f64 m n) (*.f64 1/2 M))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 m n) 1/2 M) (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3))) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (*.f64 (+.f64 m n) (*.f64 1/2 M))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (fma.f64 (pow.f64 (+.f64 m n) 3) 1/8 (pow.f64 M 3))) (*.f64 (fma.f64 (+.f64 m n) 1/2 M) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (*.f64 (+.f64 m n) (*.f64 1/2 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (fma.f64 (+.f64 m n) 1/2 M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (fma.f64 (+.f64 m n) 1/2 M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 m n) (*.f64 1/2 (*.f64 (+.f64 m n) 1/2)) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m n) 1/2) (*.f64 (+.f64 m n) 1/2) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 m n) 2) 1/4 (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4)) (*.f64 (cbrt.f64 (*.f64 (+.f64 m n) 1/2)) (*.f64 (+.f64 m n) 1/2)) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 m n) 1/2)) (*.f64 (sqrt.f64 (*.f64 (+.f64 m n) 1/2)) (*.f64 (+.f64 m n) 1/2)) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 m n) 1/2) (sqrt.f64 (*.f64 (+.f64 m n) 1/2))) (sqrt.f64 (*.f64 (+.f64 m n) 1/2)) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4)) (cbrt.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4)) (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 m n) 1/2) (+.f64 m n)) 1/2 (*.f64 M M))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (+.f64 m n) 1/2) (cbrt.f64 (*.f64 (pow.f64 (+.f64 m n) 2) 1/4))) (cbrt.f64 (*.f64 (+.f64 m n) 1/2)) (*.f64 M M))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 l (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 l (*.f64 (neg.f64 (-.f64 n m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 l (-.f64 n m)) (fma.f64 (neg.f64 (-.f64 n m)) 1 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 l (-.f64 n m)) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 n m))) (pow.f64 (cbrt.f64 (-.f64 n m)) 2) (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 l (-.f64 n m)) (+.f64 (neg.f64 (-.f64 n m)) (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (-.f64 n m)) l)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 l (-.f64 n m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 l (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 l (-.f64 n m))) (cbrt.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2)) (cbrt.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 l (-.f64 n m))) (sqrt.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 l 3) (pow.f64 (-.f64 n m) 3)) (/.f64 1 (fma.f64 l l (*.f64 (-.f64 n m) (+.f64 l (-.f64 n m))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 l l) (pow.f64 (-.f64 n m) 2)) (/.f64 1 (+.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 l) (sqrt.f64 (-.f64 n m))) (-.f64 (sqrt.f64 l) (sqrt.f64 (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 l l (*.f64 (-.f64 n m) (+.f64 l (-.f64 n m)))) (-.f64 (pow.f64 l 3) (pow.f64 (-.f64 n m) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 l (-.f64 n m)) (-.f64 (*.f64 l l) (pow.f64 (-.f64 n m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 l 3) (pow.f64 (-.f64 n m) 3)) (fma.f64 l l (*.f64 (-.f64 n m) (+.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 l l) (pow.f64 (-.f64 n m) 2)) (+.f64 l (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 l l) (pow.f64 (-.f64 n m) 2)) (-.f64 l (neg.f64 (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 l 3) (pow.f64 (-.f64 n m) 3))) (neg.f64 (fma.f64 l l (*.f64 (-.f64 n m) (+.f64 l (-.f64 n m))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 l l) (pow.f64 (-.f64 n m) 2))) (neg.f64 (+.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 l 3) (pow.f64 (neg.f64 (-.f64 n m)) 3)) (+.f64 (*.f64 l l) (-.f64 (pow.f64 (-.f64 n m) 2) (*.f64 l (neg.f64 (-.f64 n m))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 l (-.f64 n m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 l (-.f64 n m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 l (-.f64 n m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 l (-.f64 n m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 l (-.f64 n m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 l (-.f64 n m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 l 1 (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 l (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 l) (cbrt.f64 (*.f64 l l)) (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 l l)) (cbrt.f64 l) (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 l) (sqrt.f64 l) (neg.f64 (-.f64 n m)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 l (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m))) (/.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2) (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))) (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 2)) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (fma.f64 (+.f64 m n) 1/2 M) (sqrt.f64 (-.f64 l (-.f64 n m)))) (hypot.f64 (fma.f64 (+.f64 m n) 1/2 M) (sqrt.f64 (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6) (pow.f64 (-.f64 l (-.f64 n m)) 3)) (/.f64 1 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (*.f64 (-.f64 l (-.f64 n m)) (-.f64 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (pow.f64 (-.f64 l (-.f64 n m)) 2)) (/.f64 1 (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (*.f64 (-.f64 l (-.f64 n m)) (-.f64 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6) (pow.f64 (-.f64 l (-.f64 n m)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m)) (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (pow.f64 (-.f64 l (-.f64 n m)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6) (pow.f64 (-.f64 l (-.f64 n m)) 3)) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (*.f64 (-.f64 l (-.f64 n m)) (-.f64 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6) (pow.f64 (-.f64 l (-.f64 n m)) 3)) (+.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2) (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (*.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (pow.f64 (-.f64 l (-.f64 n m)) 2)) (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 6) (pow.f64 (-.f64 l (-.f64 n m)) 3))) (neg.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (*.f64 (-.f64 l (-.f64 n m)) (-.f64 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4) (pow.f64 (-.f64 l (-.f64 n m)) 2))) (neg.f64 (+.f64 (-.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) 3) (pow.f64 (-.f64 n m) 3)) (+.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l)) (+.f64 (pow.f64 (-.f64 n m) 2) (*.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (neg.f64 (pow.f64 (-.f64 n m) 2))) (+.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4)) (-.f64 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (fma.f64 (+.f64 m n) 1/2 M) (sqrt.f64 (-.f64 l (-.f64 n m)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 m n) 1/2 M) (fma.f64 (+.f64 m n) 1/2 M) (-.f64 l (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 l 1 (neg.f64 (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) (-.f64 l (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 l (neg.f64 (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 l (-.f64 n m)) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l) (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 l (-.f64 n m)) 2)) (cbrt.f64 (-.f64 l (-.f64 n m))) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 l) (cbrt.f64 (*.f64 l l)) (neg.f64 (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 l l)) (cbrt.f64 l) (neg.f64 (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 4)) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 m n) 1/2 M)) 2) (-.f64 l (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 l (-.f64 n m))) (sqrt.f64 (-.f64 l (-.f64 n m))) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 l) (sqrt.f64 l) (neg.f64 (-.f64 (-.f64 n m) (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l)) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l))) (cbrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l)) (neg.f64 (-.f64 n m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l)) (sqrt.f64 (+.f64 (pow.f64 (fma.f64 (+.f64 m n) 1/2 M) 2) l)) (neg.f64 (-.f64 n m)))))))"]],"rules":[["egg-rr",47],["egg-rr",39],["egg-rr",42],["egg-rr",20]],"stop":[["node limit",1]],"time":70.60107421875,"type":"rewrite"},{"count":[[300,247]],"egraph":[[3,5492,3001,0.025177124000000002],[2,1664,3001,0.012115624],[1,561,3166,0.003766541],[0,186,3258,0.000984416]],"inputs":[["(cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))","(+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m)))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (+.f64 (*.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 (pow.f64 K 3) (pow.f64 m 3)))) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 n 3) (*.f64 (pow.f64 K 3) (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (neg.f64 M))","(+.f64 (cos.f64 (neg.f64 M)) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m))))))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 (+.f64 n m) 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 3))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2))))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(pow.f64 (-.f64 (*.f64 1/2 n) M) 2)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(pow.f64 (-.f64 (*.f64 1/2 m) M) 2)","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (*.f64 n (-.f64 (*.f64 1/2 m) M)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(*.f64 1/4 (pow.f64 (+.f64 n m) 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(*.f64 -1 (fabs.f64 (-.f64 n m)))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","l","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","l","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 m 2))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (*.f64 n (-.f64 (*.f64 1/2 m) M)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 n 2))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(pow.f64 M 2)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","l","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","l","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M))","(cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))","(+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))","(fma.f64 (*.f64 -1/2 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M))) (*.f64 K m) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M)))","(fma.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)))","(fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m)))))","(fma.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 m m))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m)))))","(fma.f64 -1/8 (*.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M)) (*.f64 (*.f64 m m) (*.f64 K K))) (fma.f64 (*.f64 -1/2 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M))) (*.f64 K m) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) m)) (*.f64 (+.f64 (*.f64 (*.f64 m m) (*.f64 K (*.f64 K -1/8))) 1) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))))","(fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (*.f64 (+.f64 (*.f64 (*.f64 m m) (*.f64 K (*.f64 K -1/8))) 1) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))))","(+.f64 (*.f64 -1/8 (*.f64 (pow.f64 K 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (pow.f64 m 2)))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (+.f64 (*.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 (pow.f64 K 3) (pow.f64 m 3)))) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))))","(fma.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 m m))) (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (fma.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 (pow.f64 K 3) (pow.f64 m 3))) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (*.f64 K m))))))","(+.f64 (fma.f64 -1/8 (*.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M)) (*.f64 (*.f64 m m) (*.f64 K K))) (fma.f64 (*.f64 -1/2 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M))) (*.f64 K m) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M)))) (*.f64 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 n)) M)) (*.f64 (*.f64 (pow.f64 K 3) (pow.f64 m 3)) 1/48)))","(+.f64 (*.f64 (sin.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M)) (+.f64 (*.f64 -1/2 (*.f64 K m)) (*.f64 1/48 (*.f64 (pow.f64 K 3) (pow.f64 m 3))))) (*.f64 (+.f64 (*.f64 (*.f64 m m) (*.f64 K (*.f64 K -1/8))) 1) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 n K)) M))))","(+.f64 (*.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (+.f64 (*.f64 -1/2 (*.f64 K m)) (*.f64 1/48 (*.f64 (pow.f64 K 3) (pow.f64 m 3))))) (*.f64 (+.f64 (*.f64 (*.f64 m m) (*.f64 K (*.f64 K -1/8))) 1) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 n (*.f64 -1 m)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(fma.f64 -1/2 (*.f64 (*.f64 n K) (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))","(fma.f64 (*.f64 n K) (*.f64 -1/2 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (fma.f64 -1/8 (*.f64 (*.f64 n n) (*.f64 (*.f64 K K) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(fma.f64 -1/2 (*.f64 (*.f64 n K) (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))) (fma.f64 -1/8 (*.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (*.f64 (*.f64 K K) (*.f64 n n))) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))))","(fma.f64 n (*.f64 -1/2 (*.f64 K (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))) (*.f64 (+.f64 (*.f64 (*.f64 K K) (*.f64 n (*.f64 n -1/8))) 1) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))))","(fma.f64 n (*.f64 -1/2 (*.f64 K (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))) (*.f64 (+.f64 (*.f64 (*.f64 K K) (*.f64 -1/8 (*.f64 n n))) 1) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))))","(+.f64 (*.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 n 2) (*.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) (pow.f64 K 2)))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 n 3) (*.f64 (pow.f64 K 3) (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))))","(fma.f64 -1/2 (*.f64 n (*.f64 K (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (fma.f64 -1/8 (*.f64 (*.f64 n n) (*.f64 (*.f64 K K) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (fma.f64 1/48 (*.f64 (pow.f64 n 3) (*.f64 (pow.f64 K 3) (sin.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))) (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))))","(fma.f64 -1/2 (*.f64 (*.f64 n K) (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))) (fma.f64 -1/8 (*.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (*.f64 (*.f64 K K) (*.f64 n n))) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (pow.f64 n 3))) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))))","(fma.f64 n (*.f64 -1/2 (*.f64 K (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))) (fma.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (*.f64 (pow.f64 K 3) (pow.f64 n 3))) (*.f64 (+.f64 (*.f64 (*.f64 K K) (*.f64 n (*.f64 n -1/8))) 1) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))))","(fma.f64 n (*.f64 -1/2 (*.f64 K (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))) (fma.f64 1/48 (*.f64 (sin.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (*.f64 (pow.f64 K 3) (pow.f64 n 3))) (*.f64 (+.f64 (*.f64 (*.f64 K K) (*.f64 -1/8 (*.f64 n n))) 1) (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (-.f64 m (*.f64 -1 n)) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (cos.f64 (neg.f64 M)) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))","(+.f64 (cos.f64 M) (*.f64 -1/2 (*.f64 K (*.f64 (+.f64 n m) (neg.f64 (sin.f64 M))))))","(fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 K (+.f64 n m))) (cos.f64 M))","(fma.f64 K (*.f64 -1/2 (*.f64 (sin.f64 M) (-.f64 (neg.f64 m) n))) (cos.f64 M))","(-.f64 (cos.f64 M) (*.f64 (*.f64 (+.f64 n m) (sin.f64 M)) (*.f64 K -1/2)))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m))))))","(+.f64 (cos.f64 M) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (pow.f64 (+.f64 n m) 2))) (*.f64 -1/2 (*.f64 K (*.f64 (+.f64 n m) (neg.f64 (sin.f64 M)))))))","(+.f64 (cos.f64 M) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 K (+.f64 n m))) (*.f64 (cos.f64 M) (*.f64 (*.f64 K (*.f64 K (pow.f64 (+.f64 n m) 2))) -1/8))))","(fma.f64 K (*.f64 -1/2 (*.f64 (sin.f64 M) (-.f64 (neg.f64 m) n))) (fma.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 (cos.f64 M) (pow.f64 (+.f64 n m) 2))) (cos.f64 M)))","(-.f64 (fma.f64 (*.f64 (*.f64 K K) (*.f64 -1/8 (cos.f64 M))) (pow.f64 (+.f64 n m) 2) (cos.f64 M)) (*.f64 (*.f64 (+.f64 n m) (sin.f64 M)) (*.f64 K -1/2)))","(+.f64 (cos.f64 (neg.f64 M)) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 (+.f64 n m) 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 (+.f64 n m) 2)))) (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) (+.f64 n m)))))))","(+.f64 (cos.f64 M) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 (+.f64 n m) 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (pow.f64 (+.f64 n m) 2))) (*.f64 -1/2 (*.f64 K (*.f64 (+.f64 n m) (neg.f64 (sin.f64 M))))))))","(+.f64 (cos.f64 M) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 (+.f64 n m) 3) (pow.f64 K 3))) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 K (+.f64 n m))) (*.f64 (cos.f64 M) (*.f64 (*.f64 K (*.f64 K (pow.f64 (+.f64 n m) 2))) -1/8)))))","(+.f64 (fma.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 (cos.f64 M) (pow.f64 (+.f64 n m) 2))) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 (pow.f64 (+.f64 n m) 3) (*.f64 1/48 (pow.f64 K 3))) (*.f64 (+.f64 n m) (*.f64 K -1/2)))))","(+.f64 (fma.f64 (*.f64 (*.f64 K K) (*.f64 -1/8 (cos.f64 M))) (pow.f64 (+.f64 n m) 2) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 (pow.f64 (+.f64 n m) 3) (*.f64 1/48 (pow.f64 K 3))) (*.f64 (+.f64 n m) (*.f64 K -1/2)))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))","(cos.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(fma.f64 M (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))) (cos.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2)))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 M M))))","(fma.f64 M (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (fma.f64 -1/2 (*.f64 M (*.f64 M (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))))","(fma.f64 M (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 3))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 2))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) M (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (pow.f64 M 3)) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 M M)))))","(+.f64 (fma.f64 M (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))))) (fma.f64 -1/2 (*.f64 M (*.f64 M (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))) (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 (pow.f64 M 3) -1/6))))","(fma.f64 M (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))) (*.f64 -1/6 (pow.f64 M 3)) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 1/2 (*.f64 K (+.f64 n m)))))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))) (fma.f64 (sin.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))) (*.f64 -1/6 (pow.f64 M 3)) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 1/2 (+.f64 n m)))))))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (*.f64 -1 M)))","(cos.f64 (fma.f64 (+.f64 n m) (*.f64 1/2 K) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K (+.f64 n m))) M))","(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 (+.f64 n m))) M))","(pow.f64 (-.f64 (*.f64 1/2 n) M) 2)","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))","(fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))","(*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)))","(*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 (*.f64 m m) 1/4)","(*.f64 m (*.f64 m 1/4))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 (-.f64 (*.f64 1/2 n) M) m (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (*.f64 m (*.f64 m 1/4)))","(*.f64 m (+.f64 (-.f64 (*.f64 1/2 n) M) (*.f64 m 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 (*.f64 m m) 1/4)","(*.f64 m (*.f64 m 1/4))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 (-.f64 (*.f64 1/2 n) M) m (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (*.f64 m (*.f64 m 1/4)))","(*.f64 m (+.f64 (-.f64 (*.f64 1/2 n) M) (*.f64 m 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)) (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (fma.f64 (*.f64 m m) 1/4 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2)))","(fma.f64 m (*.f64 m 1/4) (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (*.f64 m (*.f64 m 1/4)))","(pow.f64 (-.f64 (*.f64 1/2 m) M) 2)","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (*.f64 n (-.f64 (*.f64 1/2 m) M)))","(*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n))","(*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 (*.f64 n n) 1/4)","(*.f64 n (*.f64 n 1/4))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4))","(*.f64 n (+.f64 (*.f64 n 1/4) (-.f64 (*.f64 1/2 m) M)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 (*.f64 n n) 1/4)","(*.f64 n (*.f64 n 1/4))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4))","(*.f64 n (+.f64 (*.f64 n 1/4) (-.f64 (*.f64 1/2 m) M)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4))","(fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4)))","(*.f64 1/4 (pow.f64 (+.f64 n m) 2))","(*.f64 (pow.f64 (+.f64 n m) 2) 1/4)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (*.f64 (pow.f64 (+.f64 n m) 2) 1/4))","(fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 (+.f64 n m) (neg.f64 M)))","(*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (*.f64 M M))","(*.f64 M (+.f64 M (neg.f64 (+.f64 n m))))","(*.f64 M (-.f64 M (+.f64 n m)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (*.f64 M M))","(*.f64 M (+.f64 M (neg.f64 (+.f64 n m))))","(*.f64 M (-.f64 M (+.f64 n m)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (*.f64 M M)) (*.f64 M (+.f64 n m)))","(fma.f64 M M (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)))","(*.f64 -1 (fabs.f64 (-.f64 n m)))","(neg.f64 (fabs.f64 (-.f64 n m)))","(neg.f64 (fabs.f64 (-.f64 m n)))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 l (*.f64 -1 (fabs.f64 (-.f64 n m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","l","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","l","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(+.f64 (*.f64 -1 (fabs.f64 (-.f64 n m))) l)","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 l (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 l (fabs.f64 (-.f64 n m)))","(-.f64 l (fabs.f64 (-.f64 m n)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (-.f64 l (fabs.f64 (-.f64 m n))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 n) M) 2))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) l)) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) l) (fabs.f64 (-.f64 m n)))","(fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 l (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 (*.f64 m m) 1/4)","(*.f64 m (*.f64 m 1/4))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 (-.f64 (*.f64 1/2 n) M) m (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (*.f64 m (*.f64 m 1/4)))","(*.f64 m (+.f64 (-.f64 (*.f64 1/2 n) M) (*.f64 m 1/4)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(*.f64 1/4 (pow.f64 m 2))","(*.f64 (*.f64 m m) 1/4)","(*.f64 m (*.f64 m 1/4))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (*.f64 1/4 (pow.f64 m 2)))","(fma.f64 (-.f64 (*.f64 1/2 n) M) m (*.f64 (*.f64 m m) 1/4))","(fma.f64 m (-.f64 (*.f64 1/2 n) M) (*.f64 m (*.f64 m 1/4)))","(*.f64 m (+.f64 (-.f64 (*.f64 1/2 n) M) (*.f64 m 1/4)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) m) (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 l (*.f64 1/4 (pow.f64 m 2))))) (fabs.f64 (+.f64 n (*.f64 -1 m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) m (+.f64 (pow.f64 (-.f64 (*.f64 1/2 n) M) 2) (+.f64 (*.f64 (*.f64 m m) 1/4) l))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M))) (-.f64 (fma.f64 (*.f64 m m) 1/4 l) (fabs.f64 (-.f64 n m))))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 m (-.f64 (*.f64 1/2 n) M)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 n) M) (+.f64 (-.f64 m M) (*.f64 1/2 n)) (fma.f64 m (*.f64 m 1/4) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) l) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 l (fabs.f64 (-.f64 m n))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (*.f64 n (-.f64 (*.f64 1/2 m) M)))) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) l) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 m n)))","(-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 (*.f64 n n) 1/4)","(*.f64 n (*.f64 n 1/4))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4))","(*.f64 n (+.f64 (*.f64 n 1/4) (-.f64 (*.f64 1/2 m) M)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (-.f64 n m)))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(*.f64 1/4 (pow.f64 n 2))","(*.f64 (*.f64 n n) 1/4)","(*.f64 n (*.f64 n 1/4))","(+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2)))","(fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4))","(*.f64 n (+.f64 (*.f64 n 1/4) (-.f64 (*.f64 1/2 m) M)))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (+.f64 l (+.f64 (*.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 1/4 (pow.f64 n 2))))) (fabs.f64 (neg.f64 (+.f64 (*.f64 -1 n) m))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 m) M) 2) (-.f64 (+.f64 (fma.f64 n (-.f64 (*.f64 1/2 m) M) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 (-.f64 (*.f64 1/2 m) M) n)) (*.f64 (*.f64 n n) 1/4)) l) (fabs.f64 (-.f64 n m)))","(+.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) (*.f64 n (*.f64 n 1/4))) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 n (*.f64 n 1/4)) (-.f64 (fma.f64 (-.f64 (*.f64 1/2 m) M) (+.f64 n (-.f64 (*.f64 1/2 m) M)) l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) l) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 l) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 l) (fabs.f64 (-.f64 m n)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (*.f64 1/4 (pow.f64 (+.f64 n m) 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) l)) (fabs.f64 (-.f64 n m)))","(-.f64 (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 l) (*.f64 M (+.f64 n m))) (fabs.f64 (-.f64 n m)))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 l (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 l (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (*.f64 M M))","(*.f64 M (+.f64 M (neg.f64 (+.f64 n m))))","(*.f64 M (-.f64 M (+.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(pow.f64 M 2)","(*.f64 M M)","(+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (pow.f64 M 2))","(fma.f64 -1 (*.f64 M (+.f64 n m)) (*.f64 M M))","(*.f64 M (+.f64 M (neg.f64 (+.f64 n m))))","(*.f64 M (-.f64 M (+.f64 n m)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 n m) M)) (+.f64 (*.f64 1/4 (pow.f64 (+.f64 n m) 2)) (+.f64 l (pow.f64 M 2)))) (fabs.f64 (-.f64 n m)))","(-.f64 (fma.f64 -1 (*.f64 M (+.f64 n m)) (+.f64 (fma.f64 1/4 (pow.f64 (+.f64 n m) 2) (*.f64 M M)) l)) (fabs.f64 (-.f64 n m)))","(fma.f64 (neg.f64 (+.f64 n m)) M (-.f64 (fma.f64 (pow.f64 (+.f64 n m) 2) 1/4 (fma.f64 M M l)) (fabs.f64 (-.f64 n m))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 m n))))","(+.f64 (*.f64 (+.f64 n m) (-.f64 (*.f64 (+.f64 n m) 1/4) M)) (-.f64 (fma.f64 M M l) (fabs.f64 (-.f64 n m))))","(-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m)))","(-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n)))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","l","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","l","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))","(-.f64 (+.f64 l (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2)) (fabs.f64 (-.f64 n m)))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 n m))))","(+.f64 l (-.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (fabs.f64 (-.f64 m n))))","(+.f64 (pow.f64 (-.f64 (*.f64 1/2 (+.f64 n m)) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))"]],"stop":[["node limit",1]],"time":67.226806640625,"type":"simplify"},{"compiler":[[8908,4220]],"time":71.839111328125,"type":"eval"},{"alts":[["(/.f64 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.647248408764195],["(/.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",8.895072409682582],["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","next",0.8951957840018394],["(/.f64 (fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.695588076258]],"compiler":[[35,24],[31,22],[25,18],[45,31],[35,24],[31,22],[25,18],[45,31]],"count":[[248,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[247,4],"picked":[1,0]}],"min-error":[0.8548878351191549],"time":95.98095703125,"type":"prune"},{"compiler":[[102,42]],"locations":[["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))",0.00390625,false],["(-.f64 l (fabs.f64 (-.f64 n m)))",0.00390625,false],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)",0.02734375,false]],"time":20.610107421875,"type":"localize"},{"compiler":[[5144,2328]],"time":41.173828125,"type":"eval"},{"alts":[["(/.f64 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.647248408764195],["(/.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","next",8.895072409682582],["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","done",0.8951957840018394],["(/.f64 (fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.695588076258]],"compiler":[[35,24],[31,22],[25,18],[45,31],[35,24],[31,22],[45,31]],"count":[[194,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[190,0],"picked":[1,1]}],"min-error":[0.8548878351191549],"time":69.547119140625,"type":"prune"},{"compiler":[[131,61]],"locations":[["(+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))",0.00390625,false],["(-.f64 l (fabs.f64 (-.f64 n m)))",0.00390625,false],["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)",0.02734375,false],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))",24.471477363523924,true]],"time":28.553955078125,"type":"localize"},{"count":[[1,36]],"series":[["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","M","-inf",0.18310546875],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","M","inf",0.169921875],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","M","0",0.371826171875],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","m","-inf",0.200927734375],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","m","inf",0.2021484375],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","m","0",0.3271484375],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","K","-inf",0.19189453125],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","K","inf",0.22607421875],["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))","K","0",0.541015625]],"time":2.567138671875,"type":"series"},{"count":[[1,50]],"egraph":[[2,2643,12,0.024069209],[1,199,12,0.0035750419999999996],[0,9,12,0.000260833]],"inputs":[["(cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) 1) (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M) (neg.f64 (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 (*.f64 K m) 1/2))))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 M))) (sin.f64 (*.f64 (*.f64 K m) 1/2)) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 (*.f64 K m) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2))))) (*.f64 (sin.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 2) (fma.f64 (*.f64 K m) 1/2 M))) (cos.f64 (/.f64 (*.f64 M M) (fma.f64 (*.f64 K m) 1/2 M)))) (*.f64 (sin.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 2) (fma.f64 (*.f64 K m) 1/2 M))) (sin.f64 (/.f64 (*.f64 M M) (fma.f64 (*.f64 K m) 1/2 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (neg.f64 (sin.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 (*.f64 K m) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 (*.f64 (neg.f64 M) 1))) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 (*.f64 (neg.f64 M) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (cos.f64 (fma.f64 (neg.f64 M) 1 M))) (*.f64 (sin.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (sin.f64 (fma.f64 (neg.f64 M) 1 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))) (*.f64 (sin.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (cos.f64 (+.f64 (neg.f64 M) M))) (*.f64 (sin.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) (sin.f64 (+.f64 (neg.f64 M) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) 2) (cbrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) (sqrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) 3) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) 2) (*.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) 2) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) 2)) (cos.f64 (fma.f64 (*.f64 K m) 1/2 M)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))) (exp.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M) (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (neg.f64 (sin.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 M) (cos.f64 (*.f64 (*.f64 K m) 1/2)) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)) 1 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 M) (sin.f64 (*.f64 (*.f64 K m) 1/2)) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M))) 2) (cbrt.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))) 2) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M))) (sqrt.f64 (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 K m) 1/2)) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 (*.f64 K m) 1/2)) (cos.f64 M)))))))"]],"rules":[["egg-rr",50]],"stop":[["node limit",1]],"time":44.572998046875,"type":"rewrite"},{"count":[[86,69]],"egraph":[[4,3625,591,0.021695541999999998],[3,1849,599,0.009171584],[2,435,616,0.0036009170000000004],[1,157,636,0.001066667],[0,55,638,0.000299459]],"inputs":[["(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (neg.f64 (*.f64 (sin.f64 M) (*.f64 K m))) (cos.f64 M))","(fma.f64 K (*.f64 1/2 (*.f64 m (sin.f64 M))) (cos.f64 M))","(fma.f64 K (*.f64 (sin.f64 M) (*.f64 m 1/2)) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M)))","(fma.f64 -1/2 (neg.f64 (*.f64 (sin.f64 M) (*.f64 K m))) (fma.f64 (*.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K K))) (*.f64 m m) (cos.f64 M)))","(fma.f64 K (*.f64 1/2 (*.f64 m (sin.f64 M))) (fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M)))","(+.f64 (cos.f64 M) (*.f64 (*.f64 K m) (+.f64 (*.f64 (sin.f64 M) 1/2) (*.f64 (*.f64 (cos.f64 M) -1/8) (*.f64 K m)))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M))))","(+.f64 (fma.f64 (*.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K K))) (*.f64 m m) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 -1/2 (*.f64 K m)) (*.f64 1/48 (*.f64 (pow.f64 K 3) (pow.f64 m 3))))))","(+.f64 (*.f64 (*.f64 K m) (+.f64 (*.f64 (neg.f64 (sin.f64 M)) -1/2) (*.f64 (*.f64 K m) (*.f64 (cos.f64 M) -1/8)))) (fma.f64 (*.f64 -1/48 (*.f64 (pow.f64 K 3) (sin.f64 M))) (pow.f64 m 3) (cos.f64 M)))","(+.f64 (cos.f64 M) (fma.f64 (*.f64 K m) (+.f64 (*.f64 (sin.f64 M) 1/2) (*.f64 (*.f64 (cos.f64 M) -1/8) (*.f64 K m))) (*.f64 (sin.f64 M) (*.f64 (pow.f64 K 3) (*.f64 (pow.f64 m 3) -1/48)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (neg.f64 (*.f64 (sin.f64 M) (*.f64 K m))) (cos.f64 M))","(fma.f64 K (*.f64 1/2 (*.f64 m (sin.f64 M))) (cos.f64 M))","(fma.f64 K (*.f64 (sin.f64 M) (*.f64 m 1/2)) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M)))","(fma.f64 -1/2 (neg.f64 (*.f64 (sin.f64 M) (*.f64 K m))) (fma.f64 (*.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K K))) (*.f64 m m) (cos.f64 M)))","(fma.f64 K (*.f64 1/2 (*.f64 m (sin.f64 M))) (fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M)))","(+.f64 (cos.f64 M) (*.f64 (*.f64 K m) (+.f64 (*.f64 (sin.f64 M) 1/2) (*.f64 (*.f64 (cos.f64 M) -1/8) (*.f64 K m)))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K (*.f64 K (*.f64 m m)))) (cos.f64 M))))","(+.f64 (fma.f64 (*.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 K K))) (*.f64 m m) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 -1/2 (*.f64 K m)) (*.f64 1/48 (*.f64 (pow.f64 K 3) (pow.f64 m 3))))))","(+.f64 (*.f64 (*.f64 K m) (+.f64 (*.f64 (neg.f64 (sin.f64 M)) -1/2) (*.f64 (*.f64 K m) (*.f64 (cos.f64 M) -1/8)))) (fma.f64 (*.f64 -1/48 (*.f64 (pow.f64 K 3) (sin.f64 M))) (pow.f64 m 3) (cos.f64 M)))","(+.f64 (cos.f64 M) (fma.f64 (*.f64 K m) (+.f64 (*.f64 (sin.f64 M) 1/2) (*.f64 (*.f64 (cos.f64 M) -1/8) (*.f64 K m))) (*.f64 (sin.f64 M) (*.f64 (pow.f64 K 3) (*.f64 (pow.f64 m 3) -1/48)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(cos.f64 (*.f64 K (*.f64 m 1/2)))","(cos.f64 (*.f64 m (*.f64 K 1/2)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (cos.f64 (*.f64 K (*.f64 m 1/2))))","(fma.f64 M (sin.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 (*.f64 m (*.f64 K 1/2))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (fma.f64 -1/2 (*.f64 M (*.f64 M (cos.f64 (*.f64 K (*.f64 m 1/2))))) (cos.f64 (*.f64 K (*.f64 m 1/2)))))","(fma.f64 M (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (+.f64 (*.f64 (*.f64 -1/2 M) M) 1) (cos.f64 (*.f64 m (*.f64 K 1/2)))))","(fma.f64 M (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (+.f64 1 (*.f64 M (*.f64 M -1/2))) (cos.f64 (*.f64 m (*.f64 K 1/2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 3)) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M)))))","(+.f64 (fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (cos.f64 (*.f64 K (*.f64 m 1/2)))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 K (*.f64 m 1/2))) (pow.f64 M 3)) (*.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) (*.f64 (*.f64 M M) -1/2))))","(fma.f64 M (sin.f64 (*.f64 m (*.f64 K 1/2))) (fma.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 -1/6 (pow.f64 M 3)) (*.f64 (+.f64 (*.f64 (*.f64 -1/2 M) M) 1) (cos.f64 (*.f64 m (*.f64 K 1/2))))))","(+.f64 (*.f64 (+.f64 1 (*.f64 M (*.f64 M -1/2))) (cos.f64 (*.f64 m (*.f64 K 1/2)))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (+.f64 M (*.f64 -1/6 (pow.f64 M 3)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (fma.f64 1/2 (*.f64 K m) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))","(cos.f64 (-.f64 M (*.f64 m (*.f64 K 1/2))))"]],"stop":[["node limit",1]],"time":40.4580078125,"type":"simplify"},{"compiler":[[8992,4636]],"time":75.72998046875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2))))) (*.f64 (sin.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",43.40537072078905],["(/.f64 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.647248408764195],["(/.f64 (expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","next",8.895072409682582],["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","done",0.8951957840018394],["(/.f64 (fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.695588076258]],"compiler":[[114,69],[35,24],[33,24],[25,18],[45,31],[114,69],[35,24],[33,24],[45,31]],"count":[[263,5]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[259,2],"picked":[1,0]}],"min-error":[0.8363036575077937],"time":108.66796875,"type":"prune"},{"compiler":[[152,69]],"locations":[["(pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)",0.02734375,false],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))",0.19921875,true],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))",0.444634384415613,true],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))",24.471477363523924,true]],"time":37.177001953125,"type":"localize"},{"count":[[3,108]],"series":[["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","M","-inf",0.18505859375],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","M","inf",0.1640625],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","M","0",0.20703125],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","m","-inf",0.1630859375],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","m","inf",0.166015625],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","m","0",0.191162109375],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","K","-inf",0.166015625],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","K","inf",0.18603515625],["(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))","K","0",0.217041015625],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","M","-inf",8.863037109375],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","M","inf",13.968994140625],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","M","0",0.851806640625],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","m","-inf",17.160888671875],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","m","inf",8.220947265625],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","m","0",0.9169921875],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","K","-inf",12.805908203125],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","K","inf",15.3779296875],["(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","K","0",1.037109375],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","M","-inf",0.154052734375],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","M","inf",0.1689453125],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","M","0",0.18798828125],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","m","-inf",0.1611328125],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","m","inf",0.178955078125],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","m","0",0.196044921875],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","K","-inf",0.18603515625],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","K","inf",0.176025390625],["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","K","0",0.266845703125]],"time":82.989990234375,"type":"series"},{"count":[[3,134]],"egraph":[[2,2856,38,0.024792085000000002],[1,220,38,0.003887793],[0,11,38,0.000296834]],"inputs":[["(cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))","(expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 1) (*.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (neg.f64 (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2)))))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 M))) (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 1/8 (pow.f64 (*.f64 K m) 3)) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2))))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2)))))) (*.f64 (sin.f64 (/.f64 (*.f64 1/8 (pow.f64 (*.f64 K m) 3)) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2))))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 1/4 (pow.f64 (*.f64 K m) 2)) (fma.f64 m (*.f64 K 1/2) M))) (cos.f64 (/.f64 (*.f64 M M) (fma.f64 m (*.f64 K 1/2) M)))) (*.f64 (sin.f64 (/.f64 (*.f64 1/4 (pow.f64 (*.f64 K m) 2)) (fma.f64 m (*.f64 K 1/2) M))) (sin.f64 (/.f64 (*.f64 M M) (fma.f64 m (*.f64 K 1/2) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (neg.f64 (sin.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 (*.f64 (neg.f64 M) 1))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 (*.f64 (neg.f64 M) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (fma.f64 (neg.f64 M) 1 M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (fma.f64 (neg.f64 M) 1 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (+.f64 (neg.f64 M) M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (+.f64 (neg.f64 M) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2) (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 3) 1) (+.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 2) (+.f64 1 (*.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 3) (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 2) (*.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 2) 1) (+.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 2) (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 2)) (cos.f64 (fma.f64 m (*.f64 K 1/2) M)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (exp.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (neg.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (neg.f64 (sin.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 M) (cos.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 1 (*.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 M) (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) 2) (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) 2) (cbrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) 2) (cbrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (sqrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (sqrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) 2)) (log.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1))) (log.f64 (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2) (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2))) (log.f64 (-.f64 1 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (cbrt.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2)) (cbrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (sqrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 1) (*.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (neg.f64 (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2)))))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 M))) (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 1/8 (pow.f64 (*.f64 K m) 3)) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2))))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2)))))) (*.f64 (sin.f64 (/.f64 (*.f64 1/8 (pow.f64 (*.f64 K m) 3)) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2))))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 m (*.f64 K 1/2) M) (*.f64 1/4 (pow.f64 (*.f64 K m) 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 1/4 (pow.f64 (*.f64 K m) 2)) (fma.f64 m (*.f64 K 1/2) M))) (cos.f64 (/.f64 (*.f64 M M) (fma.f64 m (*.f64 K 1/2) M)))) (*.f64 (sin.f64 (/.f64 (*.f64 1/4 (pow.f64 (*.f64 K m) 2)) (fma.f64 m (*.f64 K 1/2) M))) (sin.f64 (/.f64 (*.f64 M M) (fma.f64 m (*.f64 K 1/2) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (neg.f64 (sin.f64 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (sin.f64 (*.f64 m (*.f64 K 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 (*.f64 (neg.f64 M) 1))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 (*.f64 (neg.f64 M) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (fma.f64 (neg.f64 M) 1 M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (fma.f64 (neg.f64 M) 1 M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 M)) (cbrt.f64 (*.f64 M M)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (cos.f64 (+.f64 (neg.f64 M) M))) (*.f64 (sin.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) (sin.f64 (+.f64 (neg.f64 M) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2) (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 3) 1) (+.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 2) (+.f64 1 (*.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 3) (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 2) (*.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 2) 1) (+.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 2) (pow.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 2)) (cos.f64 (fma.f64 m (*.f64 K 1/2) M)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (exp.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M) (neg.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (neg.f64 (sin.f64 M)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 M) (cos.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)) 1 (*.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 M) (sin.f64 (*.f64 m (*.f64 K 1/2))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) 2) (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) 2) (cbrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) 2) (cbrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) (sqrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (sqrt.f64 (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M))) (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (sqrt.f64 (*.f64 (cos.f64 (*.f64 m (*.f64 K 1/2))) (cos.f64 M))) (*.f64 (sin.f64 (*.f64 m (*.f64 K 1/2))) (sin.f64 M)))))))"]],"rules":[["egg-rr",56],["egg-rr",22],["egg-rr",56]],"stop":[["node limit",1]],"time":55.625,"type":"rewrite"},{"count":[[242,121]],"egraph":[[2,1908,2360,0.015004],[1,492,2468,0.003673042],[0,158,2582,0.000836875]],"inputs":[["(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))) (*.f64 1/2 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 2) (pow.f64 m 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 m 2)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 K 3) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 3) (pow.f64 m 3)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 3))) (+.f64 (*.f64 -3/8 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3))) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))) (*.f64 1/2 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 2) (pow.f64 m 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 m 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))))))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 2) (pow.f64 (sin.f64 (neg.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 K 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))) (pow.f64 m 2))) (+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 2) (pow.f64 (sin.f64 (neg.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 K 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))) (pow.f64 m 2))) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 K 3) (sin.f64 (neg.f64 M))) (+.f64 (cos.f64 (neg.f64 M)) 1))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 3) (pow.f64 (sin.f64 (neg.f64 M)) 3)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 3))) (*.f64 -3/8 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 3) (sin.f64 (neg.f64 M)))) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))))) (pow.f64 m 3))) (+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))))","(+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))","(+.f64 (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (+.f64 (/.f64 (*.f64 M (sin.f64 (*.f64 1/2 (*.f64 K m)))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (*.f64 -1 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))) (pow.f64 M 2)))))","(+.f64 (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 3 (/.f64 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (sin.f64 (*.f64 1/2 (*.f64 K m)))) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))))) (*.f64 2 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 3) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 3))))) (pow.f64 M 3))) (+.f64 (/.f64 (*.f64 M (sin.f64 (*.f64 1/2 (*.f64 K m)))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (*.f64 -1 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))) (pow.f64 M 2))))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (neg.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) (fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) 1) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 m (*.f64 -1/2 K)) (*.f64 (pow.f64 m 3) (*.f64 1/48 (pow.f64 K 3))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) (fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) 1) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 m (*.f64 -1/2 K)) (*.f64 (pow.f64 m 3) (*.f64 1/48 (pow.f64 K 3))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(cos.f64 (*.f64 (*.f64 1/2 m) K))","(cos.f64 (*.f64 K (*.f64 m 1/2)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (cos.f64 (*.f64 (*.f64 1/2 m) K)))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (cos.f64 (*.f64 K (*.f64 m 1/2))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M))))","(fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (fma.f64 -1/2 (*.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 M M)) (cos.f64 (*.f64 (*.f64 1/2 m) K))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 m 1/2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 3)) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M)))))","(+.f64 (fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (cos.f64 (*.f64 (*.f64 1/2 m) K))) (fma.f64 -1/2 (*.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 M M)) (*.f64 (sin.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 -1/6 (pow.f64 M 3)))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (fma.f64 (sin.f64 (*.f64 K (*.f64 m 1/2))) (*.f64 -1/6 (pow.f64 M 3)) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 m 1/2))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1))","(log.f64 (+.f64 (cos.f64 M) 1))","(log1p.f64 (cos.f64 M))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))","(+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1))))","(fma.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)) (log1p.f64 (cos.f64 M)))","(fma.f64 -1/2 (*.f64 (*.f64 (neg.f64 (sin.f64 M)) m) (/.f64 K (+.f64 (cos.f64 M) 1))) (log1p.f64 (cos.f64 M)))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))) (*.f64 1/2 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 2) (pow.f64 m 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 m 2)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))))","(+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (fma.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1)) (*.f64 1/2 (*.f64 (*.f64 K K) (*.f64 -1/4 (+.f64 (/.f64 (*.f64 (*.f64 m m) (pow.f64 (neg.f64 (sin.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (/.f64 (+.f64 (cos.f64 M) 1) (*.f64 m m)))))))))","(+.f64 (log1p.f64 (cos.f64 M)) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 K K) -1/4) (+.f64 (*.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (*.f64 m m)) (*.f64 (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)) (*.f64 m m)))) (*.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)))))","(fma.f64 -1/2 (*.f64 (*.f64 (neg.f64 (sin.f64 M)) m) (/.f64 K (+.f64 (cos.f64 M) 1))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 m m) (+.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)))) (*.f64 (*.f64 K K) -1/4)) (log1p.f64 (cos.f64 M))))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 K 3) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 3) (pow.f64 m 3)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 3))) (+.f64 (*.f64 -3/8 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3))) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 1/8 (/.f64 (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))) (*.f64 1/2 (*.f64 (pow.f64 K 2) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (sin.f64 (neg.f64 M)) 2) (pow.f64 m 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 m 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))))))))","(+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (fma.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1)) (fma.f64 1/6 (*.f64 (pow.f64 K 3) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (sin.f64 M)) 3) (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 3) (pow.f64 m 3))) (fma.f64 -3/8 (/.f64 (cos.f64 M) (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 2) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3)))) (*.f64 1/8 (/.f64 (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3)) (+.f64 (cos.f64 M) 1)))))) (*.f64 1/2 (*.f64 (*.f64 K K) (*.f64 -1/4 (+.f64 (/.f64 (*.f64 (*.f64 m m) (pow.f64 (neg.f64 (sin.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (/.f64 (+.f64 (cos.f64 M) 1) (*.f64 m m))))))))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)) (log1p.f64 (cos.f64 M))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 K K) -1/4) (+.f64 (*.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (*.f64 m m)) (*.f64 (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)) (*.f64 m m)))) (*.f64 (fma.f64 -1/4 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 3) (pow.f64 (neg.f64 (sin.f64 M)) 3))) (fma.f64 1/8 (*.f64 (/.f64 (neg.f64 (sin.f64 M)) (+.f64 (cos.f64 M) 1)) (pow.f64 m 3)) (/.f64 (*.f64 -3/8 (*.f64 (*.f64 (cos.f64 M) (pow.f64 m 3)) (neg.f64 (sin.f64 M)))) (pow.f64 (+.f64 (cos.f64 M) 1) 2)))) (*.f64 (pow.f64 K 3) 1/6))))","(+.f64 (log1p.f64 (cos.f64 M)) (fma.f64 (pow.f64 K 3) (*.f64 1/6 (fma.f64 -1/4 (/.f64 (pow.f64 m 3) (pow.f64 (/.f64 (+.f64 (cos.f64 M) 1) (neg.f64 (sin.f64 M))) 3)) (fma.f64 1/8 (*.f64 (pow.f64 m 3) (tan.f64 (/.f64 (neg.f64 M) 2))) (*.f64 -3/8 (*.f64 (*.f64 (sin.f64 M) (neg.f64 (pow.f64 m 3))) (/.f64 (cos.f64 M) (pow.f64 (+.f64 (cos.f64 M) 1) 2))))))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 m m) (+.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)))) (*.f64 (*.f64 K K) -1/4)) (*.f64 (/.f64 -1/2 (+.f64 (cos.f64 M) 1)) (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M)))))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1))","(log.f64 (+.f64 (cos.f64 M) 1))","(log1p.f64 (cos.f64 M))","(+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))","(+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1))))","(fma.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)) (log1p.f64 (cos.f64 M)))","(fma.f64 -1/2 (*.f64 (*.f64 (neg.f64 (sin.f64 M)) m) (/.f64 K (+.f64 (cos.f64 M) 1))) (log1p.f64 (cos.f64 M)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 2) (pow.f64 (sin.f64 (neg.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 K 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))) (pow.f64 m 2))) (+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1)))))","(+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (fma.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1)) (*.f64 1/2 (*.f64 (*.f64 K K) (*.f64 -1/4 (+.f64 (/.f64 (*.f64 (*.f64 m m) (pow.f64 (neg.f64 (sin.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (/.f64 (+.f64 (cos.f64 M) 1) (*.f64 m m)))))))))","(+.f64 (log1p.f64 (cos.f64 M)) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 K K) -1/4) (+.f64 (*.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (*.f64 m m)) (*.f64 (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)) (*.f64 m m)))) (*.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)))))","(fma.f64 -1/2 (*.f64 (*.f64 (neg.f64 (sin.f64 M)) m) (/.f64 K (+.f64 (cos.f64 M) 1))) (fma.f64 1/2 (*.f64 (*.f64 (*.f64 m m) (+.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)))) (*.f64 (*.f64 K K) -1/4)) (log1p.f64 (cos.f64 M))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 2) (pow.f64 (sin.f64 (neg.f64 M)) 2)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))) (*.f64 -1/4 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (pow.f64 K 2)) (+.f64 (cos.f64 (neg.f64 M)) 1)))) (pow.f64 m 2))) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 K 3) (sin.f64 (neg.f64 M))) (+.f64 (cos.f64 (neg.f64 M)) 1))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 3) (pow.f64 (sin.f64 (neg.f64 M)) 3)) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 3))) (*.f64 -3/8 (/.f64 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 3) (sin.f64 (neg.f64 M)))) (pow.f64 (+.f64 (cos.f64 (neg.f64 M)) 1) 2))))) (pow.f64 m 3))) (+.f64 (log.f64 (+.f64 (cos.f64 (neg.f64 M)) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m)) (+.f64 (cos.f64 (neg.f64 M)) 1))))))","(fma.f64 1/2 (*.f64 (*.f64 m m) (*.f64 -1/4 (+.f64 (/.f64 (*.f64 K K) (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 2) (pow.f64 (neg.f64 (sin.f64 M)) 2))) (/.f64 (cos.f64 M) (/.f64 (+.f64 (cos.f64 M) 1) (*.f64 K K)))))) (fma.f64 1/6 (*.f64 (pow.f64 m 3) (fma.f64 1/8 (/.f64 (pow.f64 K 3) (/.f64 (+.f64 (cos.f64 M) 1) (neg.f64 (sin.f64 M)))) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 K 3) (pow.f64 (neg.f64 (sin.f64 M)) 3)) (pow.f64 (+.f64 (cos.f64 M) 1) 3)) (*.f64 -3/8 (/.f64 (*.f64 (*.f64 (cos.f64 M) (pow.f64 K 3)) (neg.f64 (sin.f64 M))) (pow.f64 (+.f64 (cos.f64 M) 1) 2)))))) (+.f64 (log.f64 (+.f64 (cos.f64 M) 1)) (*.f64 -1/2 (/.f64 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (+.f64 (cos.f64 M) 1))))))","(fma.f64 (*.f64 -1/8 (+.f64 (*.f64 (/.f64 (*.f64 K K) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (*.f64 (sin.f64 M) (sin.f64 M))) (*.f64 (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)) (*.f64 K K)))) (*.f64 m m) (fma.f64 1/6 (*.f64 (pow.f64 m 3) (fma.f64 1/8 (*.f64 (/.f64 (pow.f64 K 3) (+.f64 (cos.f64 M) 1)) (neg.f64 (sin.f64 M))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 K 3) (pow.f64 (+.f64 (cos.f64 M) 1) 3)) (pow.f64 (neg.f64 (sin.f64 M)) 3)) (/.f64 (*.f64 (cos.f64 M) -3/8) (/.f64 (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 2) (pow.f64 K 3)) (neg.f64 (sin.f64 M))))))) (fma.f64 -1/2 (*.f64 (/.f64 K (+.f64 (cos.f64 M) 1)) (*.f64 (neg.f64 (sin.f64 M)) m)) (log1p.f64 (cos.f64 M)))))","(fma.f64 1/2 (*.f64 (*.f64 (*.f64 m m) (+.f64 (/.f64 (*.f64 (sin.f64 M) (sin.f64 M)) (pow.f64 (+.f64 (cos.f64 M) 1) 2)) (/.f64 (cos.f64 M) (+.f64 (cos.f64 M) 1)))) (*.f64 (*.f64 K K) -1/4)) (fma.f64 (pow.f64 m 3) (fma.f64 1/6 (fma.f64 1/8 (*.f64 (tan.f64 (/.f64 (neg.f64 M) 2)) (pow.f64 K 3)) (/.f64 (pow.f64 K 3) (/.f64 (pow.f64 (/.f64 (+.f64 (cos.f64 M) 1) (neg.f64 (sin.f64 M))) 3) -1/4))) (/.f64 -1/16 (/.f64 (pow.f64 (+.f64 (cos.f64 M) 1) 2) (neg.f64 (*.f64 (*.f64 (pow.f64 K 3) (sin.f64 M)) (cos.f64 M)))))) (fma.f64 -1/2 (*.f64 (*.f64 (neg.f64 (sin.f64 M)) m) (/.f64 K (+.f64 (cos.f64 M) 1))) (log1p.f64 (cos.f64 M)))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))))","(log1p.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))))","(log1p.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)))","(log1p.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))))","(+.f64 (/.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 1/2 (*.f64 K m)))) (/.f64 M (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) (sin.f64 (*.f64 1/2 (*.f64 K m))))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K))) (*.f64 (tan.f64 (/.f64 (*.f64 K m) 4)) M))","(fma.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) M (log1p.f64 (cos.f64 (*.f64 K (*.f64 m 1/2)))))","(+.f64 (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (+.f64 (/.f64 (*.f64 M (sin.f64 (*.f64 1/2 (*.f64 K m)))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (*.f64 -1 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))) (pow.f64 M 2)))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 1/2 (*.f64 K m)))) (+.f64 (/.f64 M (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (*.f64 M M) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) 2)) (neg.f64 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1))))))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K))) (fma.f64 (*.f64 -1/2 (+.f64 (*.f64 (tan.f64 (/.f64 (*.f64 K m) 4)) (tan.f64 (/.f64 (*.f64 K m) 4))) (/.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (+.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) 1)))) (*.f64 M M) (*.f64 (tan.f64 (/.f64 (*.f64 K m) 4)) M)))","(fma.f64 (*.f64 M M) (*.f64 -1/2 (fma.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) (tan.f64 (*.f64 1/4 (*.f64 K m))) (/.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) (+.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) 1)))) (fma.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) M (log1p.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))))))","(+.f64 (log.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 3 (/.f64 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (sin.f64 (*.f64 1/2 (*.f64 K m)))) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))))) (*.f64 2 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 3) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 3))))) (pow.f64 M 3))) (+.f64 (/.f64 (*.f64 M (sin.f64 (*.f64 1/2 (*.f64 K m)))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m)))) 2))) (*.f64 -1 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 1 (cos.f64 (*.f64 1/2 (*.f64 K m))))))) (pow.f64 M 2))))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 1/2 (*.f64 K m)))) (fma.f64 1/6 (*.f64 (pow.f64 M 3) (fma.f64 3 (/.f64 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (sin.f64 (*.f64 1/2 (*.f64 K m)))) (pow.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) 2)) (fma.f64 -1 (tan.f64 (/.f64 (*.f64 1/2 (*.f64 K m)) 2)) (*.f64 2 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 3) (pow.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) 3)))))) (+.f64 (/.f64 M (/.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 1/2 (*.f64 (*.f64 M M) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) 2) (pow.f64 (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1) 2)) (neg.f64 (/.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) 1)))))))))","(+.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K))) (fma.f64 1/6 (*.f64 (pow.f64 M 3) (fma.f64 3 (*.f64 (/.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (+.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) 1)) (tan.f64 (/.f64 (*.f64 K m) 4))) (-.f64 (/.f64 2 (/.f64 (pow.f64 (+.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) 1) 3) (pow.f64 (sin.f64 (*.f64 (*.f64 1/2 m) K)) 3))) (tan.f64 (/.f64 (*.f64 K m) 4))))) (fma.f64 (*.f64 -1/2 (+.f64 (*.f64 (tan.f64 (/.f64 (*.f64 K m) 4)) (tan.f64 (/.f64 (*.f64 K m) 4))) (/.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (+.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) 1)))) (*.f64 M M) (*.f64 (tan.f64 (/.f64 (*.f64 K m) 4)) M))))","(fma.f64 (pow.f64 M 3) (*.f64 1/6 (-.f64 (fma.f64 2 (pow.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) 3) (*.f64 (/.f64 (*.f64 3 (cos.f64 (*.f64 K (*.f64 m 1/2)))) (+.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) 1)) (tan.f64 (*.f64 1/4 (*.f64 K m))))) (tan.f64 (*.f64 1/4 (*.f64 K m))))) (fma.f64 (*.f64 M M) (*.f64 -1/2 (fma.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) (tan.f64 (*.f64 1/4 (*.f64 K m))) (/.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) (+.f64 (cos.f64 (*.f64 K (*.f64 m 1/2))) 1)))) (fma.f64 (tan.f64 (*.f64 1/4 (*.f64 K m))) M (log1p.f64 (cos.f64 (*.f64 K (*.f64 m 1/2)))))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 1 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(log.f64 (+.f64 (cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M))) 1))","(log1p.f64 (cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M)))","(log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M)))","(log1p.f64 (cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M))))","(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) (fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) 1) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 m (*.f64 -1/2 K)) (*.f64 (pow.f64 m 3) (*.f64 1/48 (pow.f64 K 3))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (neg.f64 M))","(cos.f64 M)","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (cos.f64 (neg.f64 M)))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (cos.f64 M))","(fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M)))","(fma.f64 (cos.f64 M) (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) (fma.f64 -1/2 (*.f64 m (*.f64 (neg.f64 K) (sin.f64 M))) (cos.f64 M)))","(+.f64 (*.f64 -1/2 (*.f64 K (*.f64 (sin.f64 (neg.f64 M)) m))) (+.f64 (*.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (sin.f64 (neg.f64 M)) (pow.f64 m 3)))) (+.f64 (*.f64 -1/8 (*.f64 (cos.f64 (neg.f64 M)) (*.f64 (pow.f64 K 2) (pow.f64 m 2)))) (cos.f64 (neg.f64 M)))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (pow.f64 K 3) (*.f64 (neg.f64 (sin.f64 M)) (pow.f64 m 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(fma.f64 -1/2 (*.f64 K (*.f64 (neg.f64 (sin.f64 M)) m)) (fma.f64 1/48 (*.f64 (neg.f64 (sin.f64 M)) (*.f64 (pow.f64 m 3) (pow.f64 K 3))) (fma.f64 -1/8 (*.f64 (cos.f64 M) (*.f64 (*.f64 K K) (*.f64 m m))) (cos.f64 M))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/8 (*.f64 (*.f64 K K) (*.f64 m m))) 1) (cos.f64 M)) (*.f64 (neg.f64 (sin.f64 M)) (+.f64 (*.f64 m (*.f64 -1/2 K)) (*.f64 (pow.f64 m 3) (*.f64 1/48 (pow.f64 K 3))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (*.f64 1/2 (*.f64 K m)))","(cos.f64 (*.f64 (*.f64 1/2 m) K))","(cos.f64 (*.f64 K (*.f64 m 1/2)))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m))))","(fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (cos.f64 (*.f64 (*.f64 1/2 m) K)))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (cos.f64 (*.f64 K (*.f64 m 1/2))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2)))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M))))","(fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (fma.f64 -1/2 (*.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 M M)) (cos.f64 (*.f64 (*.f64 1/2 m) K))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 m 1/2)))))","(+.f64 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M) (+.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 M 3) (sin.f64 (*.f64 1/2 (*.f64 K m))))) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 2))))))","(+.f64 (fma.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) M (cos.f64 (*.f64 1/2 (*.f64 K m)))) (fma.f64 -1/6 (*.f64 (sin.f64 (*.f64 1/2 (*.f64 K m))) (pow.f64 M 3)) (*.f64 -1/2 (*.f64 (cos.f64 (*.f64 1/2 (*.f64 K m))) (*.f64 M M)))))","(+.f64 (fma.f64 M (sin.f64 (*.f64 (*.f64 1/2 m) K)) (cos.f64 (*.f64 (*.f64 1/2 m) K))) (fma.f64 -1/2 (*.f64 (cos.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 M M)) (*.f64 (sin.f64 (*.f64 (*.f64 1/2 m) K)) (*.f64 -1/6 (pow.f64 M 3)))))","(fma.f64 M (sin.f64 (*.f64 K (*.f64 m 1/2))) (fma.f64 (sin.f64 (*.f64 K (*.f64 m 1/2))) (*.f64 -1/6 (pow.f64 M 3)) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 M M)) 1) (cos.f64 (*.f64 K (*.f64 m 1/2))))))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))","(cos.f64 (+.f64 (*.f64 1/2 (*.f64 K m)) (*.f64 -1 M)))","(cos.f64 (-.f64 (*.f64 1/2 (*.f64 K m)) M))","(cos.f64 (-.f64 (*.f64 (*.f64 1/2 m) K) M))","(cos.f64 (fma.f64 K (*.f64 m 1/2) (neg.f64 M)))"]],"stop":[["node limit",1]],"time":46.14697265625,"type":"simplify"},{"compiler":[[7987,4390]],"time":72.27490234375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2))))) (*.f64 (sin.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",43.40537072078905],["(/.f64 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.647248408764195],["(/.f64 (expm1.f64 (log1p.f64 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) 2) (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",8.953666159682582],["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","done",0.8951957840018394],["(/.f64 (fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","fresh",13.695588076258]],"compiler":[[114,69],[35,24],[51,39],[25,18],[45,31]],"count":[[196,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[191,1],"picked":[1,0]}],"min-error":[0.8363036575077937],"time":68.926025390625,"type":"prune"},{"accuracy":[0.8951957840018394],"baseline":[0.8951957840018394],"branch":[["K",0.8951957840018394,1],["m",0.8951957840018394,1],["n",0.8951957840018394,1],["M",0.8951957840018394,1],["l",0.8951957840018394,1],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))",0.8951957840018394,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[34,23],[361,201]],"count":[[9,1]],"inputs":[["(/.f64 (expm1.f64 (log1p.f64 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) 2) (cbrt.f64 (+.f64 (cos.f64 (-.f64 (*.f64 m (*.f64 K 1/2)) M)) 1)) -1))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (+.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (cos.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2))))) (*.f64 (sin.f64 (/.f64 (pow.f64 (*.f64 (*.f64 K m) 1/2) 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))) (sin.f64 (/.f64 (pow.f64 M 3) (fma.f64 M (fma.f64 (*.f64 K m) 1/2 M) (pow.f64 (*.f64 (*.f64 K m) 1/2) 2)))))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (expm1.f64 (log1p.f64 (cos.f64 (-.f64 (*.f64 (*.f64 K m) 1/2) M)))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 (+.f64 m n) (*.f64 K 1/2) M)) 2)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (cos.f64 (-.f64 (*.f64 K (*.f64 1/2 m)) M)) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (fma.f64 (sin.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M)) (*.f64 -1/2 (*.f64 K m)) (cos.f64 (-.f64 (*.f64 n (*.f64 1/2 K)) M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(/.f64 (cos.f64 (fma.f64 (+.f64 m n) (/.f64 K 2) (neg.f64 M))) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))","(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))"]],"link":["."],"name":["Maksimov and Kolovsky, Equation (32)"],"oracle":[44.785135622870726],"outputs":[["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))"]],"time":31.192138671875,"times":[["K",4.384033203125],["m",4.406005859375],["n",4.46923828125],["M",4.468017578125],["l",4.615966796875],["(*.f64 (cos.f64 (-.f64 (/.f64 (*.f64 K (+.f64 m n)) 2) M)) (exp.f64 (-.f64 (neg.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2)) (-.f64 l (fabs.f64 (-.f64 m n))))))",2.237060546875]],"type":"regimes"},{"compiler":[[25,18]],"egraph":[[5,55,31,0.000350209],[4,54,31,0.000290667],[3,49,31,0.00023016699999999998],[2,40,31,0.00017133399999999998],[1,27,31,0.000118167],[0,17,31,7.1709e-5]],"inputs":[["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (cos.f64 M) (exp.f64 (+.f64 (pow.f64 (-.f64 (/.f64 (+.f64 m n) 2) M) 2) (-.f64 l (fabs.f64 (-.f64 n m))))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.995849609375,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[25,18],[25,18],[25,18]],"remove-preprocessing":[["(sort m n)"]],"time":12.0791015625,"type":"end"}]