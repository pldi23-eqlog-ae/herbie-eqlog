[{"compiler":[[24,18]],"method":["search"],"sampling":[[1,2.938735877055719e-39,0.0,1.0],[0,0.0,2.938735877055719e-39,1.0]],"time":0.195068359375,"type":"analyze"},{"outcomes":[["body",256,"valid",447.986083984375,8256]],"time":456.1611328125,"type":"sample"},{"compiler":[[17,13]],"egraph":[[0,2,2,1.708e-6],[7,7645,40,0.048226042],[6,5704,40,0.036195667],[5,3457,40,0.01932],[4,948,40,0.007950875],[3,334,40,0.0023884170000000003],[2,140,40,0.0008884590000000001],[1,43,40,0.00031962500000000003],[0,18,44,9.1667e-5]],"inputs":[["0","1"],["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))","(+.f64 (-.f64 (*.f64 9 (pow.f64 y 4)) (pow.f64 x 4)) (*.f64 2 (*.f64 x x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (-.f64 (pow.f64 y 4) (*.f64 2 (*.f64 y y))))","(fma.f64 2 (*.f64 y y) (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)))","(-.f64 (fma.f64 y (*.f64 y 2) (*.f64 9 (pow.f64 x 4))) (pow.f64 y 4))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(neg.f64 (fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 (pow.f64 x 4) -9)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (fma.f64 y -2 (pow.f64 y 3))))","(+.f64 (-.f64 (*.f64 9 (pow.f64 y 4)) (pow.f64 x 4)) (*.f64 2 (*.f64 x x)))","(+.f64 (fma.f64 9 (pow.f64 y 4) (neg.f64 (pow.f64 x 4))) (*.f64 2 (*.f64 x x)))","(fma.f64 2 (*.f64 x x) (fma.f64 9 (pow.f64 y 4) (neg.f64 (pow.f64 x 4))))","(fma.f64 x (*.f64 x 2) (fma.f64 9 (pow.f64 y 4) (neg.f64 (pow.f64 x 4))))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 (*.f64 x x) (fma.f64 x x -2)))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 x (fma.f64 x -2 (pow.f64 x 3))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":71.40380859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7843,20,0.063085249],[8,7421,20,0.052330124],[7,6580,20,0.039948666],[6,4565,20,0.024967957],[5,1891,20,0.012668206999999999],[4,523,20,0.004493041],[3,188,20,0.0014130409999999999],[2,83,20,0.000553791],[1,28,20,0.000216875],[0,13,22,6.575e-5]],"inputs":[["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))","(fma.f64 2 (*.f64 y y) (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)))","(-.f64 (fma.f64 y (*.f64 y 2) (*.f64 9 (pow.f64 x 4))) (pow.f64 y 4))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(-.f64 (fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y 2))) (pow.f64 y 4))","(fma.f64 9 (pow.f64 x 4) (*.f64 y (fma.f64 y 2 (neg.f64 (pow.f64 y 3)))))"]],"stop":[["node limit",1]],"time":75.341064453125,"type":"simplify"},{"compiler":[[31,23]],"time":0.5380859375,"type":"eval"},{"alts":[["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))","next",52.0]],"compiler":[[17,13],[17,13]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[52.0],"time":0.77001953125,"type":"prune"},{"compiler":[[50,33]],"locations":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))",23.000000171982702,true]],"time":14.419921875,"type":"localize"},{"count":[[1,24]],"series":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","y","-inf",0.614990234375],["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","y","inf",0.4140625],["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","y","0",0.72998046875],["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","x","-inf",0.199951171875],["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","x","inf",0.489013671875],["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","x","0",0.761962890625]],"time":3.327880859375,"type":"series"},{"count":[[1,37]],"egraph":[[2,2438,13,0.024174499999999998],[1,201,13,0.004121792],[0,9,13,0.000294667]],"inputs":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (neg.f64 (pow.f64 y 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (fma.f64 (neg.f64 (pow.f64 y 4)) 1 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 y 4))) (cbrt.f64 (pow.f64 y 8)) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (fma.f64 (neg.f64 (*.f64 y y)) (*.f64 y y) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 y 4)) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) 2) (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 y 12)) (/.f64 1 (+.f64 (*.f64 (pow.f64 x 8) 81) (*.f64 (pow.f64 y 4) (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 y 8)) (/.f64 1 (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (*.f64 (pow.f64 x 8) 81) (*.f64 (pow.f64 y 4) (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4)))) (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 y 12))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4)) (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 y 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 y 12)) (+.f64 (*.f64 (pow.f64 x 8) 81) (*.f64 (pow.f64 y 4) (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 y 8)) (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 y 12))) (neg.f64 (+.f64 (*.f64 (pow.f64 x 8) 81) (*.f64 (pow.f64 y 4) (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 y 8))) (neg.f64 (fma.f64 9 (pow.f64 x 4) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (neg.f64 (pow.f64 y 4)) 3)) (+.f64 (*.f64 (pow.f64 x 8) 81) (-.f64 (*.f64 (neg.f64 (pow.f64 y 4)) (neg.f64 (pow.f64 y 4))) (*.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (*.f64 (neg.f64 (pow.f64 y 4)) (neg.f64 (pow.f64 y 4)))) (-.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) 9 (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 9 (pow.f64 x 4)) (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 8) 81)) (cbrt.f64 (*.f64 9 (pow.f64 x 4))) (neg.f64 (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) 3) (*.f64 (*.f64 x x) 3) (neg.f64 (pow.f64 y 4)))))))"]],"rules":[["egg-rr",37]],"stop":[["node limit",1]],"time":45.72705078125,"type":"rewrite"},{"count":[[61,42]],"egraph":[[12,7882,273,0.087939541],[11,7245,273,0.075948874],[10,6736,273,0.06207987399999999],[9,6324,273,0.049895707],[8,5041,273,0.037442957],[7,3712,273,0.023814665999999998],[6,1925,273,0.012552083],[5,939,273,0.0054422080000000005],[4,277,273,0.0024312500000000003],[3,102,273,0.0009971250000000002],[2,48,273,0.000503541],[1,22,273,0.000260333],[0,11,273,0.00011525]],"inputs":[["(*.f64 -1 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(*.f64 -1 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(*.f64 -1 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (pow.f64 y 4))","(neg.f64 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(*.f64 -1 (pow.f64 y 4))","(neg.f64 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(*.f64 -1 (pow.f64 y 4))","(neg.f64 (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (pow.f64 y 4)))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4))"]],"stop":[["node limit",1]],"time":108.545166015625,"type":"simplify"},{"compiler":[[939,668]],"time":13.2138671875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))","next",0]],"compiler":[[27,14],[27,14]],"count":[[43,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[42,1],"picked":[1,0]}],"min-error":[0],"time":4.779052734375,"type":"prune"},{"compiler":[[84,33]],"time":14.19287109375,"type":"localize"},{"compiler":[[2,2]],"time":0.19921875,"type":"eval"},{"alts":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))","done",0]],"compiler":[[27,14]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.513916015625,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))",0,1],["(*.f64 9 (pow.f64 x 4))",0,1],["(pow.f64 x 4)",0,1]],"compiler":[[3,2],[3,2],[17,13],[7,6],[5,4],[42,24]],"count":[[2,1]],"inputs":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))","(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))"]],"link":["."],"name":["From Rump in a 1983 paper"],"oracle":[52.0],"outputs":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))"]],"time":10.4638671875,"times":[["x",1.85888671875],["y",1.656005859375],["(+.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 2 (*.f64 y y)))",1.97998046875],["(*.f64 9 (pow.f64 x 4))",1.881103515625],["(pow.f64 x 4)",2.033935546875]],"type":"regimes"},{"compiler":[[27,14]],"egraph":[[4,37,37,0.00020324999999999998],[3,35,37,0.000161333],[2,31,37,0.000118958],[1,23,37,7.8041e-5],[0,13,37,3.5833e-5]],"inputs":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 2 (*.f64 y y)))","(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y)) (-.f64 (*.f64 (*.f64 x x) 3) (*.f64 y y))) (*.f64 (*.f64 y y) 2))"]],"stop":[["done",1],["saturated",1]],"time":9.44921875,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[27,14]],"remove-preprocessing":[[]],"time":10.402099609375,"type":"end"}]