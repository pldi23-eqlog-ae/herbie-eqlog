[{"compiler":[[24,17]],"method":["search"],"sampling":[[12,0.06915987524553202,0.004501170420553535,0.9263389543339144],[11,0.06824747583596036,0.006447622494306415,0.9253049016697332],[10,0.0656927574891597,0.00900234084110707,0.9253049016697332],[9,0.06423291843384504,0.01265193847939372,0.9231151430867612],[8,0.05936678824946284,0.01751806866377592,0.9231151430867612],[7,0.05644711013883352,0.02530387695878744,0.918249012902379],[6,0.04671484977006912,0.03503613732755184,0.918249012902379],[5,0.04671484977006912,0.04671484977006912,0.9065703004598618],[4,0.03114323318004608,0.06228646636009216,0.9065703004598618],[3,0.03114323318004608,0.09342969954013824,0.8754270672798157],[2,0.0,0.12457293272018433,0.8754270672798157],[1,0.0,0.12457293272018433,0.8754270672798157],[0,0.0,0.12457293272018433,0.8754270672798157]],"time":14.18212890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",5.49169921875,122],["body",256,"valid",373.980224609375,8256]],"time":386.73486328125,"type":"sample"},{"compiler":[[13,9]],"egraph":[[0,2,2,1.875e-6],[8,7426,28,0.052167958],[7,6573,28,0.041672],[6,4610,28,0.027459875],[5,1945,28,0.015079208],[4,601,28,0.005264916],[3,159,28,0.001381124],[2,68,28,0.00045370800000000004],[1,32,32,0.00017912400000000001],[0,14,32,8.0416e-5]],"inputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) v)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 m (+.f64 (/.f64 m (/.f64 v (-.f64 1 m))) -1))","(*.f64 m (+.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) v)","(*.f64 v (+.f64 (/.f64 v (/.f64 m (-.f64 1 v))) -1))","(*.f64 v (+.f64 (*.f64 (/.f64 v m) (-.f64 1 v)) -1))","(*.f64 v (fma.f64 (/.f64 v m) (-.f64 1 v) -1))","(*.f64 v (fma.f64 (-.f64 1 v) (/.f64 v m) -1))","(*.f64 v (fma.f64 v (/.f64 (-.f64 1 v) m) -1))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":76.468017578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,7407,14,0.066320875],[11,6621,14,0.058759833000000004],[10,5034,14,0.048607083],[9,4417,14,0.038703417000000004],[8,4071,14,0.030535583],[7,3282,14,0.022827499],[6,1887,14,0.012893373999999999],[5,741,14,0.0060847079999999994],[4,285,14,0.0021993739999999996],[3,85,14,0.0007312079999999999],[2,39,14,0.000274333],[1,20,16,0.00012108299999999999],[0,9,16,5.7125e-5]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 m (+.f64 (/.f64 m (/.f64 v (-.f64 1 m))) -1))","(*.f64 m (+.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))"]],"stop":[["node limit",1]],"time":77.9140625,"type":"simplify"},{"compiler":[[23,15]],"time":0.403076171875,"type":"eval"},{"alts":[["(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","fresh",0.18359375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","next",0.15625]],"compiler":[[12,8],[13,9],[12,8],[13,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.14453125],"time":1.304931640625,"type":"prune"},{"compiler":[[40,25]],"locations":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)",0.00390625,true],["(*.f64 m (-.f64 1 m))",0.01171875,true],["(/.f64 (*.f64 m (-.f64 1 m)) v)",0.03515625,true],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",0.14453125,true]],"time":9.10693359375,"type":"localize"},{"count":[[4,63]],"series":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","-inf",0.16015625],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","inf",0.14599609375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","0",0.152099609375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","-inf",0.18017578125],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","inf",0.189208984375],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","0",0.174072265625],["(*.f64 m (-.f64 1 m))","m","-inf",0.286865234375],["(*.f64 m (-.f64 1 m))","m","inf",0.241943359375],["(*.f64 m (-.f64 1 m))","m","0",0.14794921875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","-inf",0.23193359375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","inf",0.237060546875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","0",0.282958984375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","-inf",0.27001953125],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","inf",0.343994140625],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","0",0.581787109375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","-inf",0.56689453125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","inf",0.35009765625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","v","0",0.4638671875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","-inf",0.552978515625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","inf",0.508056640625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","m","0",0.5390625]],"time":6.85791015625,"type":"series"},{"count":[[4,178]],"egraph":[[2,2909,42,0.025482458000000003],[1,201,46,0.0037807920000000003],[0,9,46,0.000253]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 m (-.f64 1 m))","(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) m) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) m) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)) (*.f64 m -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m (neg.f64 m))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 1 (/.f64 v (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (*.f64 (-.f64 1 m) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (*.f64 m (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (*.f64 (/.f64 1 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (neg.f64 (-.f64 1 m))) (/.f64 1 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (/.f64 (-.f64 1 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) 1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 1) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (-.f64 1 m) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 m (-.f64 1 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (-.f64 1 m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) m) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) m) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 m (neg.f64 m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (/.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (-.f64 1 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (neg.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 (/.f64 v (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (-.f64 1 m) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 m v) (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (*.f64 m (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (*.f64 (/.f64 1 v) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (neg.f64 (-.f64 1 m))) (/.f64 1 (neg.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 (-.f64 1 m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) 1) (/.f64 m v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) 1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 1) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (-.f64 1 m) (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (sqrt.f64 v)) -1)))))"]],"rules":[["egg-rr",66],["egg-rr",33],["egg-rr",54],["egg-rr",25]],"stop":[["node limit",1]],"time":54.537109375,"type":"rewrite"},{"count":[[241,206]],"egraph":[[5,5352,598,0.025929459000000002],[4,1458,598,0.012648459],[3,397,640,0.003759625],[2,164,748,0.001297084],[1,78,748,0.0005525419999999999],[0,29,827,0.000190042]],"inputs":[["(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","-1","(-.f64 (/.f64 m v) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 m (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(-.f64 (*.f64 (/.f64 m v) m) m)","(-.f64 (*.f64 m (/.f64 m v)) m)","(fma.f64 m (/.f64 m v) (neg.f64 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 m (neg.f64 m)) v)","(/.f64 m (/.f64 v (neg.f64 m)))","(*.f64 (neg.f64 m) (/.f64 m v))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 m (neg.f64 m)) v)","(/.f64 m (/.f64 v (neg.f64 m)))","(*.f64 (neg.f64 m) (/.f64 m v))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(*.f64 m (neg.f64 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(*.f64 m (neg.f64 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 m (-.f64 1 m))","-1","(-.f64 (/.f64 m v) 1)","(+.f64 (/.f64 m v) -1)","(+.f64 -1 (/.f64 m v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 m (neg.f64 m)) v)","(/.f64 m (/.f64 v (neg.f64 m)))","(*.f64 (neg.f64 m) (/.f64 m v))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 m (neg.f64 m)) v)","(/.f64 m (/.f64 v (neg.f64 m)))","(*.f64 (neg.f64 m) (/.f64 m v))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (neg.f64 (/.f64 (*.f64 m m) v)) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v)))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(fma.f64 m (/.f64 (-.f64 1 m) v) -1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","-1","-1"]],"stop":[["node limit",1]],"time":52.220947265625,"type":"simplify"},{"compiler":[[3295,2060]],"time":38.176025390625,"type":"eval"},{"alts":[["(*.f64 (fma.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)) -1) m)","fresh",0.2708587890737681],["(*.f64 (-.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -1) 1) m)","fresh",0.23894501953688402],["(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","fresh",5.95602729750296],["(/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) m) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))","fresh",11.275135107452865],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","next",0.1640625],["(*.f64 (-.f64 (*.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m))) 1) m)","fresh",0.1875]],"compiler":[[17,12],[15,11],[19,14],[24,17],[14,9],[15,11],[17,12],[15,11],[19,14],[24,17],[14,9],[15,11]],"count":[[208,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[206,6],"picked":[1,0]}],"min-error":[0.00390625],"time":63.322021484375,"type":"prune"},{"compiler":[[41,19]],"locations":[["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))",0.01171875,true],["(*.f64 (/.f64 m v) (-.f64 1 m))",0.05078125,true],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)",0.16015625,true]],"time":8.60302734375,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","v","-inf",0.166015625],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","v","inf",0.1650390625],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","v","0",0.19091796875],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","m","-inf",0.178955078125],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","m","inf",0.27783203125],["(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","m","0",0.171142578125],["(*.f64 (/.f64 m v) (-.f64 1 m))","v","-inf",0.158935546875],["(*.f64 (/.f64 m v) (-.f64 1 m))","v","inf",0.141845703125],["(*.f64 (/.f64 m v) (-.f64 1 m))","v","0",0.14404296875],["(*.f64 (/.f64 m v) (-.f64 1 m))","m","-inf",0.16796875],["(*.f64 (/.f64 m v) (-.f64 1 m))","m","inf",0.152099609375],["(*.f64 (/.f64 m v) (-.f64 1 m))","m","0",0.173095703125],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","v","-inf",0.30810546875],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","v","inf",0.39599609375],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","v","0",0.548095703125],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","m","-inf",0.2490234375],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","m","inf",0.288818359375],["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","m","0",0.3720703125]],"time":4.48388671875,"type":"series"},{"count":[[3,215]],"egraph":[[2,3562,31,0.025734709],[1,224,31,0.004426834],[0,10,39,0.000261459]],"inputs":[["(*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m)","(*.f64 (/.f64 m v) (-.f64 1 m))","(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 m m m) (/.f64 v m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (fma.f64 m m m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (fma.f64 m m m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 m m m) m) v)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 m m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 m m m) v))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 m (/.f64 v (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 v (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 m 1) (/.f64 v m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 m 3)) (*.f64 (/.f64 v m) (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (*.f64 m m)) (*.f64 (/.f64 v m) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 m m m) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 m m m) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 m m m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (pow.f64 m 3))) (*.f64 v (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (pow.f64 m 3))) (*.f64 (neg.f64 v) (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (*.f64 m m))) (*.f64 v (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (*.f64 m m))) (*.f64 (neg.f64 v) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) m) (*.f64 (+.f64 1 (fma.f64 m m m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) m) (*.f64 (+.f64 1 (fma.f64 m m m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) m) (*.f64 (+.f64 m 1) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) m) (*.f64 (+.f64 m 1) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) 1) (*.f64 (+.f64 1 (fma.f64 m m m)) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) 1) (*.f64 (+.f64 m 1) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) 1) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (sqrt.f64 v)) (sqrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) (/.f64 m v)) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) (/.f64 m v)) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m v) (+.f64 1 (pow.f64 m 3))) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 m v) (+.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 m m m) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 v (fma.f64 m m m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 m m m) v)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 v) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 v) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 (neg.f64 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 (neg.f64 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) 1 (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) 1 (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 m v) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 m v) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (*.f64 (cbrt.f64 m) (/.f64 1 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (*.f64 (cbrt.f64 m) (/.f64 1 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 m v)) (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 m v)) (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (cbrt.f64 (/.f64 m v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (cbrt.f64 (/.f64 m v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 1 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 1 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 m v)) (sqrt.f64 (/.f64 m v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 m v)) (sqrt.f64 (/.f64 m v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) m (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) m (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) 1) (/.f64 (cbrt.f64 m) v) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) 1) (/.f64 (cbrt.f64 m) v) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) v) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) v) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 m (cbrt.f64 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 m (cbrt.f64 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (/.f64 m v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (/.f64 m v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 v -1/2) (/.f64 m (sqrt.f64 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 v -1/2) (/.f64 m (sqrt.f64 v)) (*.f64 (/.f64 m v) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 m) (sqrt.f64 v)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 m) (sqrt.f64 v)) (*.f64 (/.f64 m v) m))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (/.f64 (*.f64 m m) (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) 0) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (-.f64 (/.f64 (fma.f64 m m m) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (/.f64 m v)) (hypot.f64 m (sqrt.f64 m)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (fma.f64 m m (-.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) (*.f64 m (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))) (neg.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2)) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 m m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (fma.f64 m m m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (-.f64 (/.f64 (fma.f64 m m m) v) -1) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (-.f64 (/.f64 (fma.f64 m m m) v) -1) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (/.f64 1 v) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (fma.f64 m m m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 m 1) (*.f64 (/.f64 m v) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 m m m) v) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 1 m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1 (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1 (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (pow.f64 (cbrt.f64 m) 2) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (neg.f64 (cbrt.f64 m)) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (*.f64 (cbrt.f64 m) (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (*.f64 (cbrt.f64 (/.f64 m v)) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (neg.f64 (sqrt.f64 m)) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) (*.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 m v)) (*.f64 (sqrt.f64 (/.f64 m v)) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m m m) (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (/.f64 m v)) (hypot.f64 m (sqrt.f64 m)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (pow.f64 (cbrt.f64 m) 2) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (/.f64 m v)) (hypot.f64 m (sqrt.f64 m)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 m) 2)) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (sqrt.f64 (/.f64 (fma.f64 m m m) v))) (sqrt.f64 (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (fma.f64 m m m) v) (pow.f64 (cbrt.f64 m) 2)) (cbrt.f64 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (fma.f64 m m m) v) (sqrt.f64 m)) (sqrt.f64 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 m) 2)) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))))"]],"rules":[["egg-rr",113],["egg-rr",79],["egg-rr",23]],"stop":[["node limit",1]],"time":54.985107421875,"type":"rewrite"},{"count":[[287,235]],"egraph":[[5,4794,816,0.024185834],[4,1320,816,0.011639084],[3,349,846,0.0034666669999999997],[2,144,1026,0.0012149169999999998],[1,66,1026,0.000517376],[0,25,1123,0.000184667]],"inputs":[["(/.f64 (pow.f64 m 2) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(*.f64 m (/.f64 m v))","(/.f64 m (/.f64 v m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 (neg.f64 m) m) v)","(/.f64 (neg.f64 m) (/.f64 v m))","(*.f64 (/.f64 m v) (neg.f64 m))","(*.f64 m (/.f64 (neg.f64 m) v))","(/.f64 m (/.f64 v (neg.f64 m)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 (neg.f64 m) m) v)","(/.f64 (neg.f64 m) (/.f64 v m))","(*.f64 (/.f64 m v) (neg.f64 m))","(*.f64 m (/.f64 (neg.f64 m) v))","(/.f64 m (/.f64 v (neg.f64 m)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 (*.f64 m m) v))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 m (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) m)","(*.f64 m (-.f64 (/.f64 m v) 1))","(-.f64 (/.f64 m (/.f64 v m)) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (-.f64 1 m) (/.f64 m v)))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 (*.f64 m m) v) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(*.f64 m (+.f64 (*.f64 (-.f64 1 m) (/.f64 m v)) -1))","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))"]],"stop":[["node limit",1]],"time":50.194091796875,"type":"simplify"},{"compiler":[[3934,1117]],"time":29.30078125,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)","fresh",41.92209021294447],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","fresh",0.19140625],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","next",0.17578125],["(+.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v)) (neg.f64 m))","fresh",5.95602729750296],["(+.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) 2) m) (neg.f64 m))","fresh",9.08763921210469]],"compiler":[[24,10],[14,9],[14,9],[18,13],[16,10],[24,10],[14,9],[14,9],[18,13],[16,10]],"count":[[241,5]],"kept":[{"done":[0,0],"fresh":[5,0],"new":[235,5],"picked":[1,0]}],"min-error":[0],"time":65.8271484375,"type":"prune"},{"compiler":[[39,15]],"locations":[["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))",0.01171875,true],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))",0.04296875,true],["(/.f64 m (/.f64 v m))",0.21484375,true]],"time":7.60986328125,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","v","-inf",0.154052734375],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","v","inf",0.15380859375],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","v","0",0.172119140625],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","m","-inf",0.162109375],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","m","inf",0.182861328125],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","m","0",0.157958984375],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","v","-inf",0.153076171875],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","v","inf",0.169921875],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","v","0",0.14794921875],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","m","-inf",0.17919921875],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","m","inf",0.1630859375],["(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","m","0",0.163818359375],["(/.f64 m (/.f64 v m))","v","-inf",0.303955078125],["(/.f64 m (/.f64 v m))","v","inf",0.330810546875],["(/.f64 m (/.f64 v m))","v","0",0.30908203125],["(/.f64 m (/.f64 v m))","m","-inf",0.156982421875],["(/.f64 m (/.f64 v m))","m","inf",0.320068359375],["(/.f64 m (/.f64 v m))","m","0",1.093017578125]],"time":4.696044921875,"type":"series"},{"count":[[3,244]],"egraph":[[2,3714,30,0.02609025],[1,228,32,0.0046078329999999995],[0,10,36,0.0002775]],"inputs":[["(/.f64 m (/.f64 v m))","(*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m))","(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 m v))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 m v)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (/.f64 m v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 v m)) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (/.f64 m v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 m) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) (sqrt.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m m)) v) (/.f64 (cbrt.f64 m) (/.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 m) v) (pow.f64 m 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m m)) 1) (/.f64 (cbrt.f64 m) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 v m)) -2) (/.f64 m (cbrt.f64 (/.f64 v m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 (/.f64 v m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 v m) -1/2) (/.f64 m (sqrt.f64 (/.f64 v m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (sqrt.f64 (/.f64 v m))) (/.f64 (cbrt.f64 m) (sqrt.f64 (/.f64 v m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (cbrt.f64 (*.f64 m m))) (cbrt.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (sqrt.f64 m)) (sqrt.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (/.f64 m v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 v (*.f64 m m)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 v (*.f64 m m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 m 3) (pow.f64 (/.f64 v m) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 v (*.f64 m m)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 m v))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 v (*.f64 m m)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 m 3) (pow.f64 (/.f64 v m) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (/.f64 m v))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (/.f64 m v)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 m (/.f64 m v)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 m (/.f64 (/.f64 v m) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 v m) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 m 1) (/.f64 v (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 m 3)) (*.f64 (/.f64 v (*.f64 m m)) (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (*.f64 m m)) (*.f64 (/.f64 v (*.f64 m m)) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 m m m) (/.f64 v m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 m m m)) (/.f64 v m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (pow.f64 m 3))) (*.f64 (/.f64 v m) (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 1 (*.f64 m m))) (*.f64 (/.f64 v m) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) m) (*.f64 (+.f64 1 (fma.f64 m m m)) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) m) (*.f64 (+.f64 m 1) (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) 1) (*.f64 (+.f64 1 (fma.f64 m m m)) (/.f64 v (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) 1) (*.f64 (+.f64 m 1) (/.f64 v (*.f64 m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) v) (/.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) 1) (/.f64 v m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (cbrt.f64 (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (sqrt.f64 (/.f64 v m))) (sqrt.f64 (/.f64 v m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 m 3)) (*.f64 m (/.f64 m v))) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (*.f64 m m)) (*.f64 m (/.f64 m v))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 1 (pow.f64 m 3))) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 v m) (fma.f64 m m m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 m v) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 m v)) 1 (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 m v)) 1 (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 m (/.f64 m v)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 m (/.f64 m v)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 m) (/.f64 m v)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 m) (/.f64 m v)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) (sqrt.f64 (*.f64 m (/.f64 m v))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) (sqrt.f64 (*.f64 m (/.f64 m v))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 m v)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 m v)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) m (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) m (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 m v) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m m) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m m) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) v) (/.f64 (cbrt.f64 m) (/.f64 1 m)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) v) (/.f64 (cbrt.f64 m) (/.f64 1 m)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) v) (pow.f64 m 3/2) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) v) (pow.f64 m 3/2) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) 1) (/.f64 (cbrt.f64 m) (/.f64 v m)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) 1) (/.f64 (cbrt.f64 m) (/.f64 v m)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) (/.f64 v m)) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) (/.f64 v m)) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 v m)) -2) (/.f64 m (cbrt.f64 (/.f64 v m))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 v m)) -2) (/.f64 m (cbrt.f64 (/.f64 v m))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 (/.f64 v m))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 (/.f64 v m))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 v m) -1/2) (/.f64 m (sqrt.f64 (/.f64 v m))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 v m) -1/2) (/.f64 m (sqrt.f64 (/.f64 v m))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (sqrt.f64 (/.f64 v m))) (/.f64 (cbrt.f64 m) (sqrt.f64 (/.f64 v m))) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 m m)) (sqrt.f64 (/.f64 v m))) (/.f64 (cbrt.f64 m) (sqrt.f64 (/.f64 v m))) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) 1) m (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) 1) m (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 m (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (sqrt.f64 m)) (sqrt.f64 m) (*.f64 (*.f64 m (/.f64 m v)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (sqrt.f64 m)) (sqrt.f64 m) (*.f64 m (*.f64 m (/.f64 m v))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 m (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2) (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (/.f64 (*.f64 m m) (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) 0) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2) (/.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3)) (/.f64 1 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2) (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3)) (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3)) (fma.f64 m m (-.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2) (*.f64 m (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3))) (neg.f64 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2)) (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 m m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)) (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (/.f64 m v)) (fma.f64 m m m)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (/.f64 m v) (+.f64 m 1)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 m v) (fma.f64 m m m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 m 1) (*.f64 m (/.f64 m v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 1 m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 1 (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 1 (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2) (/.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m) 2) (/.f64 1 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2)) (*.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) (+.f64 m 1)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 (cbrt.f64 m)) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 m 1)) 2) (*.f64 (cbrt.f64 (+.f64 m 1)) (*.f64 m (/.f64 m v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) (*.f64 (sqrt.f64 (*.f64 m (/.f64 m v))) (+.f64 m 1)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (neg.f64 (sqrt.f64 m)) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (sqrt.f64 (fma.f64 (/.f64 m v) (fma.f64 m m m) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 m 1)) (*.f64 (sqrt.f64 (+.f64 m 1)) (*.f64 m (/.f64 m v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3)) (/.f64 1 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2))) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 3)) (/.f64 1 (fma.f64 m (fma.f64 (/.f64 m v) (fma.f64 m m m) m) (pow.f64 (*.f64 (/.f64 m v) (fma.f64 m m m)) 2))) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (fma.f64 m m m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (/.f64 (+.f64 m 1) (/.f64 1 m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m m m) (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 (+.f64 m 1) (/.f64 v m)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (pow.f64 (cbrt.f64 (/.f64 v m)) 2)) (/.f64 (+.f64 m 1) (cbrt.f64 (/.f64 v m))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 (/.f64 v m))) (/.f64 (+.f64 m 1) (sqrt.f64 (/.f64 v m))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (fma.f64 m m m))) (sqrt.f64 m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 m m m) v) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 m m m) 1) (/.f64 m v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 m m m) (neg.f64 v)) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m (/.f64 m v)) (pow.f64 (cbrt.f64 (+.f64 m 1)) 2)) (cbrt.f64 (+.f64 m 1)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m (/.f64 m v)) (sqrt.f64 (+.f64 m 1))) (sqrt.f64 (+.f64 m 1)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m 1) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 2))) (cbrt.f64 (*.f64 m (/.f64 m v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m 1) (sqrt.f64 (*.f64 m (/.f64 m v)))) (sqrt.f64 (*.f64 m (/.f64 m v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 m 1) (/.f64 m v)) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 (/.f64 m v) (fma.f64 m m m)))))))"]],"rules":[["egg-rr",108],["egg-rr",89],["egg-rr",47]],"stop":[["node limit",1]],"time":58.531005859375,"type":"rewrite"},{"count":[[316,257]],"egraph":[[5,4354,752,0.022117083],[4,1141,752,0.010031749],[3,309,782,0.0028722080000000002],[2,118,899,0.001030083],[1,54,899,0.000456541],[0,20,954,0.000162583]],"inputs":[["(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 2) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 m (/.f64 m v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 m (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) m)","(-.f64 (/.f64 (*.f64 m m) v) m)","(-.f64 (*.f64 m (/.f64 m v)) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 (/.f64 m v) (-.f64 1 m)))","(*.f64 (*.f64 m m) (/.f64 (-.f64 1 m) v))","(*.f64 m (/.f64 (-.f64 m (*.f64 m m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (/.f64 (*.f64 m m) v) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(fma.f64 (*.f64 m (/.f64 m v)) (-.f64 1 m) (neg.f64 m))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))"]],"stop":[["node limit",1]],"time":46.8359375,"type":"simplify"},{"compiler":[[4528,1224]],"time":31.986083984375,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v)) (neg.f64 m))","fresh",5.95602729750296],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","done",0.17578125],["(+.f64 (/.f64 (/.f64 (fma.f64 m m m) v) (/.f64 1 m)) (neg.f64 m))","fresh",8.964627950982036],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","next",0.19140625]],"compiler":[[18,13],[14,9],[15,9],[14,9],[18,13],[15,9],[14,9]],"count":[[262,4]],"kept":[{"done":[0,0],"fresh":[4,1],"new":[257,2],"picked":[1,1]}],"min-error":[0],"time":75.39306640625,"type":"prune"},{"compiler":[[43,24]],"locations":[["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))",0.01171875,true],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)",0.16015625,true],["(*.f64 m (/.f64 (-.f64 1 m) v))",0.296875,true]],"time":9.89990234375,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","v","-inf",0.155029296875],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","v","inf",0.169921875],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","v","0",0.156005859375],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","m","-inf",0.1640625],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","m","inf",0.180908203125],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","m","0",0.159912109375],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","v","-inf",0.1669921875],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","v","inf",0.14794921875],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","v","0",0.14892578125],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","m","-inf",0.173095703125],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","m","inf",0.157958984375],["(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","m","0",0.157958984375],["(*.f64 m (/.f64 (-.f64 1 m) v))","v","-inf",0.1728515625],["(*.f64 m (/.f64 (-.f64 1 m) v))","v","inf",0.156005859375],["(*.f64 m (/.f64 (-.f64 1 m) v))","v","0",0.166015625],["(*.f64 m (/.f64 (-.f64 1 m) v))","m","-inf",0.172119140625],["(*.f64 m (/.f64 (-.f64 1 m) v))","m","inf",0.172119140625],["(*.f64 m (/.f64 (-.f64 1 m) v))","m","0",0.22998046875]],"time":3.218017578125,"type":"series"},{"count":[[3,158]],"egraph":[[2,3509,31,0.026182958],[1,226,31,0.00447],[0,10,39,0.000276458]],"inputs":[["(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m)","(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 m m m) v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 m m m) v))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 m (/.f64 v (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 v (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 m m m) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 m m m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) 1) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (cbrt.f64 (*.f64 v v))) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 m m m) (sqrt.f64 v)) (sqrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 m) m) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (+.f64 -1 m)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 m m m) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 v (fma.f64 m m m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 m m m) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 m m m) v)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 m m m) m) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (fma.f64 m m m)) v)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 (+.f64 m 1) v)) m) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (sqrt.f64 (/.f64 (+.f64 m 1) v))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (/.f64 (*.f64 m m) (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) 0) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (fma.f64 m (/.f64 (+.f64 m 1) v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 m) (sqrt.f64 (/.f64 (fma.f64 m m m) v)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (fma.f64 m m (-.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2) (*.f64 (/.f64 (fma.f64 m m m) v) (*.f64 m m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))) (neg.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2)) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 m m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 m) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 m)) (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (exp.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 m) (/.f64 (fma.f64 m m m) v)) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)))) (+.f64 1 (expm1.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 (fma.f64 m m m) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m -1 (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 (/.f64 (fma.f64 m m m) v) -1) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (fma.f64 m (/.f64 (+.f64 m 1) v) 1) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (fma.f64 m (/.f64 (+.f64 m 1) v) 1) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (+.f64 -1 (/.f64 (fma.f64 m m m) v)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 m (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 m 1) v) (*.f64 m m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (fma.f64 m m m) v) m m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 1 m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1 (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 1 (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) (/.f64 (+.f64 m 1) v) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m) 2) (/.f64 1 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (neg.f64 (cbrt.f64 m)) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (*.f64 (cbrt.f64 m) (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) 2) (cbrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (neg.f64 (sqrt.f64 m)) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (sqrt.f64 (fma.f64 m (/.f64 (fma.f64 m m m) v) m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) (*.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 m 3) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 3)) (/.f64 1 (fma.f64 m (fma.f64 m (/.f64 (fma.f64 m m m) v) m) (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2))) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 m (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 m) (sqrt.f64 (/.f64 (fma.f64 m m m) v)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)) (+.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 m) (sqrt.f64 (/.f64 (fma.f64 m m m) v)) (sqrt.f64 m)) (-.f64 (sqrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) (sqrt.f64 m)) (fma.f64 (neg.f64 (cbrt.f64 m)) (cbrt.f64 (*.f64 m m)) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (pow.f64 (cbrt.f64 (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (sqrt.f64 (/.f64 (fma.f64 m m m) v))) (sqrt.f64 (/.f64 (fma.f64 m m m) v)) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (fma.f64 m m m) v) (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (fma.f64 m m m) v) (sqrt.f64 m)) (sqrt.f64 m) m)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (cbrt.f64 (*.f64 m m))) (cbrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 m)) (sqrt.f64 m) (*.f64 m (/.f64 (fma.f64 m m m) v)))))))"]],"rules":[["egg-rr",108],["egg-rr",23],["egg-rr",27]],"stop":[["node limit",1]],"time":53.31005859375,"type":"rewrite"},{"count":[[230,178]],"egraph":[[5,4792,816,0.024019791],[4,1324,816,0.011502083],[3,349,846,0.003453958],[2,144,1026,0.00117475],[1,66,1026,0.00051325],[0,25,1123,0.00018225]],"inputs":[["(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (*.f64 m (-.f64 1 m)) v)","(/.f64 (pow.f64 m 2) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(*.f64 -1 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))"]],"method":["egg-herbie"],"outputs":[["(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 (neg.f64 m) m) v)","(/.f64 (neg.f64 m) (/.f64 v m))","(*.f64 (/.f64 m v) (neg.f64 m))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(neg.f64 (/.f64 (*.f64 m m) v))","(/.f64 (*.f64 (neg.f64 m) m) v)","(/.f64 (neg.f64 m) (/.f64 v m))","(*.f64 (/.f64 m v) (neg.f64 m))","(*.f64 m (/.f64 (neg.f64 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (neg.f64 (/.f64 (*.f64 m m) v)))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 m (/.f64 (-.f64 1 m) v))","(/.f64 (pow.f64 m 2) v)","(/.f64 (*.f64 m m) v)","(/.f64 m (/.f64 v m))","(*.f64 (/.f64 m v) m)","(*.f64 m (/.f64 m v))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 m (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) m)","(-.f64 (*.f64 (/.f64 m v) m) m)","(-.f64 (*.f64 m (/.f64 m v)) m)","(*.f64 m (+.f64 (/.f64 m v) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 (/.f64 (pow.f64 m 3) v))","(neg.f64 (/.f64 (pow.f64 m 3) v))","(/.f64 (neg.f64 (pow.f64 m 3)) v)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v)","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (/.f64 (*.f64 m m) v))","(-.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 (/.f64 m v) (fma.f64 m (neg.f64 m) m))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 -1 m)","(neg.f64 m)","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(+.f64 (*.f64 -1 m) (/.f64 (*.f64 (pow.f64 m 2) (-.f64 1 m)) v))","(fma.f64 -1 (/.f64 (pow.f64 m 3) v) (fma.f64 -1 m (/.f64 (*.f64 m m) v)))","(-.f64 (-.f64 (/.f64 m (/.f64 v m)) m) (/.f64 (pow.f64 m 3) v))","(-.f64 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 (pow.f64 m 3) v)))","(-.f64 (*.f64 m (*.f64 m (/.f64 (-.f64 1 m) v))) m)","(*.f64 m (fma.f64 m (/.f64 (-.f64 1 m) v) -1))","(*.f64 m (fma.f64 (/.f64 m v) (-.f64 1 m) -1))"]],"stop":[["node limit",1]],"time":48.828857421875,"type":"simplify"},{"compiler":[[2885,731]],"time":20.779052734375,"type":"eval"},{"alts":[["(+.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v)) (neg.f64 m))","fresh",5.95602729750296],["(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","done",0.17578125],["(+.f64 (/.f64 (/.f64 (fma.f64 m m m) v) (/.f64 1 m)) (neg.f64 m))","fresh",8.964627950982036],["(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","done",0.19140625]],"compiler":[[18,13],[14,9],[15,9],[14,9]],"count":[[182,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[178,0],"picked":[1,1]}],"min-error":[0],"time":36.9150390625,"type":"prune"},{"accuracy":[0.15625],"baseline":[0.15625],"branch":[["m",0.15625,1],["v",0.15625,1],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",0.15625,1]],"compiler":[[3,2],[3,2],[13,9],[220,124]],"count":[[15,1]],"inputs":[["(+.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v)) (neg.f64 m))","(+.f64 (/.f64 (/.f64 (fma.f64 m m m) v) (/.f64 1 m)) (neg.f64 m))","(fma.f64 (cbrt.f64 (pow.f64 (*.f64 m (/.f64 (fma.f64 m m m) v)) 2)) (cbrt.f64 (*.f64 m (/.f64 (fma.f64 m m m) v))) m)","(+.f64 (*.f64 (*.f64 m (/.f64 (-.f64 1 m) v)) m) (neg.f64 m))","(+.f64 (*.f64 (/.f64 m (/.f64 v m)) (-.f64 1 m)) (neg.f64 m))","(+.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (/.f64 (pow.f64 m 2) v)) (neg.f64 m))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 (fma.f64 m m m) v)) 2) m) (neg.f64 m))","(*.f64 (fma.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)) -1) m)","(*.f64 (-.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -1) 1) m)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 m 3) v)) (+.f64 (*.f64 -1 m) (/.f64 (pow.f64 m 2) v)))","(/.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) m) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))","(+.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) m) (neg.f64 m))","(*.f64 (-.f64 (*.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m))) 1) m)","(*.f64 m (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"link":["."],"name":["a parameter of renormalized beta distribution"],"oracle":[47.64045848441679],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"time":21.18505859375,"times":[["m",5.829833984375],["v",5.89306640625],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)",5.970947265625]],"type":"regimes"},{"compiler":[[13,9]],"egraph":[[4,25,16,0.000131583],[3,24,16,0.000106291],[2,22,16,8.141600000000001e-5],[1,18,16,5.6708e-5],[0,9,16,3.4166e-5]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) m)","(*.f64 m (+.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) -1))"]],"stop":[["fuel",1],["saturated",1]],"time":8.48291015625,"type":"simplify"},{"time":0.004150390625,"type":"soundness"},{"compiler":[[13,9]],"remove-preprocessing":[[]],"time":9.1328125,"type":"end"}]