[{"compiler":[[7,6]],"method":["search"],"sampling":[[12,0.9956073760986328,0.0009760856628417969,0.0034165382385253906],[11,0.9956073760986328,0.0019521713256835938,0.0024404525756835938],[10,0.9956073760986328,0.0039043426513671875,0.00048828125],[9,0.9917030334472656,0.007808685302734375,0.00048828125],[8,0.9838943481445313,0.01561737060546875,0.00048828125],[7,0.9682769775390625,0.0312347412109375,0.00048828125],[6,0.937042236328125,0.062469482421875,0.00048828125],[5,0.87457275390625,0.12493896484375,0.00048828125],[4,0.7496337890625,0.2498779296875,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.224853515625,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.096435546875,4],["body",512,"valid",0.34765625,8],["body",1024,"valid",2.5615234375,39],["body",256,"valid",210.7431640625,8209]],"time":220.93798828125,"type":"sample"},{"compiler":[[6,5]],"egraph":[[0,1,1,9.58e-7],[2,13,5,0.000123959],[1,11,5,8.6209e-5],[0,6,5,4.6125e-5]],"inputs":[["0"],["(-.f64 (*.f64 x 116) 16)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 (*.f64 x 116) 16)","(fma.f64 x 116 -16)"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.12109375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[2,13,5,0.00011925],[1,11,5,8.0917e-5],[0,6,5,4.1292e-5]],"inputs":[["(-.f64 (*.f64 x 116) 16)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x 116) 16)","(fma.f64 x 116 -16)"]],"stop":[["saturated",1]],"time":10.116943359375,"type":"simplify"},{"compiler":[[10,8]],"time":0.316162109375,"type":"eval"},{"alts":[["(fma.f64 x 116 -16)","next",0]],"compiler":[[5,4],[5,4]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0],"time":0.75390625,"type":"prune"},{"compiler":[[8,6]],"locations":[["(fma.f64 x 116 -16)",0.0078125,true]],"time":2.032958984375,"type":"localize"},{"count":[[1,12]],"series":[["(fma.f64 x 116 -16)","x","-inf",0.362060546875],["(fma.f64 x 116 -16)","x","inf",0.302001953125],["(fma.f64 x 116 -16)","x","0",0.2919921875]],"time":0.9990234375,"type":"series"},{"count":[[1,24]],"egraph":[[2,1073,5,0.013323333],[1,102,5,0.001665791],[0,5,5,0.00019775]],"inputs":[["(fma.f64 x 116 -16)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 -16 (*.f64 x 116))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x 116) -16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x 116 -16))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 116) 1) -16)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 x 116 -16))) (cbrt.f64 (exp.f64 (fma.f64 x 116 -16))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x 116 -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x 116 -16)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x 116 -16)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x 116 -16)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x 116 -16) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x 116 -16))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x 116 -16)) (pow.f64 (cbrt.f64 (fma.f64 x 116 -16)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x 116 -16)) 2) (cbrt.f64 (fma.f64 x 116 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x 116 -16)) (sqrt.f64 (fma.f64 x 116 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x 116) 3) -4096) (fma.f64 (*.f64 x 116) (*.f64 x 116) (-.f64 256 (*.f64 (*.f64 x 116) -16))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x 116) (*.f64 x 116) -256) (fma.f64 x 116 16))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x 116 -16) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x 116 -16) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x 116 -16)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x 116 -16)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x 116 -16) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x 116 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x 116 -16) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x 116 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x 116 -16)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x 116 -16)))))))"]],"rules":[["egg-rr",24]],"stop":[["node limit",1]],"time":29.949951171875,"type":"rewrite"},{"count":[[36,28]],"egraph":[[2,13,54,0.000135874],[1,11,54,9.191599999999999e-5],[0,7,54,4.6083e-5]],"inputs":[["-16","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)","(*.f64 116 x)","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)","(*.f64 116 x)","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)","(-.f64 (*.f64 116 x) 16)"]],"method":["egg-herbie"],"outputs":[["-16","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(*.f64 116 x)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(*.f64 116 x)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)","(-.f64 (*.f64 116 x) 16)","(fma.f64 116 x -16)"]],"stop":[["saturated",1]],"time":10.780029296875,"type":"simplify"},{"compiler":[[232,194]],"time":4.27197265625,"type":"eval"},{"alts":[["(fma.f64 x 116 -16)","done",0]],"compiler":[[5,4]],"count":[[29,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[28,0],"picked":[1,1]}],"min-error":[0],"time":3.47216796875,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["(-.f64 (*.f64 x 116) 16)",0,1],["(*.f64 x 116)",0,1]],"compiler":[[2,1],[6,5],[4,3],[10,8]],"count":[[2,1]],"inputs":[["(fma.f64 x 116 -16)","(-.f64 (*.f64 x 116) 16)"]],"link":["."],"name":["Data.Colour.CIE:lightness from colour-2.3.3"],"oracle":[0.0078125],"outputs":[["(fma.f64 x 116 -16)"]],"time":7.304931640625,"times":[["x",2.343994140625],["(-.f64 (*.f64 x 116) 16)",2.056884765625],["(*.f64 x 116)",2.43505859375]],"type":"regimes"},{"compiler":[[5,4]],"egraph":[[0,5,5,1.1458e-5]],"inputs":[["(fma.f64 x 116 -16)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 x 116 -16)"]],"stop":[["done",1],["saturated",1]],"time":7.848876953125,"type":"simplify"},{"time":0.01318359375,"type":"soundness"},{"compiler":[[5,4]],"remove-preprocessing":[[]],"time":7.930908203125,"type":"end"}]