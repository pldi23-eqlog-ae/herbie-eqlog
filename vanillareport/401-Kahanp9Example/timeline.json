[{"compiler":[[28,17]],"method":["search"],"sampling":[[12,0.18097948632203043,0.006215457106009126,0.8128050565719604],[11,0.18097948632203043,0.006215457106009126,0.8128050565719604],[10,0.17403279896825552,0.013162144459784031,0.8128050565719604],[9,0.17403279896825552,0.013162144459784031,0.8128050565719604],[8,0.15794573351740837,0.02924920991063118,0.8128050565719604],[7,0.15794573351740837,0.02924920991063118,0.8128050565719604],[6,0.052648577839136124,0.13454636558890343,0.8128050565719604],[5,0.04679873585700989,0.14039620757102966,0.8128050565719604],[4,0.0,0.18719494342803955,0.8128050565719604],[3,0.0,0.18719494342803955,0.8128050565719604],[2,0.0,0.18719494342803955,0.8128050565719604],[1,0.0,0.18719494342803955,0.8128050565719604],[0,0.0,0.18719494342803955,0.8128050565719604]],"time":15.4970703125,"type":"analyze"},{"outcomes":[["body",256,"valid",425.9560546875,8256]],"time":436.074951171875,"type":"sample"},{"compiler":[[17,9]],"egraph":[[0,2,2,3.125e-6],[13,7971,40,0.12256875299999999],[12,7956,40,0.10701721099999999],[11,7717,40,0.09366979399999999],[10,7219,40,0.07860191899999999],[9,6465,40,0.065868335],[8,5691,40,0.052036084999999996],[7,4866,40,0.037125251],[6,3681,40,0.022533001],[5,1581,40,0.012856668],[4,573,40,0.004371709],[3,250,40,0.001710834],[2,103,40,0.000779584],[1,43,40,0.00031775],[0,15,40,0.000111792]],"inputs":[["0","1"],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (*.f64 (-.f64 y x) (+.f64 y x)) (+.f64 (*.f64 y y) (*.f64 x x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (-.f64 x y) (/.f64 (fma.f64 x x (*.f64 y y)) (+.f64 x y)))","(*.f64 (-.f64 x y) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))))","(/.f64 (*.f64 (-.f64 y x) (+.f64 y x)) (+.f64 (*.f64 y y) (*.f64 x x)))","(/.f64 (-.f64 y x) (/.f64 (fma.f64 x x (*.f64 y y)) (+.f64 x y)))","(*.f64 (/.f64 (-.f64 y x) (fma.f64 x x (*.f64 y y))) (+.f64 x y))","(*.f64 (+.f64 x y) (/.f64 (-.f64 y x) (fma.f64 x x (*.f64 y y))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":148.945068359375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,6720,20,0.042847334],[7,4806,20,0.031401709],[6,2077,20,0.016855042],[5,858,20,0.006641042],[4,330,20,0.002410292],[3,139,20,0.0009015840000000001],[2,58,20,0.00039650000000000004],[1,24,20,0.000168667],[0,10,20,5.8875e-5]],"inputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","(/.f64 (-.f64 x y) (/.f64 (fma.f64 x x (*.f64 y y)) (+.f64 x y)))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (fma.f64 x x (*.f64 y y)))","(*.f64 (-.f64 x y) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))))"]],"stop":[["node limit",1]],"time":55.7099609375,"type":"simplify"},{"compiler":[[31,12]],"time":0.3740234375,"type":"eval"},{"alts":[["(*.f64 (-.f64 x y) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))))","fresh",22.41900611232939],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","next",22.2578125]],"compiler":[[16,8],[17,9],[16,8],[17,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[21.878641955577265],"time":1.35107421875,"type":"prune"},{"compiler":[[45,9]],"locations":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))",21.964819759772574,true]],"time":7.697021484375,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","y","-inf",0.319091796875],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","y","inf",0.409912109375],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","y","0",0.5419921875],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","x","-inf",0.391845703125],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","x","inf",0.458984375],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))","x","0",0.746826171875]],"time":2.98388671875,"type":"series"},{"count":[[1,51]],"egraph":[[2,3934,19,0.029475583],[1,237,19,0.0049410420000000005],[0,10,20,0.000248833]],"inputs":[["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (/.f64 (pow.f64 (hypot.f64 x y) 2) (+.f64 x y))) (/.f64 y (/.f64 (pow.f64 (hypot.f64 x y) 2) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (/.f64 (pow.f64 (hypot.f64 x y) 2) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (*.f64 (+.f64 x y) (/.f64 1 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (*.f64 (-.f64 x y) (/.f64 1 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (/.f64 1 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 2) (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (/.f64 1 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (hypot.f64 x y)) (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x y) (neg.f64 (-.f64 x y))) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (hypot.f64 x y) 2)) (-.f64 (*.f64 x x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (/.f64 1 (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) 1) (/.f64 (+.f64 x y) (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) 1) (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) 2) 1) (/.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) 1) (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2) 2)) (/.f64 (+.f64 x y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2) 2)) (/.f64 (-.f64 x y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2) 2)) (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) 2) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2) 2)) (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2) 2)) (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) (/.f64 (-.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 x y)) (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) 2) (hypot.f64 x y)) (/.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (pow.f64 x 4) (pow.f64 y 4))) (-.f64 (*.f64 x x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 y 4) (pow.f64 (*.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (hypot.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 x y) 2) (-.f64 (*.f64 x x) (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 3) (pow.f64 (pow.f64 (hypot.f64 x y) 2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (pow.f64 (hypot.f64 x y) 2) (-.f64 (*.f64 x x) (*.f64 y y))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (neg.f64 (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 3) (pow.f64 (pow.f64 (hypot.f64 x y) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 1))))))"]],"rules":[["egg-rr",51]],"stop":[["node limit",1]],"time":49.2470703125,"type":"rewrite"},{"count":[[75,70]],"egraph":[[3,5810,24,0.02756175],[2,1228,24,0.010055333],[1,323,24,0.002289667],[0,94,24,0.000461292]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","-1","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","-1","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","-1","1","-1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","-1","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","-1","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","-1","1","-1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","-1","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","-1","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","-1","1","-1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","-1","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","-1","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1"]],"stop":[["node limit",1]],"time":40.23583984375,"type":"simplify"},{"compiler":[[1468,709]],"time":13.701171875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 3)","fresh",22.277123601616463],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","next",0.020195019536884032]],"compiler":[[18,12],[17,8],[18,12],[17,8]],"count":[[72,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[70,2],"picked":[1,0]}],"min-error":[0.012382519536884034],"time":12.125,"type":"prune"},{"compiler":[[42,8]],"locations":[["(/.f64 (-.f64 x y) (hypot.f64 x y))",0.015625,true],["(/.f64 (+.f64 x y) (hypot.f64 x y))",0.015625,true],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))",0.02734375,true]],"time":6.7578125,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 (-.f64 x y) (hypot.f64 x y))","y","-inf",0.194091796875],["(/.f64 (-.f64 x y) (hypot.f64 x y))","y","inf",0.172119140625],["(/.f64 (-.f64 x y) (hypot.f64 x y))","y","0",0.22900390625],["(/.f64 (-.f64 x y) (hypot.f64 x y))","x","-inf",0.220947265625],["(/.f64 (-.f64 x y) (hypot.f64 x y))","x","inf",0.25],["(/.f64 (-.f64 x y) (hypot.f64 x y))","x","0",0.218017578125],["(/.f64 (+.f64 x y) (hypot.f64 x y))","y","-inf",0.260986328125],["(/.f64 (+.f64 x y) (hypot.f64 x y))","y","inf",0.345947265625],["(/.f64 (+.f64 x y) (hypot.f64 x y))","y","0",0.22900390625],["(/.f64 (+.f64 x y) (hypot.f64 x y))","x","-inf",0.301025390625],["(/.f64 (+.f64 x y) (hypot.f64 x y))","x","inf",0.248046875],["(/.f64 (+.f64 x y) (hypot.f64 x y))","x","0",0.31982421875],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","y","-inf",0.22900390625],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","y","inf",0.2978515625],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","y","0",0.526123046875],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","x","-inf",0.48486328125],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","x","inf",0.4609375],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","x","0",0.705810546875]],"time":5.97705078125,"type":"series"},{"count":[[3,259]],"egraph":[[2,3529,39,0.027994917],[1,214,39,0.0043112919999999996],[0,9,42,0.000226875]],"inputs":[["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(/.f64 (+.f64 x y) (hypot.f64 x y))","(/.f64 (-.f64 x y) (hypot.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (*.f64 (hypot.f64 x y) (/.f64 (hypot.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (*.f64 (/.f64 (hypot.f64 x y) (+.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (/.f64 (pow.f64 (hypot.f64 x y) 2) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (/.f64 (hypot.f64 x y) (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (hypot.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (*.f64 (/.f64 (hypot.f64 x y) (-.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (*.f64 (hypot.f64 x y) (/.f64 (hypot.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) (/.f64 (hypot.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (hypot.f64 x y) (-.f64 x y)) (/.f64 (hypot.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (hypot.f64 x y) (+.f64 x y)) (/.f64 (hypot.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (hypot.f64 x y) 2) (-.f64 (*.f64 x x) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (hypot.f64 x y) (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 x y)) (*.f64 (/.f64 (hypot.f64 x y) (+.f64 x y)) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (*.f64 (/.f64 (hypot.f64 x y) (-.f64 x y)) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y)) (hypot.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (neg.f64 (pow.f64 (hypot.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y))) (neg.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 x y)) (+.f64 x y)) (*.f64 (neg.f64 (hypot.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 x y)) 1) (*.f64 (neg.f64 (hypot.f64 x y)) (/.f64 (hypot.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) (neg.f64 (+.f64 x y))) (*.f64 (hypot.f64 x y) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 x y)) (neg.f64 (+.f64 x y))) (*.f64 (neg.f64 (hypot.f64 x y)) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) (-.f64 x y)) (*.f64 (neg.f64 (hypot.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) 1) (*.f64 (neg.f64 (hypot.f64 x y)) (/.f64 (hypot.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x y) (neg.f64 (-.f64 x y))) (*.f64 (hypot.f64 x y) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) (neg.f64 (-.f64 x y))) (*.f64 (neg.f64 (hypot.f64 x y)) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y)) 1) (hypot.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (cbrt.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (hypot.f64 x y)) (sqrt.f64 (hypot.f64 x y))) (sqrt.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y))) (neg.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 x y)) (/.f64 (-.f64 x y) (hypot.f64 x y))) (neg.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (neg.f64 (+.f64 x y))) (neg.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) (neg.f64 (-.f64 x y))) (neg.f64 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (hypot.f64 x y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 3) (pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 3) (pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (hypot.f64 x y) 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)))) (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 (+.f64 x y) (sqrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 x y) 2)) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 x y) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (hypot.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 (hypot.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) (hypot.f64 x y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (hypot.f64 x y)))) (sqrt.f64 (/.f64 y (hypot.f64 x y))) (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (hypot.f64 x y)) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 1 (hypot.f64 x y)) y))) (fma.f64 (neg.f64 (/.f64 1 (hypot.f64 x y))) y (*.f64 (/.f64 1 (hypot.f64 x y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (hypot.f64 x y)) 1))) (fma.f64 (neg.f64 (/.f64 y (hypot.f64 x y))) 1 (*.f64 (/.f64 y (hypot.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (*.f64 (cbrt.f64 (/.f64 y (hypot.f64 x y))) (cbrt.f64 (/.f64 y (hypot.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (hypot.f64 x y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (hypot.f64 x y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (hypot.f64 x y))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y)))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 y (sqrt.f64 (hypot.f64 x y))) (/.f64 1 (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (hypot.f64 x y)) (/.f64 y (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) (sqrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 x y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (-.f64 x y) (cbrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 (-.f64 x y) (sqrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (hypot.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 x y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (hypot.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (hypot.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (hypot.f64 x y)) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (hypot.f64 x y)) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 x (cbrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (hypot.f64 x y))) (/.f64 x (sqrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x y)) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x y)) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (hypot.f64 x y))) (neg.f64 (/.f64 y (hypot.f64 x y))))))))"]],"rules":[["egg-rr",172],["egg-rr",36],["egg-rr",51]],"stop":[["node limit",1]],"time":79.98095703125,"type":"rewrite"},{"count":[[331,334]],"egraph":[[2,1780,1060,0.014620749999999998],[1,496,1206,0.003335541],[0,149,1292,0.00070025]],"inputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","1","(+.f64 1 (/.f64 x y))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","1","(+.f64 1 (/.f64 x y))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))) 1)","-1","(-.f64 (/.f64 x y) 1)","(-.f64 (+.f64 (/.f64 x y) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","-1","(-.f64 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))) 1)","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","-1","(-.f64 (/.f64 x y) 1)","(-.f64 (+.f64 (/.f64 x y) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(fma.f64 2 (/.f64 (*.f64 x x) (*.f64 y y)) -1)","(fma.f64 2 (/.f64 x (/.f64 (*.f64 y y) x)) -1)","(fma.f64 2 (*.f64 (/.f64 x (*.f64 y y)) x) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)))) -1)","(fma.f64 2 (/.f64 x (/.f64 (*.f64 y y) x)) (fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","(fma.f64 2 (*.f64 (/.f64 x (*.f64 y y)) x) (fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) 1)","(+.f64 (fma.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (fma.f64 2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))) -1)","(fma.f64 2 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) (fma.f64 2 (/.f64 x (/.f64 (*.f64 y y) x)) (fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1)))","(fma.f64 2 (+.f64 (*.f64 (/.f64 x (*.f64 y y)) x) (/.f64 (pow.f64 x 6) (pow.f64 y 6))) (fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 y x)))","(+.f64 1 (*.f64 0 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (/.f64 (*.f64 y y) x) x)) (/.f64 y x)) (-.f64 (/.f64 y x) (/.f64 (/.f64 (*.f64 y y) x) x)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 0 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))))) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (/.f64 (*.f64 y y) x) x)) (/.f64 y x)) (-.f64 (/.f64 y x) (/.f64 (/.f64 (*.f64 y y) x) x)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 0 (/.f64 y x)))","1","(+.f64 (/.f64 y x) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 y x)))","(+.f64 1 (*.f64 0 (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (/.f64 (*.f64 y y) x) x)) (/.f64 y x)) (-.f64 (/.f64 y x) (/.f64 (/.f64 (*.f64 y y) x) x)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 0 (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 y 2))) (pow.f64 x 2)))))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 y x)))) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (/.f64 (*.f64 y y) x) x)) (/.f64 y x)) (-.f64 (/.f64 y x) (/.f64 (/.f64 (*.f64 y y) x) x)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 0 (/.f64 y x)))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -2 (*.f64 y y)) (*.f64 x x)))","(fma.f64 -2 (/.f64 (/.f64 (*.f64 y y) x) x) 1)","(fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2 (/.f64 (/.f64 (*.f64 y y) x) x) 1) (/.f64 2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -2 (*.f64 (/.f64 y x) (/.f64 y x)) 1))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -2 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 -2 (/.f64 (/.f64 (*.f64 y y) x) x) 1) (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 -2 (/.f64 (pow.f64 x 6) (pow.f64 y 6)))))","(+.f64 1 (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y))) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 x y)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 0 (/.f64 x y)) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (neg.f64 (-.f64 1 (/.f64 x (/.f64 (*.f64 y y) x)))))","(fma.f64 (/.f64 x y) (/.f64 x y) (+.f64 -1 (*.f64 (/.f64 x (*.f64 y y)) x)))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 0 (/.f64 x y)) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (neg.f64 (-.f64 1 (/.f64 x (/.f64 (*.f64 y y) x)))))","(fma.f64 (/.f64 x y) (/.f64 x y) (+.f64 -1 (*.f64 (/.f64 x (*.f64 y y)) x)))","-1","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) 1)","-1","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 0 (/.f64 x y)) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (neg.f64 (-.f64 1 (/.f64 x (/.f64 (*.f64 y y) x)))))","(fma.f64 (/.f64 x y) (/.f64 x y) (+.f64 -1 (*.f64 (/.f64 x (*.f64 y y)) x)))","(-.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 x) x) y)) (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 x) x)) (pow.f64 y 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (-.f64 (*.f64 0 (/.f64 x y)) (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) 1)))","(+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (neg.f64 (-.f64 1 (/.f64 x (/.f64 (*.f64 y y) x)))))","(fma.f64 (/.f64 x y) (/.f64 x y) (+.f64 -1 (*.f64 (/.f64 x (*.f64 y y)) x)))","1","(+.f64 1 (/.f64 x y))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 x y) (/.f64 (*.f64 -1/2 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) -1/2 (/.f64 x y)))","(+.f64 1 (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) -1/2 (/.f64 x y)))","(+.f64 1 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 -1/2 (+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x y)))","(fma.f64 -1/2 (fma.f64 (/.f64 x y) (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (+.f64 1 (/.f64 x y)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1))","(+.f64 (/.f64 y x) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1))","(+.f64 1 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (/.f64 (*.f64 -1/2 (pow.f64 y 3)) (pow.f64 x 3))))","(+.f64 (/.f64 y x) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 (fma.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1)))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 3) 1)))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(fma.f64 -1 (/.f64 y x) -1)","(-.f64 -1 (/.f64 y x))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)) -1)","(fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) 1/2 (fma.f64 -1 (/.f64 y x) -1))","(-.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 1/2 -1) (/.f64 y x))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x))) -1)","(fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1/2 (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) 1/2 (fma.f64 -1 (/.f64 y x) -1)))","(fma.f64 1/2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (pow.f64 (/.f64 y x) 3)) (-.f64 -1 (/.f64 y x)))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1))","(+.f64 (/.f64 y x) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1))","(+.f64 1 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (/.f64 (*.f64 -1/2 (pow.f64 y 3)) (pow.f64 x 3))))","(+.f64 (/.f64 y x) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 (fma.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1)))","(+.f64 (/.f64 y x) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 3) 1)))","1","(+.f64 1 (/.f64 x y))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 1 (+.f64 (/.f64 x y) (/.f64 (*.f64 -1/2 (*.f64 x x)) (*.f64 y y))))","(+.f64 1 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) -1/2 (/.f64 x y)))","(+.f64 1 (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) -1/2 (/.f64 x y)))","(+.f64 1 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 1 (+.f64 (/.f64 x y) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 -1/2 (+.f64 (/.f64 x (/.f64 (*.f64 y y) x)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 x y)))","(fma.f64 -1/2 (fma.f64 (/.f64 x y) (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) 1)","(fma.f64 -1 (/.f64 x y) -1)","(-.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (neg.f64 x) y)) -1)","(fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 (fma.f64 -1 (/.f64 x y) -1))","(-.f64 (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1) (/.f64 x y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (neg.f64 x) y))) -1)","(fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) 1/2 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 (fma.f64 -1 (/.f64 x y) -1)))","(fma.f64 1/2 (fma.f64 (/.f64 x y) (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (-.f64 -1 (/.f64 x y)))","-1","(-.f64 (/.f64 x y) 1)","(+.f64 (/.f64 x y) -1)","(+.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (/.f64 x y) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/2)) -1)","(+.f64 (/.f64 x y) (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 -1))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (+.f64 (/.f64 x y) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(+.f64 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 3) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x))","(-.f64 (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1) (/.f64 y x))","(-.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 1) (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (neg.f64 y) x)))","(+.f64 (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1) (-.f64 (/.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 y x)))","(-.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (fma.f64 (pow.f64 (/.f64 y x) 3) 1/2 1)) (/.f64 y x))","-1","(-.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) -1)","(+.f64 -1 (/.f64 y x))","(-.f64 (+.f64 (/.f64 y x) (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) 1)","(+.f64 (/.f64 y x) (-.f64 (*.f64 (/.f64 (*.f64 y y) (*.f64 x x)) 1/2) 1))","(+.f64 (/.f64 y x) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) 1/2 -1))","(+.f64 -1 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 1/2 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))) 1)","(+.f64 (+.f64 (/.f64 y x) (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (*.f64 -1/2 (pow.f64 y 3)) (pow.f64 x 3)))) -1)","(+.f64 (/.f64 y x) (+.f64 (/.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) 1/2 -1)))","(+.f64 -1 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 1/2 (fma.f64 -1/2 (pow.f64 (/.f64 y x) 3) (/.f64 y x))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1 (/.f64 y x))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x))","(-.f64 (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1) (/.f64 y x))","(-.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 1) (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (neg.f64 y) x)))","(+.f64 (fma.f64 (/.f64 (/.f64 (*.f64 y y) x) x) -1/2 1) (-.f64 (/.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 y x)))","(-.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) -1/2 (fma.f64 (pow.f64 (/.f64 y x) 3) 1/2 1)) (/.f64 y x))","-1","(-.f64 (/.f64 x y) 1)","(+.f64 (/.f64 x y) -1)","(+.f64 -1 (/.f64 x y))","(-.f64 (+.f64 (/.f64 x y) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/2)) -1)","(+.f64 (/.f64 x y) (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 -1))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (+.f64 (/.f64 x y) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(+.f64 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) 1/2 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))) (+.f64 -1 (/.f64 x y)))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (pow.f64 (/.f64 x y) 3) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1)))","1","(+.f64 1 (*.f64 -1 (/.f64 x y)))","(+.f64 1 (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 x y))","(+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))","(+.f64 1 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (neg.f64 x) y)))","(+.f64 1 (fma.f64 (/.f64 x (/.f64 (*.f64 y y) x)) -1/2 (/.f64 (neg.f64 x) y)))","(-.f64 (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) -1/2 1) (/.f64 x y))","(+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))","(+.f64 1 (fma.f64 1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (neg.f64 x) y))))","(+.f64 1 (-.f64 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) 1/2 (*.f64 (/.f64 x (/.f64 (*.f64 y y) x)) -1/2)) (/.f64 x y)))","(fma.f64 (pow.f64 (/.f64 x y) 3) 1/2 (-.f64 (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) -1/2 1) (/.f64 x y)))"]],"stop":[["node limit",1]],"time":40.1669921875,"type":"simplify"},{"compiler":[[12548,3474]],"time":70.55615234375,"type":"eval"},{"alts":[["(*.f64 (+.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","fresh",0.014003759768442016],["(*.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","next",0.014003759768442016],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","done",0.020195019536884032]],"compiler":[[83,33],[90,34],[17,8],[83,33],[90,34]],"count":[[336,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[334,2],"picked":[1,1]}],"min-error":[0],"time":131.488037109375,"type":"prune"},{"compiler":[[370,98]],"locations":[["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)",0.4459762695368841,true],["(pow.f64 (cbrt.f64 y) 2)",0.5068550293053261,true],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))",10.084426753042061,true],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))",23.276924505360764,true]],"time":49.60400390625,"type":"localize"},{"count":[[4,38]],"series":[["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","y","-inf",0.47900390625],["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","y","inf",0.820068359375],["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","y","0",1.072021484375],["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","x","-inf",3.553955078125],["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","x","inf",0.955810546875],["(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)","x","0",1.01708984375],["(pow.f64 (cbrt.f64 y) 2)","y","-inf",0.465087890625],["(pow.f64 (cbrt.f64 y) 2)","y","inf",0.296142578125],["(pow.f64 (cbrt.f64 y) 2)","y","0",0.35986328125],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","y","-inf",0.39404296875],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","y","inf",0.65087890625],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","y","0",0.5439453125],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","x","-inf",1.677001953125],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","x","inf",0.958984375],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))","x","0",0.526123046875],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","x","-inf",0.47314453125],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","x","inf",0.943115234375],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","x","0",7.5869140625],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","y","-inf",7.7900390625],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","y","inf",9.071044921875],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","y","0",1.346923828125]],"time":41.5458984375,"type":"series"},{"count":[[4,112]],"egraph":[[2,4685,40,0.030888125],[1,350,40,0.006465333],[0,16,82,0.000389833]],"inputs":[["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))","(cbrt.f64 (/.f64 x (hypot.f64 x y)))","(pow.f64 (cbrt.f64 y) 2)","(pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y (hypot.f64 y x))) 2) (+.f64 (cbrt.f64 (/.f64 y (hypot.f64 y x))) (cbrt.f64 (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) 2) (cbrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) (sqrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 y (hypot.f64 y x)) 3) (pow.f64 (/.f64 y (hypot.f64 y x)) 3)) (+.f64 (pow.f64 (/.f64 y (hypot.f64 y x)) 2) (-.f64 (pow.f64 (/.f64 y (hypot.f64 y x)) 2) (pow.f64 (/.f64 y (hypot.f64 y x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 y (hypot.f64 y x)) 2) (pow.f64 (/.f64 y (hypot.f64 y x)) 2)) (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (hypot.f64 y x))) (exp.f64 (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x)))) (exp.f64 (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 y (hypot.f64 y x))) (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x)))) (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x)))) (exp.f64 (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (hypot.f64 y x))) (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x)))) (+.f64 1 (expm1.f64 (/.f64 y (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 y (hypot.f64 y x)) (/.f64 y (hypot.f64 y x)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 1 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (/.f64 1 (hypot.f64 y x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3) (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (hypot.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) 1) (cbrt.f64 (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))) (cbrt.f64 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (pow.f64 (hypot.f64 y x) 1/6)) (pow.f64 (hypot.f64 y x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 y x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (hypot.f64 y x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (hypot.f64 y x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 y) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (*.f64 y (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)) (*.f64 (cbrt.f64 (cbrt.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (cbrt.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 1/6) (*.f64 (pow.f64 y 1/6) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (pow.f64 y 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (cbrt.f64 y) 2))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 y (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 y)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (hypot.f64 y x))) (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 y x) 1/6) (*.f64 (pow.f64 (hypot.f64 y x) 1/6) (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 y x)) (pow.f64 (hypot.f64 y x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))) (cbrt.f64 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (hypot.f64 y x))) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",21],["egg-rr",37],["egg-rr",33]],"stop":[["node limit",1]],"time":57.382080078125,"type":"rewrite"},{"count":[[150,172]],"egraph":[[2,7866,3799,0.034204626],[1,1788,3816,0.016801167],[0,514,5015,0.002839542]],"inputs":[["(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(/.f64 (+.f64 (*.f64 1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))))))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) 2)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 1/16 (pow.f64 x 8)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 4))) (+.f64 (*.f64 1/64 (pow.f64 x 8)) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 x 2))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 -1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))))))))))))))))))))","(/.f64 (+.f64 (*.f64 -1/3 (pow.f64 x 2)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/6 (pow.f64 x 2)))) (pow.f64 y 2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4)))))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))))))))))))))","(+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 x 2))) (+.f64 (*.f64 1/32 (pow.f64 x 8)) (*.f64 1/8 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 4)))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 8)) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 4))) (+.f64 (*.f64 1/64 (pow.f64 x 8)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 1/8 (pow.f64 x 6))))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 4))) (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) 2)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4))))) (pow.f64 y 8))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))))))))))))))))))))","0","0","(*.f64 (-.f64 (+.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))) (*.f64 -1/3 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))) (*.f64 287/3888 (/.f64 1 (pow.f64 y 8))))) (pow.f64 x 8))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))) (*.f64 -1/3 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))) (*.f64 287/3888 (/.f64 1 (pow.f64 y 8))))) (pow.f64 x 8)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))))))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 1603/31104 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))))))))) (+.f64 (*.f64 -1/3 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 82/243 (/.f64 1 (pow.f64 y 10)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 5/64 (/.f64 1 (pow.f64 y 6))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)))) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (*.f64 59/64 (/.f64 1 (pow.f64 y 10))))))) (+.f64 (*.f64 91/5832 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/9 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (+.f64 (*.f64 49/2916 (/.f64 1 (pow.f64 y 10))) (*.f64 1/18 (/.f64 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))))))))) (pow.f64 x 10)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(pow.f64 (pow.f64 y 2) 1/3)","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2))))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3))) (pow.f64 x 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2)))))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3))) (pow.f64 x 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 -5/216 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 55/648 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3))) (pow.f64 x 6)))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))) (pow.f64 y 4)) (pow.f64 (pow.f64 x 2) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))) (pow.f64 y 4)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -5/216 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 55/648 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(fma.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x))","(fma.f64 -1/2 (pow.f64 (/.f64 y x) 3) (/.f64 y x))","(/.f64 (+.f64 (*.f64 1/6 (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/3 (pow.f64 x 2)))) (pow.f64 y 2))","(/.f64 (fma.f64 1/6 (*.f64 x x) (*.f64 (*.f64 x x) -1/6)) (*.f64 y y))","(/.f64 0 (*.f64 y y))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))))))","(fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4)) (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) 1/2))))))","(-.f64 (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) (*.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2))))) (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))))))","(fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (pow.f64 y 6)) (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))) (pow.f64 y 6)) (fma.f64 1/3 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))) (pow.f64 y 6)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/18 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 6) (*.f64 x x))) (fma.f64 -1/9 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (/.f64 (pow.f64 y 6) (*.f64 x x))) (*.f64 1/6 (/.f64 (*.f64 x x) (*.f64 y y))))))))))))))","(-.f64 (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 6)) (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/3 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 1/3 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) (-.f64 (fma.f64 1/3 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (pow.f64 y 6)) (+.f64 (fma.f64 -1/9 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 x 4) -7/24))) (/.f64 (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) -1/18) (/.f64 (pow.f64 y 6) (*.f64 x x)))) (/.f64 -1/3 (*.f64 (/.f64 y x) (/.f64 y x))))) (/.f64 (fma.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8) (*.f64 (pow.f64 x 6) 1/8)) (pow.f64 y 6)))))))) (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4)))","(+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) 2)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/18 (/.f64 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 1/16 (pow.f64 x 8)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 4))) (+.f64 (*.f64 1/64 (pow.f64 x 8)) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 x 2))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 -1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))))))))))))))))))))","(fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (pow.f64 y 6)) (fma.f64 -1 (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -3/8)) (fma.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8))) (fma.f64 -1/32 (pow.f64 x 8) (*.f64 (*.f64 -1/2 (*.f64 x x)) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))))) (pow.f64 y 8)) (fma.f64 1/3 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))) (pow.f64 y 6)) (fma.f64 1/3 (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -3/8)) (fma.f64 -1/36 (*.f64 (pow.f64 x 4) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8))) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x)))))) (fma.f64 -1/32 (pow.f64 x 8) (fma.f64 1/3 (pow.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) 2) (*.f64 (*.f64 -1/2 (*.f64 x x)) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x)))))))))) (pow.f64 y 8)) (fma.f64 1/3 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))) (pow.f64 y 6)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/6 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4)) (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/9 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 8) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)))) (fma.f64 -1/18 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 8) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))))) (fma.f64 -1/9 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (/.f64 (pow.f64 y 8) (*.f64 x x))) (fma.f64 1/3 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (neg.f64 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))))))) (fma.f64 1/16 (pow.f64 x 8) (fma.f64 -1 (*.f64 (*.f64 (pow.f64 x 4) 0) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 1/3 (pow.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) 2) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 6) 0)) (fma.f64 -1/9 (*.f64 (pow.f64 x 4) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (fma.f64 1/64 (pow.f64 x 8) (fma.f64 -1 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8))) (*.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))))))))))))) (pow.f64 y 8)) (fma.f64 -1/9 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (/.f64 (pow.f64 y 6) (*.f64 x x))) (*.f64 -1/18 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 6) (*.f64 x x)))))))))))))))))))))","(fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 6)) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 -1/36 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -7/24)) (fma.f64 1/8 (*.f64 (pow.f64 x 8) -3/8) (fma.f64 -1/2 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108)))) (fma.f64 (pow.f64 x 8) -1/32 (fma.f64 -1/2 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 8) -3/8)) (*.f64 1/8 (pow.f64 x 8))) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 x 4) -7/24) 2)))))))) (pow.f64 y 8)) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (pow.f64 y 6)) (+.f64 (-.f64 (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) (fma.f64 1/3 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 -1/9 (*.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 8)) (*.f64 (pow.f64 x 4) -7/24)) (fma.f64 -1/18 (*.f64 (/.f64 (*.f64 x x) (pow.f64 y 8)) (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3))))) (fma.f64 -1/9 (*.f64 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 8)) (*.f64 x x)) (fma.f64 1/3 (/.f64 (-.f64 (+.f64 (+.f64 (fma.f64 -1/9 (*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12))) (fma.f64 (pow.f64 x 8) 1/64 (-.f64 (*.f64 2/3 (*.f64 (*.f64 x x) (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))))) (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64))))) (fma.f64 1/3 (pow.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2) 0)) (fma.f64 1/16 (pow.f64 x 8) 0)) (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) (neg.f64 (neg.f64 (pow.f64 x 4)))))) (pow.f64 y 8)) (fma.f64 -1/9 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 x 4) -7/24))) (/.f64 (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) -1/18) (/.f64 (pow.f64 y 6) (*.f64 x x))))))))))) (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4))) (/.f64 -1/3 (*.f64 (/.f64 y x) (/.f64 y x)))))) (/.f64 (fma.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8) (*.f64 (pow.f64 x 6) 1/8)) (pow.f64 y 6)))) (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 x 8) -3/8) (fma.f64 -1/2 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) (fma.f64 -1/2 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 8) -3/8)) (*.f64 1/8 (pow.f64 x 8))) (*.f64 (pow.f64 x 8) -1/32)))) (pow.f64 y 8))))","(fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 6)) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) (-.f64 (fma.f64 1/3 (/.f64 (fma.f64 -1/36 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -7/24)) (fma.f64 1/8 (*.f64 (pow.f64 x 8) -3/8) (fma.f64 -1/2 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108)))) (fma.f64 (pow.f64 x 8) -1/32 (fma.f64 -1/2 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 8) -3/8)) (*.f64 1/8 (pow.f64 x 8))) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 x 4) -7/24) 2)))))))) (pow.f64 y 8)) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (pow.f64 y 6)) (+.f64 (-.f64 (fma.f64 -1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) (fma.f64 1/3 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 -1/9 (*.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 8)) (*.f64 (pow.f64 x 4) -7/24)) (fma.f64 -1/18 (*.f64 (/.f64 (*.f64 x x) (pow.f64 y 8)) (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3))))) (fma.f64 -1/9 (*.f64 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 8)) (*.f64 x x)) (fma.f64 1/3 (/.f64 (-.f64 (+.f64 (+.f64 (fma.f64 -1/9 (*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12))) (fma.f64 (pow.f64 x 8) 1/64 (fma.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (*.f64 (*.f64 x x) 2/3) (neg.f64 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)))))) (fma.f64 1/3 (pow.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2) 0)) (fma.f64 1/16 (pow.f64 x 8) 0)) (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) (neg.f64 (neg.f64 (pow.f64 x 4)))))) (pow.f64 y 8)) (fma.f64 -1/9 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 x 4) -7/24))) (/.f64 (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) -1/18) (/.f64 (pow.f64 y 6) (*.f64 x x))))))))))) (/.f64 (*.f64 (pow.f64 x 4) -3/8) (pow.f64 y 4))) (/.f64 -1/3 (*.f64 (/.f64 y x) (/.f64 y x)))))) (/.f64 (fma.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8) (*.f64 (pow.f64 x 6) 1/8)) (pow.f64 y 6)))) (/.f64 (fma.f64 1/8 (*.f64 (pow.f64 x 8) -3/8) (fma.f64 -1/2 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) (fma.f64 -1/2 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 8) -3/8)) (*.f64 1/8 (pow.f64 x 8))) (*.f64 (pow.f64 x 8) -1/32)))) (pow.f64 y 8))))","(/.f64 (+.f64 (*.f64 -1/3 (pow.f64 x 2)) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/6 (pow.f64 x 2)))) (pow.f64 y 2))","(/.f64 (fma.f64 1/6 (*.f64 x x) (*.f64 (*.f64 x x) -1/6)) (*.f64 y y))","(/.f64 0 (*.f64 y y))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4)))))))))","(fma.f64 -1/3 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) 3/8) (pow.f64 y 4)) (fma.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/6 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)))))))))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -1/3 (-.f64 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/18 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 1/3 y)) (*.f64 -1/3 (+.f64 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)))))) (/.f64 (pow.f64 x 4) (/.f64 (pow.f64 y 4) 3/8))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))))))))))))))","(fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) 3/8) (pow.f64 y 4)) (fma.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (pow.f64 y 6)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/6 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (fma.f64 -1/8 (pow.f64 x 6) (*.f64 -1/2 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 3/8)))) (pow.f64 y 6)) (fma.f64 -1/3 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))) (pow.f64 y 6)) (fma.f64 -1/3 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (fma.f64 1/18 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 6) (*.f64 x x))) (fma.f64 -1/3 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 1/9 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (/.f64 (pow.f64 y 6) (*.f64 x x))) (*.f64 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)) -1/3))))))))))))","(-.f64 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/18 (fma.f64 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 6)) -1/3 (+.f64 (*.f64 (/.f64 (*.f64 x x) y) (/.f64 1/3 y)) (-.f64 (fma.f64 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (pow.f64 y 6)) -1/3 (fma.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) -1/3 (fma.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (/.f64 (pow.f64 y 6) (*.f64 x x))) 1/18 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -1/3 (fma.f64 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) -1/3 (*.f64 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 x 4) -7/24))) 1/9)))))) (/.f64 (fma.f64 -1/2 (*.f64 (pow.f64 x 6) 3/8) (*.f64 -1/8 (pow.f64 x 6))) (pow.f64 y 6)))))) (/.f64 (pow.f64 x 4) (/.f64 (pow.f64 y 4) 3/8)))","(+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 y 4))) (+.f64 (*.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2))) (*.f64 -1/27 (pow.f64 x 6))))))) (pow.f64 y 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 x 2))) (+.f64 (*.f64 1/32 (pow.f64 x 8)) (*.f64 1/8 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 4)))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2)) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 x 8)) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1/27 (pow.f64 x 6)) (*.f64 2/3 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)))))))) (pow.f64 x 2))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 1/8 (pow.f64 x 6))) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 4))) (+.f64 (*.f64 1/64 (pow.f64 x 8)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2))) (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4)))) (pow.f64 x 2))) (*.f64 1/8 (pow.f64 x 6))))) (pow.f64 x 2))) (*.f64 -1 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/36 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 4))) (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/32 (pow.f64 x 8)) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) 2)) (*.f64 -1/2 (*.f64 (pow.f64 x 2) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))))))))) (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/216 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (*.f64 -1/4 (pow.f64 x 4))) (pow.f64 x 2)))))) (pow.f64 y 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 6)) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 x 4)) (*.f64 1/4 (pow.f64 x 4))) (pow.f64 x 2)))) (pow.f64 y 6))) (+.f64 (*.f64 1/18 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (pow.f64 x 2)) (pow.f64 y 6))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 x 4)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/3 (pow.f64 x 4))))) (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4))))) (pow.f64 y 8))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 x 4)) (+.f64 (*.f64 -1/4 (pow.f64 x 4)) (*.f64 1/12 (pow.f64 x 4)))) (pow.f64 y 4))))))))))))))))))))","(fma.f64 1/18 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 8) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))))) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 x 4) 3/8) (pow.f64 y 4)) (fma.f64 1/18 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 -1/6 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27))))) (pow.f64 y 6)) (fma.f64 -1 (/.f64 (fma.f64 1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8))) (fma.f64 -1/2 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 6) (*.f64 -1/2 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 3/8))))) (fma.f64 1/32 (pow.f64 x 8) (*.f64 1/8 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 3/8)))))) (pow.f64 y 8)) (fma.f64 -1/3 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (pow.f64 y 4)) (fma.f64 1/9 (/.f64 (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (/.f64 (pow.f64 y 8) (*.f64 x x))) (fma.f64 -1/3 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (fma.f64 1/16 (pow.f64 x 8) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (fma.f64 -1 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 2/3 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (*.f64 (pow.f64 x 6) -1/27)))))) (fma.f64 -1 (*.f64 (*.f64 (pow.f64 x 4) 0) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))) (fma.f64 1/3 (pow.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) 2) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 6) 0)) (fma.f64 -1/9 (*.f64 (pow.f64 x 4) (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12)))) (fma.f64 1/64 (pow.f64 x 8) (*.f64 -1 (+.f64 (*.f64 (*.f64 x x) (fma.f64 -1 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 0)) (+.f64 (*.f64 (pow.f64 x 6) 0) (neg.f64 (*.f64 (*.f64 x x) (fma.f64 1/4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -5/4))))))) (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8)))))))))))) (pow.f64 y 8)) (fma.f64 1/9 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (/.f64 (pow.f64 y 6) (*.f64 x x))) (fma.f64 -1/3 (/.f64 (fma.f64 -1/36 (*.f64 (pow.f64 x 4) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 1/8 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -3/8)) (fma.f64 -1/2 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 x 4)) 2) (*.f64 1/16 (pow.f64 x 8))) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x)))))) (fma.f64 -1/32 (pow.f64 x 8) (fma.f64 1/3 (pow.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) 2) (*.f64 (*.f64 -1/2 (*.f64 x x)) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x)))))))))) (pow.f64 y 8)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/216 (pow.f64 x 6) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6))) (fma.f64 1/8 (pow.f64 x 6) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 4) -3/8)) (*.f64 x x))))) (pow.f64 y 6)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (fma.f64 -1/8 (pow.f64 x 6) (*.f64 -1/2 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 3/8)))) (pow.f64 y 6)) (fma.f64 1/18 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 6) (*.f64 x x))) (fma.f64 1/9 (/.f64 (fma.f64 1/4 (pow.f64 x 4) (fma.f64 -1 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/12))) (/.f64 (pow.f64 y 8) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)))) (*.f64 (/.f64 (fma.f64 -1/8 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -1/6)) (pow.f64 y 4)) -1/3))))))))))))))))))","(fma.f64 1/18 (*.f64 (/.f64 (*.f64 x x) (pow.f64 y 8)) (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3))))) (-.f64 (fma.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) 1/18 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -1/6 (fma.f64 (/.f64 (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3)))) (pow.f64 y 6)) -1/3 (-.f64 (fma.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (pow.f64 y 4)) -1/3 (fma.f64 1/9 (*.f64 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 8)) (*.f64 x x)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -1/3 (fma.f64 -1/3 (/.f64 (+.f64 (fma.f64 1/16 (pow.f64 x 8) (*.f64 2/3 (*.f64 (*.f64 x x) (+.f64 (*.f64 (pow.f64 x 6) -1/27) (*.f64 (*.f64 x x) (+.f64 (neg.f64 (neg.f64 (pow.f64 x 4))) (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2/3))))))) (+.f64 (fma.f64 -1/9 (*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12))) (fma.f64 (pow.f64 x 8) 1/64 (neg.f64 (fma.f64 (*.f64 x x) (*.f64 (*.f64 x x) (neg.f64 (neg.f64 (pow.f64 x 4)))) (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)))))) (fma.f64 1/3 (pow.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 2) 0))) (pow.f64 y 8)) (fma.f64 (/.f64 (*.f64 x x) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 x 4) -7/24))) 1/9 (fma.f64 (/.f64 (fma.f64 -1/36 (*.f64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -7/24)) (fma.f64 1/8 (*.f64 (pow.f64 x 8) -3/8) (fma.f64 -1/2 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) (fma.f64 1/3 (*.f64 (*.f64 x x) (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108)))) (fma.f64 (pow.f64 x 8) -1/32 (fma.f64 -1/2 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 8) -3/8)) (*.f64 1/8 (pow.f64 x 8))) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 x 4) -7/24) 2)))))))) (pow.f64 y 8)) -1/3 (fma.f64 (/.f64 (fma.f64 1/3 (*.f64 x (*.f64 x (*.f64 (pow.f64 x 4) -7/24))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 x 6) -3/8)) (*.f64 (pow.f64 x 6) 13/108))) (pow.f64 y 6)) -1/3 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 (-.f64 (fma.f64 (/.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) (/.f64 (pow.f64 y 6) (*.f64 x x))) 1/18 (fma.f64 (/.f64 (*.f64 (pow.f64 x 4) -7/24) (pow.f64 y 4)) -1/3 (/.f64 (*.f64 (fma.f64 (pow.f64 x 4) 1/4 (*.f64 (pow.f64 x 4) -11/12)) 1/9) (/.f64 (pow.f64 y 8) (*.f64 (pow.f64 x 4) -7/24))))) (/.f64 (fma.f64 -1/2 (*.f64 (pow.f64 x 6) 3/8) (*.f64 -1/8 (pow.f64 x 6))) (pow.f64 y 6))))))))))) (/.f64 (fma.f64 (fma.f64 1/16 (pow.f64 x 8) (*.f64 (pow.f64 x 8) 1/64)) 1/2 (fma.f64 -1/2 (*.f64 (*.f64 x x) (fma.f64 -1/2 (*.f64 (pow.f64 x 6) 3/8) (*.f64 -1/8 (pow.f64 x 6)))) (fma.f64 1/8 (*.f64 (pow.f64 x 8) 3/8) (*.f64 (pow.f64 x 8) 1/32)))) (pow.f64 y 8)))))) (/.f64 (pow.f64 x 4) (/.f64 (pow.f64 y 4) 3/8))))","0","0","(*.f64 (-.f64 (+.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))) (*.f64 -1/3 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))) (*.f64 287/3888 (/.f64 1 (pow.f64 y 8))))) (pow.f64 x 8))","(*.f64 (pow.f64 x 8) (-.f64 (+.f64 (/.f64 15/64 (pow.f64 y 8)) (*.f64 -1/3 (+.f64 (-.f64 (/.f64 15/64 (pow.f64 y 8)) (+.f64 (/.f64 553/5184 (pow.f64 y 8)) (*.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y))))) (-.f64 (/.f64 59/64 (pow.f64 y 8)) (+.f64 (/.f64 46/81 (pow.f64 y 8)) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (*.f64 y y))))))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))))","(*.f64 (pow.f64 x 8) (-.f64 (fma.f64 -1/3 (+.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 331/2592) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y))) (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (*.f64 y y)))) (/.f64 15/64 (pow.f64 y 8))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))))","(*.f64 (pow.f64 x 8) (-.f64 (fma.f64 -1/3 (+.f64 (fma.f64 (/.f64 1 (pow.f64 y 8)) 331/2592 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (*.f64 y y)))) (/.f64 15/64 (pow.f64 y 8))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))) (*.f64 -1/3 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))) (*.f64 287/3888 (/.f64 1 (pow.f64 y 8))))) (pow.f64 x 8)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))))))) (+.f64 (*.f64 -1/3 (-.f64 (*.f64 1603/31104 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2)))) (pow.f64 y 2))))))))) (+.f64 (*.f64 -1/3 (-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (*.f64 82/243 (/.f64 1 (pow.f64 y 10)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 5/64 (/.f64 1 (pow.f64 y 6))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)))) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (/.f64 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (*.f64 59/64 (/.f64 1 (pow.f64 y 10))))))) (+.f64 (*.f64 91/5832 (/.f64 1 (pow.f64 y 10))) (+.f64 (*.f64 1/9 (/.f64 (-.f64 (*.f64 15/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 553/5184 (/.f64 1 (pow.f64 y 8))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))) (+.f64 (*.f64 49/2916 (/.f64 1 (pow.f64 y 10))) (*.f64 1/18 (/.f64 (-.f64 (*.f64 59/64 (/.f64 1 (pow.f64 y 8))) (+.f64 (*.f64 46/81 (/.f64 1 (pow.f64 y 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 y 6))) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 2))))) (pow.f64 y 2))))))))) (pow.f64 x 10)))","(fma.f64 (-.f64 (+.f64 (/.f64 15/64 (pow.f64 y 8)) (*.f64 -1/3 (+.f64 (-.f64 (/.f64 15/64 (pow.f64 y 8)) (+.f64 (/.f64 553/5184 (pow.f64 y 8)) (*.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y))))) (-.f64 (/.f64 59/64 (pow.f64 y 8)) (+.f64 (/.f64 46/81 (pow.f64 y 8)) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (*.f64 y y))))))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))) (pow.f64 x 8) (*.f64 (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 y 10)) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 15/64 (pow.f64 y 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)))))) (fma.f64 -1/3 (-.f64 (/.f64 1603/31104 (pow.f64 y 10)) (+.f64 (/.f64 1/16 (pow.f64 y 10)) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 15/64 (pow.f64 y 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 15/64 (pow.f64 y 8)) (+.f64 (/.f64 553/5184 (pow.f64 y 8)) (*.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y))))) (*.f64 y y)) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)))))))) (fma.f64 -1/3 (-.f64 (fma.f64 -1 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (/.f64 82/243 (pow.f64 y 10))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 5/64 (pow.f64 y 6)) (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)))) (pow.f64 y 4)) (fma.f64 -2/3 (/.f64 (-.f64 (/.f64 59/64 (pow.f64 y 8)) (+.f64 (/.f64 46/81 (pow.f64 y 8)) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (*.f64 y y)))) (*.f64 y y)) (/.f64 59/64 (pow.f64 y 10))))) (+.f64 (/.f64 91/5832 (pow.f64 y 10)) (fma.f64 1/9 (/.f64 (-.f64 (/.f64 15/64 (pow.f64 y 8)) (+.f64 (/.f64 553/5184 (pow.f64 y 8)) (*.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y))))) (*.f64 y y)) (+.f64 (/.f64 49/2916 (pow.f64 y 10)) (*.f64 1/18 (/.f64 (-.f64 (/.f64 59/64 (pow.f64 y 8)) (+.f64 (/.f64 46/81 (pow.f64 y 8)) (/.f64 (neg.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (*.f64 y y)))) (*.f64 y y))))))))) (pow.f64 x 10)))","(fma.f64 (pow.f64 x 8) (-.f64 (fma.f64 -1/3 (+.f64 (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 331/2592) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y))) (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (*.f64 y y)))) (/.f64 15/64 (pow.f64 y 8))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))) (*.f64 (-.f64 (fma.f64 -1/3 (-.f64 (*.f64 (/.f64 1 (pow.f64 y 10)) -341/31104) (fma.f64 1/2 (-.f64 (/.f64 15/64 (*.f64 (*.f64 y y) (pow.f64 y 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 -1/3 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 331/2592) (*.f64 y y)) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (/.f64 (*.f64 1/2 (-.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y)))) (*.f64 y y)))))) (fma.f64 -1/3 (-.f64 (-.f64 (/.f64 82/243 (pow.f64 y 10)) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (-.f64 (fma.f64 -2/3 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (*.f64 y y)) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (pow.f64 y 4))) (/.f64 59/64 (pow.f64 y 10))) (/.f64 (-.f64 (/.f64 5/64 (pow.f64 y 6)) (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4)))) (+.f64 (/.f64 91/5832 (pow.f64 y 10)) (fma.f64 1/9 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 331/2592) (*.f64 y y)) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 1/18 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (*.f64 y y)) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (pow.f64 y 4))) (/.f64 49/2916 (pow.f64 y 10))))))) (+.f64 (/.f64 1/16 (pow.f64 y 10)) (fma.f64 1/2 (-.f64 (/.f64 15/64 (*.f64 (*.f64 y y) (pow.f64 y 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (/.f64 (*.f64 1/2 (-.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y)))) (*.f64 y y)))))) (pow.f64 x 10)))","(fma.f64 (pow.f64 x 8) (-.f64 (fma.f64 -1/3 (+.f64 (fma.f64 (/.f64 1 (pow.f64 y 8)) 331/2592 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (-.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (*.f64 y y)))) (/.f64 15/64 (pow.f64 y 8))) (fma.f64 -1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)) (/.f64 287/3888 (pow.f64 y 8)))) (*.f64 (-.f64 (fma.f64 -1/3 (-.f64 (*.f64 (/.f64 1 (pow.f64 y 10)) -341/31104) (fma.f64 1/2 (-.f64 (/.f64 15/64 (*.f64 (*.f64 y y) (pow.f64 y 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 -1/3 (/.f64 (fma.f64 (/.f64 1 (pow.f64 y 8)) 331/2592 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (/.f64 (*.f64 1/2 (-.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y)))) (*.f64 y y)))))) (fma.f64 -1/3 (-.f64 (-.f64 (/.f64 82/243 (pow.f64 y 10)) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4))) (-.f64 (fma.f64 -2/3 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (*.f64 y y)) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (pow.f64 y 4))) (/.f64 59/64 (pow.f64 y 10))) (/.f64 (-.f64 (/.f64 5/64 (pow.f64 y 6)) (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4)))) (+.f64 (/.f64 91/5832 (pow.f64 y 10)) (fma.f64 1/9 (/.f64 (fma.f64 (/.f64 1 (pow.f64 y 8)) 331/2592 (*.f64 1/2 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (*.f64 y y)))) (*.f64 y y)) (fma.f64 1/18 (-.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 y 8)) 1835/5184) (*.f64 y y)) (/.f64 (+.f64 (neg.f64 (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (/.f64 -1/16 (pow.f64 y 6))) (pow.f64 y 4))) (/.f64 49/2916 (pow.f64 y 10))))))) (+.f64 (/.f64 1/16 (pow.f64 y 10)) (fma.f64 1/2 (-.f64 (/.f64 15/64 (*.f64 (*.f64 y y) (pow.f64 y 8))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2))) (pow.f64 y 4))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) (pow.f64 y 4)) (/.f64 (*.f64 1/2 (-.f64 (/.f64 1/64 (pow.f64 y 8)) (*.f64 (/.f64 -1/2 y) (/.f64 (+.f64 (/.f64 1/16 (pow.f64 y 6)) (pow.f64 (/.f64 -1/8 (pow.f64 y 3)) 2)) y)))) (*.f64 y y)))))) (pow.f64 x 10)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(fma.f64 -1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x))","(fma.f64 -1/2 (pow.f64 (/.f64 y x) 3) (/.f64 y x))","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))","(fma.f64 1/2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))","(fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 1/2 (neg.f64 (/.f64 y x)))","(fma.f64 (pow.f64 (/.f64 y x) 3) 1/2 (neg.f64 (/.f64 y x)))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -1/6 (*.f64 y y)) (*.f64 x x)))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (*.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (fma.f64 1/8 (pow.f64 y 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 -1/2 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 4) -3/8)))))) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (+.f64 (fma.f64 -1/2 (*.f64 (pow.f64 y 6) -3/8) (*.f64 (*.f64 (pow.f64 y 4) -7/24) (*.f64 (*.f64 y y) 1/3))) (*.f64 (pow.f64 y 6) 13/108)) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (*.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 -1)) (*.f64 x x))))","(fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 -1)) (*.f64 x x)))))","(fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","(fma.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 x 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/8 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 -1/2 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 4) -3/8)))))))) (fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (*.f64 y y) (cbrt.f64 -1)) (*.f64 x x))))))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 6)) (+.f64 (fma.f64 -1/2 (*.f64 (pow.f64 y 6) -3/8) (*.f64 (*.f64 (pow.f64 y 4) -7/24) (*.f64 (*.f64 y y) 1/3))) (*.f64 (pow.f64 y 6) 13/108))) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (/.f64 (*.f64 -1/6 (*.f64 y y)) (*.f64 x x)))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)))))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x))))))","(pow.f64 (pow.f64 y 2) 1/3)","(cbrt.f64 (*.f64 y y))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2))))","(+.f64 (cbrt.f64 (*.f64 y y)) (*.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 y 4))))))","(fma.f64 1/3 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 y 4))))) (cbrt.f64 (*.f64 y y)))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3))) (pow.f64 x 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2)))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 y 10))) -1/9) (pow.f64 x 4) (*.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 1/3 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 y 4))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 y 10))) (*.f64 -1/9 (pow.f64 x 4)))))","(+.f64 (pow.f64 (pow.f64 y 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 y 10)) 1/3))) (pow.f64 x 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 -5/216 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3)) (*.f64 55/648 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3))) (pow.f64 x 6)))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 y 10))) -1/9) (pow.f64 x 4) (fma.f64 1/3 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) (*.f64 (pow.f64 x 6) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 y 16))) 5/81)))))","(+.f64 (cbrt.f64 (*.f64 y y)) (fma.f64 (pow.f64 x 4) (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 y 10)))) (fma.f64 1/3 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 y 4))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 y 16))) (*.f64 5/81 (pow.f64 x 6))))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 x 4)))) (cbrt.f64 (*.f64 x x)))","(fma.f64 1/3 (*.f64 y (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 x 4))))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))) (pow.f64 y 4)) (pow.f64 (pow.f64 x 2) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 x 4)))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 10))) -1/9) (pow.f64 y 4) (cbrt.f64 (*.f64 x x))))","(fma.f64 1/3 (*.f64 y (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 x 4))))) (fma.f64 (pow.f64 y 4) (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 x 10)))) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -5/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3)) (*.f64 1/36 (pow.f64 (/.f64 1 (pow.f64 x 10)) 1/3))) (pow.f64 y 4)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -5/216 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 55/648 (pow.f64 (/.f64 1 (pow.f64 x 16)) 1/3)))))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 x 4)))) (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 10))) -1/9) (pow.f64 y 4) (cbrt.f64 (*.f64 x x))) (*.f64 (pow.f64 y 6) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 16))) 5/81))))","(fma.f64 1/3 (*.f64 y (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 x 4))))) (fma.f64 (pow.f64 y 4) (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 x 10)))) (fma.f64 (pow.f64 y 6) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 16))) 5/81) (cbrt.f64 (*.f64 x x)))))"]],"stop":[["node limit",1]],"time":80.8388671875,"type":"simplify"},{"compiler":[[42924,16154]],"time":260.552978515625,"type":"eval"},{"alts":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","next",0.010097509768442016],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","done",0.020195019536884032]],"compiler":[[92,39],[17,8],[92,39]],"count":[[399,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[396,1],"picked":[1,0]}],"min-error":[0],"time":198.713134765625,"type":"prune"},{"compiler":[[407,103]],"locations":[["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))",8.839851747186911,true],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))",10.084426753042061,true],["(cbrt.f64 (/.f64 x (hypot.f64 x y)))",10.084426753042061,false],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))",23.276924505360764,false]],"time":55.766845703125,"type":"localize"},{"count":[[2,24]],"series":[["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","y","-inf",0.26708984375],["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","y","inf",0.239013671875],["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","y","0",0.175048828125],["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","x","-inf",0.2548828125],["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","x","inf",0.26904296875],["(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))","x","0",0.22998046875],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","y","-inf",0.320068359375],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","y","inf",0.2978515625],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","y","0",0.285888671875],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","x","-inf",0.4990234375],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","x","inf",0.39208984375],["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","x","0",0.36083984375]],"time":3.7890625,"type":"series"},{"count":[[2,58]],"egraph":[[2,1766,18,0.017913626000000002],[1,147,18,0.002515959],[0,8,18,0.000181542]],"inputs":[["(cbrt.f64 (/.f64 x (hypot.f64 y x)))","(log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 1 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (/.f64 1 (hypot.f64 y x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3) (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (hypot.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 y x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 2) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 1 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (/.f64 1 (hypot.f64 y x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 x (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3) (pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 y x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (hypot.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (hypot.f64 y x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (cbrt.f64 (hypot.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 y x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 y x)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (hypot.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x)))))))))"]],"rules":[["egg-rr",29],["egg-rr",29]],"stop":[["node limit",1]],"time":38.547119140625,"type":"rewrite"},{"count":[[82,47]],"egraph":[[3,3511,608,0.017522249],[2,721,652,0.006147791],[1,202,746,0.0015479159999999999],[0,73,900,0.000367833]],"inputs":[["1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (fma.f64 1/8 (pow.f64 y 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 4) -3/8)) (*.f64 y y))))) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 y 4) -7/24) 1/3) (*.f64 (*.f64 -1/2 (pow.f64 y 4)) -3/8))) (*.f64 (pow.f64 y 6) 13/108)) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4))))))","(fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 y 6) 13/108 (fma.f64 1/3 (*.f64 (pow.f64 y 6) -7/24) (*.f64 (pow.f64 y 6) 3/16))) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","(fma.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 6) -7/24)) (*.f64 (pow.f64 y 6) 133/432)) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1)))))","(fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))","(fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (cbrt.f64 -1))","(*.f64 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))))))","(fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1)))","(+.f64 (cbrt.f64 -1) (fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (*.f64 (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (cbrt.f64 -1))))","(+.f64 (cbrt.f64 -1) (*.f64 (cbrt.f64 -1) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (*.f64 (pow.f64 y 4) 7/72) (pow.f64 x 4)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","(fma.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 x 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/8 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 4) -3/8)) (*.f64 y y))))))) (fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1)))))))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 6)) (+.f64 (*.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 y 4) -7/24) 1/3) (*.f64 (*.f64 -1/2 (pow.f64 y 4)) -3/8))) (*.f64 (pow.f64 y 6) 13/108))) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))))","(fma.f64 -1/3 (fma.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 6)) (fma.f64 (pow.f64 y 6) 13/108 (fma.f64 1/3 (*.f64 (pow.f64 y 6) -7/24) (*.f64 (pow.f64 y 6) 3/16))) (*.f64 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 4) -7/24)) (cbrt.f64 -1))) (fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (cbrt.f64 -1)))","(fma.f64 -1/3 (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 6) -7/24)) (*.f64 (pow.f64 y 6) 133/432)) (pow.f64 x 6)) (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 4) -7/24)))) (*.f64 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (cbrt.f64 -1)))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2)))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (fma.f64 1/8 (pow.f64 y 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 4) -3/8)) (*.f64 y y))))) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 y 4) -7/24) 1/3) (*.f64 (*.f64 -1/2 (pow.f64 y 4)) -3/8))) (*.f64 (pow.f64 y 6) 13/108)) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4))))))","(fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 y 6) 13/108 (fma.f64 1/3 (*.f64 (pow.f64 y 6) -7/24) (*.f64 (pow.f64 y 6) 3/16))) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","(fma.f64 -1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 6) -7/24)) (*.f64 (pow.f64 y 6) 133/432)) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))","(+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1)))))","(fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))","(fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (cbrt.f64 -1))","(*.f64 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2)))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))))))","(fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1)))","(+.f64 (cbrt.f64 -1) (fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (*.f64 (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (cbrt.f64 -1))))","(+.f64 (cbrt.f64 -1) (*.f64 (cbrt.f64 -1) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (*.f64 (pow.f64 y 4) 7/72) (pow.f64 x 4)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/216 (pow.f64 y 6)) (+.f64 (*.f64 1/8 (pow.f64 y 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (pow.f64 y 2))) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4))) (pow.f64 y 2))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (pow.f64 y 4)) (+.f64 (*.f64 -1/8 (pow.f64 y 4)) (*.f64 -1/4 (pow.f64 y 4)))) (cbrt.f64 -1)) (pow.f64 x 4))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 y 2) (cbrt.f64 -1)) (pow.f64 x 2))))))","(fma.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 x 6) (fma.f64 -1/216 (pow.f64 y 6) (fma.f64 1/8 (pow.f64 y 6) (fma.f64 1/3 (*.f64 (*.f64 y y) (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8))) (*.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 4) -3/8)) (*.f64 y y))))))) (fma.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (/.f64 (pow.f64 x 4) (cbrt.f64 -1))) (+.f64 (cbrt.f64 -1) (*.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1)))))))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 6)) (+.f64 (*.f64 (*.f64 y y) (+.f64 (*.f64 (*.f64 (pow.f64 y 4) -7/24) 1/3) (*.f64 (*.f64 -1/2 (pow.f64 y 4)) -3/8))) (*.f64 (pow.f64 y 6) 13/108))) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)) (cbrt.f64 -1)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (cbrt.f64 -1))) (cbrt.f64 -1))))","(fma.f64 -1/3 (fma.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 6)) (fma.f64 (pow.f64 y 6) 13/108 (fma.f64 1/3 (*.f64 (pow.f64 y 6) -7/24) (*.f64 (pow.f64 y 6) 3/16))) (*.f64 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 4) -7/24)) (cbrt.f64 -1))) (fma.f64 -1/6 (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (cbrt.f64 -1)) (cbrt.f64 -1)))","(fma.f64 -1/3 (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 6) -7/24)) (*.f64 (pow.f64 y 6) 133/432)) (pow.f64 x 6)) (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 4) -7/24)))) (*.f64 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (cbrt.f64 -1)))","1","(+.f64 1 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/3 (/.f64 (fma.f64 1/12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -3/8)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 4) -7/24) (pow.f64 x 4)))))","(fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 1 (+.f64 (*.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 -91/1296 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 7/72 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))"]],"stop":[["node limit",1]],"time":36.65380859375,"type":"simplify"},{"compiler":[[25821,10906]],"time":169.505126953125,"type":"eval"},{"alts":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","done",0.010097509768442016],["(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","done",0.020195019536884032]],"compiler":[[92,39],[17,8]],"count":[[219,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[217,0],"picked":[1,1]}],"min-error":[0],"time":69.075927734375,"type":"prune"},{"accuracy":[0.010097509768442016],"baseline":[0.010097509768442016],"branch":[["x",0.010097509768442016,1],["y",0.010097509768442016,1],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))",0.010097509768442016,1]],"compiler":[[3,2],[3,2],[17,9],[321,103]],"count":[[7,1]],"inputs":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(*.f64 (+.f64 (fma.f64 (sqrt.f64 (/.f64 x (hypot.f64 x y))) (sqrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(*.f64 (+.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 x (hypot.f64 x y))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(pow.f64 (cbrt.f64 (*.f64 (/.f64 (-.f64 x y) (pow.f64 (hypot.f64 x y) 2)) (+.f64 x y))) 3)","(*.f64 (/.f64 (-.f64 x y) (hypot.f64 x y)) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(*.f64 (-.f64 x y) (/.f64 (+.f64 x y) (fma.f64 x x (*.f64 y y))))","(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))"]],"link":["."],"name":["Kahan p9 Example"],"oracle":[22.800461687428296],"outputs":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))"]],"time":13.4541015625,"times":[["x",3.77490234375],["y",3.73583984375],["(/.f64 (*.f64 (-.f64 x y) (+.f64 x y)) (+.f64 (*.f64 x x) (*.f64 y y)))",1.862060546875]],"type":"regimes"},{"compiler":[[92,40]],"egraph":[[5,70,143,0.00044166599999999996],[4,69,143,0.00036212399999999996],[3,65,143,0.00028249899999999997],[2,57,143,0.000202624],[1,44,143,0.00012408299999999998],[0,28,143,5.5083e-5]],"inputs":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (*.f64 (/.f64 (neg.f64 (cbrt.f64 y)) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))) (fma.f64 (/.f64 (neg.f64 (cbrt.f64 y)) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))","(*.f64 (+.f64 (fma.f64 (*.f64 (log.f64 (exp.f64 (cbrt.f64 (/.f64 x (hypot.f64 y x))))) (cbrt.f64 (/.f64 x (hypot.f64 x y)))) (cbrt.f64 (/.f64 x (hypot.f64 x y))) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 2)) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)))) (fma.f64 (/.f64 (neg.f64 (cbrt.f64 y)) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 (hypot.f64 x y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (hypot.f64 x y)) 2))))) (/.f64 (+.f64 x y) (hypot.f64 x y)))"]],"stop":[["done",1],["saturated",1]],"time":10.919921875,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[92,40]],"remove-preprocessing":[[]],"time":21.70703125,"type":"end"}]