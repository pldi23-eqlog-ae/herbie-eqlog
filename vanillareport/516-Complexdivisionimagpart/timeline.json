[{"compiler":[[20,12]],"method":["search"],"sampling":[[12,0.09746565478963576,0.9005826502562344,0.0019516949541298345],[11,0.0,0.9980483050458702,0.0019516949541298345],[10,0.0,0.9980483050458702,0.0019516949541298345],[9,0.0,0.9980483050458702,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":185.555908203125,"type":"analyze"},{"outcomes":[["body",256,"invalid",25.415771484375,489],["body",256,"valid",433.957275390625,8256]],"time":467.55810546875,"type":"sample"},{"compiler":[[19,11]],"egraph":[[0,4,4,2.292e-6],[9,7990,140,0.055431499999999995],[8,6938,140,0.048285125],[7,5740,140,0.036927499999999995],[6,3115,140,0.022968457999999997],[5,1697,140,0.011814249999999998],[4,872,140,0.005642540999999999],[3,398,140,0.0024454159999999997],[2,243,140,0.001146083],[1,122,140,0.000550708],[0,39,140,0.00017475]],"inputs":[["0","1","2","3"],["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 a c) (*.f64 b d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b a) (*.f64 c d)) (+.f64 (*.f64 a a) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 d a)) (+.f64 (*.f64 c c) (*.f64 a a)))","(/.f64 (-.f64 (*.f64 c b) (*.f64 a d)) (+.f64 (*.f64 b b) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 d c) (*.f64 a b)) (+.f64 (*.f64 c c) (*.f64 b b)))","(/.f64 (-.f64 (*.f64 b d) (*.f64 a c)) (+.f64 (*.f64 d d) (*.f64 c c)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","(/.f64 (-.f64 (*.f64 a c) (*.f64 b d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 c a) (*.f64 b d)) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 d (neg.f64 b) (*.f64 c a)) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 c a (*.f64 b (neg.f64 d))) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 b (neg.f64 d) (*.f64 c a)) (fma.f64 c c (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b a) (*.f64 c d)) (+.f64 (*.f64 a a) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b a) (*.f64 c d)) (fma.f64 a a (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b a) (*.f64 c d)) (fma.f64 d d (*.f64 a a)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 d a)) (+.f64 (*.f64 c c) (*.f64 a a)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (fma.f64 c c (*.f64 a a)))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 a a (*.f64 c c)))","(/.f64 (-.f64 (*.f64 c b) (*.f64 a d)) (+.f64 (*.f64 b b) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (fma.f64 b b (*.f64 d d)))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 b b (*.f64 d d)))","(/.f64 (-.f64 (*.f64 d c) (*.f64 a b)) (+.f64 (*.f64 c c) (*.f64 b b)))","(/.f64 (-.f64 (*.f64 c d) (*.f64 b a)) (fma.f64 c c (*.f64 b b)))","(/.f64 (-.f64 (*.f64 c d) (*.f64 b a)) (fma.f64 b b (*.f64 c c)))","(/.f64 (fma.f64 b (neg.f64 a) (*.f64 c d)) (fma.f64 b b (*.f64 c c)))","(/.f64 (fma.f64 a (neg.f64 b) (*.f64 c d)) (fma.f64 b b (*.f64 c c)))","(/.f64 (-.f64 (*.f64 b d) (*.f64 a c)) (+.f64 (*.f64 d d) (*.f64 c c)))","(/.f64 (-.f64 (*.f64 b d) (*.f64 c a)) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 b d (*.f64 a (neg.f64 c))) (fma.f64 c c (*.f64 d d)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":81.69189453125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,5087,20,0.034769376000000005],[10,2774,20,0.023241626],[9,1802,20,0.016742501],[8,1200,20,0.010870333999999999],[7,739,20,0.006567292],[6,488,20,0.003587875],[5,297,20,0.0021277089999999998],[4,166,20,0.0011824169999999998],[3,82,20,0.000611459],[2,51,20,0.000316084],[1,25,20,0.000166042],[0,12,20,5.6209e-5]],"inputs":[["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (fma.f64 c c (*.f64 d d)))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))"]],"stop":[["node limit",1]],"time":46.35595703125,"type":"simplify"},{"compiler":[[33,15]],"time":0.404052734375,"type":"eval"},{"alts":[["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","next",28.5793663950607]],"compiler":[[18,10],[18,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[28.5793663950607],"time":1.3310546875,"type":"prune"},{"compiler":[[43,10]],"locations":[["(fma.f64 d (neg.f64 a) (*.f64 b c))",0.01171875,true],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))",28.095805905178963,true]],"time":8.078857421875,"type":"localize"},{"count":[[2,96]],"series":[["(fma.f64 d (neg.f64 a) (*.f64 b c))","c","-inf",0.199951171875],["(fma.f64 d (neg.f64 a) (*.f64 b c))","c","inf",0.256103515625],["(fma.f64 d (neg.f64 a) (*.f64 b c))","c","0",0.259033203125],["(fma.f64 d (neg.f64 a) (*.f64 b c))","b","-inf",0.14990234375],["(fma.f64 d (neg.f64 a) (*.f64 b c))","b","inf",0.14794921875],["(fma.f64 d (neg.f64 a) (*.f64 b c))","b","0",0.177978515625],["(fma.f64 d (neg.f64 a) (*.f64 b c))","a","-inf",0.150146484375],["(fma.f64 d (neg.f64 a) (*.f64 b c))","a","inf",0.148193359375],["(fma.f64 d (neg.f64 a) (*.f64 b c))","a","0",0.18017578125],["(fma.f64 d (neg.f64 a) (*.f64 b c))","d","-inf",0.2890625],["(fma.f64 d (neg.f64 a) (*.f64 b c))","d","inf",0.241943359375],["(fma.f64 d (neg.f64 a) (*.f64 b c))","d","0",0.281982421875],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","c","-inf",0.3720703125],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","c","inf",0.355224609375],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","c","0",0.337890625],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","b","-inf",0.46484375],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","b","inf",0.47705078125],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","b","0",0.927001953125],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","a","-inf",0.466064453125],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","a","inf",0.546875],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","a","0",0.802001953125],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","d","-inf",0.322021484375],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","d","inf",0.47802734375],["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","d","0",0.61279296875]],"time":8.998046875,"type":"series"},{"count":[[2,78]],"egraph":[[2,2907,25,0.024803708],[1,226,25,0.003898875],[0,11,30,0.000245625]],"inputs":[["(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","(fma.f64 d (neg.f64 a) (*.f64 b c))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))) (cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 4)) (cbrt.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (*.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (*.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 d c) -2) (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) 1) (/.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) 1) (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) -2) (/.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (cbrt.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (fma.f64 d a (*.f64 b c)) (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (hypot.f64 d c)) (/.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 d a (*.f64 b c))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 3) (pow.f64 (hypot.f64 d c) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 d a (*.f64 b c))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 d a (*.f64 b c)) (neg.f64 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (hypot.f64 d c) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 3) (pow.f64 (hypot.f64 d c) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 d a (*.f64 b c)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) -2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b c) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d a) (*.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d a) 1) (*.f64 b c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 d a (*.f64 b c)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 d a (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d a (*.f64 b c))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d a (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 d a (*.f64 b c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 d a (*.f64 b c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (cbrt.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) (sqrt.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (+.f64 (pow.f64 (*.f64 d a) 2) (-.f64 (pow.f64 (*.f64 b c) 2) (*.f64 (*.f64 d a) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 d a (*.f64 b c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 d a (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b c)) (pow.f64 (exp.f64 a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b c))) (pow.f64 (exp.f64 a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) d) (+.f64 1 (expm1.f64 (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 d a (*.f64 b c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 d a (*.f64 b c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 d a (*.f64 b c)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 d a (*.f64 b c)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 d a (*.f64 b c))) 1) 1))))))"]],"rules":[["egg-rr",34],["egg-rr",44]],"stop":[["node limit",1]],"time":47.632080078125,"type":"rewrite"},{"count":[[174,105]],"egraph":[[3,2341,1560,0.015366043],[2,477,1599,0.004147418],[1,146,1638,0.001097251],[0,50,1788,0.000302542]],"inputs":[["(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 -1 (*.f64 a d))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(*.f64 c b)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d)))))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c))) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d))))))","(-.f64 (fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (/.f64 b c)) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 (/.f64 c d) d)) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)))","(+.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (*.f64 (/.f64 c d) (/.f64 c d)))))","(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a) (-.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 (/.f64 c d) d) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(-.f64 (-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d)) (*.f64 (*.f64 (/.f64 c (pow.f64 d 3)) c) (-.f64 (*.f64 c (/.f64 b d)) a)))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 (/.f64 c d) d)) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)))","(+.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (*.f64 (/.f64 c d) (/.f64 c d)))))","(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a) (-.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 (/.f64 c d) d) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(-.f64 (-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d)) (*.f64 (*.f64 (/.f64 c (pow.f64 d 3)) c) (-.f64 (*.f64 c (/.f64 b d)) a)))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d))))","(*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (neg.f64 a) (/.f64 (fma.f64 c c (*.f64 d d)) d))","(*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) (neg.f64 d))","(*.f64 d (/.f64 (neg.f64 a) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (neg.f64 a) (/.f64 (fma.f64 c c (*.f64 d d)) d))","(*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) (neg.f64 d))","(*.f64 d (/.f64 (neg.f64 a) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))","(/.f64 (neg.f64 a) (/.f64 (fma.f64 c c (*.f64 d d)) d))","(*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) (neg.f64 d))","(*.f64 d (/.f64 (neg.f64 a) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d))))","(*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d))))","(*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (/.f64 (neg.f64 (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (/.f64 a (/.f64 (fma.f64 c c (*.f64 d d)) d)))","(-.f64 (*.f64 b (/.f64 c (fma.f64 c c (*.f64 d d)))) (*.f64 d (/.f64 a (fma.f64 c c (*.f64 d d)))))","(-.f64 (*.f64 b (/.f64 c (fma.f64 d d (*.f64 c c)))) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 (/.f64 c d) d)) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)))","(+.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (*.f64 (/.f64 c d) (/.f64 c d)))))","(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 a (*.f64 c c)) (pow.f64 d 3)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (*.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a) (-.f64 (-.f64 (/.f64 b (/.f64 (*.f64 d d) c)) (/.f64 a d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 (/.f64 c d) d) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(-.f64 (-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d)) (*.f64 (*.f64 (/.f64 c (pow.f64 d 3)) c) (-.f64 (*.f64 c (/.f64 b d)) a)))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d)))))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c))) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d))))))","(-.f64 (fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (/.f64 b c)) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c)))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d)))))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 b (/.f64 (pow.f64 c 3) (*.f64 d d)))) (*.f64 (/.f64 d c) (/.f64 a c))) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 d c) (/.f64 a c) (*.f64 b (/.f64 d (/.f64 (pow.f64 c 3) d))))))","(-.f64 (fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (/.f64 b c)) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 -1 (*.f64 a d))","(neg.f64 (*.f64 a d))","(*.f64 a (neg.f64 d))","(*.f64 d (neg.f64 a))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(*.f64 c b)","(*.f64 b c)","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))","(+.f64 (*.f64 c b) (*.f64 -1 (*.f64 a d)))","(fma.f64 c b (neg.f64 (*.f64 a d)))","(-.f64 (*.f64 b c) (*.f64 a d))","(fma.f64 d (neg.f64 a) (*.f64 b c))"]],"stop":[["node limit",1]],"time":41.89697265625,"type":"simplify"},{"compiler":[[1864,597]],"time":13.56005859375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) -2) (/.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))","fresh",37.26292053817878],["(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","fresh",31.769006351005043],["(/.f64 (neg.f64 a) d)","fresh",36.87096138564916],["(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","fresh",35.353628765338364],["(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","fresh",35.82814544619375],["(/.f64 b c)","fresh",38.31961932127623],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","next",28.98734663031087],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (hypot.f64 d c)) (/.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)))","fresh",36.15088836829176],["(*.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (fma.f64 d a (*.f64 b c)) (hypot.f64 d c)))","fresh",36.01217061303136],["(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","fresh",33.898520476889225]],"compiler":[[26,16],[15,9],[8,6],[21,11],[15,9],[7,5],[20,14],[29,13],[20,11],[21,11],[26,16],[15,9],[8,6],[21,11],[15,9],[7,5],[20,14],[29,13],[20,11],[21,11]],"count":[[106,10]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[105,10],"picked":[1,0]}],"min-error":[2.1701486916725075],"time":21.5078125,"type":"prune"},{"compiler":[[61,26]],"locations":[["(pow.f64 (hypot.f64 d c) 2)",0.00390625,true],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))",0.46366579632550753,true],["(-.f64 (*.f64 d a) (*.f64 b c))",0.6171875000000001,true],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))",28.26443331572878,true]],"time":13.189208984375,"type":"localize"},{"count":[[4,144]],"series":[["(pow.f64 (hypot.f64 d c) 2)","c","-inf",0.223876953125],["(pow.f64 (hypot.f64 d c) 2)","c","inf",0.262939453125],["(pow.f64 (hypot.f64 d c) 2)","c","0",0.464111328125],["(pow.f64 (hypot.f64 d c) 2)","d","-inf",0.22412109375],["(pow.f64 (hypot.f64 d c) 2)","d","inf",0.263916015625],["(pow.f64 (hypot.f64 d c) 2)","d","0",0.4619140625],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","c","-inf",0.342041015625],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","c","inf",2.073974609375],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","c","0",0.568115234375],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","d","-inf",0.342041015625],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","d","inf",0.781982421875],["(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","d","0",0.637939453125],["(-.f64 (*.f64 d a) (*.f64 b c))","c","-inf",0.15380859375],["(-.f64 (*.f64 d a) (*.f64 b c))","c","inf",0.152099609375],["(-.f64 (*.f64 d a) (*.f64 b c))","c","0",0.193115234375],["(-.f64 (*.f64 d a) (*.f64 b c))","b","-inf",0.150146484375],["(-.f64 (*.f64 d a) (*.f64 b c))","b","inf",0.1640625],["(-.f64 (*.f64 d a) (*.f64 b c))","b","0",0.15087890625],["(-.f64 (*.f64 d a) (*.f64 b c))","a","-inf",0.14990234375],["(-.f64 (*.f64 d a) (*.f64 b c))","a","inf",0.1630859375],["(-.f64 (*.f64 d a) (*.f64 b c))","a","0",0.149169921875],["(-.f64 (*.f64 d a) (*.f64 b c))","d","-inf",0.234130859375],["(-.f64 (*.f64 d a) (*.f64 b c))","d","inf",0.316162109375],["(-.f64 (*.f64 d a) (*.f64 b c))","d","0",0.218017578125],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","c","-inf",0.306884765625],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","c","inf",0.355224609375],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","c","0",0.383056640625],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","b","-inf",0.469970703125],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","b","inf",0.47607421875],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","b","0",0.671142578125],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","a","-inf",0.556884765625],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","a","inf",0.567138671875],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","a","0",1.015869140625],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","d","-inf",0.9951171875],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","d","inf",0.39208984375],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","d","0",0.48388671875]],"time":16.051025390625,"type":"series"},{"count":[[4,386]],"egraph":[[2,4262,46,0.02945875],[1,327,46,0.005763292000000001],[0,15,50,0.00039225]],"inputs":[["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","(-.f64 (*.f64 d a) (*.f64 b c))","(/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))","(pow.f64 (hypot.f64 d c) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d a) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (*.f64 (*.f64 b (neg.f64 c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 d a)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 b (neg.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 d a) (pow.f64 (hypot.f64 d c) 2)) (/.f64 (*.f64 b c) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (hypot.f64 d c) 2) (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (/.f64 (pow.f64 (hypot.f64 d c) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (/.f64 (pow.f64 (hypot.f64 d c) 2) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (*.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (*.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) 1) (*.f64 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) 1) (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) -1) (*.f64 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) -1) (*.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3))) (*.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2))) (*.f64 (pow.f64 (hypot.f64 d c) 2) (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (hypot.f64 d c)) (hypot.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) -1) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) -1) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3))) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2))) (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) (pow.f64 (pow.f64 (hypot.f64 d c) 2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3) (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (hypot.f64 d c) 2) (-.f64 (*.f64 d a) (*.f64 b c))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 2) (pow.f64 (hypot.f64 d c) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) (pow.f64 (pow.f64 (hypot.f64 d c) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3) (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d a) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (*.f64 b (neg.f64 c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 d a) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 b (neg.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (-.f64 (*.f64 d a) (*.f64 b c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (-.f64 (*.f64 d a) (*.f64 b c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) 1 (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) 1 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 2) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 2) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 2) (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) 2) (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4))) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4))) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (hypot.f64 d c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (hypot.f64 d c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 d c)) (*.f64 (/.f64 1 (hypot.f64 d c)) (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (hypot.f64 d c)) (*.f64 (/.f64 1 (hypot.f64 d c)) (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) 1) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) 1) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (cbrt.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (pow.f64 (hypot.f64 d c) 2))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (hypot.f64 d c)) (/.f64 1 (hypot.f64 d c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (hypot.f64 d c)) (/.f64 1 (hypot.f64 d c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (hypot.f64 d c)) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (hypot.f64 d c)) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (hypot.f64 d c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) -1) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) -1) (/.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) -1) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) -1) (/.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) -1) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 (*.f64 d a) (*.f64 b c)) -1) (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4)))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (hypot.f64 d c))) (/.f64 1 (hypot.f64 d c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (hypot.f64 d c))) (/.f64 1 (hypot.f64 d c)) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2)) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2)) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c)))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c)))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (neg.f64 c)) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)) (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 d a (*.f64 b c)) (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3))) (neg.f64 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2))) (neg.f64 (fma.f64 d a (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) 1) (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) 1) (fma.f64 d a (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b (neg.f64 c)) 3)) (+.f64 (pow.f64 (*.f64 d a) 2) (-.f64 (pow.f64 (*.f64 b (neg.f64 c)) 2) (*.f64 (*.f64 d a) (*.f64 b (neg.f64 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) (pow.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 3)) (+.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 2) (-.f64 (pow.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 2) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b (neg.f64 c)) 2)) (-.f64 (*.f64 d a) (*.f64 b (neg.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 2) (pow.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 2)) (-.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2)) (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 d a (*.f64 b c)) (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 d a) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 d a))) (pow.f64 (exp.f64 c) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 d) a) (+.f64 1 (expm1.f64 (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 d a))) (+.f64 1 (expm1.f64 (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 d a))) (exp.f64 (*.f64 b (neg.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 d) a) (/.f64 1 (pow.f64 (exp.f64 c) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 d a))) (/.f64 1 (pow.f64 (exp.f64 c) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 d a) (*.f64 b c)))) (exp.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) (exp.f64 (-.f64 (*.f64 d a) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) (+.f64 1 (expm1.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b (neg.f64 c))) (pow.f64 (exp.f64 d) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 c) b)) (pow.f64 (exp.f64 d) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 b (neg.f64 c))) (+.f64 1 (expm1.f64 (*.f64 d a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 c) b)) (+.f64 1 (expm1.f64 (*.f64 d a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 d a) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d a (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a d (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d a) 1 (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d a) 1 (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d a) 1 (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d a) 1 (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (neg.f64 c) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (neg.f64 b) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1 (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1 (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1 (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 d a) (*.f64 b c)) 1 (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d a) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 d a) (*.f64 b c)) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 b (neg.f64 c) (*.f64 b c)) (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (neg.f64 c)) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) d) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) d) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) d) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) d) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d) 2) (*.f64 (cbrt.f64 d) a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d) 2) (*.f64 (cbrt.f64 d) a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d) 2) (*.f64 (cbrt.f64 d) a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d) 2) (*.f64 (cbrt.f64 d) a) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (neg.f64 (cbrt.f64 (*.f64 b c))) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d a)) (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d a)) (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d a)) (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d a)) (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (cbrt.f64 (*.f64 d a)) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (cbrt.f64 (*.f64 d a)) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (cbrt.f64 (*.f64 d a)) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d a)) 2) (cbrt.f64 (*.f64 d a)) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) d) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) d) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) d) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) d) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) (*.f64 (sqrt.f64 (-.f64 (*.f64 d a) (*.f64 b c))) 1) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d) (*.f64 (sqrt.f64 d) a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d) (*.f64 (sqrt.f64 d) a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d) (*.f64 (sqrt.f64 d) a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d) (*.f64 (sqrt.f64 d) a) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b c)) (neg.f64 (sqrt.f64 (*.f64 b c))) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 d a)) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 d a)) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 d a)) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 d a)) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) b (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b c) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 3) (pow.f64 (*.f64 b c) 3)) (/.f64 1 (fma.f64 (*.f64 b c) (fma.f64 d a (*.f64 b c)) (pow.f64 (*.f64 d a) 2))) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 d a) 2) (pow.f64 (*.f64 b c) 2)) (/.f64 1 (fma.f64 d a (*.f64 b c))) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 b) c (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 b (neg.f64 c))) 2) (cbrt.f64 (*.f64 b (neg.f64 c))) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) 2) (cbrt.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (neg.f64 c))) (sqrt.f64 (*.f64 b (neg.f64 c))) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) (sqrt.f64 (fma.f64 b (neg.f64 c) (*.f64 b c))) (-.f64 (*.f64 d a) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 b c))) (sqrt.f64 (*.f64 b c)) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (fma.f64 b (neg.f64 c) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (fma.f64 (*.f64 b (neg.f64 c)) 1 (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 b c))) (pow.f64 (cbrt.f64 (*.f64 b c)) 2) (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (*.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (-.f64 (sqrt.f64 (*.f64 d a)) (sqrt.f64 (*.f64 b c))) (+.f64 (fma.f64 b (neg.f64 c) (*.f64 b c)) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 b c)) 2)) (cbrt.f64 (*.f64 b c)) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (sqrt.f64 a)) (sqrt.f64 a) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (sqrt.f64 a)) (sqrt.f64 a) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (sqrt.f64 a)) (sqrt.f64 a) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (sqrt.f64 a)) (sqrt.f64 a) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 d)) (sqrt.f64 d) (*.f64 b (neg.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 d)) (sqrt.f64 d) (*.f64 (*.f64 b (neg.f64 c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 d)) (sqrt.f64 d) (fma.f64 b (neg.f64 c) (fma.f64 b (neg.f64 c) (*.f64 b c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 d)) (sqrt.f64 d) (neg.f64 (-.f64 (*.f64 b c) (fma.f64 b (neg.f64 c) (*.f64 b c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 b) 1) c (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 b) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 d a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 b) (sqrt.f64 c)) (sqrt.f64 c) (*.f64 d a))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 1 (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 d c) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (hypot.f64 d c)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (neg.f64 (log.f64 (hypot.f64 d c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (hypot.f64 d c) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (neg.f64 (log.f64 (hypot.f64 d c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c c) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 d c) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 d c) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (hypot.f64 d c) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 d c) (hypot.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 d c) (neg.f64 (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 d c) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 d c) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4)) (neg.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) (cbrt.f64 (pow.f64 (hypot.f64 d c) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) (*.f64 (cbrt.f64 (hypot.f64 d c)) (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 d c)) (*.f64 (sqrt.f64 (hypot.f64 d c)) (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (hypot.f64 d c)) 3) (sqrt.f64 (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (hypot.f64 d c)) (hypot.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (hypot.f64 d c)) (hypot.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4))) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 d c) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)) (cbrt.f64 (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 d c) (/.f64 1 (hypot.f64 d c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (hypot.f64 d c) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (hypot.f64 d c) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (hypot.f64 d c) 4)) (/.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 1 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (pow.f64 (hypot.f64 d c) 2) 3)) (+.f64 0 (+.f64 (pow.f64 (hypot.f64 d c) 4) (*.f64 0 (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d d) 3) (pow.f64 (*.f64 c c) 3)) (+.f64 (pow.f64 (*.f64 d d) 2) (-.f64 (pow.f64 (*.f64 c c) 2) (*.f64 (*.f64 d d) (*.f64 c c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (hypot.f64 d c) 4)) (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d d) 2) (pow.f64 (*.f64 c c) 2)) (-.f64 (*.f64 d d) (*.f64 c c)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (hypot.f64 d c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 d c) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 d c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 d c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c c)) (exp.f64 (*.f64 d d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d d)) (exp.f64 (*.f64 c c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 d c) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (hypot.f64 d c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (hypot.f64 d c) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d d (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c c (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c c) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 c) 2) (*.f64 (cbrt.f64 c) c) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d) 2) (*.f64 (cbrt.f64 d) d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 c) (*.f64 (sqrt.f64 c) c) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d) (*.f64 (sqrt.f64 d) d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 c) 2) 2) (pow.f64 (cbrt.f64 c) 2) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (sqrt.f64 d)) (sqrt.f64 d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (sqrt.f64 c)) (sqrt.f64 c) (*.f64 d d))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 d) 2) 2) (pow.f64 (cbrt.f64 d) 2) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d) (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 c (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 d d))))))"]],"rules":[["egg-rr",60],["egg-rr",25],["egg-rr",190],["egg-rr",111]],"stop":[["node limit",1]],"time":76.177001953125,"type":"rewrite"},{"count":[[530,445]],"egraph":[[2,2254,2475,0.015404625000000002],[1,588,2583,0.004429375],[0,183,3007,0.0009055]],"inputs":[["(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(*.f64 -1 (*.f64 c b))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(/.f64 -1 (pow.f64 c 2))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (pow.f64 d 4) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (*.f64 -1 (/.f64 (pow.f64 d 4) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(/.f64 -1 (pow.f64 d 2))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (/.f64 (pow.f64 c 2) (pow.f64 d 4))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 c 2) (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 c 6)) (*.f64 1/8 (pow.f64 c 6)))) (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4)))))) (pow.f64 d 8))))) (/.f64 1 (pow.f64 d 2)))","(/.f64 -1 (pow.f64 d 2))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (/.f64 (pow.f64 c 2) (pow.f64 d 4))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 c 2) (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 c 6)) (*.f64 1/8 (pow.f64 c 6)))) (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4)))))) (pow.f64 d 8))))) (/.f64 1 (pow.f64 d 2)))","(/.f64 -1 (pow.f64 d 2))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (pow.f64 c 4) (pow.f64 d 6)))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (+.f64 (/.f64 (pow.f64 c 6) (pow.f64 d 8)) (*.f64 -1 (/.f64 (pow.f64 c 4) (pow.f64 d 6))))) (/.f64 1 (pow.f64 d 2)))","(/.f64 -1 (pow.f64 c 2))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 d 2) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4))) (pow.f64 d 2)) (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 d 6)) (*.f64 1/8 (pow.f64 d 6)))))) (pow.f64 c 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(/.f64 -1 (pow.f64 c 2))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 d 2) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4))) (pow.f64 d 2)) (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 d 6)) (*.f64 1/8 (pow.f64 d 6)))))) (pow.f64 c 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(pow.f64 c 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 (pow.f64 d 8) (+.f64 (*.f64 1/64 (/.f64 1 (pow.f64 c 6))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 c 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 c 6))))) (*.f64 1/16 (/.f64 1 (pow.f64 c 6)))))) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(pow.f64 d 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))))","(pow.f64 d 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))))","(pow.f64 d 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 (pow.f64 c 8) (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 d 6))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 d 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 d 6))))) (*.f64 1/64 (/.f64 1 (pow.f64 d 6)))))) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(pow.f64 c 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))))","(pow.f64 c 2)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d)) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b))))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d))","(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)))","(+.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (/.f64 (/.f64 (*.f64 c c) d) d))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 c (*.f64 d d)) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d))","(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)))","(+.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (/.f64 (/.f64 (*.f64 c c) d) d))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 c (*.f64 d d)) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c)","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d)))","(/.f64 (*.f64 (neg.f64 a) d) (fma.f64 c c (*.f64 d d)))","(*.f64 (/.f64 a (fma.f64 d d (*.f64 c c))) (neg.f64 d))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d)))","(/.f64 (*.f64 (neg.f64 a) d) (fma.f64 c c (*.f64 d d)))","(*.f64 (/.f64 a (fma.f64 d d (*.f64 c c))) (neg.f64 d))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2))))","(neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d)))","(/.f64 (*.f64 (neg.f64 a) d) (fma.f64 c c (*.f64 d d)))","(*.f64 (/.f64 a (fma.f64 d d (*.f64 c c))) (neg.f64 d))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c)","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d)))","(*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b)","(*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c)","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(+.f64 (/.f64 (*.f64 c b) (+.f64 (pow.f64 d 2) (pow.f64 c 2))) (*.f64 -1 (/.f64 (*.f64 a d) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))))","(+.f64 (/.f64 (*.f64 b c) (+.f64 (*.f64 c c) (*.f64 d d))) (neg.f64 (/.f64 a (/.f64 (+.f64 (*.f64 c c) (*.f64 d d)) d))))","(-.f64 (*.f64 (/.f64 c (fma.f64 c c (*.f64 d d))) b) (*.f64 (/.f64 a (fma.f64 c c (*.f64 d d))) d))","(-.f64 (*.f64 (/.f64 b (fma.f64 d d (*.f64 c c))) c) (/.f64 (*.f64 a d) (fma.f64 d d (*.f64 c c))))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d))","(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2))))","(+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)))","(+.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(fma.f64 (/.f64 b d) (/.f64 c d) (*.f64 (/.f64 a d) (+.f64 -1 (/.f64 (/.f64 (*.f64 c c) d) d))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 d 3)) (+.f64 (*.f64 -1 (/.f64 a d)) (+.f64 (/.f64 (*.f64 c b) (pow.f64 d 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 3) b) (pow.f64 d 4))))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 d 3) a)) (+.f64 (fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 b c) (*.f64 d d))) (neg.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 d 4) b)))))","(+.f64 (-.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (*.f64 (/.f64 (pow.f64 c 3) (pow.f64 d 4)) b)) (-.f64 (/.f64 a (/.f64 (pow.f64 d 3) (*.f64 c c))) (/.f64 a d)))","(-.f64 (fma.f64 (/.f64 (*.f64 c c) (pow.f64 d 3)) a (*.f64 b (-.f64 (/.f64 c (*.f64 d d)) (/.f64 (pow.f64 c 3) (pow.f64 d 4))))) (/.f64 a d))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d)) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b))))","(/.f64 b c)","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (/.f64 b c))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (/.f64 b c))","(-.f64 (/.f64 b c) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c)))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)))","(-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d))","(-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 a d) (pow.f64 c 2))) (+.f64 (/.f64 (*.f64 a (pow.f64 d 3)) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 d 2) b) (pow.f64 c 3))) (/.f64 b c))))","(fma.f64 -1 (/.f64 a (/.f64 (*.f64 c c) d)) (+.f64 (fma.f64 -1 (/.f64 (*.f64 d d) (/.f64 (pow.f64 c 3) b)) (/.f64 b c)) (/.f64 a (/.f64 (pow.f64 c 4) (pow.f64 d 3)))))","(+.f64 (-.f64 (-.f64 (/.f64 b c) (/.f64 (*.f64 (*.f64 b d) d) (pow.f64 c 3))) (*.f64 (/.f64 a (*.f64 c c)) d)) (*.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3)))","(fma.f64 (/.f64 a (pow.f64 c 4)) (pow.f64 d 3) (-.f64 (/.f64 b c) (fma.f64 (/.f64 (/.f64 a c) c) d (*.f64 (/.f64 (*.f64 d d) (pow.f64 c 3)) b))))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 a d)","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(*.f64 -1 (*.f64 c b))","(neg.f64 (*.f64 b c))","(*.f64 b (neg.f64 c))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(+.f64 (*.f64 a d) (*.f64 -1 (*.f64 c b)))","(fma.f64 a d (neg.f64 (*.f64 b c)))","(-.f64 (*.f64 a d) (*.f64 b c))","(fma.f64 a d (*.f64 b (neg.f64 c)))","(/.f64 -1 (pow.f64 c 2))","(/.f64 -1 (*.f64 c c))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 1 (*.f64 c c)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 -1 (*.f64 c c)))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (pow.f64 d 4) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 1 (*.f64 c c))))","(+.f64 (-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(+.f64 (-.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (*.f64 -1 (/.f64 (pow.f64 d 4) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 (pow.f64 d 6) (pow.f64 c 8))) (/.f64 1 (*.f64 c c))))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (+.f64 (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c))))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (+.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6)) (/.f64 1 (*.f64 c c)))))","(/.f64 -1 (pow.f64 d 2))","(/.f64 -1 (*.f64 d d))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (/.f64 (*.f64 c c) (pow.f64 d 4)) (/.f64 1 (*.f64 d d)))","(-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (/.f64 1 d) d))","(+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (/.f64 (pow.f64 c 2) (pow.f64 d 4))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 c 2) (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 c 6)) (*.f64 1/8 (pow.f64 c 6)))) (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4)))))) (pow.f64 d 8))))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (*.f64 c c) (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0)))) (fma.f64 -1 (*.f64 (pow.f64 c 6) 0) (*.f64 (*.f64 c c) (*.f64 (pow.f64 c 4) 0)))) (pow.f64 d 8)))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (neg.f64 (pow.f64 c 6)) 0) (pow.f64 d 8))) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(+.f64 (/.f64 (pow.f64 c 6) (pow.f64 d 8)) (-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6))))","(/.f64 -1 (pow.f64 d 2))","(/.f64 -1 (*.f64 d d))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (/.f64 (*.f64 c c) (pow.f64 d 4)) (/.f64 1 (*.f64 d d)))","(-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (/.f64 1 d) d))","(+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (/.f64 (pow.f64 c 2) (pow.f64 d 4))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))) (pow.f64 d 6))) (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 c 2) (+.f64 (pow.f64 c 4) (*.f64 -1 (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4))))))) (+.f64 (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 c 6)) (*.f64 1/8 (pow.f64 c 6)))) (*.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (pow.f64 c 4)) (*.f64 1/4 (pow.f64 c 4)))))) (pow.f64 d 8))))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (*.f64 c c) (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0)))) (fma.f64 -1 (*.f64 (pow.f64 c 6) 0) (*.f64 (*.f64 c c) (*.f64 (pow.f64 c 4) 0)))) (pow.f64 d 8)))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (neg.f64 (pow.f64 c 6)) 0) (pow.f64 d 8))) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(+.f64 (/.f64 (pow.f64 c 6) (pow.f64 d 8)) (-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6))))","(/.f64 -1 (pow.f64 d 2))","(/.f64 -1 (*.f64 d d))","(-.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (/.f64 1 (pow.f64 d 2)))","(-.f64 (/.f64 (*.f64 c c) (pow.f64 d 4)) (/.f64 1 (*.f64 d d)))","(-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (/.f64 1 d) d))","(+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (*.f64 -1 (/.f64 (pow.f64 c 4) (pow.f64 d 6)))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6)))","(-.f64 (+.f64 (/.f64 (pow.f64 c 2) (pow.f64 d 4)) (+.f64 (/.f64 (pow.f64 c 6) (pow.f64 d 8)) (*.f64 -1 (/.f64 (pow.f64 c 4) (pow.f64 d 6))))) (/.f64 1 (pow.f64 d 2)))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0))) (pow.f64 d 6)) (/.f64 (*.f64 c c) (pow.f64 d 4))) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (*.f64 c c) (+.f64 (pow.f64 c 4) (neg.f64 (*.f64 (pow.f64 c 4) 0)))) (fma.f64 -1 (*.f64 (pow.f64 c 6) 0) (*.f64 (*.f64 c c) (*.f64 (pow.f64 c 4) 0)))) (pow.f64 d 8)))) (/.f64 1 (*.f64 d d)))","(+.f64 (-.f64 (-.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 (+.f64 (neg.f64 (pow.f64 c 6)) 0) (pow.f64 d 8))) (/.f64 (+.f64 (pow.f64 c 4) 0) (pow.f64 d 6))) (/.f64 -1 (*.f64 d d)))","(+.f64 (/.f64 (pow.f64 c 6) (pow.f64 d 8)) (-.f64 (+.f64 (/.f64 c (/.f64 (pow.f64 d 4) c)) (/.f64 -1 (*.f64 d d))) (/.f64 (pow.f64 c 4) (pow.f64 d 6))))","(/.f64 -1 (pow.f64 c 2))","(/.f64 -1 (*.f64 c c))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 1 (*.f64 c c)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 -1 (*.f64 c c)))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 1 (*.f64 c c))))","(+.f64 (-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(+.f64 (-.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 d 2) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4))) (pow.f64 d 2)) (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 d 6)) (*.f64 1/8 (pow.f64 d 6)))))) (pow.f64 c 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 (pow.f64 d 6) (pow.f64 c 8))) (/.f64 1 (*.f64 c c))))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (+.f64 (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c))))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (+.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6)) (/.f64 1 (*.f64 c c)))))","(/.f64 -1 (pow.f64 c 2))","(/.f64 -1 (*.f64 c c))","(-.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (/.f64 1 (pow.f64 c 2)))","(-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 1 (*.f64 c c)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 -1 (*.f64 c c)))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6)))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 1 (*.f64 c c))))","(+.f64 (-.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(+.f64 (-.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c)))","(-.f64 (+.f64 (/.f64 (pow.f64 d 2) (pow.f64 c 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 d 2) (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)))) (+.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4))) (pow.f64 d 2)) (*.f64 -1 (+.f64 (*.f64 -1/8 (pow.f64 d 6)) (*.f64 1/8 (pow.f64 d 6)))))) (pow.f64 c 8))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/4 (pow.f64 d 4)) (*.f64 -1/4 (pow.f64 d 4)))) (pow.f64 d 4)) (pow.f64 c 6))))) (/.f64 1 (pow.f64 c 2)))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (-.f64 (+.f64 (neg.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 (pow.f64 d 6) (pow.f64 c 8))) (/.f64 1 (*.f64 c c))))","(+.f64 (/.f64 (*.f64 d d) (pow.f64 c 4)) (+.f64 (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (/.f64 (pow.f64 d 4) (pow.f64 c 6))) (/.f64 -1 (*.f64 c c))))","(+.f64 (/.f64 d (/.f64 (pow.f64 c 4) d)) (-.f64 (/.f64 (pow.f64 d 6) (pow.f64 c 8)) (+.f64 (/.f64 (pow.f64 d 4) (pow.f64 c 6)) (/.f64 1 (*.f64 c c)))))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 (pow.f64 d 8) (+.f64 (*.f64 1/64 (/.f64 1 (pow.f64 c 6))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 c 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 c 6))))) (*.f64 1/16 (/.f64 1 (pow.f64 c 6)))))) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(fma.f64 (pow.f64 d 8) (+.f64 (/.f64 1/64 (pow.f64 c 6)) (fma.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 c 3)) 2) (/.f64 1/16 (pow.f64 c 6))) (/.f64 1/16 (pow.f64 c 6)))) (+.f64 (*.f64 c c) (*.f64 d d)))","(fma.f64 (pow.f64 d 8) (+.f64 (/.f64 1/64 (pow.f64 c 6)) (-.f64 (/.f64 1/16 (pow.f64 c 6)) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 c 3)) 2) (/.f64 1/16 (pow.f64 c 6))))) (fma.f64 c c (*.f64 d d)))","(fma.f64 c c (fma.f64 (pow.f64 d 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 c 6)) 5/64) (*.f64 (/.f64 1 (pow.f64 c 6)) 5/64)) (*.f64 d d)))","(pow.f64 d 2)","(*.f64 d d)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (+.f64 (*.f64 d d) (+.f64 (*.f64 c c) (fma.f64 -1/4 (/.f64 (pow.f64 c 4) (*.f64 d d)) (fma.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (*.f64 1/4 (/.f64 (pow.f64 c 4) (*.f64 d d))))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (fma.f64 d d (+.f64 (fma.f64 c c 0) (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (fma.f64 c c (fma.f64 d d (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))))))","(pow.f64 d 2)","(*.f64 d d)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))) (*.f64 1/4 (/.f64 (pow.f64 c 4) (pow.f64 d 2))))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (+.f64 (*.f64 d d) (+.f64 (*.f64 c c) (fma.f64 -1/4 (/.f64 (pow.f64 c 4) (*.f64 d d)) (fma.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (*.f64 1/4 (/.f64 (pow.f64 c 4) (*.f64 d d))))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (fma.f64 d d (+.f64 (fma.f64 c c 0) (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))))))","(fma.f64 1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4)) (fma.f64 c c (fma.f64 d d (*.f64 -1/8 (/.f64 (pow.f64 c 6) (pow.f64 d 4))))))","(pow.f64 d 2)","(*.f64 d d)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 (pow.f64 c 8) (+.f64 (*.f64 1/16 (/.f64 1 (pow.f64 d 6))) (+.f64 (*.f64 -1 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 d 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 d 6))))) (*.f64 1/64 (/.f64 1 (pow.f64 d 6)))))) (+.f64 (pow.f64 d 2) (pow.f64 c 2)))","(fma.f64 (pow.f64 c 8) (+.f64 (/.f64 1/16 (pow.f64 d 6)) (fma.f64 -1 (+.f64 (/.f64 1/16 (pow.f64 d 6)) (pow.f64 (/.f64 -1/8 (pow.f64 d 3)) 2)) (/.f64 1/64 (pow.f64 d 6)))) (+.f64 (*.f64 c c) (*.f64 d d)))","(fma.f64 (pow.f64 c 8) (+.f64 (/.f64 1/64 (pow.f64 d 6)) (-.f64 (/.f64 1/16 (pow.f64 d 6)) (+.f64 (/.f64 1/16 (pow.f64 d 6)) (pow.f64 (/.f64 -1/8 (pow.f64 d 3)) 2)))) (fma.f64 c c (*.f64 d d)))","(fma.f64 c c (fma.f64 (pow.f64 c 8) (-.f64 (*.f64 (/.f64 1 (pow.f64 d 6)) 5/64) (*.f64 (/.f64 1 (pow.f64 d 6)) 5/64)) (*.f64 d d)))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(pow.f64 c 2)","(*.f64 c c)","(+.f64 (pow.f64 d 2) (pow.f64 c 2))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 d 6) (pow.f64 c 4))) (+.f64 (pow.f64 d 2) (+.f64 (pow.f64 c 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))) (*.f64 1/4 (/.f64 (pow.f64 d 4) (pow.f64 c 2))))))))","(+.f64 (*.f64 c c) (*.f64 d d))","(fma.f64 c c (*.f64 d d))","(fma.f64 d d (*.f64 c c))"]],"stop":[["node limit",1]],"time":55.73583984375,"type":"simplify"},{"compiler":[[12144,4727]],"time":90.625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) -2) (/.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))","fresh",37.26292053817878],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","next",30.251592879345147],["(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","fresh",35.353628765338364],["(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","fresh",35.82814544619375],["(/.f64 b c)","fresh",38.31961932127623],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","done",28.98734663031087],["(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","fresh",35.10316757788735],["(*.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (fma.f64 d a (*.f64 b c)) (hypot.f64 d c)))","fresh",36.01217061303136],["(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","fresh",33.898520476889225]],"compiler":[[26,16],[15,9],[21,11],[15,9],[7,5],[20,14],[15,9],[20,11],[21,11],[26,16],[15,9],[21,11],[15,9],[7,5],[15,9],[20,11],[21,11]],"count":[[455,9]],"kept":[{"done":[0,0],"fresh":[9,6],"new":[445,2],"picked":[1,1]}],"min-error":[1.4335929350467709],"time":149.610107421875,"type":"prune"},{"compiler":[[31,9]],"locations":[["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))",3.8561460754127035,true]],"time":6.47705078125,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","a","-inf",0.24609375],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","a","inf",0.237060546875],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","a","0",0.43603515625],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","c","-inf",0.33203125],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","c","inf",0.614990234375],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","c","0",0.488037109375],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","d","-inf",0.441162109375],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","d","inf",0.44189453125],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","d","0",0.382080078125],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","b","-inf",0.364013671875],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","b","inf",0.400146484375],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","b","0",0.64892578125]],"time":5.197998046875,"type":"series"},{"count":[[1,186]],"egraph":[[2,3119,14,0.024258208],[1,216,14,0.003755083],[0,10,16,0.000223917]],"inputs":[["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a d) (*.f64 (/.f64 b d) (/.f64 c d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 1 d)) a (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 -1 (/.f64 a d) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 (/.f64 a d) 1 (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 a d)) 2)) (cbrt.f64 (/.f64 a d)) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (pow.f64 (cbrt.f64 (/.f64 a d)) 2) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 a d))) (sqrt.f64 (/.f64 a d)) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) (fma.f64 a (/.f64 1 d) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 b d) (/.f64 c d)) 1) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 d)) a))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 d))) a (*.f64 (/.f64 1 (neg.f64 d)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d))) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) (/.f64 1 d)) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d))) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) (/.f64 1 d)) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) d)) (/.f64 (sqrt.f64 a) 1) (*.f64 (/.f64 (sqrt.f64 a) d) (/.f64 (sqrt.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2)))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (pow.f64 (cbrt.f64 d) -2) (*.f64 (/.f64 a (cbrt.f64 d)) (pow.f64 (cbrt.f64 d) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 a d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (cbrt.f64 (/.f64 a d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d))) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 d)) (/.f64 (sqrt.f64 a) (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2))))) (fma.f64 (neg.f64 (/.f64 a (cbrt.f64 d))) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)) (*.f64 (/.f64 a (cbrt.f64 d)) (/.f64 -1 (pow.f64 (cbrt.f64 d) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2)))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (pow.f64 d -1/2) (*.f64 (/.f64 a (sqrt.f64 d)) (pow.f64 d -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 c d) (/.f64 b d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (/.f64 b d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 b d)) 2) (*.f64 (cbrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 b d)) (*.f64 (sqrt.f64 (/.f64 b d)) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (sqrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (pow.f64 (cbrt.f64 (/.f64 c d)) 2)) (cbrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 b d) (sqrt.f64 (/.f64 c d))) (sqrt.f64 (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 a (sqrt.f64 d))) (/.f64 -1 (sqrt.f64 d)) (*.f64 (/.f64 a (sqrt.f64 d)) (/.f64 -1 (sqrt.f64 d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) 2) (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) (sqrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 b d) (/.f64 c d)) 3) (pow.f64 (/.f64 a d) 3)) (+.f64 (pow.f64 (*.f64 (/.f64 b d) (/.f64 c d)) 2) (-.f64 (pow.f64 (/.f64 a d) 2) (*.f64 (*.f64 (/.f64 b d) (/.f64 c d)) (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 b d) (/.f64 c d)) 2) (pow.f64 (/.f64 a d) 2)) (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (exp.f64 (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 a d)) (exp.f64 (*.f64 (/.f64 b d) (/.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (exp.f64 (*.f64 (/.f64 b d) (/.f64 c d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 a d)))) 2))))))"]],"rules":[["egg-rr",186]],"stop":[["node limit",1]],"time":67.5,"type":"rewrite"},{"count":[[234,192]],"egraph":[[6,5224,672,0.019591293000000003],[5,1175,672,0.009553459],[4,322,672,0.0026779589999999997],[3,115,672,0.0010150839999999999],[2,53,672,0.0005050839999999999],[1,27,672,0.00026883399999999997],[0,13,708,0.000112542]],"inputs":[["(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 c (/.f64 (*.f64 d d) b))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 (/.f64 b (*.f64 d d)) c)","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 b (/.f64 c (*.f64 d d)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(neg.f64 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 c (/.f64 (*.f64 d d) b)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 (/.f64 b (*.f64 d d)) c) (/.f64 a d))","(fma.f64 (/.f64 b (*.f64 d d)) c (/.f64 (neg.f64 a) d))","(fma.f64 c (/.f64 b (*.f64 d d)) (/.f64 (neg.f64 a) d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))"]],"stop":[["node limit",1]],"time":43.223876953125,"type":"simplify"},{"compiler":[[7159,2517]],"time":46.60302734375,"type":"eval"},{"alts":[["(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","fresh",35.353628765338364],["(+.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))","fresh",46.34315621641898],["(+.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","next",30.285957953008648],["(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","fresh",35.10316757788735],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","done",30.251592879345147],["(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","fresh",35.82814544619375],["(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","fresh",30.312177937955802],["(/.f64 b c)","fresh",38.31961932127623],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","done",28.98734663031087],["(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","fresh",33.898520476889225],["(+.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","fresh",31.1808426414594]],"compiler":[[21,11],[53,25],[49,29],[15,9],[15,9],[15,9],[40,20],[7,5],[20,14],[21,11],[30,18],[21,11],[53,25],[49,29],[15,9],[15,9],[40,20],[7,5],[21,11],[30,18]],"count":[[201,11]],"kept":[{"done":[1,1],"fresh":[7,5],"new":[192,4],"picked":[1,1]}],"min-error":[1.374839128020141],"time":41.73095703125,"type":"prune"},{"compiler":[[154,69]],"locations":[["(pow.f64 (cbrt.f64 a) 2)",0.4967575195368841,true],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))",3.0001995495234923,true],["(*.f64 (/.f64 b d) c)",3.341485922451052,true],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))",54.42776811832092,true]],"time":29.833984375,"type":"localize"},{"count":[[4,99]],"series":[["(pow.f64 (cbrt.f64 a) 2)","a","-inf",0.505126953125],["(pow.f64 (cbrt.f64 a) 2)","a","inf",0.325927734375],["(pow.f64 (cbrt.f64 a) 2)","a","0",0.371826171875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","a","-inf",3.9560546875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","a","inf",1.093994140625],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","a","0",0.6650390625],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","c","-inf",0.243896484375],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","c","inf",0.2451171875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","c","0",0.615966796875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","d","-inf",0.36181640625],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","d","inf",0.280029296875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","d","0",0.233154296875],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","b","-inf",0.27099609375],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","b","inf",0.224853515625],["(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","b","0",0.7041015625],["(*.f64 (/.f64 b d) c)","c","-inf",0.303955078125],["(*.f64 (/.f64 b d) c)","c","inf",0.31201171875],["(*.f64 (/.f64 b d) c)","c","0",0.30810546875],["(*.f64 (/.f64 b d) c)","d","-inf",0.310791015625],["(*.f64 (/.f64 b d) c)","d","inf",0.31494140625],["(*.f64 (/.f64 b d) c)","d","0",0.365966796875],["(*.f64 (/.f64 b d) c)","b","-inf",0.287109375],["(*.f64 (/.f64 b d) c)","b","inf",0.320068359375],["(*.f64 (/.f64 b d) c)","b","0",0.31884765625],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","d","-inf",0.68408203125],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","d","inf",1.028076171875],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","d","0",3.60791015625],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","a","-inf",0.869140625],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","a","inf",0.51611328125],["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","a","0",0.907958984375]],"time":20.963134765625,"type":"series"},{"count":[[4,128]],"egraph":[[2,5034,36,0.033390666],[1,411,36,0.007088666],[0,19,72,0.000479333]],"inputs":[["(fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))","(*.f64 (/.f64 b d) c)","(fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","(pow.f64 (cbrt.f64 a) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a d) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 a d) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 a d) 0))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 a d) 0))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 a d) 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 a d) 0)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 a d) 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 a d) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (/.f64 a d) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 a d) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a) d) (fma.f64 (pow.f64 (cbrt.f64 a) 2) -1 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) (+.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (cbrt.f64 a) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 a d) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a d) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a d) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 a d) 0)) (cbrt.f64 (pow.f64 (*.f64 (/.f64 a d) 0) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 a d) 0) 2)) (cbrt.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 a d) 0)) (sqrt.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 a d) 3) (pow.f64 (/.f64 a d) 3)) (+.f64 (pow.f64 (/.f64 a d) 2) (-.f64 (pow.f64 (/.f64 a d) 2) (pow.f64 (/.f64 a d) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 a d) 2) (pow.f64 (/.f64 a d) 2)) (*.f64 (/.f64 a d) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 a d) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 a d) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a d) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 a d) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 a d) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 a d) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 a d)) (exp.f64 (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (exp.f64 (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 a d)) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (exp.f64 (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 a d)) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 a d) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 a d) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 a d) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 b d) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 c) (/.f64 b d))) (cbrt.f64 (pow.f64 (exp.f64 c) (/.f64 b d))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 c) (/.f64 b d)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 c) (/.f64 b d)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 c) (/.f64 b d)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 b d) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 d (*.f64 b c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 b (/.f64 d c))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 c (/.f64 d b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 b c) d)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 b c)) (neg.f64 d))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b c) 1) d)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b c) (pow.f64 (cbrt.f64 d) 2)) (cbrt.f64 d))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 b c) (sqrt.f64 d)) (sqrt.f64 d))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 b) c) (neg.f64 d))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 c (neg.f64 b)) (neg.f64 d))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 b d) c) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 b d) c) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) c)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 b d) c)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 b d) c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 c) (/.f64 b d)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 b d) c))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 b d) c) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 b d) 3) (pow.f64 c 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 c 3) (pow.f64 (/.f64 b d) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 b d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 b d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 b d) c)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 b d) c)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (/.f64 b d) c) d) 1) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 (/.f64 b d) c) d) 0) (/.f64 a d))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) 2) (cbrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) (sqrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 (/.f64 b d) c) d) 3) (pow.f64 (/.f64 a d) 3)) (fma.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 (*.f64 (/.f64 b d) c) d) (-.f64 (pow.f64 (/.f64 a d) 2) (*.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 (*.f64 (/.f64 b d) c) d) (pow.f64 (/.f64 a d) 2)) (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (*.f64 (/.f64 b d) c) d)) (exp.f64 (/.f64 a d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (*.f64 (/.f64 b d) c) d)) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 a d)) (exp.f64 (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 a d))) (exp.f64 (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (*.f64 (/.f64 b d) c) d)) (+.f64 1 (expm1.f64 (/.f64 a d)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 a d) (/.f64 (*.f64 (/.f64 b d) c) d))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (cbrt.f64 a)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (cbrt.f64 a))) (cbrt.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 1/6) (*.f64 (pow.f64 a 1/6) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (pow.f64 a 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 a) (cbrt.f64 (pow.f64 (cbrt.f64 a) 2))) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 a) (/.f64 1 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 a (cbrt.f64 a))) (/.f64 1 (cbrt.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 a)) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",33],["egg-rr",28],["egg-rr",37]],"stop":[["node limit",1]],"time":60.43798828125,"type":"rewrite"},{"count":[[227,140]],"egraph":[[7,6908,948,0.035099376],[6,4566,948,0.023442042000000003],[5,2399,948,0.012700584000000001],[4,586,948,0.005322167],[3,242,948,0.001836542],[2,134,948,0.00098575],[1,64,984,0.000550458],[0,25,1080,0.000215708]],"inputs":[["(/.f64 a d)","(/.f64 a d)","(/.f64 a d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(/.f64 (*.f64 c b) d)","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(*.f64 -1 (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 a d)","(/.f64 a d)","(/.f64 a d)","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (+.f64 a (*.f64 -1 (*.f64 (pow.f64 1 1/3) a))) d)","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(*.f64 -1 (/.f64 (+.f64 (*.f64 (pow.f64 1 1/3) a) (*.f64 -1 a)) d))","(/.f64 (+.f64 a (neg.f64 a)) d)","(/.f64 0 d)","0","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(/.f64 (*.f64 c b) d)","(*.f64 (/.f64 c d) b)","(*.f64 c (/.f64 b d))","(*.f64 b (/.f64 c d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (*.f64 c b) (pow.f64 d 2))","(/.f64 (*.f64 c b) (*.f64 d d))","(*.f64 (/.f64 c d) (/.f64 b d))","(*.f64 b (/.f64 c (*.f64 d d)))","(*.f64 c (/.f64 b (*.f64 d d)))","(*.f64 c (/.f64 (/.f64 b d) d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(*.f64 -1 (/.f64 a d))","(/.f64 (neg.f64 a) d)","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(+.f64 (*.f64 -1 (/.f64 a d)) (/.f64 (*.f64 c b) (pow.f64 d 2)))","(fma.f64 -1 (/.f64 a d) (/.f64 (*.f64 c b) (*.f64 d d)))","(-.f64 (*.f64 (/.f64 c d) (/.f64 b d)) (/.f64 a d))","(-.f64 (*.f64 b (/.f64 c (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 b (*.f64 d d))) (/.f64 a d))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))"]],"stop":[["node limit",1]],"time":65.0498046875,"type":"simplify"},{"compiler":[[8781,3925]],"time":66.968017578125,"type":"eval"},{"alts":[["(/.f64 b c)","fresh",38.31961932127623],["(+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","fresh",29.9948977846298],["(+.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","done",30.285957953008648],["(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","fresh",35.10316757788735],["(+.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","fresh",52.949885428602045],["(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","done",30.251592879345147],["(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","fresh",35.353628765338364],["(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","fresh",35.82814544619375],["(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","done",28.98734663031087],["(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","fresh",33.898520476889225],["(+.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","fresh",31.1808426414594]],"compiler":[[7,5],[39,23],[49,29],[15,9],[35,21],[15,9],[21,11],[15,9],[20,14],[21,11],[30,18]],"count":[[211,11]],"kept":[{"done":[2,2],"fresh":[8,6],"new":[200,2],"picked":[1,1]}],"min-error":[1.3742187058582591],"time":44.27197265625,"type":"prune"},{"accuracy":[9.077570122381958],"baseline":[28.5793663950607],"branch":[["a",16.50908557190644,9],["b",20.010442692708544,12],["c",10.302602269515813,6],["d",9.077570122381958,5],["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))",13.018254989206184,5]],"compiler":[[5,4],[5,4],[5,4],[5,4],[19,11],[419,161]],"count":[[20,5]],"inputs":[["(+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","(+.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","(+.f64 (fma.f64 (/.f64 b d) (/.f64 c d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d))) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)) (*.f64 (/.f64 (cbrt.f64 a) (sqrt.f64 d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) (sqrt.f64 d)))))","(+.f64 (fma.f64 (*.f64 (/.f64 b d) c) (/.f64 1 d) (neg.f64 (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))","(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","(+.f64 (fma.f64 b (*.f64 (/.f64 1 d) (/.f64 c d)) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","(fma.f64 (/.f64 b d) (/.f64 c d) (/.f64 (neg.f64 a) d))","(-.f64 (/.f64 b c) (*.f64 (/.f64 (/.f64 a c) c) d))","(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2) -2) (/.f64 (fma.f64 d a (*.f64 b c)) (pow.f64 (cbrt.f64 (hypot.f64 d c)) 2)))","(-.f64 (*.f64 c (/.f64 (/.f64 b d) d)) (/.f64 a d))","(/.f64 (neg.f64 a) d)","(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(-.f64 (/.f64 b c) (*.f64 d (/.f64 a (*.f64 c c))))","(/.f64 b c)","(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) 2) (hypot.f64 d c)) (/.f64 (cbrt.f64 (fma.f64 d a (*.f64 b c))) (hypot.f64 d c)))","(*.f64 (/.f64 1 (hypot.f64 d c)) (/.f64 (fma.f64 d a (*.f64 b c)) (hypot.f64 d c)))","(-.f64 (*.f64 (/.f64 c (*.f64 d d)) (+.f64 b (*.f64 c (/.f64 a d)))) (/.f64 a d))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))"]],"link":["."],"name":["Complex division, imag part"],"oracle":[63.645678914526805],"outputs":[["(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1)))","(/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d)))","(-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a)))","(*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2))))","(+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))"]],"time":239.196044921875,"times":[["a",57.4541015625],["b",83.43701171875],["c",38.26318359375],["d",32.30615234375],["(/.f64 (-.f64 (*.f64 b c) (*.f64 a d)) (+.f64 (*.f64 c c) (*.f64 d d)))",21.473876953125]],"type":"regimes"},{"bstep":[[2.1608699030679302e+101,2.7009079003728843e+103,11.364013671875],[1.1596656669673977e-106,2.3212537516074044e-97,11.513916015625],[-6.457854533634266e-142,-2.4202234922139087e-146,7.33203125],[-1.327275917793868e+105,-1.638768728273059e+104,11.408935546875]],"compiler":[[22,12],[19,11],[21,13],[5,4]],"method":["binary-search","binary-search","binary-search","binary-search"],"time":41.876953125,"type":"bsearch"},{"compiler":[[130,64]],"egraph":[[20,803,189,0.015119291000000002],[19,794,189,0.013782957000000002],[18,766,189,0.012398166000000002],[17,722,189,0.011010582000000001],[16,663,189,0.009694832000000002],[15,586,189,0.008419957000000002],[14,525,189,0.007291999000000001],[13,488,189,0.006296791000000001],[12,464,189,0.005463708000000001],[11,423,189,0.004692374000000001],[10,372,189,0.0039249160000000005],[9,330,189,0.003249749],[8,302,189,0.002716291],[7,275,189,0.002249791],[6,249,189,0.0018151660000000002],[5,229,189,0.0014553740000000002],[4,208,189,0.001121833],[3,180,189,0.0008035],[2,144,189,0.00054325],[1,103,189,0.0002985],[0,63,193,0.000120167]],"inputs":[["(if (<=.f64 d -1327275917793868020393904743123049709517136149764110763630545832629502851048410244520475115970616090427392) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1))) (if (<=.f64 d -5623642243178995/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d))) (if (<=.f64 d 2395637221718509/20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008) (-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a))) (if (<=.f64 d 216086990306793018319509940041951205905721023523140592050398391170021653495333548855363523923599687680) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))) (+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 d -1327275917793868020393904743123049709517136149764110763630545832629502851048410244520475115970616090427392) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (neg.f64 (*.f64 (/.f64 a d) -1))) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1))) (if (<=.f64 d -5623642243178995/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d))) (if (<=.f64 d 2395637221718509/20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008) (-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 (*.f64 d (/.f64 b c)) a))) (if (<=.f64 d 216086990306793018319509940041951205905721023523140592050398391170021653495333548855363523923599687680) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))) (+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (*.f64 (/.f64 (cbrt.f64 a) d) (/.f64 (pow.f64 (cbrt.f64 a) 2) 1))))))))","(if (<=.f64 d -1327275917793868020393904743123049709517136149764110763630545832629502851048410244520475115970616090427392) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (*.f64 (/.f64 a d) 1)) (fma.f64 (/.f64 a d) -1 (*.f64 (/.f64 a d) -1))) (if (<=.f64 d -5623642243178995/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d))) (if (<=.f64 d 2395637221718509/20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008) (-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 a (*.f64 d (/.f64 b c))))) (if (<=.f64 d 216086990306793018319509940041951205905721023523140592050398391170021653495333548855363523923599687680) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))) (+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (/.f64 (cbrt.f64 a) d) (pow.f64 (cbrt.f64 a) 2))))))))","(if (<=.f64 d -1327275917793868020393904743123049709517136149764110763630545832629502851048410244520475115970616090427392) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (/.f64 a d)) (fma.f64 (/.f64 a d) -1 (/.f64 (neg.f64 a) d))) (if (<=.f64 d -5623642243178995/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d))) (if (<=.f64 d 2395637221718509/20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008) (-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 a (*.f64 d (/.f64 b c))))) (if (<=.f64 d 216086990306793018319509940041951205905721023523140592050398391170021653495333548855363523923599687680) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))) (+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 a) d)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (/.f64 (cbrt.f64 a) d) (pow.f64 (cbrt.f64 a) 2))))))))","(if (<=.f64 d -1327275917793868020393904743123049709517136149764110763630545832629502851048410244520475115970616090427392) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) 2) (cbrt.f64 (*.f64 (/.f64 b d) (/.f64 c d))) (/.f64 a d)) (fma.f64 (/.f64 a d) -1 (neg.f64 (/.f64 a d)))) (if (<=.f64 d -5623642243178995/56236422431789954785131731346074773235871213978773957913759444657647969758393598378988008576298635714374011382919011189040103325693678746112606439760814548189184) (/.f64 (fma.f64 d (neg.f64 a) (*.f64 b c)) (fma.f64 c c (*.f64 d d))) (if (<=.f64 d 2395637221718509/20657999024695268717247353376024094994637646342633788102645274852325180976134729557037162826241102651487225375781979947008) (-.f64 (/.f64 b c) (*.f64 (/.f64 d (*.f64 c c)) (+.f64 a (*.f64 d (/.f64 b c))))) (if (<=.f64 d 216086990306793018319509940041951205905721023523140592050398391170021653495333548855363523923599687680) (*.f64 (-.f64 (*.f64 d a) (*.f64 b c)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 d c) 2)))) (+.f64 (-.f64 (/.f64 (*.f64 (/.f64 b d) c) d) (/.f64 a d)) (fma.f64 (/.f64 (neg.f64 (cbrt.f64 a)) d) (pow.f64 (cbrt.f64 a) 2) (*.f64 (/.f64 (cbrt.f64 a) d) (pow.f64 (cbrt.f64 a) 2))))))))"]],"stop":[["fuel",1],["saturated",1]],"time":31.627197265625,"type":"simplify"},{"time":0.0439453125,"type":"soundness"},{"compiler":[[130,64]],"remove-preprocessing":[[]],"time":30.260986328125,"type":"end"}]