[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.6497556329704821,0.10829260549508035,0.24195176153443754],[11,0.620487361215055,0.1619511037133634,0.2175615350715816],[10,0.5853654351085424,0.20682912040501833,0.20780544448643923],[9,0.5307313278317451,0.30439002625644207,0.16487864591181278],[8,0.46829234808683395,0.37463387846946716,0.15707377344369888],[7,0.37463387846946716,0.49951183795928955,0.1258542835712433],[6,0.24975591897964478,0.6243897974491119,0.1258542835712433],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":30.0419921875,"type":"analyze"},{"outcomes":[["body",256,"invalid",16.893310546875,483],["body",256,"valid",295.16064453125,8256]],"time":320.0419921875,"type":"sample"},{"compiler":[[11,7]],"egraph":[[0,2,2,1.584e-6],[11,2044,20,0.032152208],[10,2044,20,0.026663416000000002],[9,2042,20,0.022373541],[8,1892,20,0.018033291],[7,1440,20,0.013352458000000001],[6,1006,20,0.008061666],[5,524,20,0.004675083],[4,312,20,0.0022090829999999997],[3,161,20,0.001086292],[2,71,20,0.000490458],[1,33,20,0.000199625],[0,12,20,6.6333e-5]],"inputs":[["0","1"],["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (-.f64 (*.f64 y y) (*.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (*.f64 x (-.f64 x y)))","(*.f64 (*.f64 x -2) (-.f64 y x))","(*.f64 (-.f64 y x) (*.f64 x -2))","(*.f64 2 (-.f64 (*.f64 y y) (*.f64 y x)))","(*.f64 2 (*.f64 y (-.f64 y x)))","(*.f64 (-.f64 y x) (*.f64 2 y))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":54.7880859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,1501,10,0.019103374],[9,1451,10,0.015471833],[8,1254,10,0.011690083],[7,871,10,0.007517208],[6,501,10,0.004610416],[5,294,10,0.002377833],[4,207,10,0.001346083],[3,102,10,0.0007121250000000001],[2,43,10,0.000323167],[1,18,10,0.00013525],[0,8,10,4.6625e-5]],"inputs":[["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))","(*.f64 2 (*.f64 x (-.f64 x y)))","(*.f64 (*.f64 2 x) (-.f64 x y))"]],"stop":[["saturated",1]],"time":30.385009765625,"type":"simplify"},{"compiler":[[18,11]],"time":0.33984375,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 x) (-.f64 x y))","next",0.0078125],["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))","fresh",0.015625]],"compiler":[[9,6],[11,7],[9,6],[11,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.00390625],"time":1.1611328125,"type":"prune"},{"compiler":[[18,9]],"locations":[["(*.f64 (*.f64 2 x) (-.f64 x y))",0.0078125,true]],"time":3.971923828125,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (*.f64 2 x) (-.f64 x y))","y","-inf",0.30908203125],["(*.f64 (*.f64 2 x) (-.f64 x y))","y","inf",0.371826171875],["(*.f64 (*.f64 2 x) (-.f64 x y))","y","0",0.465087890625],["(*.f64 (*.f64 2 x) (-.f64 x y))","x","-inf",0.37890625],["(*.f64 (*.f64 2 x) (-.f64 x y))","x","inf",0.501953125],["(*.f64 (*.f64 2 x) (-.f64 x y))","x","0",0.47705078125]],"time":2.587158203125,"type":"series"},{"count":[[1,19]],"egraph":[[2,2049,10,0.018729126],[1,153,10,0.002717084],[0,7,10,0.000198542]],"inputs":[["(*.f64 (*.f64 2 x) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2 x) x) (*.f64 (*.f64 2 x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 2 (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 2 x)) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (*.f64 2 x)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 x) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 x) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 2 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 2 (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 2 (-.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 2 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 x y)) (*.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 2 (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 x) 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (*.f64 2 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 2 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 2 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 2 (-.f64 x y)))))))))"]],"rules":[["egg-rr",19]],"stop":[["node limit",1]],"time":35.56298828125,"type":"rewrite"},{"count":[[43,25]],"egraph":[[22,6559,240,0.108840253],[21,6525,240,0.092351461],[20,6445,240,0.083999586],[19,6137,240,0.075020295],[18,5823,240,0.06680767],[17,5397,240,0.059188961],[16,4535,240,0.051199836],[15,3823,240,0.042607752],[14,3236,240,0.035634919],[13,2780,240,0.029366169],[12,2408,240,0.024372919],[11,2093,240,0.019968211],[10,1850,240,0.016205960999999998],[9,1681,240,0.012794044],[8,1548,240,0.010039544],[7,1444,240,0.007665752],[6,1005,240,0.005255335],[5,672,240,0.003297501],[4,226,240,0.001732959],[3,94,240,0.0007691250000000001],[2,44,276,0.000401584],[1,22,294,0.00020816700000000001],[0,10,294,8.1958e-5]],"inputs":[["(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))"]],"stop":[["node limit",1]],"time":130.535888671875,"type":"simplify"},{"compiler":[[266,154]],"time":3.51708984375,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 x) (-.f64 x y))","done",0.0078125],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","next",0.0078125]],"compiler":[[9,6],[14,10],[14,10]],"count":[[27,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[25,1],"picked":[1,1]}],"min-error":[0.00390625],"time":3.703857421875,"type":"prune"},{"compiler":[[33,19]],"locations":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))",0.0078125,true]],"time":7.31298828125,"type":"localize"},{"count":[[1,24]],"series":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","y","-inf",0.221923828125],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","y","inf",0.320068359375],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","y","0",0.39892578125],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","x","-inf",0.23291015625],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","x","inf",0.402099609375],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","x","0",0.748046875]],"time":2.4130859375,"type":"series"},{"count":[[1,52]],"egraph":[[2,2862,10,0.021489251],[1,201,10,0.003749334],[0,9,12,0.000250542]],"inputs":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (*.f64 2 (+.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 2) (*.f64 x (*.f64 2 (+.f64 x y)))) (/.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 2) (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 (*.f64 x 2) (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (*.f64 x 2) (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (*.f64 2 y) (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 2 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x 2) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (*.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (/.f64 1 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) 2) (cbrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) (sqrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x 2)) (*.f64 (sqrt.f64 (*.f64 x 2)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3)) (/.f64 1 (-.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (*.f64 x 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x (*.f64 x 2))) (sqrt.f64 (*.f64 x (*.f64 2 y)))) (-.f64 (sqrt.f64 (*.f64 x (*.f64 x 2))) (sqrt.f64 (*.f64 x (*.f64 2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y)))) (+.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (*.f64 2 (+.f64 x y))) (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 x (*.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3)) (-.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 2) (-.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3))) (neg.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2)) (neg.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 x 2)) 3) (pow.f64 (*.f64 x (*.f64 2 y)) 3)) (-.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2) (*.f64 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 2 y)) 2) (pow.f64 (*.f64 x (*.f64 x 2)) 2)) (-.f64 (*.f64 x (*.f64 2 y)) (*.f64 x (*.f64 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 2 (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) 2) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (*.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 x) (*.f64 x 2)) (pow.f64 (exp.f64 y) (*.f64 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 2 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 x 2) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 2) x (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 2) y (*.f64 x (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 x 2) (*.f64 x (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 x 2)) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 2 y)) (*.f64 x (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 2 y))) 2) (cbrt.f64 (*.f64 x (*.f64 2 y))) (*.f64 x (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 x 2))) 2) (cbrt.f64 (*.f64 x (*.f64 x 2))) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (*.f64 2 y))) (sqrt.f64 (*.f64 x (*.f64 2 y))) (*.f64 x (*.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (*.f64 x 2))) (sqrt.f64 (*.f64 x (*.f64 x 2))) (*.f64 x (*.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 y) x (*.f64 x (*.f64 x 2)))))))"]],"rules":[["egg-rr",52]],"stop":[["node limit",1]],"time":40.7880859375,"type":"rewrite"},{"count":[[76,58]],"egraph":[[22,6559,240,0.108461375],[21,6525,240,0.092162125],[20,6445,240,0.083783083],[19,6137,240,0.07478608299999999],[18,5823,240,0.06655091599999999],[17,5397,240,0.05893791599999999],[16,4535,240,0.051033498999999996],[15,3823,240,0.042509041],[14,3236,240,0.035509624],[13,2780,240,0.029328207999999998],[12,2408,240,0.024388207999999998],[11,2093,240,0.019995916],[10,1850,240,0.016274333],[9,1681,240,0.012876790999999999],[8,1548,240,0.010097749999999999],[7,1444,240,0.007671084],[6,1005,240,0.005239125],[5,672,240,0.0032918749999999997],[4,226,240,0.0017375],[3,94,240,0.000781959],[2,44,276,0.000404917],[1,22,294,0.00021166700000000002],[0,10,294,8.5209e-5]],"inputs":[["(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 2 (pow.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(*.f64 -2 (*.f64 y x))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 2 (pow.f64 x 2))","(*.f64 2 (*.f64 x x))","(*.f64 x (*.f64 x 2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(*.f64 -2 (*.f64 y x))","(*.f64 y (*.f64 x -2))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))","(+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -2 (*.f64 y x)))","(fma.f64 2 (*.f64 x x) (*.f64 -2 (*.f64 y x)))","(fma.f64 -2 (*.f64 y x) (*.f64 x (*.f64 x 2)))","(*.f64 x (+.f64 (*.f64 -2 y) (*.f64 x 2)))","(*.f64 x (fma.f64 -2 y (*.f64 x 2)))"]],"stop":[["node limit",1]],"time":129.872802734375,"type":"simplify"},{"compiler":[[883,562]],"time":11.176025390625,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 x) (-.f64 x y))","done",0.0078125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","next",35.84866584495278],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","done",0.0078125]],"compiler":[[9,6],[17,13],[14,10],[17,13]],"count":[[60,3]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[58,1],"picked":[1,1]}],"min-error":[0],"time":8.359130859375,"type":"prune"},{"compiler":[[49,32]],"locations":[["(cbrt.f64 (*.f64 x 2))",0.09765625,true],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))",0.26171875,true],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))",0.3014450195368841,true],["(cbrt.f64 (pow.f64 (*.f64 x 2) 2))",21.26156207653322,true]],"time":12.412841796875,"type":"localize"},{"count":[[4,36]],"series":[["(cbrt.f64 (*.f64 x 2))","x","-inf",1.759033203125],["(cbrt.f64 (*.f64 x 2))","x","inf",0.2900390625],["(cbrt.f64 (*.f64 x 2))","x","0",0.298095703125],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","y","-inf",0.35693359375],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","y","inf",0.343994140625],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","y","0",0.85400390625],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","x","-inf",0.485107421875],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","x","inf",0.45703125],["(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","x","0",0.510986328125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","y","-inf",0.5009765625],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","y","inf",0.44384765625],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","y","0",1.382080078125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","x","-inf",1.052001953125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","x","inf",0.593017578125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","x","0",2.569091796875],["(cbrt.f64 (pow.f64 (*.f64 x 2) 2))","x","-inf",0.318115234375],["(cbrt.f64 (pow.f64 (*.f64 x 2) 2))","x","inf",0.377197265625],["(cbrt.f64 (pow.f64 (*.f64 x 2) 2))","x","0",0.676025390625]],"time":13.543212890625,"type":"series"},{"count":[[4,160]],"egraph":[[2,3198,37,0.025466958],[1,240,37,0.0043833330000000005],[0,11,50,0.000297208]],"inputs":[["(cbrt.f64 (pow.f64 (*.f64 x 2) 2))","(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","(*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y))","(cbrt.f64 (*.f64 x 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 2) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 4))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x x) 1/6) (*.f64 (pow.f64 (+.f64 x x) 1/6) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x x)) (pow.f64 (+.f64 x x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (pow.f64 (cbrt.f64 (+.f64 x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (cbrt.f64 x)) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2)) (cbrt.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x x) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) 4) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (+.f64 x x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (+.f64 x x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (+.f64 x x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (pow.f64 (cbrt.f64 (+.f64 x x)) 2)) (*.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 x x)) (*.f64 y (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (+.f64 x x)) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) (*.f64 x (cbrt.f64 (+.f64 x x)))) (*.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) (*.f64 (cbrt.f64 (+.f64 x x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x x) x) (*.f64 (+.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x x) y) (*.f64 (+.f64 x x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) x) (+.f64 x y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) x) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) x) (+.f64 x y)))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) x) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 x x) (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 x x) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x x) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 x x) (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 x x) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 x x) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 x x) (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (*.f64 x x) 4) (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3) (*.f64 (*.f64 x x) 4)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 x x) (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 2) x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 x x) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 x x) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (*.f64 x x) 4) (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3) (*.f64 (*.f64 x x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 x x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 x x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 x x) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 x x) (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 x x) (*.f64 y (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) x (*.f64 (+.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x x) y (*.f64 (+.f64 x x) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) (*.f64 x (cbrt.f64 (+.f64 x x))) (*.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) (*.f64 (cbrt.f64 (+.f64 x x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (+.f64 x x) (*.f64 x (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (pow.f64 (cbrt.f64 (+.f64 x x)) 2) (*.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) (pow.f64 (cbrt.f64 (+.f64 x x)) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) 1) (*.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 x y)) (cbrt.f64 (+.f64 x x)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 x y)) (cbrt.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 x y)) (cbrt.f64 (+.f64 x x))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 x y)) (cbrt.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) 3) (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) 3)) (+.f64 (pow.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) 2) (-.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) 2) (*.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) 2) (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) 2)) (-.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (cbrt.f64 (+.f64 x x))) (fma.f64 y (-.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (cbrt.f64 (+.f64 x x))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 x x) (pow.f64 (+.f64 x y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 x x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 x y)) (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y)) (exp.f64 (*.f64 x (cbrt.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (+.f64 x x) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 x y) 3) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (cbrt.f64 (+.f64 x x)) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) x (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x x)) y (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (cbrt.f64 (+.f64 x x)) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cbrt.f64 (+.f64 x x)) y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (cbrt.f64 (+.f64 x x))) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 2) x) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 2) y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) x) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (cbrt.f64 (+.f64 x x))) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x x) 1/6) (*.f64 (pow.f64 (+.f64 x x) 1/6) x) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x x) 1/6) (*.f64 (pow.f64 (+.f64 x x) 1/6) y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (+.f64 x x))) 1 (*.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y)) 2) (cbrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y)) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (cbrt.f64 (+.f64 x x)))) 2) (cbrt.f64 (*.f64 x (cbrt.f64 (+.f64 x x)))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y)) (sqrt.f64 (*.f64 (cbrt.f64 (+.f64 x x)) y)) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (cbrt.f64 (+.f64 x x)))) (sqrt.f64 (*.f64 x (cbrt.f64 (+.f64 x x)))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 x x) 1/6) (sqrt.f64 x)) (*.f64 (pow.f64 (+.f64 x x) 1/6) (sqrt.f64 x)) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (pow.f64 (+.f64 x x) 1/6)) (*.f64 (sqrt.f64 x) (pow.f64 (+.f64 x x) 1/6)) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (+.f64 x x) 1/6) (sqrt.f64 y)) (*.f64 (pow.f64 (+.f64 x x) 1/6) (sqrt.f64 y)) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 y) (pow.f64 (+.f64 x x) 1/6)) (*.f64 (sqrt.f64 y) (pow.f64 (+.f64 x x) 1/6)) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (sqrt.f64 x)) (sqrt.f64 x) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 x)) (cbrt.f64 2) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2)) (cbrt.f64 (cbrt.f64 (+.f64 x x))) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (+.f64 x x) 1/6)) (pow.f64 (+.f64 x x) 1/6) (*.f64 (cbrt.f64 (+.f64 x x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 x x)) (sqrt.f64 y)) (sqrt.f64 y) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 x)) (cbrt.f64 2) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2)) (cbrt.f64 (cbrt.f64 (+.f64 x x))) (*.f64 x (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (pow.f64 (+.f64 x x) 1/6)) (pow.f64 (+.f64 x x) 1/6) (*.f64 x (cbrt.f64 (+.f64 x x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (+.f64 x x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (+.f64 x x))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (+.f64 x x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (+.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2) (cbrt.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 2) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x x) 1/6) (pow.f64 (+.f64 x x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (+.f64 x x) 4)))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) 4) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x x) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (+.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 x x))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",66],["egg-rr",35],["egg-rr",31]],"stop":[["node limit",1]],"time":55.091796875,"type":"rewrite"},{"count":[[196,178]],"egraph":[[8,7917,584,0.059960751],[7,6934,584,0.049068584],[6,4745,584,0.035151167],[5,3362,584,0.023176209],[4,2045,584,0.012519043],[3,948,584,0.006205709],[2,309,584,0.002512625],[1,108,725,0.0007690840000000001],[0,39,791,0.000223917]],"inputs":[["(*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2)))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2))))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)))","(*.f64 (*.f64 (cbrt.f64 4) x) (*.f64 y (cbrt.f64 2)))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2)))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x x)))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x x)))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2))))","(neg.f64 (*.f64 (cbrt.f64 4) (*.f64 (*.f64 x x) (cbrt.f64 -2))))","(*.f64 (cbrt.f64 4) (neg.f64 (*.f64 x (*.f64 x (cbrt.f64 -2)))))","(*.f64 (cbrt.f64 4) (*.f64 x (neg.f64 (*.f64 x (cbrt.f64 -2)))))","(*.f64 (cbrt.f64 4) (*.f64 x (*.f64 (cbrt.f64 -2) (neg.f64 x))))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (neg.f64 (*.f64 x x))))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(*.f64 -1 (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2)))) (*.f64 (cbrt.f64 4) (*.f64 (*.f64 x x) (cbrt.f64 -2)))))","(neg.f64 (fma.f64 (*.f64 y (cbrt.f64 4)) (*.f64 x (cbrt.f64 -2)) (*.f64 (*.f64 (cbrt.f64 4) (*.f64 x x)) (cbrt.f64 -2))))","(*.f64 (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2))) (-.f64 (neg.f64 y) x))","(*.f64 (cbrt.f64 4) (*.f64 (*.f64 x (cbrt.f64 -2)) (-.f64 (neg.f64 y) x)))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (*.f64 x (-.f64 (neg.f64 y) x))))","(*.f64 (*.f64 (cbrt.f64 -2) (*.f64 x (neg.f64 (cbrt.f64 4)))) (+.f64 y x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(*.f64 -1 (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2)))) (*.f64 (cbrt.f64 4) (*.f64 (*.f64 x x) (cbrt.f64 -2)))))","(neg.f64 (fma.f64 (*.f64 y (cbrt.f64 4)) (*.f64 x (cbrt.f64 -2)) (*.f64 (*.f64 (cbrt.f64 4) (*.f64 x x)) (cbrt.f64 -2))))","(*.f64 (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2))) (-.f64 (neg.f64 y) x))","(*.f64 (cbrt.f64 4) (*.f64 (*.f64 x (cbrt.f64 -2)) (-.f64 (neg.f64 y) x)))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (*.f64 x (-.f64 (neg.f64 y) x))))","(*.f64 (*.f64 (cbrt.f64 -2) (*.f64 x (neg.f64 (cbrt.f64 4)))) (+.f64 y x))","(+.f64 (*.f64 -1 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) x)))) (*.f64 -1 (*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (pow.f64 x 2)))))","(*.f64 -1 (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2)))) (*.f64 (cbrt.f64 4) (*.f64 (*.f64 x x) (cbrt.f64 -2)))))","(neg.f64 (fma.f64 (*.f64 y (cbrt.f64 4)) (*.f64 x (cbrt.f64 -2)) (*.f64 (*.f64 (cbrt.f64 4) (*.f64 x x)) (cbrt.f64 -2))))","(*.f64 (*.f64 (cbrt.f64 4) (*.f64 x (cbrt.f64 -2))) (-.f64 (neg.f64 y) x))","(*.f64 (cbrt.f64 4) (*.f64 (*.f64 x (cbrt.f64 -2)) (-.f64 (neg.f64 y) x)))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 -2) (*.f64 x (-.f64 (neg.f64 y) x))))","(*.f64 (*.f64 (cbrt.f64 -2) (*.f64 x (neg.f64 (cbrt.f64 4)))) (+.f64 y x))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2)))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x x)))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x x)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x)))","(*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)))","(*.f64 (*.f64 (cbrt.f64 4) x) (*.f64 y (cbrt.f64 2)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x)))","(*.f64 y (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)))","(*.f64 (*.f64 (cbrt.f64 4) x) (*.f64 y (cbrt.f64 2)))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(+.f64 (*.f64 (cbrt.f64 2) (*.f64 y (*.f64 (cbrt.f64 4) x))) (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (pow.f64 x 2))))","(*.f64 (cbrt.f64 2) (+.f64 (*.f64 y (*.f64 (cbrt.f64 4) x)) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (*.f64 (cbrt.f64 4) x) (*.f64 (cbrt.f64 4) (*.f64 x x))))","(*.f64 (*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) x)) (+.f64 x y))","(*.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 2) (*.f64 x (+.f64 y x))))","(*.f64 (cbrt.f64 2) (*.f64 (cbrt.f64 4) (*.f64 x (+.f64 y x))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2))","(*.f64 (cbrt.f64 2) (cbrt.f64 (pow.f64 x 4)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2)))","(*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2)))","(*.f64 y (*.f64 (cbrt.f64 2) (cbrt.f64 x)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2)))","(*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2)))","(*.f64 y (*.f64 (cbrt.f64 2) (cbrt.f64 x)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 4)) 1/3) (cbrt.f64 2)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (*.f64 y (cbrt.f64 2))))","(fma.f64 (cbrt.f64 (pow.f64 x 4)) (cbrt.f64 2) (*.f64 (cbrt.f64 x) (*.f64 y (cbrt.f64 2))))","(*.f64 (cbrt.f64 2) (+.f64 (cbrt.f64 (pow.f64 x 4)) (*.f64 y (cbrt.f64 x))))","(*.f64 (cbrt.f64 2) (fma.f64 y (cbrt.f64 x) (cbrt.f64 (pow.f64 x 4))))"]],"stop":[["node limit",1]],"time":85.280029296875,"type":"simplify"},{"compiler":[[3434,1608]],"time":32.341064453125,"type":"eval"},{"alts":[["(*.f64 (*.f64 2 x) (-.f64 x y))","done",0.0078125],["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","done",35.84866584495278],["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","done",0.0078125]],"compiler":[[9,6],[17,13],[14,10]],"count":[[181,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[178,0],"picked":[1,1]}],"min-error":[0],"time":31.18896484375,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["x",0.0078125,1],["y",0.0078125,1],["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))",0.0078125,1],["(-.f64 (*.f64 x x) (*.f64 x y))",0.0078125,1]],"compiler":[[3,2],[3,2],[11,7],[9,5],[45,30]],"count":[[4,1]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 (*.f64 x 2) 2)) (*.f64 (cbrt.f64 (*.f64 x 2)) (+.f64 x y)))","(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","(*.f64 (*.f64 2 x) (-.f64 x y))","(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))"]],"link":["."],"name":["Linear.Matrix:fromQuaternion from linear-1.19.1.3, A"],"oracle":[35.85257209495278],"outputs":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))"]],"time":13.81103515625,"times":[["x",3.239013671875],["y",3.39404296875],["(*.f64 2 (-.f64 (*.f64 x x) (*.f64 x y)))",3.075927734375],["(-.f64 (*.f64 x x) (*.f64 x y))",3.06396484375]],"type":"regimes"},{"compiler":[[13,9]],"egraph":[[6,52,16,0.000365126],[5,51,16,0.00030487600000000004],[4,48,16,0.000244001],[3,43,16,0.000182334],[2,28,16,0.000123626],[1,19,16,6.487600000000001e-5],[0,9,18,3.0542e-5]],"inputs":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 x (*.f64 2 x)) (*.f64 (neg.f64 y) (*.f64 2 x)))","(+.f64 (*.f64 x (*.f64 x 2)) (*.f64 (*.f64 x 2) (neg.f64 y)))","(-.f64 (*.f64 x (*.f64 x 2)) (*.f64 (*.f64 x 2) y))","(+.f64 (*.f64 x (*.f64 x 2)) (*.f64 y (*.f64 x -2)))"]],"stop":[["done",1],["saturated",1]],"time":8.821044921875,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[13,9]],"remove-preprocessing":[[]],"time":8.376953125,"type":"end"}]