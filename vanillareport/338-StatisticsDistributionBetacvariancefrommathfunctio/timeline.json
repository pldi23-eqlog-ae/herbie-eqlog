[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.42515785148998475,0.5265716509279628,0.048270497582052485],[11,0.36664989027576667,0.5928806736374099,0.04046943608682341],[10,0.3198435213043922,0.6552891655992426,0.02486731309636525],[9,0.26523609083778865,0.7332997805515333,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":99.7890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",99.15966796875,2302],["body",256,"valid",360.043212890625,8256]],"time":469.051025390625,"type":"sample"},{"compiler":[[14,9]],"egraph":[[1,3,3,6.4589999999999995e-6],[0,3,3,5.542e-6],[20,7020,56,0.119421209],[19,6439,56,0.103224334],[18,6424,56,0.09187516700000001],[17,6271,56,0.085764875],[16,6230,56,0.079608],[15,6215,56,0.07348375],[14,6128,56,0.067589708],[13,6077,56,0.061928124999999994],[12,5987,56,0.05616170799999999],[11,5535,56,0.05050670799999999],[10,5387,56,0.04505262399999999],[9,4302,56,0.03915458299999999],[8,4047,56,0.028101249999999994],[7,3460,56,0.022676624999999995],[6,3045,56,0.017416416999999997],[5,2563,56,0.012834916999999998],[4,2078,56,0.008902582999999999],[3,728,56,0.004900541],[2,252,56,0.001506375],[1,84,64,0.000448708],[0,22,64,0.00012075]],"inputs":[["0","1","2"],["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))","(/.f64 (*.f64 y x) (*.f64 (*.f64 z z) (+.f64 z 1)))","(/.f64 (*.f64 z y) (*.f64 (*.f64 x x) (+.f64 x 1)))","(/.f64 (*.f64 x z) (*.f64 (*.f64 y y) (+.f64 y 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2"],["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))","(/.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 z 1))","(*.f64 (/.f64 y (*.f64 z z)) (/.f64 x (+.f64 z 1)))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(*.f64 x (/.f64 y (fma.f64 z z (pow.f64 z 3))))","(/.f64 (*.f64 y x) (*.f64 (*.f64 z z) (+.f64 z 1)))","(/.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 z 1))","(*.f64 (/.f64 y (*.f64 z z)) (/.f64 x (+.f64 z 1)))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(*.f64 x (/.f64 y (fma.f64 z z (pow.f64 z 3))))","(/.f64 (*.f64 z y) (*.f64 (*.f64 x x) (+.f64 x 1)))","(*.f64 (/.f64 z (*.f64 x x)) (/.f64 y (+.f64 x 1)))","(*.f64 (/.f64 z (+.f64 (*.f64 x x) (pow.f64 x 3))) y)","(*.f64 y (/.f64 z (fma.f64 x x (pow.f64 x 3))))","(*.f64 z (/.f64 (/.f64 y x) (fma.f64 x x x)))","(/.f64 y (/.f64 (fma.f64 x x x) (/.f64 z x)))","(/.f64 (*.f64 x z) (*.f64 (*.f64 y y) (+.f64 y 1)))","(/.f64 (/.f64 (*.f64 x z) (fma.f64 y y y)) y)","(*.f64 x (/.f64 (/.f64 z y) (fma.f64 y y y)))","(*.f64 z (/.f64 (/.f64 x y) (fma.f64 y y y)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort x y)"]],"time":146.14990234375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[15,6455,14,0.058900459],[14,5685,14,0.048505459],[13,4834,14,0.040958334],[12,4586,14,0.033968876],[11,4461,14,0.028453542000000002],[10,4249,14,0.023644042],[9,3428,14,0.019018667],[8,1922,14,0.013826417],[7,1322,14,0.009770917],[6,1029,14,0.006956917],[5,780,14,0.004851792],[4,473,14,0.002912792],[3,242,14,0.0014275009999999999],[2,85,14,0.000566542],[1,30,16,0.000188376],[0,10,16,5.8542e-5]],"inputs":[["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))","(*.f64 (/.f64 x (*.f64 z z)) (/.f64 y (+.f64 z 1)))","(*.f64 (/.f64 y (*.f64 z z)) (/.f64 x (+.f64 z 1)))","(/.f64 x (*.f64 (/.f64 z y) (fma.f64 z z z)))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))"]],"stop":[["node limit",1]],"time":70.197021484375,"type":"simplify"},{"compiler":[[24,13]],"time":0.375,"type":"eval"},{"alts":[["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))","fresh",13.902067095363186],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","next",4.183350615355387]],"compiler":[[14,9],[13,7],[14,9],[13,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[2.0112471041154203],"time":1.27197265625,"type":"prune"},{"compiler":[[29,7]],"locations":[["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))",2.829621433853573,true],["(/.f64 x (fma.f64 z z z))",3.963931188471003,true]],"time":5.3720703125,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","x","-inf",0.337890625],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","x","inf",0.447998046875],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","x","0",0.593017578125],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","z","-inf",0.303955078125],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","z","inf",0.3388671875],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","z","0",0.3359375],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","y","-inf",0.35009765625],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","y","inf",0.95703125],["(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","y","0",0.837158203125],["(/.f64 x (fma.f64 z z z))","z","-inf",0.626953125],["(/.f64 x (fma.f64 z z z))","z","inf",0.595947265625],["(/.f64 x (fma.f64 z z z))","z","0",0.26806640625],["(/.f64 x (fma.f64 z z z))","x","-inf",0.41796875],["(/.f64 x (fma.f64 z z z))","x","inf",0.69091796875],["(/.f64 x (fma.f64 z z z))","x","0",0.699951171875]],"time":8.0068359375,"type":"series"},{"count":[[2,122]],"egraph":[[2,2613,22,0.024239166],[1,176,22,0.003111125],[0,8,22,0.0001795]],"inputs":[["(/.f64 x (fma.f64 z z z))","(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (fma.f64 z z z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (fma.f64 z z z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (fma.f64 z z z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) 2) (cbrt.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (fma.f64 z z z))) (sqrt.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) -2) (/.f64 x (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (cbrt.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z z z) -1/2) (/.f64 x (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (hypot.f64 z (sqrt.f64 z))) (/.f64 (cbrt.f64 x) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 z z z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 z z z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (fma.f64 z z z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (fma.f64 z z z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 z z z) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x (fma.f64 z z z)))) 2)) (cbrt.f64 (log.f64 (/.f64 x (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 x (fma.f64 z z z))))) (sqrt.f64 (log.f64 (/.f64 x (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (fma.f64 z z z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z z z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (fma.f64 z z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (fma.f64 z z z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 x (fma.f64 z z z)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (fma.f64 z z z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 z z z) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (fma.f64 z z z))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (log.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (*.f64 (log.f64 (fma.f64 z z z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (*.f64 (log.f64 (fma.f64 z z z)) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y z)) (/.f64 x (fma.f64 z z z)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y z)) (/.f64 x (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y z)) (/.f64 x (fma.f64 z z z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y z)) (/.f64 x (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (/.f64 z y) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (fma.f64 z z z)) (/.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 (fma.f64 z z z) x) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 z (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (*.f64 z (fma.f64 z z z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 z (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 z y) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 z (fma.f64 z z z)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 z (/.f64 (*.f64 x y) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 z z z) (*.f64 x (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (/.f64 z y) (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 (fma.f64 z z z) x) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) (*.f64 z (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (fma.f64 z z z)) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 (*.f64 z (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (fma.f64 z z z))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (/.f64 y z))) (neg.f64 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) y) (*.f64 (neg.f64 (fma.f64 z z z)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1) (*.f64 (neg.f64 (fma.f64 z z z)) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 y)) (*.f64 (fma.f64 z z z) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 y)) (*.f64 (neg.f64 (fma.f64 z z z)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) x) (*.f64 (neg.f64 z) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 z) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 x)) (*.f64 z (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 x)) (*.f64 (neg.f64 z) (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (fma.f64 z z z)) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (fma.f64 z z z)) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (fma.f64 z z z)) (sqrt.f64 z)) (sqrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (/.f64 y z)) 1) (fma.f64 z z z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (/.f64 y z)) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (cbrt.f64 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (/.f64 y z)) (hypot.f64 z (sqrt.f64 z))) (hypot.f64 z (sqrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 y z)) (neg.f64 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (neg.f64 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y z) (neg.f64 x)) (neg.f64 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (*.f64 x y)) (hypot.f64 (pow.f64 z 3/2) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 z y) (/.f64 (fma.f64 z z z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z (fma.f64 z z z)) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (/.f64 (*.f64 x y) (fma.f64 z z z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) (*.f64 x (/.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))) 2)) (cbrt.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))) (sqrt.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 y z)) (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 (*.f64 x y)) (hypot.f64 (pow.f64 z 3/2) z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (/.f64 x (fma.f64 z z z))) 1) (log.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (/.f64 y z)) 1) (log.f64 (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 (*.f64 x y) (fma.f64 z z z))) (*.f64 (log.f64 z) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 x (/.f64 y z))) (*.f64 (log.f64 (fma.f64 z z z)) 1)))))))"]],"rules":[["egg-rr",72],["egg-rr",50]],"stop":[["node limit",1]],"time":47.8271484375,"type":"rewrite"},{"count":[[182,156]],"egraph":[[3,2192,872,0.0164415],[2,551,896,0.004479625],[1,182,950,0.001231625],[0,62,1054,0.000316375]],"inputs":[["(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x z)","(+.f64 (*.f64 -1 x) (/.f64 x z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 x) (/.f64 x z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 x) (/.f64 x z))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 4)))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 4)))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x (+.f64 (pow.f64 z 2) z))","(/.f64 x (+.f64 z (*.f64 z z)))","(/.f64 x (fma.f64 z z z))","(/.f64 x z)","(+.f64 (*.f64 -1 x) (/.f64 x z))","(fma.f64 -1 x (/.f64 x z))","(-.f64 (/.f64 x z) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 x) (/.f64 x z)))","(fma.f64 z x (fma.f64 -1 x (/.f64 x z)))","(fma.f64 x z (-.f64 (/.f64 x z) x))","(fma.f64 x (+.f64 z -1) (/.f64 x z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 x) (/.f64 x z))))","(fma.f64 -1 (*.f64 x (*.f64 z z)) (fma.f64 z x (fma.f64 -1 x (/.f64 x z))))","(-.f64 (fma.f64 x z (-.f64 (/.f64 x z) x)) (*.f64 x (*.f64 z z)))","(-.f64 (fma.f64 x (fma.f64 (neg.f64 z) z z) (/.f64 x z)) x)","(-.f64 (fma.f64 x (-.f64 z (*.f64 z z)) (/.f64 x z)) x)","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 3)))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 x (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 x (pow.f64 z 3)) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z))) (/.f64 x (pow.f64 z 4)))","(+.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 x (pow.f64 z 3)) (fma.f64 -1 (/.f64 x (pow.f64 z 5)) (/.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 5))))","(+.f64 (/.f64 x (pow.f64 z 4)) (fma.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 5))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 x (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 3)))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 x (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 x (pow.f64 z 3)) (/.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z))) (/.f64 x (pow.f64 z 4)))","(+.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 x (pow.f64 z 3))) (/.f64 x (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 x (pow.f64 z 3)) (fma.f64 -1 (/.f64 x (pow.f64 z 5)) (/.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 5))) (/.f64 x (pow.f64 z 3))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 x (pow.f64 z 5))))","(+.f64 (/.f64 x (pow.f64 z 4)) (fma.f64 (+.f64 (/.f64 -1 z) 1) (/.f64 x (*.f64 z z)) (/.f64 (neg.f64 x) (pow.f64 z 5))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(/.f64 y (/.f64 (*.f64 z z) x))","(*.f64 (/.f64 x z) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z z)))","(*.f64 x (/.f64 (/.f64 y z) z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (neg.f64 (/.f64 y (/.f64 z x))))","(-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x))","(*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x))","(*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 z x)) (*.f64 x y)))","(+.f64 (*.f64 x y) (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x)))","(fma.f64 x y (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)))","(fma.f64 x y (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 z x)) (fma.f64 y x (neg.f64 (*.f64 (*.f64 x z) y)))))","(+.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x)) (-.f64 (*.f64 x y) (*.f64 x (*.f64 z y))))","(+.f64 (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)) (*.f64 x (-.f64 y (*.f64 z y))))","(fma.f64 x (-.f64 y (*.f64 z y)) (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(/.f64 (*.f64 x y) (pow.f64 z 3))","(/.f64 x (/.f64 (pow.f64 z 3) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4))))","(-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4)))) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(+.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (fma.f64 -1 (/.f64 (*.f64 x y) (pow.f64 z 6)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 5)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(/.f64 (*.f64 x y) (pow.f64 z 3))","(/.f64 x (/.f64 (pow.f64 z 3) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4))))","(-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4)))) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(+.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (fma.f64 -1 (/.f64 (*.f64 x y) (pow.f64 z 6)) (neg.f64 (/.f64 (*.f64 x y) (pow.f64 z 4))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 5)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 x y) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 x (/.f64 y (*.f64 z (fma.f64 z z z))))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))"]],"stop":[["node limit",1]],"time":37.06201171875,"type":"simplify"},{"compiler":[[2293,705]],"time":18.261962890625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))","fresh",4.377681715613725],["(/.f64 y (*.f64 (/.f64 (fma.f64 z z z) x) z))","fresh",7.993573407072481],["(/.f64 (/.f64 (*.f64 x (/.f64 y z)) (hypot.f64 z (sqrt.f64 z))) (hypot.f64 z (sqrt.f64 z)))","fresh",34.4230965612281],["(*.f64 (/.f64 y z) (*.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) 2)))","fresh",4.391492070492668],["(/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))","fresh",6.168500098543524],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","next",3.4812577331387446],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","fresh",3.576458881934042],["(/.f64 y (/.f64 z (/.f64 x (fma.f64 z z z))))","fresh",7.9786121766093645]],"compiler":[[15,9],[13,7],[18,9],[24,11],[13,7],[13,7],[15,9],[13,7],[15,9],[13,7],[18,9],[24,11],[13,7],[13,7],[15,9],[13,7]],"count":[[158,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[156,8],"picked":[1,0]}],"min-error":[1.1642444486107888],"time":39.48291015625,"type":"prune"},{"compiler":[[28,7]],"locations":[["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))",2.79136030213361,true],["(*.f64 x (/.f64 y z))",3.7222471262665433,true]],"time":5.30517578125,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","z","-inf",0.19091796875],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","z","inf",0.204833984375],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","z","0",0.173095703125],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","y","-inf",0.18017578125],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","y","inf",0.162109375],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","y","0",0.15576171875],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","x","-inf",0.18310546875],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","x","inf",0.163818359375],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","x","0",0.18408203125],["(*.f64 x (/.f64 y z))","z","-inf",0.2861328125],["(*.f64 x (/.f64 y z))","z","inf",0.345947265625],["(*.f64 x (/.f64 y z))","z","0",1.172119140625],["(*.f64 x (/.f64 y z))","y","-inf",0.2978515625],["(*.f64 x (/.f64 y z))","y","inf",0.416015625],["(*.f64 x (/.f64 y z))","y","0",0.30810546875],["(*.f64 x (/.f64 y z))","x","-inf",0.283935546875],["(*.f64 x (/.f64 y z))","x","inf",0.40283203125],["(*.f64 x (/.f64 y z))","x","0",0.377197265625]],"time":5.69287109375,"type":"series"},{"count":[[2,97]],"egraph":[[2,2530,21,0.024172875],[1,173,21,0.0031710840000000002],[0,8,21,0.000184084]],"inputs":[["(*.f64 x (/.f64 y z))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 y z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 y z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (/.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 z (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) 1) z)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (sqrt.f64 z)) (sqrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) x) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 y)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 y z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 x (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 x (/.f64 y z)))) 2)) (cbrt.f64 (log.f64 (*.f64 x (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 x (/.f64 y z))))) (sqrt.f64 (log.f64 (*.f64 x (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (/.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 x (/.f64 y z)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (/.f64 y z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 x (/.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (/.f64 y z))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (log.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 x y)) (*.f64 (log.f64 z) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (*.f64 (fma.f64 z z z) (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (/.f64 y z) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) (*.f64 x (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (/.f64 y z)) (/.f64 1 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -2)) (cbrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 2) (*.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) (sqrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (neg.f64 (/.f64 y z))) (/.f64 1 (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z z)) (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (/.f64 y z) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y z) 1) (/.f64 x (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 2) 1) (/.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) 1) (/.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 (/.f64 y z) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y z) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 x (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) -2) (/.f64 (*.f64 x (/.f64 y z)) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 2) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (cbrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 (sqrt.f64 (*.f64 x (/.f64 y z))) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))) (/.f64 x (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z z z) -1/2) (/.f64 (*.f64 x (/.f64 y z)) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) 2) (hypot.f64 z (sqrt.f64 z))) (/.f64 (cbrt.f64 (*.f64 x (/.f64 y z))) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 x (/.f64 y z)) 3) (pow.f64 (fma.f64 z z z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))) 2)) (cbrt.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))) (sqrt.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (/.f64 y z)) (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x (/.f64 y z)) 3) (pow.f64 (fma.f64 z z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (log.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 x (/.f64 y z))) 1) (log.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 x (/.f64 y z))) (*.f64 (log.f64 (fma.f64 z z z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 x (/.f64 y z))) 1) (*.f64 (log.f64 (fma.f64 z z z)) 1)))))))"]],"rules":[["egg-rr",61],["egg-rr",36]],"stop":[["node limit",1]],"time":48.030029296875,"type":"rewrite"},{"count":[[169,117]],"egraph":[[3,1637,825,0.014735292],[2,384,849,0.0031571249999999998],[1,127,900,0.0009092499999999999],[0,42,966,0.00026]],"inputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(/.f64 y (/.f64 (*.f64 z z) x))","(*.f64 (/.f64 x z) (/.f64 y z))","(/.f64 y (*.f64 (/.f64 z x) z))","(/.f64 y (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (neg.f64 (/.f64 (*.f64 y x) z)))","(-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 y (/.f64 z x)))","(*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x))","(*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 (*.f64 y x) z) (*.f64 y x)))","(+.f64 (*.f64 y x) (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 y (/.f64 z x))))","(fma.f64 y x (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)))","(fma.f64 y x (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 (*.f64 y x) z) (fma.f64 y x (neg.f64 (*.f64 y (*.f64 x z))))))","(+.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (-.f64 (-.f64 (*.f64 y x) (/.f64 y (/.f64 z x))) (*.f64 y (*.f64 x z))))","(+.f64 (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)) (*.f64 y (-.f64 x (*.f64 x z))))","(fma.f64 y (-.f64 x (*.f64 x z)) (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(*.f64 (/.f64 y (pow.f64 z 3)) x)","(*.f64 x (/.f64 y (pow.f64 z 3)))","(*.f64 y (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 (*.f64 y x) (pow.f64 z 5)))","(+.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 5)) (/.f64 y (pow.f64 z 3)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(*.f64 (/.f64 y (pow.f64 z 3)) x)","(*.f64 x (/.f64 y (pow.f64 z 3)))","(*.f64 y (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 (*.f64 y x) (pow.f64 z 5)))","(+.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 5)) (/.f64 y (pow.f64 z 3)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))"]],"stop":[["node limit",1]],"time":34.48193359375,"type":"simplify"},{"compiler":[[1810,518]],"time":12.833984375,"type":"eval"},{"alts":[["(*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))","fresh",34.8322715243664],["(/.f64 y (/.f64 z (/.f64 x (fma.f64 z z z))))","fresh",7.9786121766093645],["(/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))","fresh",4.855182231557807],["(/.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))","fresh",4.377681715613725],["(/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))","fresh",6.168500098543524],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","next",3.3483357853490903],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","done",3.4812577331387446],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","fresh",3.576458881934042]],"compiler":[[18,9],[13,7],[13,7],[15,9],[13,7],[13,7],[13,7],[15,9],[18,9],[13,7],[13,7],[15,9],[13,7],[13,7],[15,9]],"count":[[125,8]],"kept":[{"done":[0,0],"fresh":[7,4],"new":[117,3],"picked":[1,1]}],"min-error":[1.1603381986107888],"time":28.608154296875,"type":"prune"},{"compiler":[[28,7]],"locations":[["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))",2.79136030213361,true],["(/.f64 x (/.f64 z y))",4.0648212254975205,true]],"time":5.2900390625,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","y","-inf",0.158935546875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","y","inf",0.171875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","y","0",0.154052734375],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","z","-inf",0.203857421875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","z","inf",0.18505859375],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","z","0",0.19091796875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","x","-inf",0.158935546875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","x","inf",0.158935546875],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","x","0",0.177001953125],["(/.f64 x (/.f64 z y))","y","-inf",0.149169921875],["(/.f64 x (/.f64 z y))","y","inf",0.14794921875],["(/.f64 x (/.f64 z y))","y","0",0.155029296875],["(/.f64 x (/.f64 z y))","z","-inf",0.14990234375],["(/.f64 x (/.f64 z y))","z","inf",0.16796875],["(/.f64 x (/.f64 z y))","z","0",0.14013671875],["(/.f64 x (/.f64 z y))","x","-inf",0.150146484375],["(/.f64 x (/.f64 z y))","x","inf",0.172119140625],["(/.f64 x (/.f64 z y))","x","0",0.18701171875]],"time":3.1669921875,"type":"series"},{"count":[[2,116]],"egraph":[[2,2776,21,0.025226833],[1,179,21,0.0033422079999999997],[0,8,21,0.000179833]],"inputs":[["(/.f64 x (/.f64 z y))","(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (/.f64 x z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (/.f64 x z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (/.f64 x z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (/.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2) (cbrt.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (sqrt.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (/.f64 (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) z) (/.f64 (sqrt.f64 x) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 z) (/.f64 x (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) z) (/.f64 (cbrt.f64 x) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 z y)) -2) (/.f64 x (cbrt.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (/.f64 z y)) 2)) (cbrt.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z y) -1/2) (/.f64 x (sqrt.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (/.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x z) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x z) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x z) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (/.f64 x z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (/.f64 x z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (/.f64 x z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (/.f64 z y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 z (*.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 y (/.f64 x z)))) 2)) (cbrt.f64 (log.f64 (*.f64 y (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 y (/.f64 x z))))) (sqrt.f64 (log.f64 (*.f64 y (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (/.f64 (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (/.f64 x z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (/.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (/.f64 x z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (/.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (/.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 y (/.f64 x z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 y (/.f64 x z)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 y (/.f64 x z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 y (/.f64 x z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 z (*.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 y (/.f64 x z))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (/.f64 y z) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (/.f64 x z)) (/.f64 1 (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) -2)) (cbrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2) (*.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) (sqrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (*.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (/.f64 y z)) (/.f64 1 (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z z)) (*.f64 y (/.f64 x z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x z) (*.f64 y (/.f64 1 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (fma.f64 z z z)) (/.f64 (cbrt.f64 x) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (fma.f64 z z z)) (/.f64 (sqrt.f64 x) (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (/.f64 y z) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2) 1) (/.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) 1) (/.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) 1) (/.f64 y (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 (/.f64 y z) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) -2) (/.f64 (*.f64 y (/.f64 x z)) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (cbrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 (sqrt.f64 (*.f64 y (/.f64 x z))) (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2)) (/.f64 y (cbrt.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z z z) -1/2) (/.f64 (*.f64 y (/.f64 x z)) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) 2) (hypot.f64 z (sqrt.f64 z))) (/.f64 (cbrt.f64 (*.f64 y (/.f64 x z))) (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x z) (hypot.f64 z (sqrt.f64 z))) (/.f64 y (hypot.f64 z (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 y (/.f64 x z)) 3) (pow.f64 (fma.f64 z z z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 z (*.f64 x y)) (fma.f64 z z z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 z y) (fma.f64 z z z)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 2)) (cbrt.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))) (sqrt.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y (/.f64 x z)) (neg.f64 (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 y (/.f64 x z)) 3) (pow.f64 (fma.f64 z z z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 z z z) (*.f64 y (/.f64 x z)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))) 1) 1))))))"]],"rules":[["egg-rr",59],["egg-rr",57]],"stop":[["node limit",1]],"time":48.722900390625,"type":"rewrite"},{"count":[[188,135]],"egraph":[[3,1637,825,0.014701708],[2,384,849,0.0031458750000000002],[1,127,900,0.000903542],[0,42,966,0.000261]],"inputs":[["(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) z)","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) z)","(/.f64 y (/.f64 z x))","(*.f64 x (/.f64 y z))","(*.f64 y (/.f64 x z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(/.f64 y (/.f64 (*.f64 z z) x))","(*.f64 (/.f64 x z) (/.f64 y z))","(/.f64 y (*.f64 (/.f64 z x) z))","(/.f64 y (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (neg.f64 (/.f64 (*.f64 y x) z)))","(-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 y (/.f64 z x)))","(*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x))","(*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 (*.f64 y x) z) (*.f64 y x)))","(+.f64 (*.f64 y x) (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (/.f64 y (/.f64 z x))))","(fma.f64 y x (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)))","(fma.f64 y x (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 (*.f64 y x) z) (fma.f64 y x (neg.f64 (*.f64 y (*.f64 x z))))))","(+.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (-.f64 (-.f64 (*.f64 y x) (/.f64 y (/.f64 z x))) (*.f64 y (*.f64 x z))))","(+.f64 (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)) (*.f64 y (-.f64 x (*.f64 x z))))","(fma.f64 y (-.f64 x (*.f64 x z)) (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(*.f64 (/.f64 y (pow.f64 z 3)) x)","(*.f64 x (/.f64 y (pow.f64 z 3)))","(*.f64 y (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 (*.f64 y x) (pow.f64 z 5)))","(+.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 5)) (/.f64 y (pow.f64 z 3)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(*.f64 (/.f64 y (pow.f64 z 3)) x)","(*.f64 x (/.f64 y (pow.f64 z 3)))","(*.f64 y (/.f64 x (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 (*.f64 y x) (pow.f64 z 5)))","(+.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (*.f64 (/.f64 y (pow.f64 z 5)) x))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 x (/.f64 x z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (*.f64 (/.f64 y (pow.f64 z 5)) x) (-.f64 (-.f64 (*.f64 (/.f64 y (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 5)) (/.f64 y (pow.f64 z 3)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 z (+.f64 z (*.f64 z z))))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(/.f64 y (*.f64 (/.f64 z x) (fma.f64 z z z)))"]],"stop":[["node limit",1]],"time":34.69091796875,"type":"simplify"},{"compiler":[[2117,614]],"time":15.551025390625,"type":"eval"},{"alts":[["(*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))","fresh",34.8322715243664],["(/.f64 y (/.f64 z (/.f64 x (fma.f64 z z z))))","fresh",7.9786121766093645],["(/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))","fresh",4.855182231557807],["(/.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))","fresh",4.377681715613725],["(/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))","fresh",6.168500098543524],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","done",3.3483357853490903],["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","done",3.4812577331387446],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","next",3.576458881934042]],"compiler":[[18,9],[13,7],[13,7],[15,9],[13,7],[13,7],[13,7],[15,9],[18,9],[13,7],[13,7],[15,9],[13,7],[15,9]],"count":[[143,8]],"kept":[{"done":[1,1],"fresh":[6,6],"new":[135,0],"picked":[1,1]}],"min-error":[1.1603381986107888],"time":36.154052734375,"type":"prune"},{"compiler":[[42,10]],"locations":[["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))",0.3040372368529345,true],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))",2.141579476922809,true],["(/.f64 (fma.f64 z z z) x)",3.788803787183508,true]],"time":6.840087890625,"type":"localize"},{"count":[[3,96]],"series":[["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","y","-inf",0.19287109375],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","y","inf",0.1650390625],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","y","0",0.158935546875],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","x","-inf",0.2041015625],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","x","inf",0.48095703125],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","x","0",0.173828125],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","z","-inf",0.194091796875],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","z","inf",0.19091796875],["(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","z","0",0.18310546875],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","y","-inf",0.322021484375],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","y","inf",0.2509765625],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","y","0",0.349853515625],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","x","-inf",0.323974609375],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","x","inf",0.260986328125],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","x","0",0.35498046875],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","z","-inf",0.427978515625],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","z","inf",0.2890625],["(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","z","0",0.43115234375],["(/.f64 (fma.f64 z z z) x)","x","-inf",0.27392578125],["(/.f64 (fma.f64 z z z) x)","x","inf",0.16796875],["(/.f64 (fma.f64 z z z) x)","x","0",0.31689453125],["(/.f64 (fma.f64 z z z) x)","z","-inf",0.429931640625],["(/.f64 (fma.f64 z z z) x)","z","inf",0.448974609375],["(/.f64 (fma.f64 z z z) x)","z","0",0.393798828125]],"time":7.322021484375,"type":"series"},{"count":[[3,154]],"egraph":[[2,3132,36,0.026617375000000002],[1,217,36,0.003926833],[0,10,39,0.000256625]],"inputs":[["(/.f64 (fma.f64 z z z) x)","(*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y))","(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 z z z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 z z z) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 z z z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 z z z) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 z z z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 z z z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z z z) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 z z z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 z z z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 2)) (cbrt.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2) (*.f64 (cbrt.f64 (fma.f64 z z z)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) x)) (sqrt.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z (sqrt.f64 z)) (*.f64 (hypot.f64 z (sqrt.f64 z)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 z z z)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (fma.f64 z z z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 z z z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 z (sqrt.f64 z)) 1) (/.f64 (hypot.f64 z (sqrt.f64 z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 z z z) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 z (sqrt.f64 z)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (hypot.f64 z (sqrt.f64 z)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (fma.f64 z z z) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 z z z)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (fma.f64 z z z)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z z z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 z z z) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (fma.f64 z z z)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 z z z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 z z z) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 z z z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 z z z) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (fma.f64 z z z))) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 z y)) (/.f64 (fma.f64 z z z) x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 z y)) (/.f64 (fma.f64 z z z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 z y)) (/.f64 (fma.f64 z z z) x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 z y)) (/.f64 (fma.f64 z z z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 (/.f64 x (fma.f64 z z z)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 z (*.f64 y (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z z z) (*.f64 x (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z z z) (/.f64 (*.f64 x y) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z z z) (/.f64 x (/.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z z z) x) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z y) (/.f64 x (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x y) (*.f64 z (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 z (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 2)) (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z z z)) (*.f64 (/.f64 y z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z z z) x) (neg.f64 (/.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 z) (*.f64 (/.f64 x (fma.f64 z z z)) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (fma.f64 z z z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 (fma.f64 z z z) x)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (fma.f64 z z z))) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (fma.f64 z z z) (/.f64 z y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z (/.f64 (fma.f64 z z z) x))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z z z)) 1) (*.f64 (neg.f64 x) (/.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z z z)) z) (*.f64 (neg.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z z z) (neg.f64 z)) (*.f64 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z z z)) (neg.f64 z)) (*.f64 (neg.f64 x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (fma.f64 z z z)) (*.f64 (neg.f64 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) 1) (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (neg.f64 (fma.f64 z z z))) (*.f64 y (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (neg.f64 (fma.f64 z z z))) (*.f64 (neg.f64 y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (fma.f64 z z z) (/.f64 z y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (/.f64 (fma.f64 z z z) x)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (/.f64 (fma.f64 z z z) x)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z (/.f64 (fma.f64 z z z) x)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (fma.f64 z z z)) (/.f64 z y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 z) (/.f64 (fma.f64 z z z) x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 z z z) x) (neg.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z y) (neg.f64 (fma.f64 z z z))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) (*.f64 z (fma.f64 z z z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (*.f64 z (/.f64 (fma.f64 z z z) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 z y)) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) 2) (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (neg.f64 (/.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (fma.f64 z z z)) 1) (/.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 z (fma.f64 z z z))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (fma.f64 z z z) (/.f64 z y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 z (/.f64 (fma.f64 z z z) x))) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (fma.f64 z z z)) z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (fma.f64 z z z)) (neg.f64 z)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) -2) (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 (/.f64 (fma.f64 z z z) x) (neg.f64 (/.f64 z y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (fma.f64 z z z) (*.f64 (/.f64 y z) x)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (/.f64 y z) (/.f64 (fma.f64 z z z) x)))) 2))))))"]],"rules":[["egg-rr",42],["egg-rr",69],["egg-rr",43]],"stop":[["node limit",1]],"time":52.18896484375,"type":"rewrite"},{"count":[[250,186]],"egraph":[[3,1757,1296,0.015489624],[2,429,1485,0.0035615409999999997],[1,144,1635,0.001023041],[0,50,1725,0.000303333]],"inputs":[["(/.f64 z x)","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(/.f64 (pow.f64 z 2) x)","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(/.f64 (pow.f64 z 2) x)","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (pow.f64 z 2) (*.f64 y x))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(/.f64 (pow.f64 z 3) (*.f64 y x))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(/.f64 (pow.f64 z 3) (*.f64 y x))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 z x)","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(/.f64 (pow.f64 z 2) x)","(/.f64 (*.f64 z z) x)","(/.f64 z (/.f64 x z))","(*.f64 (/.f64 z x) z)","(*.f64 z (/.f64 z x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(/.f64 (pow.f64 z 2) x)","(/.f64 (*.f64 z z) x)","(/.f64 z (/.f64 x z))","(*.f64 (/.f64 z x) z)","(*.f64 z (/.f64 z x))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(+.f64 (/.f64 z x) (/.f64 (pow.f64 z 2) x))","(+.f64 (/.f64 z x) (/.f64 (*.f64 z z) x))","(+.f64 (/.f64 z x) (/.f64 z (/.f64 x z)))","(+.f64 (/.f64 z x) (*.f64 (/.f64 z x) z))","(+.f64 (/.f64 z x) (*.f64 z (/.f64 z x)))","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (+.f64 (pow.f64 z 2) z) x)","(/.f64 (+.f64 z (*.f64 z z)) x)","(/.f64 (fma.f64 z z z) x)","(/.f64 (pow.f64 z 2) (*.f64 y x))","(/.f64 (*.f64 z z) (*.f64 x y))","(*.f64 (/.f64 z x) (/.f64 z y))","(/.f64 z (*.f64 x (/.f64 y z)))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (pow.f64 z 3) (*.f64 y x))","(/.f64 (pow.f64 z 3) (*.f64 x y))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (pow.f64 z 3) (*.f64 y x))","(/.f64 (pow.f64 z 3) (*.f64 x y))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(+.f64 (/.f64 (pow.f64 z 3) (*.f64 y x)) (/.f64 (pow.f64 z 2) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 (+.f64 (pow.f64 z 2) z) z) (*.f64 y x))","(+.f64 (/.f64 (*.f64 z z) (*.f64 x y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(+.f64 (*.f64 (/.f64 z x) (/.f64 z y)) (/.f64 (pow.f64 z 3) (*.f64 x y)))","(*.f64 (/.f64 z x) (+.f64 (/.f64 z y) (/.f64 z (/.f64 y z))))","(*.f64 (/.f64 (/.f64 z x) y) (fma.f64 z z z))","(/.f64 (*.f64 y x) (pow.f64 z 2))","(/.f64 y (/.f64 (*.f64 z z) x))","(*.f64 (/.f64 x z) (/.f64 y z))","(*.f64 x (/.f64 (/.f64 y z) z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 y x) z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (neg.f64 (/.f64 y (/.f64 z x))))","(-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x))","(*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x))","(*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (*.f64 y x)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 z x)) (*.f64 x y)))","(+.f64 (*.f64 x y) (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x)))","(fma.f64 x y (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)))","(fma.f64 x y (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 y (*.f64 z x))))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (fma.f64 -1 (/.f64 y (/.f64 z x)) (fma.f64 y x (neg.f64 (*.f64 y (*.f64 z x))))))","(+.f64 (-.f64 (*.f64 (/.f64 x z) (/.f64 y z)) (*.f64 (/.f64 y z) x)) (-.f64 (*.f64 x y) (*.f64 z (*.f64 x y))))","(+.f64 (*.f64 (/.f64 y z) (-.f64 (/.f64 x z) x)) (*.f64 x (-.f64 y (*.f64 z y))))","(fma.f64 x (-.f64 y (*.f64 z y)) (*.f64 (/.f64 x z) (-.f64 (/.f64 y z) y)))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(/.f64 y (/.f64 (pow.f64 z 3) x))","(/.f64 (*.f64 x y) (pow.f64 z 3))","(*.f64 x (/.f64 y (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(+.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (-.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 5)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (pow.f64 z 3))","(/.f64 y (/.f64 (pow.f64 z 3) x))","(/.f64 (*.f64 x y) (pow.f64 z 3))","(*.f64 x (/.f64 y (pow.f64 z 3)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x))","(*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4))))","(*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 y (/.f64 (pow.f64 z 4) x)))) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(+.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 4)) x)) (/.f64 y (/.f64 (pow.f64 z 5) x)))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 x (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 4)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 x (pow.f64 z 3)) (-.f64 y (/.f64 y z))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 5)) (+.f64 (/.f64 (*.f64 y x) (pow.f64 z 3)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 6))) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 z 4))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 x y) (pow.f64 z 6)) (/.f64 y (/.f64 (pow.f64 z 4) x))))))","(+.f64 (/.f64 y (/.f64 (pow.f64 z 5) x)) (-.f64 (-.f64 (/.f64 (*.f64 x y) (pow.f64 z 3)) (*.f64 (/.f64 y (pow.f64 z 6)) x)) (*.f64 (/.f64 y (pow.f64 z 4)) x)))","(-.f64 (*.f64 x (+.f64 (/.f64 y (pow.f64 z 3)) (/.f64 y (pow.f64 z 5)))) (*.f64 x (+.f64 (/.f64 y (pow.f64 z 4)) (/.f64 y (pow.f64 z 6)))))","(fma.f64 (/.f64 y (pow.f64 z 5)) x (*.f64 (/.f64 y (pow.f64 z 3)) (-.f64 (-.f64 x (/.f64 x (pow.f64 z 3))) (/.f64 x z))))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 (*.f64 y x) (*.f64 (+.f64 (pow.f64 z 2) z) z))","(*.f64 (/.f64 y (+.f64 z (*.f64 z z))) (/.f64 x z))","(*.f64 (/.f64 y (fma.f64 z z z)) (/.f64 x z))","(*.f64 x (/.f64 (/.f64 y z) (fma.f64 z z z)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))"]],"stop":[["node limit",1]],"time":42.3349609375,"type":"simplify"},{"compiler":[[2865,939]],"time":21.505859375,"type":"eval"},{"alts":[["(/.f64 1 (*.f64 (+.f64 (/.f64 z x) (*.f64 z (/.f64 z x))) (/.f64 z y)))","fresh",8.418405693091696],["(/.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))","fresh",4.377681715613725],["(/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))","fresh",6.168500098543524],["(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","fresh",4.183350615355387],["(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","done",3.3483357853490903],["(*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))","fresh",34.8322715243664]],"compiler":[[18,10],[15,9],[13,7],[13,7],[13,7],[18,9]],"count":[[194,6]],"kept":[{"done":[2,1],"fresh":[5,3],"new":[186,2],"picked":[1,0]}],"min-error":[0.0078125],"time":55.334228515625,"type":"prune"},{"accuracy":[1.465365075843398],"baseline":[3.3483357853490903],"branch":[["x",3.3483357853490907,1],["y",2.229268144660713,2],["z",3.3483357853490903,1],["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))",1.465365075843398,2],["(*.f64 x y)",2.2222674761456833,3],["(*.f64 (*.f64 z z) (+.f64 z 1))",3.3483357853490903,1]],"compiler":[[4,3],[4,3],[4,3],[14,9],[6,4],[10,7],[184,54]],"count":[[15,2]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (/.f64 z x) (*.f64 z (/.f64 z x))) (/.f64 z y)))","(*.f64 (/.f64 x (fma.f64 z z z)) (/.f64 y z))","(*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 z))) (/.f64 (/.f64 y z) (hypot.f64 z (sqrt.f64 z))))","(/.f64 (*.f64 y (/.f64 x z)) (fma.f64 z z z))","(/.f64 (/.f64 x (/.f64 z y)) (fma.f64 z z z))","(/.f64 (*.f64 (neg.f64 y) (/.f64 x (fma.f64 z z z))) (neg.f64 z))","(/.f64 y (*.f64 (/.f64 (fma.f64 z z z) x) z))","(/.f64 (/.f64 (*.f64 x (/.f64 y z)) (hypot.f64 z (sqrt.f64 z))) (hypot.f64 z (sqrt.f64 z)))","(*.f64 (/.f64 y z) (*.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z z z))) 2)))","(/.f64 x (*.f64 (fma.f64 z z z) (/.f64 z y)))","(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 1 (*.f64 (/.f64 (fma.f64 z z z) x) (/.f64 z y)))","(/.f64 y (/.f64 z (/.f64 x (fma.f64 z z z))))","(*.f64 (/.f64 y z) (/.f64 x (fma.f64 z z z)))","(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))"]],"link":["."],"name":["Statistics.Distribution.Beta:$cvariance from math-functions-0.1.5.2"],"oracle":[41.87233924986698],"outputs":[["(/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z))","(/.f64 1 (*.f64 (+.f64 (/.f64 z x) (*.f64 z (/.f64 z x))) (/.f64 z y)))"]],"time":48.02978515625,"times":[["x",5.654052734375],["y",11.159912109375],["z",5.5849609375],["(/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1)))",6.141845703125],["(*.f64 x y)",13.27197265625],["(*.f64 (*.f64 z z) (+.f64 z 1))",3.610107421875]],"type":"regimes"},{"bstep":[[3.5669304306559523e+304,7.893512972213087e+306,0.07177734375]],"compiler":[[6,5],[14,9]],"method":["left-value"],"time":0.191162109375,"type":"bsearch"},{"compiler":[[42,23]],"egraph":[[1,33,57,7.533400000000001e-5],[0,24,57,4.3292e-5]],"inputs":[["(if (<=.f64 (/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1))) 49999999999999996962677625276823109300201436100586624765953857856616022815066169514216546287202538742184280590280810862893585968713180152651178994204334413874936507208410055205338551265812204529218599012742757995383198412754109163297745561348039749026730174593312862032038021904229799310374521740690718720) (/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z)) (/.f64 1 (*.f64 (+.f64 (/.f64 z x) (*.f64 z (/.f64 z x))) (/.f64 z y))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (*.f64 x y) (*.f64 (*.f64 z z) (+.f64 z 1))) 49999999999999996962677625276823109300201436100586624765953857856616022815066169514216546287202538742184280590280810862893585968713180152651178994204334413874936507208410055205338551265812204529218599012742757995383198412754109163297745561348039749026730174593312862032038021904229799310374521740690718720) (/.f64 (*.f64 x (/.f64 y z)) (fma.f64 z z z)) (/.f64 1 (*.f64 (+.f64 (/.f64 z x) (*.f64 z (/.f64 z x))) (/.f64 z y))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.89794921875,"type":"simplify"},{"time":0.02490234375,"type":"soundness"},{"compiler":[[42,23],[42,23],[42,23]],"remove-preprocessing":[[]],"time":22.152099609375,"type":"end"}]