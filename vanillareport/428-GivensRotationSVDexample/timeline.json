[{"compiler":[[28,20]],"method":["search"],"sampling":[[12,0.35931999222105043,0.1270563092123344,0.5136236985666152],[11,0.3557576657945364,0.13061863563884846,0.5136236985666152],[10,0.3543327352239308,0.1320435662094541,0.5136236985666152],[9,0.3476830592277712,0.13869324220561366,0.5136236985666152],[8,0.34578315180029706,0.1405931496330878,0.5136236985666152],[7,0.3343837072354521,0.15199259419793276,0.5136236985666152],[6,0.3343837072354521,0.15199259419793276,0.5136236985666152],[5,0.3039851883958655,0.18239111303751931,0.5136236985666152],[4,0.3039851883958655,0.18239111303751931,0.5136236985666152],[3,0.24318815071669242,0.24318815071669242,0.5136236985666152],[2,0.24318815071669242,0.24318815071669242,0.5136236985666152],[1,0.0,0.48637630143338484,0.5136236985666152],[0,0.0,0.48637630143338484,0.5136236985666152]],"time":125.98095703125,"type":"analyze"},{"outcomes":[["body",4096,"valid",75.81396484375,265],["body",512,"valid",28.677734375,253],["body",1024,"valid",93.826416015625,564],["body",2048,"valid",190.02783203125,852],["body",256,"valid",376.8818359375,6322]],"time":774.168212890625,"type":"sample"},{"compiler":[[19,14]],"egraph":[[0,2,2,1.583e-6],[6,94,44,0.0011492920000000001],[5,92,44,0.0009687090000000001],[4,88,44,0.0007871670000000001],[3,84,44,0.000606209],[2,70,44,0.000430459],[1,50,48,0.000265292],[0,24,48,0.000109417]],"inputs":[["0","1"],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 p (sqrt.f64 (+.f64 (*.f64 (*.f64 4 x) x) (*.f64 p p)))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 (*.f64 4 p) p (*.f64 x x)))))))","(sqrt.f64 (+.f64 1/2 (/.f64 (*.f64 x 1/2) (sqrt.f64 (fma.f64 x x (*.f64 p (*.f64 4 p)))))))","(sqrt.f64 (fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 p (*.f64 4 p))))) 1/2))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 p (sqrt.f64 (+.f64 (*.f64 (*.f64 4 x) x) (*.f64 p p)))))))","(sqrt.f64 (+.f64 1/2 (*.f64 (/.f64 p (sqrt.f64 (fma.f64 (*.f64 x 4) x (*.f64 p p)))) 1/2)))","(sqrt.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 p (sqrt.f64 (fma.f64 4 (*.f64 x x) (*.f64 p p)))))))","(sqrt.f64 (fma.f64 1/2 (/.f64 p (sqrt.f64 (fma.f64 4 (*.f64 x x) (*.f64 p p)))) 1/2))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":24.927001953125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,53,22,0.000690624],[5,52,22,0.000585083],[4,50,22,0.000477999],[3,48,22,0.00037279100000000003],[2,41,22,0.000269125],[1,31,24,0.000168666],[0,15,24,7.7583e-5]],"inputs":[["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))","(sqrt.f64 (+.f64 1/2 (*.f64 (/.f64 x (sqrt.f64 (fma.f64 (*.f64 4 p) p (*.f64 x x)))) 1/2)))","(sqrt.f64 (+.f64 1/2 (*.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))))))","(sqrt.f64 (fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2))"]],"stop":[["saturated",1]],"time":11.14697265625,"type":"simplify"},{"compiler":[[34,24]],"time":0.534912109375,"type":"eval"},{"alts":[["(sqrt.f64 (fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2))","next",16.21845430820683]],"compiler":[[17,12],[17,12]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[16.21845430820683],"time":0.998046875,"type":"prune"},{"compiler":[[71,36]],"locations":[["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))",0.0078125,true],["(*.f64 4 (*.f64 p p))",0.029628759768442016,true],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)",0.4553281980626605,true],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))",14.428765703924132,true]],"time":15.248046875,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","p","-inf",0.301025390625],["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","p","inf",0.489990234375],["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","p","0",0.320068359375],["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","x","-inf",0.302001953125],["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","x","inf",0.27490234375],["(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))","x","0",0.5849609375],["(*.f64 4 (*.f64 p p))","p","-inf",0.181884765625],["(*.f64 4 (*.f64 p p))","p","inf",0.7099609375],["(*.f64 4 (*.f64 p p))","p","0",0.35107421875],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","p","-inf",0.264892578125],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","p","inf",0.592041015625],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","p","0",0.784912109375],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","x","-inf",1.04296875],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","x","inf",0.827880859375],["(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","x","0",0.633056640625],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","p","-inf",0.2958984375],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","p","inf",0.341064453125],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","p","0",0.921142578125],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","x","-inf",0.36181640625],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","x","inf",0.494140625],["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","x","0",0.60791015625]],"time":11.098876953125,"type":"series"},{"count":[[4,148]],"egraph":[[2,2694,38,0.024843042000000003],[1,228,38,0.003939792],[0,11,56,0.000344584]],"inputs":[["(sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))","(fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2)","(*.f64 4 (*.f64 p p))","(/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 x (*.f64 p 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 x (*.f64 p 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 x (*.f64 p 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 x (*.f64 p 2))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 x (*.f64 p 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 x (*.f64 p 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (*.f64 p 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 x (*.f64 p 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 x (*.f64 p 2))) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2)) (cbrt.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 x (*.f64 p 2))) (sqrt.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (*.f64 p 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/2) (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 4) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 6) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 x (*.f64 p 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 x (*.f64 p 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 x (*.f64 p 2)))) 2)) (cbrt.f64 (log.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (hypot.f64 x (*.f64 p 2))))) (sqrt.f64 (log.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 x (*.f64 p 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 x (*.f64 p 2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 p 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 x (*.f64 p 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (hypot.f64 x (*.f64 p 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (hypot.f64 x (*.f64 p 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (hypot.f64 x (*.f64 p 2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 2) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 3) 1/8) (+.f64 (pow.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 2) (-.f64 1/4 (*.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 2) 1/4) (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 2)) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 p (*.f64 4 p)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 4) (*.f64 p p))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 4) (*.f64 p p)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 4) (*.f64 p p)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 4) (*.f64 p p)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 p (*.f64 4 p)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 p (*.f64 4 p)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 p 4) 16) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 p 2) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 p (*.f64 4 p))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 p 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 p (*.f64 4 p))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 p (*.f64 4 p)))) 2)) (cbrt.f64 (log.f64 (*.f64 p (*.f64 4 p)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 p (*.f64 4 p))))) (sqrt.f64 (log.f64 (*.f64 p (*.f64 4 p)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 p 4) 16))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 4) (*.f64 p p)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 p (*.f64 4 p)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 p 2) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 p (*.f64 4 p))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 p (*.f64 4 p))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 p (*.f64 4 p))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 p (*.f64 4 p))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 p 2) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 p (*.f64 4 p)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 p 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 p (*.f64 4 p))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))) (*.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 2) (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) (sqrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 x (*.f64 p 2))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (hypot.f64 x (*.f64 p 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 x (*.f64 p 2))) -2) (/.f64 x (cbrt.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2))) (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) 2))) (/.f64 (sqrt.f64 x) (cbrt.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 x (*.f64 p 2)) -1/2) (/.f64 x (sqrt.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (hypot.f64 x (*.f64 p 2)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 x (*.f64 p 2)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (hypot.f64 x (*.f64 p 2)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (hypot.f64 x (*.f64 p 2)) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 2)) (cbrt.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))) (sqrt.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (hypot.f64 x (*.f64 p 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (hypot.f64 x (*.f64 p 2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (hypot.f64 x (*.f64 p 2)) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (hypot.f64 x (*.f64 p 2)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (log.f64 (hypot.f64 x (*.f64 p 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (*.f64 (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (*.f64 (*.f64 2 (log.f64 (hypot.f64 x (*.f64 p 2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (*.f64 (log.f64 (hypot.f64 x (*.f64 p 2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (*.f64 (log.f64 (hypot.f64 x (*.f64 p 2))) 1)))))))"]],"rules":[["egg-rr",52],["egg-rr",24],["egg-rr",34],["egg-rr",38]],"stop":[["node limit",1]],"time":52.900146484375,"type":"rewrite"},{"count":[[232,250]],"egraph":[[2,2520,2074,0.017083917],[1,727,2264,0.005048792],[0,234,2375,0.001124833]],"inputs":[["(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 -1 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(*.f64 -2 p)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 p 2) (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))))) (+.f64 (*.f64 -256 (pow.f64 p 8)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2))) 2))) (pow.f64 x 8))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 x 2) (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))))))","(+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2))) (*.f64 64 (/.f64 1 (pow.f64 x 8)))) (*.f64 (pow.f64 x 2) (pow.f64 p 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 x 2) (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2))))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (+.f64 (*.f64 -1/4 (/.f64 x p)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (pow.f64 p 2))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 (pow.f64 x 5) p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 p 8))) (*.f64 -1/8 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (pow.f64 p 2)))) (*.f64 p (pow.f64 x 7)))) (+.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 (pow.f64 x 5) p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))) 1)","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2)))) (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2))) (*.f64 64 (/.f64 1 (pow.f64 x 8)))) (*.f64 (pow.f64 x 2) (pow.f64 p 6)))) (+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2)))) (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5)))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 1/256 (pow.f64 x 6))) x) (pow.f64 p 7))))))","(*.f64 -1/2 (/.f64 x p))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 1/256 (pow.f64 x 6))) x) (pow.f64 p 7)) (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(fma.f64 2 p (*.f64 1/4 (/.f64 x (/.f64 p x))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 2 p (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 2 p (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(fma.f64 2 (/.f64 p (/.f64 x p)) x)","(fma.f64 2 (*.f64 (/.f64 p x) p) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 p (/.f64 x p)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (*.f64 (/.f64 p x) p) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 p (/.f64 x p)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (*.f64 (/.f64 p x) p) x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))","(fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))","(-.f64 (*.f64 (/.f64 p (/.f64 x p)) -2) x)","(-.f64 (*.f64 (*.f64 (/.f64 p x) p) -2) x)","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x)))","(fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x)))","(-.f64 (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (*.f64 (/.f64 p (/.f64 x p)) -2)) x)","(fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (-.f64 (*.f64 (*.f64 (/.f64 p x) p) -2) x))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) x)) (*.f64 -1 x))))","(fma.f64 -4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 -2 (/.f64 (*.f64 p p) x) (neg.f64 x))))","(fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) -4 (-.f64 (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (*.f64 (/.f64 p (/.f64 x p)) -2)) x))","(fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) -4 (fma.f64 2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (-.f64 (*.f64 (*.f64 (/.f64 p x) p) -2) x)))","x","(+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)","(fma.f64 2 (/.f64 (*.f64 p p) x) x)","(fma.f64 2 (/.f64 p (/.f64 x p)) x)","(fma.f64 2 (*.f64 (/.f64 p x) p) x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 (*.f64 p p) x) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (/.f64 p (/.f64 x p)) x))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 2 (*.f64 (/.f64 p x) p) x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) x)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 (*.f64 p p) x) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (/.f64 p (/.f64 x p)) x)))","(fma.f64 -2 (/.f64 (pow.f64 p 4) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 p 6) (pow.f64 x 5)) (fma.f64 2 (*.f64 (/.f64 p x) p) x)))","(*.f64 2 p)","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 2 p))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (*.f64 2 p))","(fma.f64 2 p (*.f64 1/4 (/.f64 x (/.f64 p x))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 2 p (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p)))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 2 p (*.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))))))","(fma.f64 1/4 (/.f64 x (/.f64 p x)) (fma.f64 1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 2 p))))","(*.f64 -2 p)","(*.f64 p -2)","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (*.f64 -2 p))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (*.f64 p -2))","(fma.f64 p -2 (*.f64 (/.f64 x (/.f64 p x)) -1/4))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p)))","(fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 p -2)))","(fma.f64 (/.f64 x (/.f64 p x)) -1/4 (fma.f64 p -2 (/.f64 (*.f64 (pow.f64 x 4) 1/64) (pow.f64 p 3))))","(+.f64 (*.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) p)) (+.f64 (*.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3))) (*.f64 -2 p))))","(fma.f64 -1/512 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) (fma.f64 -1/4 (/.f64 (*.f64 x x) p) (fma.f64 1/64 (/.f64 (pow.f64 x 4) (pow.f64 p 3)) (*.f64 p -2))))","(fma.f64 (/.f64 (pow.f64 x 6) (pow.f64 p 5)) -1/512 (fma.f64 (/.f64 x (/.f64 p x)) -1/4 (fma.f64 p -2 (/.f64 (*.f64 (pow.f64 x 4) 1/64) (pow.f64 p 3)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(fma.f64 1/4 (/.f64 x p) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 1/4 (/.f64 x p) (/.f64 (*.f64 (pow.f64 x 3) -1/32) (pow.f64 p 3))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 1/4 (/.f64 p x))))","(+.f64 (*.f64 1/2 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 1/2 (*.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5))) (+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 1/2 (*.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5))) (+.f64 1/2 (fma.f64 1/4 (/.f64 x p) (/.f64 (*.f64 (pow.f64 x 3) -1/32) (pow.f64 p 3)))))","(fma.f64 1/2 (*.f64 p (*.f64 (pow.f64 x 5) (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)))) (+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 1/4 (/.f64 p x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(fma.f64 -1/4 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)) (+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) 1) (*.f64 (/.f64 p x) (/.f64 p x)))","(fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x))))","(+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","(fma.f64 -1/4 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)) (+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/4 (/.f64 (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2))))) (pow.f64 x 6))))))","(+.f64 (-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) 1) (*.f64 (/.f64 p x) (/.f64 p x))) (*.f64 -1/4 (/.f64 (fma.f64 (pow.f64 p 6) 64 (*.f64 (*.f64 p p) (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))))) (pow.f64 x 6))))","(+.f64 1 (-.f64 (*.f64 -1/4 (+.f64 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (/.f64 (fma.f64 2 (*.f64 p (*.f64 p (*.f64 (pow.f64 p 4) -12))) (*.f64 (pow.f64 p 6) 64)) (pow.f64 x 6)))) (*.f64 (/.f64 p x) (/.f64 p x))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/4 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4))))","(fma.f64 1/4 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x)))","(fma.f64 1/4 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))))","(fma.f64 1/4 (/.f64 (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2))))) (pow.f64 x 6)) (+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/4 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)))))","(fma.f64 1/4 (/.f64 (fma.f64 (pow.f64 p 6) 64 (*.f64 (*.f64 p p) (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))))) (pow.f64 x 6)) (fma.f64 1/4 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x))))","(fma.f64 1/4 (/.f64 (fma.f64 2 (*.f64 p (*.f64 p (*.f64 (pow.f64 p 4) -12))) (*.f64 (pow.f64 p 6) 64)) (pow.f64 x 6)) (fma.f64 1/4 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x))))","(+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 p 2) (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))))) (+.f64 (*.f64 -256 (pow.f64 p 8)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2))) 2))) (pow.f64 x 8))) (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))))","(fma.f64 1/4 (/.f64 (fma.f64 2 (*.f64 (*.f64 p p) (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)))))) (fma.f64 -256 (pow.f64 p 8) (pow.f64 (*.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) -1/2) 2))) (pow.f64 x 8)) (fma.f64 1/4 (/.f64 (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2))))) (pow.f64 x 6)) (+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/4 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4))))))","(fma.f64 1/4 (/.f64 (fma.f64 2 (+.f64 (*.f64 64 (pow.f64 p 8)) (*.f64 (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))) (pow.f64 p 4))) (fma.f64 -256 (pow.f64 p 8) (pow.f64 (*.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) -1/2) 2))) (pow.f64 x 8)) (fma.f64 1/4 (/.f64 (fma.f64 (pow.f64 p 6) 64 (*.f64 (*.f64 p p) (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))))) (pow.f64 x 6)) (fma.f64 1/4 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x)))))","(fma.f64 1/4 (/.f64 (fma.f64 2 (+.f64 (*.f64 64 (pow.f64 p 8)) (*.f64 (pow.f64 p 4) (*.f64 2 (*.f64 (pow.f64 p 4) -12)))) (fma.f64 -256 (pow.f64 p 8) (pow.f64 (*.f64 (*.f64 (pow.f64 p 4) -12) -1/2) 2))) (pow.f64 x 8)) (fma.f64 1/4 (/.f64 (fma.f64 2 (*.f64 p (*.f64 p (*.f64 (pow.f64 p 4) -12))) (*.f64 (pow.f64 p 6) 64)) (pow.f64 x 6)) (fma.f64 1/4 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (*.f64 (/.f64 p x) (/.f64 p x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 x 2) (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))))))","(+.f64 1 (fma.f64 1/4 (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 (*.f64 x x) (pow.f64 p 4))) (neg.f64 (*.f64 (/.f64 p x) (/.f64 p x)))))","(+.f64 1 (fma.f64 1/4 (*.f64 x (*.f64 x (*.f64 (pow.f64 p 4) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2))))) (*.f64 (/.f64 (neg.f64 p) x) (/.f64 p x))))","(+.f64 1 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2))) (*.f64 64 (/.f64 1 (pow.f64 x 8)))) (*.f64 (pow.f64 x 2) (pow.f64 p 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 x 2) (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2))))))))","(+.f64 1 (fma.f64 -1/4 (*.f64 (fma.f64 -2 (/.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 x x)) (/.f64 64 (pow.f64 x 8))) (*.f64 (*.f64 x x) (pow.f64 p 6))) (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/4 (*.f64 (pow.f64 p 4) (*.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2))))))))","(+.f64 1 (fma.f64 -1/4 (*.f64 (*.f64 x x) (*.f64 (pow.f64 p 6) (fma.f64 -2 (-.f64 (/.f64 16 (pow.f64 x 8)) (/.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 x x))) (/.f64 64 (pow.f64 x 8))))) (fma.f64 1/4 (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 (*.f64 x x) (pow.f64 p 4))) (neg.f64 (*.f64 (/.f64 p x) (/.f64 p x))))))","(+.f64 (-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x))) (*.f64 (*.f64 x x) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 p 4) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))) (*.f64 (pow.f64 p 6) (+.f64 (/.f64 1/2 (/.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))) (/.f64 -16 (pow.f64 x 8)))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(fma.f64 1/4 (/.f64 x p) 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 1/4 (/.f64 x p) (/.f64 (*.f64 (pow.f64 x 3) -1/32) (pow.f64 p 3))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 1/4 (/.f64 p x))))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) (*.f64 -1/2 (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x))))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) (*.f64 -1/2 (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256))))))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 p 5)) (*.f64 (pow.f64 x 4) -3/256)) (/.f64 1/4 (/.f64 p x)))))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(fma.f64 -1/4 (/.f64 x p) 1/2)","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32 (fma.f64 -1/4 (/.f64 x p) 1/2))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (+.f64 (*.f64 -1/4 (/.f64 x p)) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 1/2 (fma.f64 -1/4 (/.f64 x p) (*.f64 1/2 (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32 (fma.f64 -1/4 (/.f64 x p) 1/2)) (*.f64 1/2 (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 x (pow.f64 p 5)) (*.f64 (pow.f64 x 4) -3/256)) (*.f64 -1/4 (/.f64 x p))) (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32 1/2))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 4 (pow.f64 p 2))","(*.f64 4 (*.f64 p p))","(*.f64 (*.f64 4 p) p)","(*.f64 p (*.f64 p 4))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 (pow.f64 x 5) p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16)))","(fma.f64 1/2 (/.f64 x p) (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16 (*.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)))))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 p 8))) (*.f64 -1/8 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (pow.f64 p 2)))) (*.f64 p (pow.f64 x 7)))) (+.f64 (*.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 p 6))) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 (pow.f64 x 5) p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 -1 (*.f64 (+.f64 (/.f64 1/256 (pow.f64 p 8)) (*.f64 -1/8 (/.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p p)))) (*.f64 p (pow.f64 x 7))) (fma.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16))))","(fma.f64 1/2 (/.f64 x p) (-.f64 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16 (*.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)))) (*.f64 p (*.f64 (pow.f64 x 7) (fma.f64 -1/8 (-.f64 (/.f64 1/64 (pow.f64 p 8)) (/.f64 (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2) (*.f64 p p))) (/.f64 1/256 (pow.f64 p 8)))))))","(-.f64 (fma.f64 1/2 (/.f64 x p) (fma.f64 (-.f64 (/.f64 1/64 (pow.f64 p 6)) (pow.f64 (/.f64 -1/16 (pow.f64 p 3)) 2)) (*.f64 p (pow.f64 x 5)) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16))) (*.f64 (fma.f64 -1/8 (+.f64 (/.f64 1/64 (pow.f64 p 8)) (/.f64 -1/256 (pow.f64 p 8))) (/.f64 1/256 (pow.f64 p 8))) (*.f64 p (pow.f64 x 7))))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x))))","(fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) 1)","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)) -1/2)))","(+.f64 1 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (/.f64 (pow.f64 x 4) -1/2))))","(+.f64 1 (fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) -1/2 (*.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)))))","(+.f64 1 (+.f64 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))))))","(+.f64 1 (fma.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/2 (+.f64 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)) (/.f64 (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2))))) (pow.f64 x 6))))))","(+.f64 1 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) (*.f64 -1/2 (+.f64 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) (/.f64 (fma.f64 (pow.f64 p 6) 64 (*.f64 (*.f64 p p) (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))))) (pow.f64 x 6))))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) 1) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) (/.f64 (fma.f64 2 (*.f64 p (*.f64 p (*.f64 (pow.f64 p 4) -12))) (*.f64 (pow.f64 p 6) 64)) (pow.f64 x 6)))))","-1","(-.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) 1)","(fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) -1)","(fma.f64 2 (*.f64 (/.f64 p x) (/.f64 p x)) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4)))) 1)","(+.f64 (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/2 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4)))) -1)","(fma.f64 2 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) -1))","(fma.f64 2 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) -1))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 64 (pow.f64 p 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 p 2)))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -16 (pow.f64 p 4)) (pow.f64 (*.f64 -2 (pow.f64 p 2)) 2)) (pow.f64 x 4))))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (fma.f64 64 (pow.f64 p 6) (*.f64 2 (*.f64 (*.f64 p p) (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2))))) (pow.f64 x 6)) (fma.f64 2 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/2 (/.f64 (fma.f64 -16 (pow.f64 p 4) (pow.f64 (*.f64 (*.f64 p p) -2) 2)) (pow.f64 x 4))))) -1)","(fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 p 6) 64 (*.f64 (*.f64 p p) (*.f64 2 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4)))))) (pow.f64 x 6)) (fma.f64 2 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 1/2 (/.f64 (fma.f64 (pow.f64 p 4) -16 (*.f64 4 (pow.f64 p 4))) (pow.f64 x 4)) -1)))","(fma.f64 1/2 (/.f64 (fma.f64 2 (*.f64 p (*.f64 p (*.f64 (pow.f64 p 4) -12))) (*.f64 (pow.f64 p 6) 64)) (pow.f64 x 6)) (fma.f64 2 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 p 4) -12) (pow.f64 x 4)) -1)))","1","(+.f64 1 (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x))))","(fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) 1)","(+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2)))) (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))) (*.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x)))))","(+.f64 1 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) (*.f64 1/2 (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 (*.f64 x x) (pow.f64 p 4))))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) 1) (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 p 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2))) (*.f64 64 (/.f64 1 (pow.f64 x 8)))) (*.f64 (pow.f64 x 2) (pow.f64 p 6)))) (+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (-.f64 (*.f64 16 (/.f64 1 (pow.f64 x 6))) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (pow.f64 x 2)))) (*.f64 -2 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))","(fma.f64 -1/2 (*.f64 (fma.f64 -2 (/.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 x x)) (/.f64 64 (pow.f64 x 8))) (*.f64 (*.f64 x x) (pow.f64 p 6))) (+.f64 1 (fma.f64 1/2 (*.f64 (pow.f64 p 4) (*.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))) (*.f64 -2 (/.f64 (*.f64 p p) (*.f64 x x))))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) (*.f64 1/2 (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 (*.f64 x x) (pow.f64 p 4))))) (fma.f64 -1/2 (*.f64 (*.f64 x x) (*.f64 (pow.f64 p 6) (fma.f64 -2 (-.f64 (/.f64 16 (pow.f64 x 8)) (/.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 x x))) (/.f64 64 (pow.f64 x 8))))) 1))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 p x) (/.f64 p x)) (*.f64 (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)) (*.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 p 4))))) (fma.f64 (+.f64 (/.f64 1 (/.f64 (*.f64 x x) (-.f64 (/.f64 16 (pow.f64 x 6)) (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2)))) (/.f64 -32 (pow.f64 x 8))) (*.f64 (*.f64 x x) (pow.f64 p 6)) 1))","(*.f64 1/2 (/.f64 x p))","(+.f64 (*.f64 1/2 (/.f64 x p)) (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5)))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (neg.f64 (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x)))))","(-.f64 (fma.f64 1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16)) (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256)))))","(-.f64 (fma.f64 1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16)) (*.f64 (/.f64 x (pow.f64 p 5)) (*.f64 (pow.f64 x 4) -3/256)))","(+.f64 (*.f64 1/2 (/.f64 x p)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 1/256 (pow.f64 x 6))) x) (pow.f64 p 7))))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 -1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x)) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 x x) (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2))) (*.f64 (pow.f64 x 6) 1/256)) (/.f64 (pow.f64 p 7) x))))))","(fma.f64 1/2 (/.f64 x p) (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16 (-.f64 (/.f64 (*.f64 (neg.f64 x) (fma.f64 (pow.f64 x 6) 1/256 (*.f64 (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256)) (*.f64 (*.f64 x x) 1/8)))) (pow.f64 p 7)) (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256)))))))","(-.f64 (fma.f64 1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) -1/16)) (*.f64 x (+.f64 (/.f64 (*.f64 (pow.f64 x 4) -3/256) (pow.f64 p 5)) (/.f64 (fma.f64 (pow.f64 x 6) 1/256 (*.f64 (*.f64 (pow.f64 x 4) -3/256) (*.f64 (*.f64 x x) 1/8))) (pow.f64 p 7)))))","(*.f64 -1/2 (/.f64 x p))","(*.f64 (/.f64 x p) -1/2)","(/.f64 x (/.f64 p -1/2))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))))","(fma.f64 -1/2 (/.f64 x p) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16))","(fma.f64 (/.f64 x p) -1/2 (/.f64 1/16 (/.f64 (pow.f64 p 3) (pow.f64 x 3))))","(fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16 (/.f64 x (/.f64 p -1/2)))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5))))","(fma.f64 -1/2 (/.f64 x p) (fma.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x))))","(fma.f64 (/.f64 x p) -1/2 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16 (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256))))))","(fma.f64 (/.f64 x p) -1/2 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16 (*.f64 (/.f64 x (pow.f64 p 5)) (*.f64 (pow.f64 x 4) -3/256))))","(+.f64 (*.f64 -1/2 (/.f64 x p)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) (pow.f64 x 2))) (*.f64 1/256 (pow.f64 x 6))) x) (pow.f64 p 7)) (/.f64 (*.f64 (+.f64 (*.f64 -1/64 (pow.f64 x 4)) (pow.f64 (*.f64 -1/16 (pow.f64 x 2)) 2)) x) (pow.f64 p 5)))))","(fma.f64 -1/2 (/.f64 x p) (fma.f64 1/16 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 (/.f64 (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2)) (/.f64 (pow.f64 p 5) x)) (/.f64 (fma.f64 1/8 (*.f64 (*.f64 x x) (fma.f64 -1/64 (pow.f64 x 4) (pow.f64 (*.f64 (*.f64 x x) -1/16) 2))) (*.f64 (pow.f64 x 6) 1/256)) (/.f64 (pow.f64 p 7) x)))))","(+.f64 (fma.f64 (/.f64 x p) -1/2 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16 (/.f64 x (/.f64 (pow.f64 p 5) (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256)))))) (*.f64 (/.f64 (fma.f64 (pow.f64 x 6) 1/256 (*.f64 (fma.f64 -1/64 (pow.f64 x 4) (*.f64 (pow.f64 x 4) 1/256)) (*.f64 (*.f64 x x) 1/8))) (pow.f64 p 7)) x))","(fma.f64 (/.f64 x p) -1/2 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/16 (*.f64 x (+.f64 (/.f64 (*.f64 (pow.f64 x 4) -3/256) (pow.f64 p 5)) (/.f64 (fma.f64 (pow.f64 x 6) 1/256 (*.f64 (*.f64 (pow.f64 x 4) -3/256) (*.f64 (*.f64 x x) 1/8))) (pow.f64 p 7))))))"]],"stop":[["node limit",1]],"time":47.053955078125,"type":"simplify"},{"compiler":[[5698,4329]],"time":79.02001953125,"type":"eval"},{"alts":[["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","fresh",49.55894890778557],["(sqrt.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)))","next",16.21845430921753],["(sqrt.f64 (fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2))","done",16.21845430820683]],"compiler":[[10,5],[18,15],[17,12],[10,5],[18,15]],"count":[[251,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[250,2],"picked":[1,1]}],"min-error":[6.683240779049522],"time":83.551025390625,"type":"prune"},{"compiler":[[100,74]],"locations":[["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))",0.043543769238055585,true],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)",0.4453125,true],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)",0.4553281980626605,true],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))",2.063791684603169,true]],"time":25.52587890625,"type":"localize"},{"count":[[4,84]],"series":[["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","p","-inf",0.629150390625],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","p","inf",1.44091796875],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","p","0",0.592041015625],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","x","-inf",3.453125],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","x","inf",1.365966796875],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))","x","0",1.552001953125],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","p","-inf",0.421142578125],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","p","inf",0.510986328125],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","p","0",0.430908203125],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","x","-inf",0.76904296875],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","x","inf",1.31689453125],["(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","x","0",0.564208984375],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","p","-inf",0.22509765625],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","p","inf",0.31494140625],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","p","0",0.241943359375],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","x","-inf",0.68798828125],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","x","inf",0.2939453125],["(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","x","0",0.267822265625],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","p","-inf",0.511962890625],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","p","inf",1.27197265625],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","p","0",2.44384765625],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","x","-inf",2.958984375],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","x","inf",4.77880859375],["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","x","0",1.684814453125]],"time":29.39794921875,"type":"series"},{"count":[[4,208]],"egraph":[[2,3248,62,0.026789959000000002],[1,281,62,0.004821250000000001],[0,14,67,0.000436292]],"inputs":[["(log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)))","(fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2)","(*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)","(exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6)) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 1) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 5/6) (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 3) (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (pow.f64 (exp.f64 3) (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 3) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))) (pow.f64 (exp.f64 3) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 3) 1/8) (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) (-.f64 1/4 (*.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) 1/4) (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 3) (exp.f64 (log1p.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (exp.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 1) (exp.f64 (log1p.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (pow.f64 (exp.f64 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (*.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (*.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 3)) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) 1) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) 1) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 3)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))) (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) 3) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 3 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 3 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 1) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 3)) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) (*.f64 2/3 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 1)) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (*.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 5/6)) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 3) 1/8)) (log.f64 (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) (-.f64 1/4 (*.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) 1/4)) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) (+.f64 1 (-.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 1) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 5/6) (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 3) (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (pow.f64 (exp.f64 3) (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 3) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))) (pow.f64 (exp.f64 3) (log.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 3) 1/8) (+.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) (-.f64 1/4 (*.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 2) 1/4) (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 3) (exp.f64 (log1p.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (exp.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 1) (exp.f64 (log1p.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (pow.f64 (exp.f64 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 3) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (*.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (*.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 3)) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) 1) (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (*.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (*.f64 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 3) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) 1) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (cbrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 3)) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))) (cbrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) 3) (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2)) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 3 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 2))) (cbrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1) (*.f64 3 (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) 1) (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (cbrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 3)) (sqrt.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))) 2))) (sqrt.f64 (cbrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (sqrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))) (sqrt.f64 (sqrt.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (hypot.f64 x (+.f64 p p))) 1/2 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) (sqrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (/.f64 1 (hypot.f64 x (+.f64 p p))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (+.f64 p p)) x) -2))) (cbrt.f64 (/.f64 x (hypot.f64 x (+.f64 p p)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 x (hypot.f64 x (+.f64 p p))))) (sqrt.f64 (/.f64 x (hypot.f64 x (+.f64 p p)))) 1/2)))))"]],"rules":[["egg-rr",79],["egg-rr",28],["egg-rr",73],["egg-rr",28]],"stop":[["node limit",1]],"time":66.574951171875,"type":"rewrite"},{"count":[[292,257]],"egraph":[[2,6637,4686,0.030206875],[1,1711,5164,0.01335575],[0,529,5733,0.002786875]],"inputs":[["(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2)))))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (log.f64 (cbrt.f64 1/2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))))) (+.f64 (*.f64 -4 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (*.f64 1/432 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))))))","(*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (*.f64 1/40320 (/.f64 (+.f64 (*.f64 -1120/9 (pow.f64 p 8)) (+.f64 (*.f64 4480/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 13440 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 p 2) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))))) (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2))))))) (+.f64 (*.f64 -2240 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2)) (*.f64 4480 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))))))) (pow.f64 x 8))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))))))","(*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))","(+.f64 (*.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/40320 (*.f64 (-.f64 (*.f64 13440 (-.f64 (*.f64 1/2 (-.f64 (*.f64 60 (/.f64 1 (pow.f64 x 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 16 (/.f64 1 (pow.f64 x 6)))) (pow.f64 x 2))))) (*.f64 658/81 (/.f64 1 (pow.f64 x 8))))) (*.f64 1316000/27 (/.f64 1 (pow.f64 x 8)))) (pow.f64 p 8))))))","(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))))))","(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2)))))) (pow.f64 x 8))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))","(+.f64 (*.f64 3/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))))) (+.f64 (*.f64 -4 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (*.f64 1/432 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))))) (+.f64 (*.f64 3/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))))","(*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 1/240 (/.f64 (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 1/240 (/.f64 (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/13440 (/.f64 (+.f64 (*.f64 -1120/9 (pow.f64 p 8)) (+.f64 (*.f64 4480/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -2240 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2)) (+.f64 (*.f64 4480 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 13440 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))) (*.f64 -8 (pow.f64 p 8)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 p 2) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))))) (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2))))))))))) (pow.f64 x 8))))))","(*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -22/3 (/.f64 (pow.f64 p 6) (pow.f64 x 6)))))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/13440 (*.f64 (-.f64 (*.f64 13440 (-.f64 (*.f64 1/2 (-.f64 (*.f64 60 (/.f64 1 (pow.f64 x 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 16 (/.f64 1 (pow.f64 x 6)))) (pow.f64 x 2))))) (*.f64 658/81 (/.f64 1 (pow.f64 x 8))))) (*.f64 1316000/27 (/.f64 1 (pow.f64 x 8)))) (pow.f64 p 8))) (*.f64 -22/3 (/.f64 (pow.f64 p 6) (pow.f64 x 6))))))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2)))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))))))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3 (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))))))","1/2","(+.f64 1/2 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x))","(+.f64 1/2 (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (pow.f64 x 2))))","(+.f64 1/2 (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 p 3)))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))) (cbrt.f64 1/2)))) (cbrt.f64 1/2)) (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2))))) p)))))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (pow.f64 x 2)))))","1","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4)))))))))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)) (pow.f64 x 6))) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 1/9 (pow.f64 p 4))) (pow.f64 p 2)) (pow.f64 x 6)))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","1/2","(+.f64 1/2 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p)))))","(+.f64 1/2 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))))) (pow.f64 p 2)) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))))))))","(+.f64 1/2 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) x) (pow.f64 p 3)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) (cbrt.f64 1/2)) (pow.f64 p 2)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (pow.f64 p 3))) (+.f64 (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (pow.f64 x 3))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (cbrt.f64 1/2))))) (pow.f64 p 3)) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))))))))))))","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))))) (pow.f64 p 2)) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2))))))))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) x))) (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (pow.f64 x 3))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (cbrt.f64 1/2))))) (*.f64 1/3 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))))) (pow.f64 p 3))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) (cbrt.f64 1/2)) (pow.f64 p 2)))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2)))))","(+.f64 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2))) (*.f64 1/2 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (/.f64 1 (*.f64 p p))) -1/48) (*.f64 x x))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (log.f64 (cbrt.f64 1/2)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))))) (+.f64 (*.f64 -4 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (*.f64 1/432 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))))))","(+.f64 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2))) (fma.f64 1/6 (*.f64 (pow.f64 x 3) (fma.f64 1/288 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (fma.f64 -1/288 (/.f64 1 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (/.f64 1/432 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (*.f64 1/2 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (/.f64 1 (*.f64 p p))) -1/48) (*.f64 x x)))))","(+.f64 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2))) (fma.f64 1/2 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) (*.f64 (+.f64 (/.f64 1/288 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (+.f64 (/.f64 -1/288 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (/.f64 (/.f64 1/432 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 1/6 (pow.f64 x 3)))))","(+.f64 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2))) (fma.f64 1/2 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) (*.f64 (+.f64 (/.f64 1/288 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (+.f64 (/.f64 1/32 (pow.f64 p 3)) (*.f64 (/.f64 (/.f64 1 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (/.f64 1/432 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 1/6 (pow.f64 x 3)))))","(*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(*.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)))","(*.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))))","(fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4))))","(fma.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) (*.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p))))","(fma.f64 1/24 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) (*.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4)))))","(fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 80 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (*.f64 240 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)))))","(fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 80)))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)))))","(fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (*.f64 (pow.f64 p 4) 8/3) 80)))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)))))","(+.f64 (*.f64 1/40320 (/.f64 (+.f64 (*.f64 -1120/9 (pow.f64 p 8)) (+.f64 (*.f64 4480/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 13440 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 p 2) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))))) (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2))))))) (+.f64 (*.f64 -2240 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2)) (*.f64 4480 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))))))) (pow.f64 x 8))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 1/24 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))))))","(fma.f64 1/40320 (/.f64 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 13440 (-.f64 (*.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 -2 (*.f64 (*.f64 p p) (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (*.f64 (pow.f64 p 8) -8))))) (fma.f64 -1/3 (*.f64 (*.f64 p p) (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (fma.f64 1/9 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 -1/3 (*.f64 (*.f64 p p) (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) 2)))))) (fma.f64 -2240 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) 2) (*.f64 (*.f64 4480 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (*.f64 p p)))))) (pow.f64 x 8)) (fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 80 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (*.f64 240 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4))))))","(fma.f64 1/40320 (/.f64 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 13440 (fma.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (fma.f64 (pow.f64 p 8) 16 (*.f64 4 (pow.f64 p 8))) (fma.f64 -2 (*.f64 p (*.f64 p (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (pow.f64 p 6) -6))))) (*.f64 (pow.f64 p 8) -8)))) (neg.f64 (fma.f64 -1/3 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))))) (fma.f64 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4)))) 1/9 (fma.f64 (*.f64 (*.f64 p p) -1/3) (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 2))))))) (fma.f64 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))))) 4480 (*.f64 (pow.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 2) -2240))))) (pow.f64 x 8)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 80)))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4))))))","(fma.f64 1/40320 (/.f64 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) 8/3)) (fma.f64 13440 (-.f64 (fma.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (*.f64 (pow.f64 p 8) 20) (fma.f64 -2 (*.f64 p (*.f64 p (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (pow.f64 p 6) -6))))) (*.f64 (pow.f64 p 8) -8)))) (*.f64 (*.f64 p p) (*.f64 1/3 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3)))))))) (fma.f64 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) 8/3)) 1/9 (fma.f64 (*.f64 (*.f64 p p) -1/3) (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 p 4) 8/3) 2))))) (fma.f64 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))))) 4480 (*.f64 (pow.f64 (*.f64 (pow.f64 p 4) 8/3) 2) -2240))))) (pow.f64 x 8)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/720 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (*.f64 (pow.f64 p 4) 8/3) 80)))) (pow.f64 x 6)) (*.f64 1/24 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4))))))","(*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(*.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)))","(*.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))","(fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))","(fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (/.f64 (*.f64 (pow.f64 p 4) 5/6) (pow.f64 x 4)))","(+.f64 (*.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(fma.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(fma.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (/.f64 (*.f64 (pow.f64 p 4) 5/6) (pow.f64 x 4))))","(+.f64 (*.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/40320 (*.f64 (-.f64 (*.f64 13440 (-.f64 (*.f64 1/2 (-.f64 (*.f64 60 (/.f64 1 (pow.f64 x 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 16 (/.f64 1 (pow.f64 x 6)))) (pow.f64 x 2))))) (*.f64 658/81 (/.f64 1 (pow.f64 x 8))))) (*.f64 1316000/27 (/.f64 1 (pow.f64 x 8)))) (pow.f64 p 8))))))","(fma.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 5/6 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (*.f64 1/40320 (*.f64 (pow.f64 p 8) (fma.f64 13440 (fma.f64 1/2 (-.f64 (/.f64 60 (pow.f64 x 8)) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (/.f64 16 (pow.f64 x 6))) (*.f64 x x)))) (neg.f64 (/.f64 658/81 (pow.f64 x 8)))) (neg.f64 (/.f64 1316000/27 (pow.f64 x 8)))))))))","(fma.f64 -22/9 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/40320 (*.f64 (pow.f64 p 8) (fma.f64 13440 (fma.f64 1/2 (+.f64 (/.f64 60 (pow.f64 x 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (/.f64 16 (pow.f64 x 6))) (*.f64 x x)))) (/.f64 -658/81 (pow.f64 x 8))) (/.f64 -1316000/27 (pow.f64 x 8)))) (/.f64 (*.f64 (pow.f64 p 4) 5/6) (pow.f64 x 4)))))","(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (log.f64 (cbrt.f64 1/2))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) (log.f64 (cbrt.f64 1/2))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 1/6 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (+.f64 (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) (log.f64 (cbrt.f64 1/2))) (*.f64 1/6 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5))) (*.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))) (pow.f64 p 3)))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (fma.f64 1/6 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (log.f64 (cbrt.f64 1/2)))))","(fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (fma.f64 1/6 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (log.f64 (cbrt.f64 1/2)))))","(log.f64 (cbrt.f64 1/2))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (log.f64 (cbrt.f64 1/2)))","(fma.f64 -1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (log.f64 (cbrt.f64 1/2)))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/12 (log.f64 (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (log.f64 (cbrt.f64 1/2))))","(fma.f64 -1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) (log.f64 (cbrt.f64 1/2))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/12 (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (log.f64 (cbrt.f64 1/2))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))) (+.f64 (log.f64 (cbrt.f64 1/2)) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))))))","(fma.f64 -1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (+.f64 (fma.f64 1/2 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) (log.f64 (cbrt.f64 1/2))) (*.f64 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5))) (*.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))) (pow.f64 p 3)) -1/6)))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/12 (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (fma.f64 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) -1/6 (log.f64 (cbrt.f64 1/2)))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/12 (fma.f64 1/2 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) (fma.f64 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) -1/6 (log.f64 (cbrt.f64 1/2)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (*.f64 (/.f64 x p) 1/4))","(fma.f64 (/.f64 x p) 1/4 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) 1/4)))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 (*.f64 x 1/4) p)))","(+.f64 1/2 (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (/.f64 (*.f64 x 1/4) p)))","(+.f64 1/2 (+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(+.f64 1/2 (fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) 1/4))))","(+.f64 1/2 (fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 (*.f64 x 1/4) p))))","(+.f64 1/2 (fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (/.f64 (*.f64 x 1/4) p))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)) (/.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)))) (pow.f64 x 6))))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (fma.f64 -1/2 (/.f64 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (pow.f64 p 6) -6))) (pow.f64 x 6)) (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4)))))","(+.f64 1 (+.f64 (-.f64 (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (/.f64 p (/.f64 (*.f64 x x) p))) (/.f64 (+.f64 (*.f64 (pow.f64 p 6) -6) (*.f64 -4 (pow.f64 p 6))) (pow.f64 x 6))))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(/.f64 p (/.f64 (*.f64 x x) p))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x 4)) (/.f64 (*.f64 p p) (*.f64 x x)))","(fma.f64 -1/2 (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 6)) (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x 4)) (/.f64 (*.f64 p p) (*.f64 x x))) (*.f64 -1/2 (/.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) 6)))) (pow.f64 x 6))))","(fma.f64 -1/2 (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 6)) (fma.f64 -1/2 (/.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) 6) (*.f64 (pow.f64 p 6) -8)) (pow.f64 x 6)) (/.f64 p (/.f64 (*.f64 x x) p))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 x 6))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 4 (pow.f64 p 4)) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2)))))) (pow.f64 x 8))))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) 6) (pow.f64 x 4)) (/.f64 (*.f64 p p) (*.f64 x x))) (*.f64 -1/2 (+.f64 (/.f64 (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) 6)))) (pow.f64 x 6)) (/.f64 (fma.f64 1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 2 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) 6)) (fma.f64 8 (pow.f64 p 8) (*.f64 -2 (*.f64 (*.f64 p p) (fma.f64 -8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) 6))))))))) (pow.f64 x 8)))))","(fma.f64 -1/2 (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 6)) (fma.f64 -1/2 (+.f64 (/.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) 6) (*.f64 (pow.f64 p 6) -8)) (pow.f64 x 6)) (/.f64 (fma.f64 1/2 (fma.f64 (pow.f64 p 8) 16 (*.f64 4 (pow.f64 p 8))) (fma.f64 2 (*.f64 (pow.f64 p 8) 6) (fma.f64 8 (pow.f64 p 8) (*.f64 (*.f64 p p) (*.f64 -2 (fma.f64 -2 (*.f64 (pow.f64 p 6) 6) (*.f64 (pow.f64 p 6) -8))))))) (pow.f64 x 8))) (/.f64 p (/.f64 (*.f64 x x) p))))","(fma.f64 -1/2 (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 6)) (fma.f64 -1/2 (+.f64 (/.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) 6) (*.f64 (pow.f64 p 6) -8)) (pow.f64 x 6)) (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 p 8) 20) (fma.f64 2 (*.f64 (pow.f64 p 8) 6) (fma.f64 8 (pow.f64 p 8) (*.f64 (*.f64 p p) (*.f64 -2 (fma.f64 -2 (*.f64 (pow.f64 p 6) 6) (*.f64 (pow.f64 p 6) -8))))))) (pow.f64 x 8))) (/.f64 p (/.f64 (*.f64 x x) p))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -10 (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4)))))","1/2","(+.f64 1/2 (*.f64 1/4 (/.f64 x p)))","(+.f64 1/2 (*.f64 (/.f64 x p) 1/4))","(fma.f64 (/.f64 x p) 1/4 1/2)","(+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) 1/4)))","(+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 (*.f64 x 1/4) p)))","(+.f64 1/2 (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (/.f64 (*.f64 x 1/4) p)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 1/2 (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (+.f64 1/2 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) 1/4))))","(+.f64 (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (/.f64 (*.f64 x 1/4) p)) (fma.f64 -1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) 1/2))","(+.f64 (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (/.f64 (*.f64 x 1/4) p)) (fma.f64 -1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) 1/2))","1/2","(+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))","(+.f64 1/2 (*.f64 (/.f64 x p) -1/4))","(fma.f64 (/.f64 x p) -1/4 1/2)","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p))))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 1/2 (*.f64 (/.f64 x p) -1/4)))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 (/.f64 x p) -1/4 1/2))","(fma.f64 1/32 (pow.f64 (/.f64 x p) 3) (fma.f64 (/.f64 x p) -1/4 1/2))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 1/2 (*.f64 -1/4 (/.f64 x p)))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (+.f64 1/2 (*.f64 (/.f64 x p) -1/4))))","(fma.f64 1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 (/.f64 x p) -1/4 1/2)))","(fma.f64 1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 1/32 (pow.f64 (/.f64 x p) 3) (fma.f64 (/.f64 x p) -1/4 1/2)))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(*.f64 (log.f64 (cbrt.f64 1/2)) 3)","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))","(fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) 1/4))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) 1/4) (/.f64 x p) (*.f64 (log.f64 (cbrt.f64 1/2)) 3))","(+.f64 (*.f64 3/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p)))))","(fma.f64 3/2 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (/.f64 1 (*.f64 p p))) -1/48) (*.f64 x x)) (fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) 1/4)))","(fma.f64 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) 3/2 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) 1/4) (/.f64 x p) (*.f64 (log.f64 (cbrt.f64 1/2)) 3)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))))) (+.f64 (*.f64 -4 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (*.f64 1/432 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))))) (+.f64 (*.f64 3/2 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (/.f64 1 (pow.f64 p 2))))) (pow.f64 x 2))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))))","(fma.f64 1/2 (*.f64 (pow.f64 x 3) (fma.f64 1/288 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (fma.f64 -1/288 (/.f64 1 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (/.f64 1/432 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (fma.f64 3/2 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (/.f64 1 (*.f64 p p))) -1/48) (*.f64 x x)) (fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) 1/4))))","(fma.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (/.f64 1/288 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (+.f64 (/.f64 -1/288 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (/.f64 (/.f64 1/432 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)))) (fma.f64 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) 3/2 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) 1/4) (/.f64 x p) (*.f64 (log.f64 (cbrt.f64 1/2)) 3))))","(fma.f64 (*.f64 1/2 (pow.f64 x 3)) (+.f64 (/.f64 1/288 (*.f64 (pow.f64 (cbrt.f64 1/2) 5) (pow.f64 p 3))) (fma.f64 -4 (+.f64 (/.f64 1/32 (pow.f64 p 3)) (*.f64 (/.f64 (/.f64 1 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (/.f64 1/432 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)))) (fma.f64 (*.f64 x (*.f64 x (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 p p)) -1/48))) 3/2 (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) 1/4) (/.f64 x p) (*.f64 (log.f64 (cbrt.f64 1/2)) 3))))","(*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","(/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))","(/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(fma.f64 1/8 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(fma.f64 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x)))","(fma.f64 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x)))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 1/240 (/.f64 (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(fma.f64 1/8 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) (fma.f64 1/240 (/.f64 (fma.f64 80 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 -80/9 (pow.f64 p 6) (*.f64 240 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))))) (pow.f64 x 6)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))))","(fma.f64 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (fma.f64 1/240 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 80)))) (pow.f64 x 6)) (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))))","(fma.f64 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (fma.f64 1/240 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (*.f64 (pow.f64 p 4) 8/3) 80)))) (pow.f64 x 6)) (/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x))))","(+.f64 (*.f64 1/8 (/.f64 (+.f64 (*.f64 8 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 -4/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 1/240 (/.f64 (+.f64 (*.f64 80 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 -80/9 (pow.f64 p 6)) (*.f64 240 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 1/13440 (/.f64 (+.f64 (*.f64 -1120/9 (pow.f64 p 8)) (+.f64 (*.f64 4480/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -2240 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2)) (+.f64 (*.f64 4480 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 13440 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))) (*.f64 -8 (pow.f64 p 8)))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 p 2) (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))))) (+.f64 (*.f64 1/9 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 p 2))) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) 2))))))))))) (pow.f64 x 8))))))","(fma.f64 1/8 (/.f64 (fma.f64 8 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) (fma.f64 1/240 (/.f64 (fma.f64 80 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 -80/9 (pow.f64 p 6) (*.f64 240 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))))) (pow.f64 x 6)) (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 1/13440 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 13440 (-.f64 (*.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 -2 (*.f64 (*.f64 p p) (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (*.f64 (pow.f64 p 8) -8))))) (fma.f64 -1/3 (*.f64 (*.f64 p p) (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (fma.f64 1/9 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 -1/3 (*.f64 (*.f64 p p) (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) 2)))))) (fma.f64 -2240 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) 2) (*.f64 (*.f64 4480 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3)))) (*.f64 p p))))))) (pow.f64 x 8)))))","(fma.f64 (/.f64 (fma.f64 8 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (fma.f64 1/240 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 80)))) (pow.f64 x 6)) (fma.f64 (/.f64 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4)))) (fma.f64 13440 (fma.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (fma.f64 (pow.f64 p 8) 16 (*.f64 4 (pow.f64 p 8))) (fma.f64 -2 (*.f64 p (*.f64 p (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (pow.f64 p 6) -6))))) (*.f64 (pow.f64 p 8) -8)))) (neg.f64 (fma.f64 -1/3 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))))) (fma.f64 (*.f64 (pow.f64 p 4) (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4)))) 1/9 (fma.f64 (*.f64 (*.f64 p p) -1/3) (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (*.f64 1/3 (pow.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 2))))))) (fma.f64 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))))) 4480 (*.f64 (pow.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 2) -2240))))) (pow.f64 x 8)) 1/13440 (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x)))))","(fma.f64 (/.f64 (fma.f64 8 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (pow.f64 p 4) -4/3)) (pow.f64 x 4)) 1/8 (fma.f64 1/240 (/.f64 (fma.f64 -80/9 (pow.f64 p 6) (fma.f64 240 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 (*.f64 p p) (*.f64 (*.f64 (pow.f64 p 4) 8/3) 80)))) (pow.f64 x 6)) (fma.f64 (/.f64 (fma.f64 -1120/9 (pow.f64 p 8) (fma.f64 4480/3 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) 8/3)) (fma.f64 13440 (-.f64 (fma.f64 -1/2 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (*.f64 (pow.f64 p 8) 20) (fma.f64 -2 (*.f64 p (*.f64 p (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (pow.f64 p 6) -6))))) (*.f64 (pow.f64 p 8) -8)))) (*.f64 (*.f64 p p) (*.f64 1/3 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3)))))))) (fma.f64 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) 8/3)) 1/9 (fma.f64 (*.f64 (*.f64 p p) -1/3) (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 p 4) 8/3) 2))))) (fma.f64 (*.f64 p (*.f64 p (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))))) 4480 (*.f64 (pow.f64 (*.f64 (pow.f64 p 4) 8/3) 2) -2240))))) (pow.f64 x 8)) 1/13440 (/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x)))))","(*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))","(neg.f64 (/.f64 (*.f64 p p) (*.f64 x x)))","(/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))","(/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(fma.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 5/2) (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -22/3 (/.f64 (pow.f64 p 6) (pow.f64 x 6)))))","(fma.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -22/3)))","(fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 5/2 (fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -22/3 (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))))","(fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 5/2 (fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -22/3 (/.f64 (*.f64 p (neg.f64 p)) (*.f64 x x))))","(+.f64 (*.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/13440 (*.f64 (-.f64 (*.f64 13440 (-.f64 (*.f64 1/2 (-.f64 (*.f64 60 (/.f64 1 (pow.f64 x 8))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (*.f64 16 (/.f64 1 (pow.f64 x 6)))) (pow.f64 x 2))))) (*.f64 658/81 (/.f64 1 (pow.f64 x 8))))) (*.f64 1316000/27 (/.f64 1 (pow.f64 x 8)))) (pow.f64 p 8))) (*.f64 -22/3 (/.f64 (pow.f64 p 6) (pow.f64 x 6))))))","(fma.f64 5/2 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/13440 (*.f64 (pow.f64 p 8) (fma.f64 13440 (fma.f64 1/2 (-.f64 (/.f64 60 (pow.f64 x 8)) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (/.f64 16 (pow.f64 x 6))) (*.f64 x x)))) (neg.f64 (/.f64 658/81 (pow.f64 x 8)))) (neg.f64 (/.f64 1316000/27 (pow.f64 x 8))))) (*.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -22/3))))","(fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 5/2 (-.f64 (fma.f64 (*.f64 (fma.f64 13440 (fma.f64 1/2 (+.f64 (/.f64 60 (pow.f64 x 8)) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (/.f64 -2 (pow.f64 x 3)) 2) (/.f64 16 (pow.f64 x 6))) (*.f64 x x)))) (/.f64 -658/81 (pow.f64 x 8))) (/.f64 -1316000/27 (pow.f64 x 8))) 1/13440) (pow.f64 p 8) (*.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -22/3)) (/.f64 p (/.f64 (*.f64 x x) p))))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(*.f64 (log.f64 (cbrt.f64 1/2)) 3)","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))))","(fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) 1/4))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) 1/4) (/.f64 x p) (*.f64 (log.f64 (cbrt.f64 1/2)) 3))","(+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2)))))","(fma.f64 3 (log.f64 (cbrt.f64 1/2)) (fma.f64 1/4 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (*.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) 3/2)))","(fma.f64 (log.f64 (cbrt.f64 1/2)) 3 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 (*.f64 x 1/4) p))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))))))","(fma.f64 1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5))) (*.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))) (pow.f64 p 3)) (fma.f64 3 (log.f64 (cbrt.f64 1/2)) (fma.f64 1/4 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (*.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) 3/2))))","(fma.f64 1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (fma.f64 (log.f64 (cbrt.f64 1/2)) 3 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 (*.f64 x 1/4) p)))))","(fma.f64 1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (fma.f64 (log.f64 (cbrt.f64 1/2)) 3 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 (*.f64 x 1/4) p)))))","(*.f64 3 (log.f64 (cbrt.f64 1/2)))","(*.f64 (log.f64 (cbrt.f64 1/2)) 3)","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (*.f64 3 (log.f64 (cbrt.f64 1/2))))","(fma.f64 -1/4 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (*.f64 (log.f64 (cbrt.f64 1/2)) 3))","(fma.f64 (log.f64 (cbrt.f64 1/2)) 3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (*.f64 (/.f64 x p) -1/4)))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2)))))","(fma.f64 -1/4 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) 3/2)))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/4 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (log.f64 (cbrt.f64 1/2)) 3)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (*.f64 1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5)))) (*.f64 4 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5)) 1/3) (/.f64 x p))) (+.f64 (*.f64 3 (log.f64 (cbrt.f64 1/2))) (*.f64 3/2 (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10)) 1/3) (pow.f64 x 2)))) (pow.f64 p 2))))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (+.f64 (*.f64 1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 5))) (*.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))) (pow.f64 p 3)) (fma.f64 -1/4 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) (fma.f64 3 (log.f64 (cbrt.f64 1/2)) (*.f64 (/.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))) (*.f64 x x)) -1/48) (*.f64 p p)) 3/2))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/4 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (log.f64 (cbrt.f64 1/2)) 3))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/432 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (/.f64 (*.f64 (pow.f64 x 3) 1/288) (pow.f64 (cbrt.f64 1/2) 5)))) (pow.f64 p 3)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 5))) (/.f64 x p)) -1/4 (fma.f64 (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 10))))) (/.f64 (*.f64 p p) -1/48)) 3/2 (*.f64 (log.f64 (cbrt.f64 1/2)) 3))))","1/2","(+.f64 1/2 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x))","(+.f64 1/2 (*.f64 x (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 1 p)) 1/4)))","(fma.f64 x (*.f64 1/4 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) p)) 1/2)","(fma.f64 x (*.f64 1/4 (/.f64 (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2))) p)) 1/2)","(+.f64 1/2 (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (pow.f64 x 2))))","(+.f64 1/2 (fma.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 1 p)) 1/4) x (*.f64 (*.f64 x x) (fma.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (/.f64 1 (*.f64 p p)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144) (*.f64 (*.f64 (/.f64 1 (*.f64 p p)) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) 1/144)))))","(+.f64 1/2 (fma.f64 (*.f64 x x) (fma.f64 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144) (*.f64 p p)) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144) (*.f64 p p))) (*.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) p) (*.f64 x 1/4))))","(+.f64 1/2 (*.f64 x (+.f64 (*.f64 1/4 (/.f64 (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2))) p)) (*.f64 (fma.f64 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144) (*.f64 p p)) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144) (*.f64 p p))) x))))","(+.f64 1/2 (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p))) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 p)))) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))))) (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 p 3)))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (*.f64 1/32 (/.f64 1 (pow.f64 p 3))) (*.f64 1/1728 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3)))))) (cbrt.f64 1/2)))) (cbrt.f64 1/2)) (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (/.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2))))) p)))))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 1 (pow.f64 p 2)))))) (pow.f64 x 2)))))","(+.f64 1/2 (fma.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 1 p)) 1/4) x (fma.f64 (fma.f64 -1/3 (fma.f64 -1/288 (/.f64 1 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (fma.f64 -1/864 (/.f64 1 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (fma.f64 (fma.f64 -1/432 (/.f64 1 (pow.f64 p 3)) (*.f64 -2/3 (/.f64 (fma.f64 -1/288 (/.f64 1 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (cbrt.f64 1/2)))) (cbrt.f64 1/2) (*.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (/.f64 (*.f64 (*.f64 (/.f64 1 (*.f64 p p)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144) p)))))) (pow.f64 x 3) (*.f64 (*.f64 x x) (fma.f64 (cbrt.f64 1/2) (*.f64 (*.f64 (/.f64 1 (*.f64 p p)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144) (*.f64 (*.f64 (/.f64 1 (*.f64 p p)) (cbrt.f64 (/.f64 1 (cbrt.f64 1/2)))) 1/144))))))","(+.f64 (fma.f64 x (*.f64 1/4 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) p)) 1/2) (fma.f64 (pow.f64 x 3) (+.f64 (fma.f64 (cbrt.f64 1/2) (fma.f64 -2/3 (/.f64 (+.f64 (/.f64 -1/288 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (cbrt.f64 1/2)) (/.f64 -1/432 (pow.f64 p 3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) (*.f64 p p)) (/.f64 p -1/144)) 1/12))) (fma.f64 (+.f64 (/.f64 -1/288 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (+.f64 (/.f64 1/32 (pow.f64 p 3)) (/.f64 1/1728 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) -1/3 (/.f64 -1/864 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) (*.f64 (*.f64 x x) (fma.f64 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144) (*.f64 p p)) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144) (*.f64 p p))))))","(+.f64 (fma.f64 x (*.f64 1/4 (/.f64 (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2))) p)) 1/2) (*.f64 (*.f64 x x) (+.f64 (fma.f64 (cbrt.f64 1/2) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144) (*.f64 p p)) (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144) (*.f64 p p))) (*.f64 (+.f64 (fma.f64 (cbrt.f64 1/2) (fma.f64 -2/3 (/.f64 (+.f64 (/.f64 1/32 (pow.f64 p 3)) (*.f64 (/.f64 (/.f64 1 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (cbrt.f64 1/2)) (/.f64 -1/432 (pow.f64 p 3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (/.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) (*.f64 p p)) (/.f64 p -1/144)) 1/12))) (fma.f64 (+.f64 (/.f64 1/32 (pow.f64 p 3)) (*.f64 (/.f64 (/.f64 1 (pow.f64 p 3)) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) -1/3 (/.f64 -1/864 (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))))) x))))","1","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 (*.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4)))))))))","(fma.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 2/3 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (+.f64 1 (+.f64 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))) (fma.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (*.f64 1/3 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4))))))))","(fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 2/9 (fma.f64 2/3 (/.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 1/9))))))","(fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 2/9 (+.f64 (-.f64 (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 p 4) 8/3) (pow.f64 x 4)) (/.f64 (pow.f64 p 4) (/.f64 (pow.f64 x 4) 1/9))) (/.f64 p (/.f64 (*.f64 x x) p))) (fma.f64 2/3 (/.f64 (*.f64 (pow.f64 p 4) 8/3) (pow.f64 x 4)) 1)))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 x 4))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))))) (+.f64 (*.f64 -1/27 (pow.f64 p 6)) (*.f64 -2/3 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2))))) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4))) (pow.f64 p 2)) (pow.f64 x 6))) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 2/3 (-.f64 (*.f64 -1/2 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 1/3 (pow.f64 p 4)))) (*.f64 1/9 (pow.f64 p 4))) (pow.f64 p 2)) (pow.f64 x 6)))))))))))))","(fma.f64 2/3 (/.f64 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3))) (pow.f64 x 6)) (+.f64 1 (fma.f64 2/3 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (fma.f64 2/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 -1/2 (fma.f64 8 (pow.f64 p 6) (*.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -1/27 (pow.f64 p 6) (*.f64 (*.f64 (*.f64 p p) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4)))) -2/3))) (pow.f64 x 6)) (fma.f64 -2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 -4/9 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (/.f64 (pow.f64 x 6) (*.f64 p p))) (*.f64 -1/3 (/.f64 (fma.f64 2/3 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 p 4) -6)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (pow.f64 p 4) 1/9)) (/.f64 (pow.f64 x 6) (*.f64 p p))))))))))))))","(+.f64 (fma.f64 2/3 (/.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (pow.f64 x 4)) (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 2/9 (fma.f64 1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (pow.f64 x 6)) (fma.f64 (/.f64 p (/.f64 (*.f64 x x) p)) -2/3 (fma.f64 -1/3 (*.f64 (/.f64 (fma.f64 (pow.f64 p 4) 1/9 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) 2/3)) (pow.f64 x 6)) (*.f64 p p)) (/.f64 (*.f64 (*.f64 -4/9 (*.f64 p p)) (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4)))) (pow.f64 x 6)))))))))) (fma.f64 2/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 1 (*.f64 (pow.f64 p 6) -6)) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (+.f64 (*.f64 3 (pow.f64 p 4)) (*.f64 -1/3 (pow.f64 p 4))) (*.f64 (*.f64 p p) -2/3))))) (pow.f64 x 6)) 1))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 (pow.f64 p 4) 8/3) (pow.f64 x 4)) (fma.f64 -1/3 (/.f64 p (/.f64 (*.f64 x x) p)) (fma.f64 1/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 p 4) 8/3) (pow.f64 x 4)) (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 2/9 (fma.f64 1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (pow.f64 x 6)) (fma.f64 (/.f64 p (/.f64 (*.f64 x x) p)) -2/3 (fma.f64 -1/3 (*.f64 (/.f64 (fma.f64 (pow.f64 p 4) 1/9 (*.f64 (*.f64 (pow.f64 p 4) 8/3) 2/3)) (pow.f64 x 6)) (*.f64 p p)) (/.f64 (*.f64 (*.f64 -4/9 (*.f64 p p)) (*.f64 (pow.f64 p 4) 8/3)) (pow.f64 x 6)))))))))) (fma.f64 2/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 p 6)) (-.f64 (*.f64 (pow.f64 p 6) -6) (fma.f64 (pow.f64 p 6) -1/27 (*.f64 (*.f64 (pow.f64 p 4) 8/3) (*.f64 (*.f64 p p) -2/3))))) (pow.f64 x 6)) 1))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 p 4) -6) (pow.f64 x 4)))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 (-.f64 1 (/.f64 p (/.f64 (*.f64 x x) p))) (fma.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) -10 (/.f64 3 (/.f64 (pow.f64 x 4) (pow.f64 p 4)))))","1/2","(+.f64 1/2 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p)))))","(+.f64 1/2 (*.f64 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4))","(fma.f64 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4 1/2)","(fma.f64 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))) 1/4 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))))) (pow.f64 p 2)) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))))))))","(+.f64 1/2 (+.f64 (*.f64 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4) (fma.f64 1/72 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (/.f64 (cbrt.f64 1/2) (/.f64 (*.f64 p p) (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144)))))))","(+.f64 (fma.f64 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4 1/2) (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (/.f64 x p) (/.f64 x p))) 1/144)))","(+.f64 (fma.f64 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))) 1/4 1/2) (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (/.f64 x p) (/.f64 x p)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144))))","(+.f64 1/2 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) x) (pow.f64 p 3)))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) (cbrt.f64 1/2)) (pow.f64 p 2)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (pow.f64 p 3))) (+.f64 (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 3))))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (pow.f64 x 3))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (cbrt.f64 1/2))))) (pow.f64 p 3)) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (/.f64 x p))) (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))))))))))))","(+.f64 1/2 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (/.f64 (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144) (/.f64 (pow.f64 p 3) x))) (fma.f64 1/6 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) (+.f64 (/.f64 (cbrt.f64 1/2) (/.f64 (*.f64 p p) (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144))) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))) (pow.f64 p 3)) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (+.f64 (*.f64 -1/864 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2)))) (+.f64 (/.f64 (cbrt.f64 1/2) (/.f64 (pow.f64 p 3) (+.f64 (*.f64 -1/432 (pow.f64 x 3)) (*.f64 2/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))) (cbrt.f64 1/2)))))) (fma.f64 1/12 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) (*.f64 1/72 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p)))))))))))))","(+.f64 1/2 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))))) (/.f64 (/.f64 (pow.f64 p 3) x) -1/144))) (+.f64 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (pow.f64 p 3)) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (/.f64 x p) (/.f64 x p))) (+.f64 (fma.f64 1/12 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (*.f64 (/.f64 x p) (/.f64 x p)) 1/72))) (fma.f64 -1/864 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 p 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 p 3)) (fma.f64 2/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (cbrt.f64 1/2)) (*.f64 (pow.f64 x 3) -1/432))))))) (fma.f64 1/6 (*.f64 (/.f64 x p) (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2))))))","(+.f64 1/2 (fma.f64 1/12 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (/.f64 (*.f64 x (*.f64 x (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))))) (/.f64 (/.f64 (pow.f64 p 3) x) -1/144))) (+.f64 (fma.f64 1/3 (/.f64 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (pow.f64 p 3)) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (/.f64 x p) (/.f64 x p))) (+.f64 (fma.f64 1/12 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (*.f64 (/.f64 x p) (/.f64 x p)) 1/72))) (fma.f64 -1/864 (/.f64 (pow.f64 (/.f64 x p) 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 p 3)) (fma.f64 2/3 (/.f64 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (cbrt.f64 1/2)) (*.f64 (pow.f64 x 3) -1/432))))))) (fma.f64 1/6 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))) (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2))))))","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)))","(+.f64 1/2 (neg.f64 (/.f64 (*.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4) p)))","(-.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 (*.f64 x 1/4) p)))","(-.f64 1/2 (*.f64 (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2))) (/.f64 (*.f64 x 1/4) p)))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))))) (pow.f64 p 2)) (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2))))))))","(+.f64 1/2 (fma.f64 -1 (/.f64 (*.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4) p) (fma.f64 1/72 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (/.f64 (cbrt.f64 1/2) (/.f64 (*.f64 p p) (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144)))))))","(+.f64 1/2 (-.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (/.f64 x p) (/.f64 x p))) 1/144)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 (*.f64 x 1/4) p))))","(+.f64 1/2 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (/.f64 x p) (/.f64 x p)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144))) (*.f64 -1/4 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))))))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x)) (*.f64 1/6 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) x))) p)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/864 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2)) 1/3) (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) x))) (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/432 (*.f64 (pow.f64 1 1/3) (pow.f64 x 3))) (*.f64 2/3 (/.f64 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))) (cbrt.f64 1/2))))) (*.f64 1/3 (-.f64 (*.f64 -1/32 (pow.f64 x 3)) (+.f64 (*.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 -1/288 (*.f64 (pow.f64 1 1/3) (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)))))))))) (pow.f64 p 3))) (+.f64 (*.f64 1/72 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (+.f64 (*.f64 -1/144 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 1/2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 p 2)))) (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2))) (*.f64 1/144 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)) 1/3) (pow.f64 x 2)))) (cbrt.f64 1/2)) (pow.f64 p 2)))))))","(+.f64 1/2 (fma.f64 -1 (/.f64 (*.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4))) 1/4) p) (fma.f64 -1 (/.f64 (+.f64 (*.f64 -1/864 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))) (fma.f64 1/12 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144)) x) (fma.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -1/432 (pow.f64 x 3)) (*.f64 2/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))) (cbrt.f64 1/2)))) (*.f64 1/3 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (fma.f64 1/1728 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -1/288 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2))))))))) (pow.f64 p 3)) (fma.f64 1/72 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 -1/144 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (/.f64 (*.f64 x x) (*.f64 p p))) (/.f64 (cbrt.f64 1/2) (/.f64 (*.f64 p p) (*.f64 (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4)))) -1/144))))))))","(+.f64 (-.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 1/2) 4)) (/.f64 (*.f64 x 1/4) p))) (-.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) (*.f64 (/.f64 x p) (/.f64 x p))) 1/144)) (/.f64 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -1/864 (fma.f64 1/12 (*.f64 x (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 4))) -1/144)))) (fma.f64 (cbrt.f64 1/2) (fma.f64 2/3 (/.f64 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)) (cbrt.f64 1/2)) (*.f64 (pow.f64 x 3) -1/432)) (*.f64 1/3 (-.f64 (*.f64 (pow.f64 x 3) -1/32) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -5/1728)))))) (pow.f64 p 3))))","(+.f64 1/2 (-.f64 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144)) (*.f64 p p)) (cbrt.f64 1/2)) (*.f64 (*.f64 (/.f64 x p) (/.f64 x p)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/2))) 1/144))) (*.f64 -1/4 (*.f64 (/.f64 x p) (cbrt.f64 (*.f64 1/2 (cbrt.f64 1/2)))))) (/.f64 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) -1/864 (fma.f64 1/12 (*.f64 x (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 (*.f64 x x) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 1/2 (cbrt.f64 1/2)))) -1/144)))) (fma.f64 (cbrt.f64 1/2) (fma.f64 2/3 (/.f64 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)) (cbrt.f64 1/2)) (*.f64 (pow.f64 x 3) -1/432)) (*.f64 1/3 (fma.f64 (pow.f64 x 3) -1/32 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 1/2) 2)) 5/1728)))))) (pow.f64 p 3))))"]],"stop":[["node limit",1]],"time":86.694091796875,"type":"simplify"},{"compiler":[[11913,9022]],"time":146.0791015625,"type":"eval"},{"alts":[["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","fresh",49.55894890778557],["(sqrt.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)))","done",16.21845430921753],["(sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2))","next",18.952207016725435]],"compiler":[[10,5],[18,15],[27,16],[10,5],[27,16]],"count":[[260,3]],"kept":[{"done":[1,0],"fresh":[1,1],"new":[257,1],"picked":[1,1]}],"min-error":[6.679182422133709],"time":81.35888671875,"type":"prune"},{"compiler":[[101,38]],"locations":[["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))",0.5335808928455937,true],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)",0.7741012695368841,true],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))",3.3012557604749637,true],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)",18.347916641706927,true]],"time":15.823974609375,"type":"localize"},{"count":[[4,63]],"series":[["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","p","-inf",0.255859375],["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","p","inf",0.306884765625],["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","p","0",0.197998046875],["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","x","-inf",0.367919921875],["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","x","inf",0.424072265625],["(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))","x","0",0.259033203125],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","p","-inf",0.5859375],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","p","inf",0.804931640625],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","p","0",0.296142578125],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","x","-inf",0.50390625],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","x","inf",0.512939453125],["(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","x","0",0.462158203125],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","p","-inf",0.4169921875],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","p","inf",0.449951171875],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","p","0",0.279052734375],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","x","-inf",0.410888671875],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","x","inf",0.44189453125],["(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","x","0",0.3662109375],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","p","-inf",0.69580078125],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","p","inf",2.388916015625],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","p","0",1.4609375],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","x","-inf",9.356201171875],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","x","inf",2.81103515625],["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","x","0",1.321044921875]],"time":25.93212890625,"type":"series"},{"count":[[4,127]],"egraph":[[2,3421,60,0.027165208000000003],[1,267,60,0.005011750000000001],[0,12,62,0.000380458]],"inputs":[["(fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)","(cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x)))","(pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2)","(/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) 2) (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 3) 1/8) (fma.f64 1/4 (pow.f64 (/.f64 x (hypot.f64 x (/.f64 0 0))) 2) (-.f64 1/4 (*.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 1/4 (pow.f64 (/.f64 x (hypot.f64 x (/.f64 0 0))) 2) -1/4) (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 x (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6) (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/2 (hypot.f64 x (/.f64 0 0)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (*.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)) (cbrt.f64 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 -1/2) (cbrt.f64 (/.f64 (neg.f64 (hypot.f64 x (/.f64 0 0))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 1/2)) (neg.f64 (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x) 2) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)) (cbrt.f64 1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6) (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 1/4) (pow.f64 (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 1/2) (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (cbrt.f64 1/2)) (cbrt.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 x (hypot.f64 x (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1/2 (hypot.f64 x (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2) (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 4) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 2) (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (/.f64 1 (/.f64 (neg.f64 (hypot.f64 x (/.f64 0 0))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (hypot.f64 x (/.f64 0 0))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (hypot.f64 x (/.f64 0 0))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (neg.f64 (hypot.f64 x (/.f64 0 0)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2) (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6)) (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1/2 (hypot.f64 x (/.f64 0 0))) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1/2 (hypot.f64 x (/.f64 0 0))) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1/2 (hypot.f64 x (/.f64 0 0))) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 (hypot.f64 x (/.f64 0 0)) x) 2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 1/2 x) (hypot.f64 x (/.f64 0 0)))) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",23],["egg-rr",39],["egg-rr",26]],"stop":[["node limit",1]],"time":58.11181640625,"type":"rewrite"},{"count":[[190,219]],"egraph":[[2,6137,3420,0.028856542],[1,1410,3687,0.012254667],[0,427,4246,0.002725584]],"inputs":[["1/2","1","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (cbrt.f64 1/2)) (pow.f64 x 4)) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))))","(+.f64 1 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 4/9 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2))))) (cbrt.f64 1/2)) (pow.f64 x 6)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 (cbrt.f64 1/2) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (cbrt.f64 1/2)) (pow.f64 x 4)) (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))))))))))))","(/.f64 (+.f64 (*.f64 2/3 (pow.f64 p 2)) (*.f64 1/3 (pow.f64 p 2))) (pow.f64 x 2))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))))))) (pow.f64 x 6)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))) (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))))))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))))) (pow.f64 p 2))) (pow.f64 x 8))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))))) (pow.f64 x 8))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))))))) (pow.f64 x 6)) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -4/9 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 4))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))))))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2)))) (*.f64 1/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)))))) (pow.f64 x 8)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)) (+.f64 (*.f64 -4/9 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 4))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2))) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))))) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2)) (pow.f64 x 8))))))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (*.f64 11/9 (/.f64 1 (pow.f64 x 4)))) (pow.f64 p 4))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 p 6) (-.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -56/27 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))) (*.f64 -728/81 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))))) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (pow.f64 x 2)))) (*.f64 266/81 (/.f64 1 (pow.f64 x 6))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (*.f64 11/9 (/.f64 1 (pow.f64 x 4)))) (pow.f64 p 4)))))","1/2","1/2","(cbrt.f64 1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (cbrt.f64 1/2)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (cbrt.f64 1/2)) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (cbrt.f64 1/2)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))))","(cbrt.f64 -1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 -1/2))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1/2) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4)))))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))))))","(cbrt.f64 1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))","(+.f64 (*.f64 14/9 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2)))","(+.f64 (*.f64 14/9 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 1/2) (*.f64 -364/81 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 6)) (pow.f64 x 6))))))","(pow.f64 (cbrt.f64 1/2) 2)","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 1/2) 2))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (pow.f64 (cbrt.f64 1/2) 2))))","(+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))))))))","(pow.f64 (cbrt.f64 -1/2) 2)","(+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))))","(+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))))))","(pow.f64 (cbrt.f64 1/2) 2)","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 1/2) 2))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)))) (pow.f64 p 4))))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 (+.f64 (*.f64 -56/27 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))) (*.f64 -728/81 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)))) (pow.f64 p 6)) (*.f64 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)))) (pow.f64 p 4)))))","(*.f64 1/4 (/.f64 x p))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))","(+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (*.f64 -5/4096 (/.f64 (pow.f64 x 7) (pow.f64 p 7))))))","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 4 (pow.f64 p 6))) (pow.f64 x 6))) (+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 x 4))))))","-1/2","(-.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) 1/2)","(-.f64 (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1/2)","(-.f64 (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -4 (pow.f64 p 6))) (pow.f64 x 6))))) 1/2)","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(*.f64 1/4 (/.f64 x p))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(*.f64 -1/4 (/.f64 x p))","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1/4 (/.f64 x p)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1/4 (/.f64 x p))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (*.f64 -1/4 (/.f64 x p)))))"]],"method":["egg-herbie"],"outputs":[["1/2","1","(+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 1 (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (cbrt.f64 1/2)) (pow.f64 x 4)) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))))))","(fma.f64 -1/6 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (pow.f64 x 4)) (+.f64 1 (fma.f64 -2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (/.f64 (fma.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))))) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))) (fma.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (/.f64 (*.f64 -1/3 (*.f64 p p)) (*.f64 x x)))))))","(+.f64 (+.f64 (+.f64 (/.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 1/2) 2)))) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))) (*.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))) (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1))","(+.f64 (-.f64 (+.f64 (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 4)) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (*.f64 (/.f64 4/9 (pow.f64 x 4)) (pow.f64 p 4))) (*.f64 (/.f64 p x) (/.f64 p x))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1))","(+.f64 1 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 (cbrt.f64 1/2) 2))) (*.f64 4/9 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2))))) (cbrt.f64 1/2)) (pow.f64 x 6)) (+.f64 (*.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (*.f64 (cbrt.f64 1/2) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 (cbrt.f64 1/2) 2)))) (cbrt.f64 1/2)) (pow.f64 x 4)) (+.f64 (*.f64 -2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))))))))))))","(+.f64 1 (fma.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 -1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (/.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)))))) (/.f64 (pow.f64 x 6) (cbrt.f64 1/2))) (fma.f64 2/9 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (/.f64 (pow.f64 x 6) (*.f64 p p))) (fma.f64 -2/3 (/.f64 (fma.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))))) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (cbrt.f64 1/2)))) (fma.f64 -1/6 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (pow.f64 x 4)) (+.f64 (/.f64 (fma.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))))) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))) (fma.f64 -2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -1/6 (/.f64 (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6))))))))))))","(+.f64 1 (fma.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (+.f64 (fma.f64 2/9 (/.f64 (*.f64 p p) (/.f64 (pow.f64 x 6) (*.f64 (pow.f64 p 4) -14/3))) (fma.f64 -2/3 (*.f64 (/.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 1/2) 2)))) (pow.f64 x 6)) (*.f64 p (*.f64 p (cbrt.f64 1/2)))) (+.f64 (fma.f64 -1/6 (/.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) (/.f64 -2/3 (*.f64 (/.f64 x p) (/.f64 x p)))) (fma.f64 -1/6 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (/.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 1/2) 2)))) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))))))) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) -1/3 (*.f64 (/.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (*.f64 (*.f64 (pow.f64 p 4) -14/3) (*.f64 (*.f64 p (*.f64 p (pow.f64 (cbrt.f64 1/2) 2))) 4/9))) (pow.f64 x 6)) (cbrt.f64 1/2))))))","(+.f64 1 (fma.f64 4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (+.f64 (fma.f64 2/9 (*.f64 (/.f64 (*.f64 p p) (pow.f64 x 6)) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 -2/3 (*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9))) (pow.f64 x 6)) (*.f64 p (*.f64 p (cbrt.f64 1/2)))) (+.f64 (fma.f64 -2/3 (*.f64 (/.f64 p x) (/.f64 p x)) (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 4)) (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9))))) (*.f64 -1/6 (+.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4))))))) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/9 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3))) (*.f64 -2/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27))))) (pow.f64 x 6)) (cbrt.f64 1/2))))))","(/.f64 (+.f64 (*.f64 2/3 (pow.f64 p 2)) (*.f64 1/3 (pow.f64 p 2))) (pow.f64 x 2))","(/.f64 (*.f64 (*.f64 p p) 1) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))))","(fma.f64 1/6 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (pow.f64 x 4)) (fma.f64 2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 4) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (/.f64 (*.f64 (*.f64 p p) 1/3) (*.f64 x x))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (+.f64 (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 1/3 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -4/9)) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))))))","(fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (+.f64 (+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (*.f64 (/.f64 -4/9 (pow.f64 x 4)) (pow.f64 p 4))) (*.f64 (/.f64 p x) (/.f64 p x))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))))))) (pow.f64 x 6)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))) (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2)))))))))))","(+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 4) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 -2/9 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (/.f64 (pow.f64 x 6) (*.f64 p p))) (fma.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2))))))) (fma.f64 1/6 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (pow.f64 x 4)) (fma.f64 2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (fma.f64 4/9 (*.f64 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 1/6 (/.f64 (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) (/.f64 (*.f64 (*.f64 p p) 1/3) (*.f64 x x))))))))))","(+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 (/.f64 (*.f64 p p) (/.f64 (pow.f64 x 6) (*.f64 (pow.f64 p 4) -14/3))) -2/9 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -4/9 (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (*.f64 p (*.f64 p (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))))) (fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (+.f64 (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 1/3 (*.f64 (/.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) 1/6)) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))))))))))","(+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (fma.f64 (*.f64 (/.f64 (*.f64 p p) (pow.f64 x 6)) (*.f64 (pow.f64 p 4) -14/3)) -2/9 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -4/9 (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (*.f64 p p))) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (+.f64 (+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/9 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3))) (*.f64 -2/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)))))) (*.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) 1/6)) (*.f64 (/.f64 p x) (/.f64 p x))))))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4))))) (pow.f64 x 4)) (+.f64 (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)) (pow.f64 x 6))) (+.f64 (*.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))))) (pow.f64 p 2))) (pow.f64 x 8))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 x 4))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))))) (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)))))) (pow.f64 x 8))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))))))) (pow.f64 x 6)) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 x 6))) (+.f64 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 -4/9 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 4))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))))))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2)))) (*.f64 1/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)))))) (pow.f64 x 8)) (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 4))) (+.f64 (*.f64 -1/2 (+.f64 (*.f64 16 (pow.f64 p 8)) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) 2)) (+.f64 (*.f64 -4/9 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 4))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2))) (+.f64 (*.f64 -8 (pow.f64 p 8)) (*.f64 -2 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2)))) (pow.f64 p 2))))))))) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -2/9 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (pow.f64 p 2)) (pow.f64 x 8))))))))))))))))","(+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 4) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 -2/9 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (/.f64 (pow.f64 x 6) (*.f64 p p))) (fma.f64 -4/9 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2))))))) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 8) (*.f64 (*.f64 p p) (fma.f64 4/9 (*.f64 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2))))))) (fma.f64 1/6 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (pow.f64 x 4)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (cbrt.f64 -1/2)) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 4/9 (*.f64 (pow.f64 p 4) (pow.f64 (cbrt.f64 -1/2) 2))))) (pow.f64 x 8)) (+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (fma.f64 4/9 (*.f64 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 2/3 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 1/6 (/.f64 (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) (+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 8) (fma.f64 -2/3 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 2 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27))))) (fma.f64 1/3 (pow.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) 2) (fma.f64 -8 (pow.f64 p 8) (*.f64 -2 (*.f64 (*.f64 p p) (fma.f64 8 (pow.f64 p 6) (*.f64 (*.f64 -2 (*.f64 (pow.f64 p 4) -6)) (*.f64 p p)))))))))))) (fma.f64 4/9 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (*.f64 p p) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))))) (*.f64 (*.f64 1/9 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) 2)))))) (fma.f64 1/6 (/.f64 (fma.f64 2 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (pow.f64 (*.f64 -2 (pow.f64 p 4)) 2)) (fma.f64 1/3 (pow.f64 (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)) 2) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27))))) (fma.f64 -8 (pow.f64 p 8) (*.f64 -2 (*.f64 (*.f64 p p) (fma.f64 8 (pow.f64 p 6) (*.f64 (*.f64 -2 (*.f64 (pow.f64 p 4) -6)) (*.f64 p p))))))))))) (pow.f64 x 8)) (fma.f64 1/3 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 -2/9 (/.f64 (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))) (/.f64 (pow.f64 x 8) (*.f64 p p)))))))))))))))))","(+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 (/.f64 (*.f64 p p) (/.f64 (pow.f64 x 6) (*.f64 (pow.f64 p 4) -14/3))) -2/9 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -4/9 (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (*.f64 p (*.f64 p (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2))))))) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (/.f64 (pow.f64 x 8) (*.f64 p p)) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 8)) (*.f64 (*.f64 (pow.f64 p 4) -14/3) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2)))))) (+.f64 (+.f64 (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (fma.f64 -2/3 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (*.f64 4/9 (pow.f64 (cbrt.f64 -1/2) 2)))))) (fma.f64 (/.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) 1/6 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 8)) (fma.f64 (*.f64 -2/3 (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (*.f64 4 (pow.f64 p 8))) (fma.f64 1/3 (pow.f64 (*.f64 (pow.f64 p 4) -14/3) 2) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 (*.f64 4/3 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (*.f64 p p) (fma.f64 -2 (*.f64 (*.f64 p p) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 8 (pow.f64 p 6)))) (*.f64 (pow.f64 p 8) -8))))))) (fma.f64 4/9 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (*.f64 p (*.f64 p (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (pow.f64 (*.f64 (pow.f64 p 4) -14/3) 2) 1/9))))))) (fma.f64 1/6 (/.f64 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (fma.f64 16 (pow.f64 p 8) (*.f64 4 (pow.f64 p 8))) (fma.f64 1/3 (pow.f64 (*.f64 (pow.f64 p 4) -14/3) 2) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 (*.f64 4/3 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (*.f64 p p) (fma.f64 -2 (*.f64 (*.f64 p p) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 8 (pow.f64 p 6)))) (*.f64 (pow.f64 p 8) -8))))))) (pow.f64 x 8)) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 1/3 (/.f64 (*.f64 (*.f64 -2/9 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (*.f64 p p)) (pow.f64 x 8))))))))))))","(+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (fma.f64 (*.f64 (/.f64 (*.f64 p p) (pow.f64 x 6)) (*.f64 (pow.f64 p 4) -14/3)) -2/9 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -4/9 (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (*.f64 p p))) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9)))) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 8) (*.f64 p p))) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/9 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3))) (*.f64 -2/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)))))) (fma.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) 1/6 (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 8)) (*.f64 (*.f64 (pow.f64 p 4) -14/3) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (pow.f64 p 4) 4/9))))) (+.f64 (+.f64 (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 2/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/9 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3))) (*.f64 -2/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27))))))) (fma.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) 1/6 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 8)) (fma.f64 (*.f64 -2/3 (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (*.f64 (pow.f64 p 8) 20) (fma.f64 1/3 (*.f64 (pow.f64 p 8) 196/9) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -14/3)) (+.f64 (*.f64 (pow.f64 p 8) -8) (*.f64 (*.f64 p p) (+.f64 (*.f64 -2 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 8 (pow.f64 p 6)))) (*.f64 4/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)))))))))) (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/9 (*.f64 (*.f64 p p) (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)))) (*.f64 1/9 (*.f64 (pow.f64 p 8) 196/9)))))))) (fma.f64 1/6 (/.f64 (fma.f64 2 (*.f64 (pow.f64 p 8) -6) (fma.f64 -1/2 (*.f64 (pow.f64 p 8) 20) (fma.f64 1/3 (*.f64 (pow.f64 p 8) 196/9) (fma.f64 -4/9 (*.f64 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -14/3)) (+.f64 (*.f64 (pow.f64 p 8) -8) (*.f64 (*.f64 p p) (+.f64 (*.f64 -2 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 8 (pow.f64 p 6)))) (*.f64 4/3 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)))))))))) (pow.f64 x 8)) (fma.f64 (*.f64 (/.f64 p x) (/.f64 p x)) 1/3 (*.f64 (/.f64 -2/9 (pow.f64 x 8)) (*.f64 (*.f64 p p) (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27))))))))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (*.f64 11/9 (/.f64 1 (pow.f64 x 4)))) (pow.f64 p 4))))","(+.f64 1 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4))))))","(+.f64 1 (fma.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4))) (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x))))","(+.f64 1 (fma.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4))) (*.f64 (/.f64 p x) (neg.f64 (/.f64 p x)))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 p 6) (-.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 -56/27 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))) (*.f64 -728/81 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))))) (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (pow.f64 x 2)))) (*.f64 266/81 (/.f64 1 (pow.f64 x 6))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 (+.f64 (*.f64 (cbrt.f64 1/2) (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))))) (*.f64 11/9 (/.f64 1 (pow.f64 x 4)))) (pow.f64 p 4)))))","(+.f64 1 (fma.f64 (pow.f64 p 6) (-.f64 (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81) (*.f64 -2/3 (/.f64 (cbrt.f64 1/2) (/.f64 (*.f64 x x) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9))))) (/.f64 266/81 (pow.f64 x 6))) (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (*.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4)))))))","(+.f64 1 (fma.f64 (pow.f64 p 6) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 1/2) (*.f64 x x)) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9)) (/.f64 -266/81 (pow.f64 x 6)))) (fma.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4))) (/.f64 (neg.f64 (*.f64 p p)) (*.f64 x x)))))","(+.f64 1 (fma.f64 (pow.f64 p 6) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81) (fma.f64 -2/3 (*.f64 (/.f64 (cbrt.f64 1/2) (*.f64 x x)) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9)) (/.f64 -266/81 (pow.f64 x 6)))) (fma.f64 (pow.f64 p 4) (fma.f64 (cbrt.f64 1/2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (/.f64 11/9 (pow.f64 x 4))) (*.f64 (/.f64 p x) (neg.f64 (/.f64 p x))))))","1/2","1/2","(cbrt.f64 1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))","(fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2))","(fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (cbrt.f64 1/2)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2)))","(fma.f64 -1/3 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2)))","(fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (cbrt.f64 1/2)) (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6))))) (cbrt.f64 1/2)) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (cbrt.f64 1/2)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))))","(fma.f64 -1/3 (/.f64 (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))) (/.f64 (pow.f64 x 6) (cbrt.f64 1/2))) (fma.f64 -1/3 (/.f64 (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)) (/.f64 (pow.f64 x 4) (cbrt.f64 1/2))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2))))","(fma.f64 -1/3 (*.f64 (/.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 x 6)) (cbrt.f64 1/2)) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (cbrt.f64 1/2)) (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2))))","(+.f64 (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2)) (*.f64 -1/3 (*.f64 (cbrt.f64 1/2) (+.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4))))))","(cbrt.f64 -1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 -1/2))","(fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (cbrt.f64 -1/2))","(fma.f64 -2/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (cbrt.f64 -1/2) x)) (cbrt.f64 -1/2))","(fma.f64 -2/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (cbrt.f64 -1/2)) (cbrt.f64 -1/2))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1/2) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4)))))","(+.f64 (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (cbrt.f64 -1/2)) (*.f64 -1/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 4) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))))))","(fma.f64 -2/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (cbrt.f64 -1/2) x)) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (*.f64 (pow.f64 p 4) -14/3)) (cbrt.f64 -1/2)))","(fma.f64 -2/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (cbrt.f64 -1/2)) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (cbrt.f64 -1/2)) (cbrt.f64 -1/2)))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))))))","(+.f64 (fma.f64 -2/3 (/.f64 (cbrt.f64 -1/2) (/.f64 (*.f64 x x) (*.f64 p p))) (cbrt.f64 -1/2)) (*.f64 -1/3 (+.f64 (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 6) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))) (*.f64 (pow.f64 p 6) -8/27)))))) (/.f64 (cbrt.f64 -1/2) (/.f64 (pow.f64 x 4) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3)))))))","(fma.f64 -2/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (cbrt.f64 -1/2) x)) (fma.f64 -1/3 (+.f64 (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 4)) (*.f64 (pow.f64 p 4) -14/3)) (*.f64 (/.f64 (cbrt.f64 -1/2) (pow.f64 x 6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27)))))) (cbrt.f64 -1/2)))","(fma.f64 -2/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (cbrt.f64 -1/2)) (fma.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (cbrt.f64 -1/2)) (*.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) (cbrt.f64 -1/2))) (cbrt.f64 -1/2)))","(cbrt.f64 1/2)","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2))","(fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2))","(fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2))","(+.f64 (*.f64 14/9 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (cbrt.f64 1/2)))","(fma.f64 14/9 (/.f64 (cbrt.f64 1/2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2)))","(fma.f64 14/9 (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (cbrt.f64 1/2)))","(+.f64 (*.f64 14/9 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (cbrt.f64 1/2) (*.f64 -364/81 (/.f64 (*.f64 (cbrt.f64 1/2) (pow.f64 p 6)) (pow.f64 x 6))))))","(fma.f64 14/9 (/.f64 (cbrt.f64 1/2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (+.f64 (fma.f64 -2/3 (/.f64 (*.f64 (*.f64 p p) (cbrt.f64 1/2)) (*.f64 x x)) (cbrt.f64 1/2)) (*.f64 -364/81 (/.f64 (cbrt.f64 1/2) (/.f64 (pow.f64 x 6) (pow.f64 p 6))))))","(fma.f64 14/9 (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (fma.f64 -364/81 (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 6)) (pow.f64 p 6)) (cbrt.f64 1/2))))","(fma.f64 14/9 (*.f64 (/.f64 (cbrt.f64 1/2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (/.f64 (*.f64 p (*.f64 p (cbrt.f64 1/2))) (*.f64 x x)) (fma.f64 -364/81 (*.f64 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (cbrt.f64 1/2)) (cbrt.f64 1/2))))","(pow.f64 (cbrt.f64 1/2) 2)","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (pow.f64 (cbrt.f64 1/2) 2))))","(fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (fma.f64 -2/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 4) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)))) (pow.f64 (cbrt.f64 1/2) 2))))","(fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) (*.f64 (pow.f64 p 4) -14/3)) (pow.f64 (cbrt.f64 1/2) 2))))","(fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 -2/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (pow.f64 (cbrt.f64 1/2) 2)) (pow.f64 (cbrt.f64 1/2) 2))))","(+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))))))))","(fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))))) (fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (+.f64 (fma.f64 -2/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 4) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)))) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 -2/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (pow.f64 x 6) (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))))))))))","(fma.f64 4/9 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3))) (fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 -2/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (pow.f64 (cbrt.f64 1/2) 2))))))","(fma.f64 4/9 (*.f64 (*.f64 (/.f64 (*.f64 p p) (pow.f64 x 6)) (*.f64 (pow.f64 p 4) -14/3)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 -2/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 -2/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27))) (pow.f64 (cbrt.f64 1/2) 2))))))","(pow.f64 (cbrt.f64 -1/2) 2)","(+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))","(+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p)))))","(fma.f64 -4/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 x x)) (*.f64 p p)) (pow.f64 (cbrt.f64 -1/2) 2))","(fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (cbrt.f64 -1/2) 2))","(+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))))","(fma.f64 -2/3 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 4) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)))) (fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p)))))))","(fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1/2) 2))) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -4/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 x x)) (*.f64 p p)) (pow.f64 (cbrt.f64 -1/2) 2))))","(fma.f64 -2/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 4/9 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (cbrt.f64 -1/2) 2))))","(+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 4)) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))))) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (+.f64 (*.f64 4/3 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (+.f64 (*.f64 8 (pow.f64 p 6)) (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -8/27 (pow.f64 p 6)))))) (pow.f64 x 6))) (+.f64 (*.f64 4/9 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (+.f64 (*.f64 4/3 (pow.f64 p 4)) (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -4 (pow.f64 p 4)))) (pow.f64 p 2))) (pow.f64 x 6))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))))))))","(fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 4) (pow.f64 p 4))) (fma.f64 -2/3 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 4) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6)))) (fma.f64 -2/3 (/.f64 (*.f64 (fma.f64 4/3 (*.f64 (*.f64 p p) (fma.f64 -2 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -8/3))) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -6)) (*.f64 (pow.f64 p 6) -8/27)))) (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 x 6)) (fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (fma.f64 4/3 (pow.f64 p 4) (*.f64 (pow.f64 p 4) -6))))) (+.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p)))))))))","(fma.f64 4/9 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 x 4)) (pow.f64 p 4)) (fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1/2) 2))) (fma.f64 -2/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 x 6)) (fma.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)) (fma.f64 8 (pow.f64 p 6) (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 (pow.f64 p 6) -8/27))))) (fma.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (pow.f64 x 6) (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (fma.f64 -4/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 x x)) (*.f64 p p)) (pow.f64 (cbrt.f64 -1/2) 2))))))","(fma.f64 4/9 (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 -2/3 (*.f64 (/.f64 (*.f64 (pow.f64 p 4) -14/3) (pow.f64 x 4)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 -2/3 (*.f64 (/.f64 (+.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -6) (*.f64 4/3 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -14/3)))) (*.f64 (pow.f64 p 6) 208/27)) (pow.f64 x 6)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 4/9 (*.f64 (*.f64 (/.f64 (*.f64 p p) (pow.f64 x 6)) (*.f64 (pow.f64 p 4) -14/3)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (cbrt.f64 -1/2) 2))))))","(pow.f64 (cbrt.f64 1/2) 2)","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (pow.f64 (cbrt.f64 1/2) 2))","(fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (*.f64 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)))) (pow.f64 p 4))))","(+.f64 (fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (pow.f64 (cbrt.f64 1/2) 2)) (*.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9)))","(fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (fma.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (pow.f64 (cbrt.f64 1/2) 2)))","(fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (pow.f64 (cbrt.f64 1/2) 2)))","(+.f64 (*.f64 -4/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 p 2)) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 1/2) 2) (+.f64 (*.f64 (+.f64 (*.f64 -56/27 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6))) (*.f64 -728/81 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)))) (pow.f64 p 6)) (*.f64 (+.f64 (*.f64 4/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4))) (*.f64 28/9 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)))) (pow.f64 p 4)))))","(+.f64 (fma.f64 -4/3 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (/.f64 (*.f64 x x) (*.f64 p p))) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81) (pow.f64 p 6) (*.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9))))","(+.f64 (fma.f64 -4/3 (*.f64 (/.f64 (*.f64 p p) x) (/.f64 (pow.f64 (cbrt.f64 1/2) 2) x)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (*.f64 (pow.f64 p 6) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81))))","(+.f64 (fma.f64 -4/3 (*.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (pow.f64 (cbrt.f64 1/2) 2)) (pow.f64 (cbrt.f64 1/2) 2)) (fma.f64 (pow.f64 p 4) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 4)) 32/9) (*.f64 (pow.f64 p 6) (*.f64 (/.f64 (pow.f64 (cbrt.f64 1/2) 2) (pow.f64 x 6)) -896/81))))","(*.f64 1/4 (/.f64 x p))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p)))","(fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (*.f64 1/4 (/.f64 x p)))","(+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p))))","(fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/4 (/.f64 x p)) (*.f64 -5/4096 (/.f64 (pow.f64 x 7) (pow.f64 p 7))))))","(fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) (*.f64 -5/4096 (/.f64 (pow.f64 x 7) (pow.f64 p 7))))))","(fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/4 (/.f64 x p) (/.f64 -5/4096 (/.f64 (pow.f64 p 7) (pow.f64 x 7))))))","(fma.f64 3/512 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (fma.f64 1/4 (/.f64 x p) (/.f64 -5/4096 (/.f64 (pow.f64 p 7) (pow.f64 x 7))))))","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1/2 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 x 4)))))","(+.f64 1/2 (*.f64 -1 (+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 (pow.f64 p 4) -3) (pow.f64 x 4)))))","(-.f64 (-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x))) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3))","(-.f64 1/2 (fma.f64 (/.f64 p x) (/.f64 p x) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 4 (pow.f64 p 6))) (pow.f64 x 6))) (+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (pow.f64 p 4)) (*.f64 -1 (pow.f64 p 4))) (pow.f64 x 4))))))","(fma.f64 -1 (/.f64 (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 (pow.f64 p 4) -3)) (*.f64 4 (pow.f64 p 6))) (pow.f64 x 6)) (+.f64 1/2 (*.f64 -1 (+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 (pow.f64 p 4) -3) (pow.f64 x 4))))))","(-.f64 (-.f64 (-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x))) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3)) (/.f64 (fma.f64 -2 (*.f64 (pow.f64 p 6) -3) (*.f64 4 (pow.f64 p 6))) (pow.f64 x 6)))","(-.f64 (-.f64 1/2 (/.f64 (fma.f64 4 (pow.f64 p 6) (neg.f64 (*.f64 (pow.f64 p 6) -6))) (pow.f64 x 6))) (fma.f64 (/.f64 p x) (/.f64 p x) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3)))","-1/2","(-.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) 1/2)","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) -1/2)","(+.f64 (*.f64 (/.f64 p x) (/.f64 p x)) -1/2)","(fma.f64 (/.f64 p x) (/.f64 p x) -1/2)","(-.f64 (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4)))) 1/2)","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (-.f64 (neg.f64 (/.f64 (*.f64 3 (pow.f64 p 4)) (pow.f64 x 4))) 1/2))","(+.f64 -1/2 (-.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (/.f64 (*.f64 (pow.f64 p 4) 3) (pow.f64 x 4))))","(+.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3 -1/2))","(-.f64 (+.f64 (/.f64 (pow.f64 p 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 x 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 p 4) (*.f64 2 (pow.f64 p 4))) (pow.f64 p 2))) (*.f64 -4 (pow.f64 p 6))) (pow.f64 x 6))))) 1/2)","(+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 3 (pow.f64 p 4)) (pow.f64 x 4)) (/.f64 (fma.f64 -2 (*.f64 (*.f64 p p) (*.f64 3 (pow.f64 p 4))) (*.f64 -4 (pow.f64 p 6))) (pow.f64 x 6)))) 1/2))","(+.f64 (*.f64 (/.f64 p x) (/.f64 p x)) (fma.f64 -1 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 3 (/.f64 (fma.f64 -4 (pow.f64 p 6) (*.f64 (pow.f64 p 6) -6)) (pow.f64 x 6))) -1/2))","(+.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 3 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))))) (fma.f64 (/.f64 p x) (/.f64 p x) -1/2))","1/2","(+.f64 1/2 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))))","(+.f64 1/2 (neg.f64 (/.f64 (*.f64 p p) (*.f64 x x))))","(-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x)))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4)))))","(+.f64 1/2 (*.f64 -1 (+.f64 (/.f64 (*.f64 p p) (*.f64 x x)) (/.f64 (*.f64 (pow.f64 p 4) -3) (pow.f64 x 4)))))","(-.f64 (-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x))) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3))","(-.f64 1/2 (fma.f64 (/.f64 p x) (/.f64 p x) (*.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) -3)))","(+.f64 1/2 (+.f64 (*.f64 -1 (/.f64 (pow.f64 p 2) (pow.f64 x 2))) (+.f64 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6))) (*.f64 3 (/.f64 (pow.f64 p 4) (pow.f64 x 4))))))","(+.f64 1/2 (fma.f64 -1 (/.f64 (*.f64 p p) (*.f64 x x)) (fma.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6)) (/.f64 (*.f64 3 (pow.f64 p 4)) (pow.f64 x 4)))))","(+.f64 (-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x))) (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 3 (/.f64 -10 (/.f64 (pow.f64 x 6) (pow.f64 p 6)))))","(+.f64 (-.f64 1/2 (*.f64 (/.f64 p x) (/.f64 p x))) (fma.f64 (/.f64 (pow.f64 p 4) (pow.f64 x 4)) 3 (*.f64 -10 (/.f64 (pow.f64 p 6) (pow.f64 x 6)))))","(*.f64 1/4 (/.f64 x p))","(+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))","(fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p)))","(fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (*.f64 1/4 (/.f64 x p)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) -3/256) (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (*.f64 1/4 (/.f64 x p))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (+.f64 (*.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (fma.f64 -1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 1/4 (/.f64 x p)))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) -3/256) (fma.f64 -1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (fma.f64 -1/32 (pow.f64 (/.f64 x p) 3) (*.f64 1/4 (/.f64 x p)))))","(*.f64 -1/4 (/.f64 x p))","(*.f64 (/.f64 x p) -1/4)","(+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1/4 (/.f64 x p)))","(fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) -1/4))","(fma.f64 (/.f64 x p) -1/4 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32))","(fma.f64 (/.f64 x p) -1/4 (*.f64 (pow.f64 (/.f64 x p) 3) 1/32))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (*.f64 -1/4 (/.f64 x p))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (*.f64 (/.f64 x p) -1/4)))","(fma.f64 1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 (/.f64 x p) -1/4 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32)))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) -3/256) (fma.f64 (/.f64 x p) -1/4 (*.f64 (pow.f64 (/.f64 x p) 3) 1/32)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 p 5))) (+.f64 (*.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1/8 (*.f64 (+.f64 (*.f64 -1/256 (pow.f64 x 5)) (*.f64 -1/128 (pow.f64 x 5))) (pow.f64 x 2))) (*.f64 1/1024 (pow.f64 x 7))) (pow.f64 p 7))) (*.f64 -1/4 (/.f64 x p)))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 x 5) -3/256) (pow.f64 p 5)) (fma.f64 1/32 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) (fma.f64 1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (*.f64 (/.f64 x p) -1/4))))","(fma.f64 1/2 (/.f64 (pow.f64 x 5) (/.f64 (pow.f64 p 5) -3/256)) (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 p 3)) 1/32 (fma.f64 1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (*.f64 (/.f64 x p) -1/4))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 x 5) (pow.f64 p 5)) -3/256) (fma.f64 (pow.f64 (/.f64 x p) 3) 1/32 (fma.f64 1/2 (/.f64 (fma.f64 -1/8 (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 5) -3/256)) (*.f64 (pow.f64 x 7) 1/1024)) (pow.f64 p 7)) (*.f64 (/.f64 x p) -1/4))))"]],"stop":[["node limit",1]],"time":71.176025390625,"type":"simplify"},{"compiler":[[15233,11034]],"time":172.364013671875,"type":"eval"},{"alts":[["(sqrt.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)))","done",16.21845430921753],["(sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2))","done",18.952207016725435],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","next",49.55894890778557]],"compiler":[[18,15],[27,16],[10,5],[10,5]],"count":[[353,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[350,1],"picked":[1,1]}],"min-error":[6.679182422133709],"time":43.18115234375,"type":"prune"},{"compiler":[[22,5]],"locations":[["(*.f64 (/.f64 p x) (/.f64 p x))",0.236660009768442,true],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))",21.754991243645584,true]],"time":3.6689453125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (/.f64 p x) (/.f64 p x))","x","-inf",0.166015625],["(*.f64 (/.f64 p x) (/.f64 p x))","x","inf",0.2529296875],["(*.f64 (/.f64 p x) (/.f64 p x))","x","0",0.554931640625],["(*.f64 (/.f64 p x) (/.f64 p x))","p","-inf",0.153076171875],["(*.f64 (/.f64 p x) (/.f64 p x))","p","inf",0.469970703125],["(*.f64 (/.f64 p x) (/.f64 p x))","p","0",0.491943359375],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","x","-inf",0.1591796875],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","x","inf",0.31884765625],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","x","0",0.31103515625],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","p","-inf",0.16796875],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","p","inf",0.454833984375],["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","p","0",0.383056640625]],"time":4.029052734375,"type":"series"},{"count":[[2,86]],"egraph":[[2,1592,11,0.016318042],[1,130,11,0.002181292],[0,6,11,0.000156167]],"inputs":[["(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","(*.f64 (/.f64 p x) (/.f64 p x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 p x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 p (pow.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 p x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 p x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 p) 2) (*.f64 (cbrt.f64 p) (pow.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 p x)) (pow.f64 (cbrt.f64 (/.f64 p x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 p x)) 2) (cbrt.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 p) (*.f64 (sqrt.f64 p) (pow.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 p x)) (sqrt.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 p) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1) p)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (/.f64 p x) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 p x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (/.f64 p x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 p x) 4)) 1/2) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 p x)) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 p) (fabs.f64 (pow.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fabs.f64 (pow.f64 (cbrt.f64 (/.f64 p x)) 2)) (fabs.f64 (cbrt.f64 (/.f64 p x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 p) 2) 1) (/.f64 (cbrt.f64 p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 p) 1) (/.f64 (sqrt.f64 p) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 p (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 p) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 p) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 p (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 p) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 p) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 p x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x p))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (fabs.f64 (/.f64 x p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 x p) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 p) 2) (/.f64 x (cbrt.f64 p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 p) (/.f64 x (sqrt.f64 p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 p) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 p (/.f64 p x))) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 x p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 p) (fabs.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fabs.f64 (neg.f64 p)) (fabs.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 p)) (neg.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 p 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 p (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 p (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 p x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 p x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 p x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 p x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 p x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x p) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 p (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 p x))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (neg.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 p x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 p x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (/.f64 p x) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 p (*.f64 (/.f64 x p) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 p (*.f64 x (/.f64 x p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 p (/.f64 (*.f64 x x) p))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 p (/.f64 x (/.f64 p x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 p x) (/.f64 x p))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 x p) (/.f64 x p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x x) (*.f64 p p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 p (/.f64 p x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 p p) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 p) (*.f64 (/.f64 x p) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 p (/.f64 p x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 p) (neg.f64 p)) (*.f64 (neg.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 p p)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 p (/.f64 p x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 p) p) (*.f64 (neg.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 p) 1) (*.f64 (neg.f64 x) (/.f64 x p)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 p (neg.f64 p)) (*.f64 x (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 p (/.f64 p x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 p (/.f64 p x)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 p (/.f64 p x)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 p) (/.f64 p x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 p x) (neg.f64 p)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 p x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 p x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 p x) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 p x) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 p x)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 p x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (/.f64 p x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 p x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 p x) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 p x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 p x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 p x)) 2))))))"]],"rules":[["egg-rr",35],["egg-rr",51]],"stop":[["node limit",1]],"time":37.684814453125,"type":"rewrite"},{"count":[[134,90]],"egraph":[[8,7675,352,0.038045167],[7,5680,352,0.028491166999999998],[6,4905,352,0.018135709],[5,3271,352,0.010384251],[4,435,352,0.004612459],[3,106,352,0.001011959],[2,42,352,0.00038979300000000004],[1,22,352,0.000193668],[0,10,352,7.6834e-5]],"inputs":[["(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(*.f64 -1 (/.f64 p x))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(/.f64 p x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(*.f64 -1 (/.f64 p x))","(neg.f64 (/.f64 p x))","(/.f64 (neg.f64 p) x)","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))","(/.f64 (pow.f64 p 2) (pow.f64 x 2))","(/.f64 (*.f64 p p) (*.f64 x x))","(*.f64 (/.f64 p x) (/.f64 p x))","(*.f64 p (/.f64 p (*.f64 x x)))"]],"stop":[["node limit",1]],"time":56.31103515625,"type":"simplify"},{"compiler":[[732,332]],"time":9.56494140625,"type":"eval"},{"alts":[["(fabs.f64 (/.f64 p x))","fresh",42.6218595551036],["(sqrt.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)))","done",16.21845430921753],["(sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2))","done",18.952207016725435]],"compiler":[[6,4],[18,15],[27,16]],"count":[[93,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[90,1],"picked":[1,0]}],"min-error":[0.18055255235740236],"time":11.6611328125,"type":"prune"},{"accuracy":[0.18445880235740236],"baseline":[16.21845430820683],"branch":[["p",11.407450016159995,7],["x",8.218842116728238,6],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))",0.18445880235740236,2],["(*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))))",0.18445880235740236,2],["(+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))",0.18445880235740236,2],["(/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))",0.18445880235740236,2],["(*.f64 (*.f64 4 p) p)",14.594179167255914,3]],"compiler":[[3,2],[3,2],[19,14],[18,13],[16,11],[14,9],[7,5],[95,55]],"count":[[7,2]],"inputs":[["(fabs.f64 (/.f64 p x))","(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","(sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2))","(sqrt.f64 (*.f64 (/.f64 p x) (/.f64 p x)))","(sqrt.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 1/2 (/.f64 x (hypot.f64 x (*.f64 p 2))) 1/2))) 3)))","(sqrt.f64 (fma.f64 1/2 (/.f64 x (sqrt.f64 (fma.f64 x x (*.f64 4 (*.f64 p p))))) 1/2))","(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))"]],"link":["."],"name":["Given's Rotation SVD example"],"oracle":[61.83221825074982],"outputs":[["(fabs.f64 (/.f64 p x))","(sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2))"]],"time":73.1708984375,"times":[["p",26.22607421875],["x",22.27099609375],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))))",3.384033203125],["(*.f64 1/2 (+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))))",3.47802734375],["(+.f64 1 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))))",3.326171875],["(/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x))))",4.19091796875],["(*.f64 (*.f64 4 p) p)",8.14501953125]],"type":"regimes"},{"bstep":[[-0.9999999987005929,-0.999999995580661,0.095947265625]],"compiler":[[10,9],[14,9]],"method":["left-value"],"time":0.215087890625,"type":"bsearch"},{"compiler":[[46,28]],"egraph":[[1,32,67,7.4792e-5],[0,26,67,4.2542e-5]],"inputs":[["(if (<=.f64 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))) -9007199218712195/9007199254740992) (fabs.f64 (/.f64 p x)) (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 x (sqrt.f64 (+.f64 (*.f64 (*.f64 4 p) p) (*.f64 x x)))) -9007199218712195/9007199254740992) (fabs.f64 (/.f64 p x)) (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)))","(if (<=.f64 (/.f64 x (sqrt.f64 (+.f64 (*.f64 p (*.f64 4 p)) (*.f64 x x)))) -9007199218712195/9007199254740992) (fabs.f64 (/.f64 p x)) (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 (hypot.f64 x (+.f64 p p)) x))) 1/2)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.97900390625,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[46,28]],"remove-preprocessing":[[]],"time":15.799072265625,"type":"end"}]