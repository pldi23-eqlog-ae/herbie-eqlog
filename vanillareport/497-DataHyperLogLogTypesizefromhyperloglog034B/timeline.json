[{"compiler":[[9,6]],"method":["search"],"sampling":[[12,0.4463411442702636,0.07658531109336764,0.47707354463636875],[11,0.42438994045369327,0.10634138737805188,0.46926867216825485],[10,0.3960972777567804,0.15024379501119256,0.45365892723202705],[9,0.3551216972991824,0.20682912040501833,0.43804918229579926],[8,0.30439002625644207,0.28878028132021427,0.40682969242334366],[7,0.23414617404341698,0.39024362340569496,0.37561020255088806],[6,0.15609744936227798,0.5307313278317451,0.31317122280597687],[5,0.062438979744911194,0.6868287771940231,0.2507322430610657],[4,0.0,0.8741457164287567,0.1258542835712433],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":22.26416015625,"type":"analyze"},{"outcomes":[["body",256,"invalid",15.529541015625,418],["body",256,"valid",360.17431640625,8256]],"time":383.27587890625,"type":"sample"},{"compiler":[[8,5]],"egraph":[[0,2,2,1.833e-6],[18,6624,18,0.08695862500000001],[17,6608,18,0.07190212500000001],[16,6490,18,0.06297466600000001],[15,6279,18,0.05564466600000001],[14,6078,18,0.048886541000000006],[13,5662,18,0.042578791000000005],[12,3500,18,0.033813333],[11,1619,18,0.020218666],[10,1092,18,0.01353225],[9,982,18,0.010074042],[8,711,18,0.007420125],[7,423,18,0.003810916],[6,251,18,0.002087916],[5,141,18,0.0010815],[4,77,18,0.000551458],[3,39,18,0.000289625],[2,19,18,0.000156458],[1,15,18,8.770800000000001e-5],[0,9,18,4.5417e-5]],"inputs":[["0","1"],["(*.f64 x (log.f64 (/.f64 x y)))","(*.f64 y (log.f64 (/.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 x (log.f64 (/.f64 x y)))","(*.f64 y (log.f64 (/.f64 y x)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":111.47412109375,"type":"preprocess"},{"count":[[1,1]],"egraph":[[27,6006,9,0.13817704200000003],[26,6002,9,0.12795079200000004],[25,5978,9,0.11878087500000002],[24,5978,9,0.10960745900000002],[23,5962,9,0.10416404200000001],[22,5938,9,0.09871979200000001],[21,5908,9,0.09312933400000001],[20,5628,9,0.08588245900000001],[19,5316,9,0.076411501],[18,5311,9,0.065055501],[17,5293,9,0.057017876],[16,5230,9,0.049478792],[15,5037,9,0.042028083],[14,4443,9,0.034292958],[13,3055,9,0.026065874999999995],[12,1650,9,0.016385208999999998],[11,870,9,0.009324084],[10,692,9,0.006619959],[9,539,9,0.0046521670000000005],[8,307,9,0.0030631670000000003],[7,182,9,0.001706],[6,110,9,0.000967917],[5,73,9,0.00058225],[4,42,9,0.0003365],[3,23,9,0.000191042],[2,12,9,0.000111667],[1,10,9,6.4917e-5],[0,6,9,3.35e-5]],"inputs":[["(*.f64 x (log.f64 (/.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (log.f64 (/.f64 x y)))"]],"stop":[["node limit",1]],"time":150.44287109375,"type":"simplify"},{"compiler":[[8,5]],"time":0.22705078125,"type":"eval"},{"alts":[["(*.f64 x (log.f64 (/.f64 x y)))","next",14.508686291601665]],"compiler":[[8,5],[8,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[14.508686291601665],"time":0.6689453125,"type":"prune"},{"compiler":[[17,5]],"locations":[["(*.f64 x (log.f64 (/.f64 x y)))",0.234375,true],["(log.f64 (/.f64 x y))",13.87224641405028,true]],"time":4.110107421875,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 x (log.f64 (/.f64 x y)))","y","-inf",0.296875],["(*.f64 x (log.f64 (/.f64 x y)))","y","inf",0.2880859375],["(*.f64 x (log.f64 (/.f64 x y)))","y","0",0.2919921875],["(*.f64 x (log.f64 (/.f64 x y)))","x","-inf",0.537109375],["(*.f64 x (log.f64 (/.f64 x y)))","x","inf",0.345947265625],["(*.f64 x (log.f64 (/.f64 x y)))","x","0",12.052978515625],["(log.f64 (/.f64 x y))","y","-inf",7.43896484375],["(log.f64 (/.f64 x y))","y","inf",4.131103515625],["(log.f64 (/.f64 x y))","y","0",8.267822265625],["(log.f64 (/.f64 x y))","x","-inf",10.503173828125],["(log.f64 (/.f64 x y))","x","inf",4.451904296875],["(log.f64 (/.f64 x y))","x","0",15.43994140625]],"time":67.708984375,"type":"series"},{"count":[[2,36]],"egraph":[[2,1576,15,0.017127708],[1,122,15,0.002121291],[0,6,15,0.000141625]],"inputs":[["(log.f64 (/.f64 x y))","(*.f64 x (log.f64 (/.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 x) (neg.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 x y))) (log.f64 (sqrt.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 x y)) 2)) (log.f64 (cbrt.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 x) (log.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (/.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (/.f64 x y))) (sqrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (log.f64 x) (log.f64 x)) (*.f64 (log.f64 y) (log.f64 y))) (+.f64 (log.f64 x) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (/.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (/.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (/.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (/.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (/.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (/.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (/.f64 x y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))))))"]],"rules":[["egg-rr",11],["egg-rr",25]],"stop":[["node limit",1]],"time":36.47900390625,"type":"rewrite"},{"count":[[84,47]],"egraph":[[20,5747,456,0.13731716700000002],[19,5747,456,0.12403816700000002],[18,5723,456,0.11490166700000001],[17,5683,456,0.10491937500000001],[16,5675,456,0.09743254200000001],[15,5649,456,0.091994083],[14,5619,456,0.086609375],[13,5538,456,0.080942583],[12,4970,456,0.0734635],[11,4694,456,0.0628565],[10,4693,456,0.053771957999999995],[9,4679,456,0.04704575],[8,4653,456,0.040461625],[7,4540,456,0.033742291],[6,3828,456,0.026339833],[5,1867,456,0.017260458],[4,879,456,0.007567791],[3,343,456,0.002699791],[2,125,456,0.0009889999999999999],[1,61,456,0.000409875],[0,31,504,0.00015725]],"inputs":[["(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x)))","(fma.f64 -1 (log.f64 y) (log.f64 x))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))"]],"stop":[["node limit",1]],"time":169.266845703125,"type":"simplify"},{"compiler":[[483,215]],"time":5.031005859375,"type":"eval"},{"alts":[["(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","fresh",41.45637384023131],["(*.f64 x (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y))))))","fresh",33.383352550271304],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","fresh",14.93668177620642],["(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","fresh",33.31495850001146],["(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","fresh",31.391318855889793],["(*.f64 x (log.f64 (/.f64 x y)))","done",14.508686291601665],["(*.f64 x (pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 2))","fresh",39.94664003907377],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","next",14.923935548058635],["(*.f64 x (/.f64 (-.f64 (*.f64 (log.f64 x) (log.f64 x)) (*.f64 (log.f64 y) (log.f64 y))) (+.f64 (log.f64 x) (log.f64 y))))","fresh",33.45405719547766]],"compiler":[[11,8],[31,16],[11,8],[9,6],[11,8],[8,5],[11,8],[11,8],[21,10],[11,8],[31,16],[11,8],[9,6],[11,8],[11,8],[11,8],[21,10]],"count":[[48,9]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[47,8],"picked":[1,1]}],"min-error":[0.125],"time":9.47119140625,"type":"prune"},{"compiler":[[33,11]],"locations":[["(cbrt.f64 (log.f64 (/.f64 x y)))",0.09765625,true],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))",0.234375,true],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)",0.7746240723585869,true],["(log.f64 (/.f64 x y))",13.87224641405028,false]],"time":7.5908203125,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (log.f64 (/.f64 x y)))","y","-inf",0.175048828125],["(cbrt.f64 (log.f64 (/.f64 x y)))","y","inf",0.1669921875],["(cbrt.f64 (log.f64 (/.f64 x y)))","y","0",0.169921875],["(cbrt.f64 (log.f64 (/.f64 x y)))","x","-inf",0.18017578125],["(cbrt.f64 (log.f64 (/.f64 x y)))","x","inf",0.2041015625],["(cbrt.f64 (log.f64 (/.f64 x y)))","x","0",0.1591796875],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","y","-inf",0.308837890625],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","y","inf",0.303955078125],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","y","0",0.2939453125],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","x","-inf",0.489990234375],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","x","inf",0.43994140625],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","x","0",0.323974609375],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","y","-inf",1.35302734375],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","y","inf",1.329833984375],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","y","0",1.422119140625],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","x","-inf",1.470947265625],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","x","inf",5.462158203125],["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","x","0",1.697998046875]],"time":16.20703125,"type":"series"},{"count":[[3,61]],"egraph":[[2,2088,23,0.019277334],[1,191,23,0.003070834],[0,9,23,0.00024725]],"inputs":[["(pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3)","(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","(cbrt.f64 (log.f64 (/.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 x) (neg.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 x y)) 2)) (log.f64 (cbrt.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 x y))) (log.f64 (sqrt.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 x) (log.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (/.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (/.f64 x y))) (sqrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) (*.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 2) 3) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) 3) (pow.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) 1) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) (pow.f64 (log.f64 (/.f64 x y)) 1/6)) (pow.f64 (log.f64 (/.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (log.f64 x) (log.f64 x)) (*.f64 (log.f64 y) (log.f64 y))) (+.f64 (log.f64 x) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (/.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (/.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (/.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (/.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 (/.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 (/.f64 x y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (/.f64 x y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) (pow.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 2) (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) (pow.f64 (log.f64 (/.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) 1/3) (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 1/3) (pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (/.f64 x y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (/.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (/.f64 x y)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (log.f64 (/.f64 x y)))))))))"]],"rules":[["egg-rr",19],["egg-rr",13],["egg-rr",29]],"stop":[["node limit",1]],"time":41.8759765625,"type":"rewrite"},{"count":[[133,81]],"egraph":[[5,7738,756,0.033902042],[4,3789,756,0.022442167],[3,987,756,0.008730334],[2,300,756,0.0024745],[1,143,756,0.000874209],[0,46,888,0.000295625]],"inputs":[["(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x))) 1/3)","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))","(*.f64 1 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(-.f64 (log.f64 x) (log.f64 y))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))","(*.f64 (pow.f64 1 1/3) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))))","(*.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 1/3)","(cbrt.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)))","(cbrt.f64 (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(cbrt.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(cbrt.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(cbrt.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 1/3)","(cbrt.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))"]],"stop":[["node limit",1]],"time":56.984130859375,"type":"simplify"},{"compiler":[[1449,685]],"time":14.947021484375,"type":"eval"},{"alts":[["(*.f64 x (log.f64 (/.f64 x y)))","done",14.508686291601665],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) 3))","fresh",31.577855878906135],["(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","fresh",31.391318855889793],["(*.f64 x (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y))))))","fresh",33.383352550271304],["(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","fresh",41.45637384023131],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","next",14.93668177620642],["(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","fresh",33.31495850001146],["(*.f64 x (pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 2))","fresh",39.94664003907377],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log.f64 y))) 3))","fresh",33.47115048740784],["(cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 (/.f64 x y)) 3)))","fresh",43.97597052504616]],"compiler":[[8,5],[14,11],[11,8],[31,16],[11,8],[11,8],[9,6],[11,8],[12,9],[13,10],[14,11],[11,8],[31,16],[11,8],[11,8],[9,6],[11,8],[12,9],[13,10]],"count":[[120,10]],"kept":[{"done":[1,1],"fresh":[7,2],"new":[111,7],"picked":[1,0]}],"min-error":[0.1015625],"time":21.930908203125,"type":"prune"},{"compiler":[[34,9]],"locations":[["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))",0.12109375,true],["(*.f64 x (log.f64 (/.f64 x y)))",0.234375,false],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)",0.7671052735163769,true],["(log.f64 (/.f64 x y))",13.87224641405028,false]],"time":6.512939453125,"type":"localize"},{"count":[[2,24]],"series":[["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","y","-inf",0.202880859375],["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","y","inf",0.178955078125],["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","y","0",0.198974609375],["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","x","-inf",0.291015625],["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","x","inf",0.259033203125],["(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))","x","0",0.215087890625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","y","-inf",1.433837890625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","y","inf",1.385986328125],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","y","0",1.47998046875],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","x","-inf",0.967041015625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","x","inf",0.659912109375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","x","0",0.72314453125]],"time":8.1611328125,"type":"series"},{"count":[[2,54]],"egraph":[[2,2099,20,0.019692625999999998],[1,191,20,0.003116334],[0,9,20,0.000246542]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","(cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (log.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (/.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2) (*.f64 (cbrt.f64 (log.f64 (/.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (/.f64 x y))) (*.f64 (sqrt.f64 (log.f64 (/.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) (*.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) 3) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) 3) (pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (log.f64 (/.f64 x y)))) (sqrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (/.f64 x y)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 (/.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) 1) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6)) (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 (/.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 (/.f64 x y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (/.f64 x y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1/3) (pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))))"]],"rules":[["egg-rr",21],["egg-rr",33]],"stop":[["node limit",1]],"time":40.72998046875,"type":"rewrite"},{"count":[[78,64]],"egraph":[[5,4951,328,0.024322751],[4,2019,328,0.012433834],[3,589,328,0.004558959],[2,194,328,0.0014530839999999999],[1,89,368,0.0005237919999999999],[0,34,484,0.000191417]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) (pow.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) 2))) 1/3) x)","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(*.f64 x (cbrt.f64 (*.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2))))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 1 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 1 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 1 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(*.f64 1 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) 1/3)","(cbrt.f64 (*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x))))","(cbrt.f64 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(cbrt.f64 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(cbrt.f64 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(cbrt.f64 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(pow.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x) 1/3)","(cbrt.f64 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))"]],"stop":[["node limit",1]],"time":40.993896484375,"type":"simplify"},{"compiler":[[1516,654]],"time":15.907958984375,"type":"eval"},{"alts":[["(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","fresh",41.45637384023131],["(*.f64 (*.f64 x (sqrt.f64 (log.f64 (/.f64 x y)))) (sqrt.f64 (log.f64 (/.f64 x y))))","fresh",39.90367128907377],["(*.f64 x (log.f64 (/.f64 x y)))","done",14.508686291601665],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) 3))","fresh",31.577855878906135],["(*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))","fresh",15.09207706361477],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log.f64 y))) 3))","fresh",33.47115048740784],["(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","fresh",31.391318855889793],["(*.f64 x (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y))))))","fresh",33.383352550271304],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))) 3)","fresh",31.582809759226098],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","next",14.9172851014095],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))","fresh",14.959161621413369],["(*.f64 (*.f64 (log.f64 (/.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))","fresh",41.01951757836011],["(*.f64 (*.f64 (log.f64 (/.f64 x y)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))","fresh",34.12652533201471],["(*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 (/.f64 x y))))","fresh",34.128510464961565],["(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","fresh",33.31495850001146]],"compiler":[[11,8],[15,7],[8,5],[14,11],[31,13],[12,9],[11,8],[31,16],[14,11],[20,12],[19,9],[12,7],[14,9],[14,9],[9,6],[11,8],[15,7],[14,11],[31,13],[12,9],[11,8],[31,16],[14,11],[20,12],[19,9],[12,7],[14,9],[14,9],[9,6]],"count":[[121,15]],"kept":[{"done":[1,1],"fresh":[8,5],"new":[111,9],"picked":[1,0]}],"min-error":[0.046875],"time":20.549072265625,"type":"prune"},{"compiler":[[71,18]],"locations":[["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))",0.313163769536884,true],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))",0.34765625,true],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)",0.6123237793053261,true],["(log.f64 (/.f64 x y))",13.87224641405028,false]],"time":12.6259765625,"type":"localize"},{"count":[[3,60]],"series":[["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","y","-inf",1.40087890625],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","y","inf",1.319091796875],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","y","0",1.5009765625],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","x","-inf",2.364990234375],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","x","inf",1.532958984375],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))","x","0",1.635009765625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","y","-inf",0.27392578125],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","y","inf",0.259033203125],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","y","0",0.962890625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","x","-inf",1.640869140625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","x","inf",0.297119140625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","x","0",1.23388671875],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","y","-inf",0.3359375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","y","inf",0.307861328125],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","y","0",0.322021484375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","x","-inf",0.409912109375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","x","inf",0.316162109375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","x","0",0.34814453125]],"time":16.76806640625,"type":"series"},{"count":[[3,83]],"egraph":[[2,2835,40,0.026850625000000003],[1,261,40,0.00406075],[0,13,42,0.0003165]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 5) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (log.f64 (/.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 x y) x)) 2)) (log.f64 (cbrt.f64 (pow.f64 (/.f64 x y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (/.f64 x y) x))) (log.f64 (sqrt.f64 (pow.f64 (/.f64 x y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2)) (cbrt.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))) (sqrt.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 x y) x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (/.f64 x y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (log.f64 (/.f64 x y)))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 1) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 x 1/6)) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 x 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) 2)) (cbrt.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))))) (sqrt.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 x 1/6)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) (pow.f64 x 1/6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (pow.f64 (*.f64 x (log.f64 (/.f64 x y))) 2)))) 1) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",29],["egg-rr",30]],"stop":[["node limit",1]],"time":52.552001953125,"type":"rewrite"},{"count":[[143,102]],"egraph":[[5,7601,936,0.032167250999999994],[4,3261,936,0.020884333999999997],[3,1369,936,0.008132084],[2,331,936,0.002778792],[1,156,936,0.0009032090000000001],[0,60,984,0.000320667]],"inputs":[["(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(cbrt.f64 (*.f64 x (*.f64 x (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2))))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2) (pow.f64 x 2)) 1/3)","(cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (*.f64 -1 (log.f64 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)","(*.f64 x (fma.f64 -1 (log.f64 y) (log.f64 x)))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)","(*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 -1 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 x) (*.f64 -1 (log.f64 y))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (fma.f64 -1 (log.f64 y) (log.f64 x)) 2)))","(*.f64 x (cbrt.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) 2)) 1/3) x)","(*.f64 x (cbrt.f64 (pow.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))) 2)))"]],"stop":[["node limit",1]],"time":56.7958984375,"type":"simplify"},{"compiler":[[3252,1229]],"time":24.569091796875,"type":"eval"},{"alts":[["(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","fresh",41.45637384023131],["(*.f64 (*.f64 x (sqrt.f64 (log.f64 (/.f64 x y)))) (sqrt.f64 (log.f64 (/.f64 x y))))","fresh",39.90367128907377],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 x y)) 2)) (log.f64 (cbrt.f64 (/.f64 x y))))))","fresh",14.891562591641058],["(*.f64 x (log.f64 (/.f64 x y)))","done",14.508686291601665],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) 3))","fresh",31.577855878906135],["(*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))","fresh",15.09207706361477],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log.f64 y))) 3))","fresh",33.47115048740784],["(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","fresh",31.391318855889793],["(*.f64 x (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y))))))","fresh",33.383352550271304],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))) 3)","fresh",31.582809759226098],["(*.f64 (*.f64 (log.f64 (/.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))","fresh",41.01951757836011],["(*.f64 (*.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","fresh",14.955760199093922],["(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","fresh",33.31495850001146],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))","fresh",14.959161621413369]],"compiler":[[11,8],[15,7],[29,18],[8,5],[14,11],[31,13],[12,9],[11,8],[31,16],[14,11],[12,7],[27,12],[9,6],[19,9]],"count":[[177,14]],"kept":[{"done":[1,1],"fresh":[13,11],"new":[162,2],"picked":[1,0]}],"min-error":[0.04296875],"time":32.825927734375,"type":"prune"},{"accuracy":[0.7062773559012439],"baseline":[14.508686291601665],"branch":[["x",0.7062773559012439,2],["y",0.7062773559012439,2],["(*.f64 x (log.f64 (/.f64 x y)))",6.797748791601665,3],["(*.f64 x (log.f64 (/.f64 x y)))",6.797748791601665,3]],"compiler":[[3,2],[3,2],[8,5],[8,5],[357,107]],"count":[[27,2]],"inputs":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 x y)) 2)) (log.f64 (cbrt.f64 (/.f64 x y))))))","(*.f64 (*.f64 (*.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log.f64 (/.f64 x y))) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","(*.f64 (*.f64 x (sqrt.f64 (log.f64 (/.f64 x y)))) (sqrt.f64 (log.f64 (/.f64 x y))))","(*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y))))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)))","(pow.f64 (cbrt.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))) 3)","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 (/.f64 x y))))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2) (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))))","(*.f64 (*.f64 (log.f64 (/.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))","(*.f64 (*.f64 (log.f64 (/.f64 x y)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))","(*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 (/.f64 x y))))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) 3))","(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 x (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log.f64 y))) 3))","(cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 (/.f64 x y)) 3)))","(pow.f64 (sqrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 2)","(*.f64 x (/.f64 (-.f64 (pow.f64 (log.f64 x) 3) (pow.f64 (log.f64 y) 3)) (+.f64 (*.f64 (log.f64 x) (log.f64 x)) (+.f64 (*.f64 (log.f64 y) (log.f64 y)) (*.f64 (log.f64 x) (log.f64 y))))))","(pow.f64 (cbrt.f64 (*.f64 x (log.f64 (/.f64 x y)))) 3)","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))","(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","(*.f64 x (pow.f64 (sqrt.f64 (log.f64 (/.f64 x y))) 2))","(*.f64 x (pow.f64 (cbrt.f64 (log.f64 (/.f64 x y))) 3))","(*.f64 x (/.f64 (-.f64 (*.f64 (log.f64 x) (log.f64 x)) (*.f64 (log.f64 y) (log.f64 y))) (+.f64 (log.f64 x) (log.f64 y))))","(*.f64 x (log.f64 (/.f64 x y)))"]],"link":["."],"name":["Data.HyperLogLog.Type:size from hyperloglog-0.3.4, B"],"oracle":[64.0],"outputs":[["(*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y))))","(*.f64 x (-.f64 (log.f64 x) (log.f64 y)))"]],"time":78.1611328125,"times":[["x",16.609130859375],["y",16.544921875],["(*.f64 x (log.f64 (/.f64 x y)))",20.05615234375],["(*.f64 x (log.f64 (/.f64 x y)))",20.244873046875]],"type":"regimes"},{"bstep":[[-5.3790719387347215e-297,1.1909090897179861e-304,1.81103515625]],"compiler":[[10,7],[12,9],[10,7],[3,2]],"method":["binary-search"],"time":1.98681640625,"type":"bsearch"},{"compiler":[[22,15]],"egraph":[[4,46,32,0.00024241699999999998],[3,44,32,0.000183125],[2,38,32,0.000130667],[1,28,32,8.162499999999999e-5],[0,17,32,3.8542e-5]],"inputs":[["(if (<=.f64 y 0) (*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 y 0) (*.f64 x (-.f64 (log.f64 (neg.f64 x)) (log.f64 (neg.f64 y)))) (*.f64 x (-.f64 (log.f64 x) (log.f64 y))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.025146484375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[22,15]],"remove-preprocessing":[[]],"time":10.76416015625,"type":"end"}]