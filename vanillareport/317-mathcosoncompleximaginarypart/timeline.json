[{"compiler":[[14,11]],"method":["search"],"sampling":[[12,0.49951183795928955,0.28780467226170003,0.21268348977901042],[11,0.49951183795928955,0.2946339356712997,0.20585422636941075],[10,0.49951183795928955,0.3239022074267268,0.17658595461398363],[9,0.49951183795928955,0.33560951612889767,0.16487864591181278],[8,0.49951183795928955,0.39024362340569496,0.11024453863501549],[7,0.49951183795928955,0.40585336834192276,0.09463479369878769],[6,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[5,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":71.975830078125,"type":"analyze"},{"outcomes":[["body",512,"invalid",133.93017578125,1024],["body",2048,"invalid",0.73681640625,2],["body",256,"invalid",117.508056640625,1675],["body",1024,"valid",1327.768310546875,4169],["body",1024,"invalid",420.79150390625,2006],["body",512,"valid",324.944091796875,2140],["body",256,"valid",125.891357421875,1712],["body",2048,"valid",113.257568359375,235]],"time":2579.63720703125,"type":"sample"},{"compiler":[[13,10]],"egraph":[[0,2,2,1.625e-6],[8,7386,34,0.043259],[7,4020,34,0.031818209],[6,2094,34,0.017013918],[5,1129,34,0.009005085],[4,553,34,0.004077126],[3,245,36,0.0016611669999999999],[2,93,36,0.000690876],[1,39,36,0.000274334],[0,18,36,0.000107084]],"inputs":[["0","1"],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (*.f64 1/2 (sin.f64 im)) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (sin.f64 re) (*.f64 1/2 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (sin.f64 re) (fma.f64 (exp.f64 im) -1/2 (/.f64 1/2 (exp.f64 im))))","(*.f64 (*.f64 1/2 (sin.f64 im)) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 im) (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re))))","(*.f64 (sin.f64 im) (*.f64 1/2 (-.f64 (exp.f64 (neg.f64 re)) (exp.f64 re))))","(*.f64 (sin.f64 im) (fma.f64 (exp.f64 re) -1/2 (/.f64 1/2 (exp.f64 re))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":69.665771484375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7328,17,0.04776175],[8,5556,17,0.0363355],[7,2801,17,0.021868041999999997],[6,1392,17,0.010591125],[5,581,17,0.004908875],[4,286,17,0.00210675],[3,128,18,0.000951791],[2,51,18,0.000415666],[1,23,18,0.000177916],[0,11,18,7.2791e-5]],"inputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 (sin.f64 re) (fma.f64 (exp.f64 im) -1/2 (/.f64 1/2 (exp.f64 im))))"]],"stop":[["node limit",1]],"time":60.021240234375,"type":"simplify"},{"compiler":[[24,15]],"time":0.4638671875,"type":"eval"},{"alts":[["(*.f64 (sin.f64 re) (fma.f64 (exp.f64 im) -1/2 (/.f64 1/2 (exp.f64 im))))","fresh",43.67803221447987],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","next",43.65388110127927]],"compiler":[[13,9],[13,10],[13,9],[13,10]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[43.64997485127927],"time":1.472900390625,"type":"prune"},{"compiler":[[35,13]],"locations":[["(sin.f64 re)",0.015625,true],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.015625,true],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",6.1848050529543395,true]],"time":8.7822265625,"type":"localize"},{"count":[[3,36]],"series":[["(sin.f64 re)","re","-inf",0.162109375],["(sin.f64 re)","re","inf",0.135986328125],["(sin.f64 re)","re","0",0.212890625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","-inf",0.489990234375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","inf",0.7021484375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","im","0",0.681884765625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","-inf",0.489013671875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","inf",0.534912109375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","re","0",0.621826171875],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","-inf",0.251953125],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","inf",0.20703125],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","im","0",0.46484375]],"time":5.1318359375,"type":"series"},{"count":[[3,67]],"egraph":[[3,7402,3,0.056299625],[2,673,3,0.011970874999999999],[1,58,3,0.0009161659999999999],[0,3,3,8.7958e-5],[0,11,18,0.000290791],[2,3545,18,0.006593251],[1,228,18,0.006563126],[0,11,18,0.000288292],[0,6,10,0.000158917],[2,2116,10,0.003734833],[1,127,10,0.003711458],[0,6,10,0.000162458],[2,3549,30,0.006682083],[1,228,30,0.006652],[0,11,30,0.000304625]],"inputs":[["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(sin.f64 re)"]],"method":["egg-rewrite","egg-rewrite-iter-limit","egg-rewrite","egg-rewrite-iter-limit","egg-rewrite","batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (neg.f64 im)) (neg.f64 (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (cbrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (sqrt.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (neg.f64 im)) 3) (pow.f64 (exp.f64 im) 3)) (+.f64 (*.f64 (exp.f64 (neg.f64 im)) (exp.f64 (neg.f64 im))) (+.f64 (*.f64 (exp.f64 im) (exp.f64 im)) (*.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 im)) (exp.f64 (neg.f64 im))) (*.f64 (exp.f64 im) (exp.f64 im))) (+.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))))))","((#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))) (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sin.f64 re) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 re))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sin.f64 re) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (+.f64 re 1)) (cos.f64 1)) (*.f64 (cos.f64 (+.f64 re 1)) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 re)) (pow.f64 (cbrt.f64 (sin.f64 re)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 2) (cbrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 re)) (sqrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 re))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (sin.f64 re))) (pow.f64 (cbrt.f64 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 re))) 2) (cbrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 re) 1/6) (*.f64 (pow.f64 (sin.f64 re) 1/6) (pow.f64 (cbrt.f64 (sin.f64 re)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 re) 1/4) (*.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sin.f64 re)) (pow.f64 (sin.f64 re) 1/4)) (pow.f64 (sin.f64 re) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 re) 5/2)) (pow.f64 (sin.f64 re) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 5)) (pow.f64 (sin.f64 re) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)) (pow.f64 (sin.f64 re) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2) 1/3) (cbrt.f64 (cbrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (sin.f64 re) 5/2) 1/3) (pow.f64 (sin.f64 re) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (sin.f64 re)) (cbrt.f64 (sin.f64 re))) (pow.f64 (sin.f64 re) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sin.f64 re)) (cbrt.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4))) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 re))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (sin.f64 re))) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 2) (pow.f64 (sin.f64 re) 1/6)) (pow.f64 (sin.f64 re) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (cos.f64 0) (cos.f64 (+.f64 re re)))) (sqrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (sin.f64 re) 1) 3) 1) (+.f64 (*.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1)) (+.f64 1 (+.f64 (sin.f64 re) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1)) 1) (+.f64 (+.f64 (sin.f64 re) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 re) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 re) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 re)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 re)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sin.f64 re))) 2)) (cbrt.f64 (log.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sin.f64 re)))) (sqrt.f64 (log.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 re) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 re))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sin.f64 re))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (sin.f64 re))) 2))))))"]],"rules":[["egg-rr",49],["egg-rr",6],["egg-rr",12]],"stop":[["node limit",1],["iter limit",1],["unsound",1],["iter limit",1],["unsound",1],["unsound",1]],"time":159.5439453125,"type":"rewrite"},{"count":[[103,101]],"egraph":[[4,4971,630,0.022491459000000002],[3,2170,630,0.011688084000000001],[2,613,660,0.004564376],[1,212,716,0.001353834],[0,79,720,0.0003765]],"inputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5))) (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 7))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 im)","(+.f64 (*.f64 -2 im) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -2 im (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -2 im))","(+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))","(fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))","(fma.f64 -2 im (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))","(fma.f64 -1/3 (pow.f64 im 3) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -2 im)))","(+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))","(fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -2 im))))","(fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))","(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)))","(fma.f64 (*.f64 1/2 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) re (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 (pow.f64 re 3) -1/12)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (*.f64 1/2 re) (*.f64 -1/12 (pow.f64 re 3))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 (pow.f64 re 5) 1/240))))","(fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 1/240 (pow.f64 re 5)))))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (*.f64 1/2 re) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/12 (pow.f64 re 3)))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re)) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5))) (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 7))))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)) (*.f64 (*.f64 -1/10080 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))) (pow.f64 re 7)))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 3)) (fma.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) re) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (pow.f64 re 5)) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 (pow.f64 re 7) -1/10080)))))","(+.f64 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (*.f64 1/2 re) (*.f64 1/240 (pow.f64 re 5)))) (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (*.f64 -1/10080 (pow.f64 re 7)) (*.f64 -1/12 (pow.f64 re 3)))))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/12 (pow.f64 re 3))) (+.f64 (*.f64 -1/10080 (pow.f64 re 7)) (*.f64 1/2 re))))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (+.f64 (+.f64 (*.f64 1/2 re) (*.f64 -1/12 (pow.f64 re 3))) (+.f64 (*.f64 -1/10080 (pow.f64 re 7)) (*.f64 1/240 (pow.f64 re 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(neg.f64 (*.f64 im (sin.f64 re)))","(*.f64 im (neg.f64 (sin.f64 re)))","(*.f64 (neg.f64 im) (sin.f64 re))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))","(-.f64 (*.f64 (pow.f64 im 3) (*.f64 (sin.f64 re) -1/6)) (*.f64 im (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re)))))","(-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re)))","(fma.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120) (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)))","(*.f64 (sin.f64 re) (-.f64 (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 3) -1/6)) im))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (-.f64 (*.f64 (pow.f64 im 5) -1/120) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re))))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 5) -1/120) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 3) -1/6))))","(*.f64 (sin.f64 re) (+.f64 (-.f64 (*.f64 (pow.f64 im 5) -1/120) im) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 3) -1/6))))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","(*.f64 1/2 (*.f64 (sin.f64 re) (-.f64 (exp.f64 (*.f64 -1 im)) (exp.f64 im))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (sin.f64 re)))","(*.f64 (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)) (*.f64 1/2 (sin.f64 re)))","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(+.f64 re (*.f64 (pow.f64 re 3) -1/6))","(fma.f64 (pow.f64 re 3) -1/6 re)","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(fma.f64 1/120 (pow.f64 re 5) (+.f64 re (*.f64 (pow.f64 re 3) -1/6)))","(fma.f64 (pow.f64 re 5) 1/120 (fma.f64 (pow.f64 re 3) -1/6 re))","(fma.f64 (pow.f64 re 3) -1/6 (fma.f64 (pow.f64 re 5) 1/120 re))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))","(fma.f64 1/120 (pow.f64 re 5) (+.f64 re (fma.f64 -1/6 (pow.f64 re 3) (*.f64 (pow.f64 re 7) -1/5040))))","(+.f64 (fma.f64 (pow.f64 re 5) 1/120 (fma.f64 (pow.f64 re 3) -1/6 re)) (*.f64 (pow.f64 re 7) -1/5040))","(fma.f64 (pow.f64 re 5) 1/120 (fma.f64 (pow.f64 re 3) -1/6 (fma.f64 (pow.f64 re 7) -1/5040 re)))"]],"stop":[["node limit",1]],"time":41.8740234375,"type":"simplify"},{"compiler":[[1866,855]],"time":17.073974609375,"type":"eval"},{"alts":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","next",0.5769839068427052],["(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","fresh",44.162639440056545]],"compiler":[[25,20],[24,18],[25,20],[24,18]],"count":[[103,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[101,2],"picked":[1,0]}],"min-error":[0.12109375],"time":17.277099609375,"type":"prune"},{"compiler":[[98,74]],"locations":[["(sin.f64 re)",0.015625,false],["(*.f64 -1/60 (pow.f64 im 5))",0.0546875,true],["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))",0.09765625,true],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))",0.125,true]],"time":24.505126953125,"type":"localize"},{"count":[[3,36]],"series":[["(*.f64 -1/60 (pow.f64 im 5))","im","-inf",0.212158203125],["(*.f64 -1/60 (pow.f64 im 5))","im","inf",0.18798828125],["(*.f64 -1/60 (pow.f64 im 5))","im","0",0.304931640625],["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","im","-inf",0.43701171875],["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","im","inf",0.422119140625],["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","im","0",0.41796875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","-inf",0.55712890625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","inf",0.513916015625],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","0",0.315185546875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","-inf",0.5380859375],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","inf",2.26904296875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","0",1.239990234375]],"time":7.617919921875,"type":"series"},{"count":[[3,67]],"egraph":[[2,4787,54,0.034510293000000004],[1,448,54,0.007768543],[0,21,54,0.000827709]],"inputs":[["(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(*.f64 -1/60 (pow.f64 im 5))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -2 im)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re)))) (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 3) (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -2 im) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) 1) (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (cbrt.f64 (pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 2)) (cbrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (sqrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/3 (pow.f64 im 3)) 3) (pow.f64 (*.f64 -1/60 (pow.f64 im 5)) 3)) (fma.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/3 (pow.f64 im 3)) (-.f64 (*.f64 1/3600 (pow.f64 im 10)) (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/3 (pow.f64 im 3))) (*.f64 1/3600 (pow.f64 im 10))) (-.f64 (*.f64 -1/3 (pow.f64 im 3)) (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5)) (exp.f64 (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/60 (pow.f64 im 5)))) (exp.f64 (*.f64 -1/3 (pow.f64 im 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/3 (pow.f64 im 3))) (+.f64 1 (expm1.f64 (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -1/60 (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5))) (cbrt.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -1/60 (pow.f64 im 5)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/60 (pow.f64 im 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -1/60 (pow.f64 im 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/60 (pow.f64 im 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 -1/60) (pow.f64 im 5/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/3600 (pow.f64 im 10)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1/60) (pow.f64 im 5)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/60 (pow.f64 im 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -1/60 (pow.f64 im 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1/60 (pow.f64 im 5))) 1))))))"]],"rules":[["egg-rr",16],["egg-rr",29],["egg-rr",22]],"stop":[["node limit",1]],"time":61.27099609375,"type":"rewrite"},{"count":[[103,95]],"egraph":[[4,6655,851,0.030341124999999997],[3,5257,859,0.01799675],[2,893,933,0.0076281249999999995],[1,221,1050,0.0016352089999999999],[0,67,1075,0.000390375]],"inputs":[["(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 re))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 1/2 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (+.f64 (*.f64 1/2 re) (*.f64 -1/12 (pow.f64 re 3))))","(*.f64 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (+.f64 1/2 (*.f64 -1/12 (*.f64 re re))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 1/240 (pow.f64 re 5)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/240 (pow.f64 re 5)))))","(fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 1/240 (pow.f64 re 5)))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (+.f64 (*.f64 1/2 re) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 1/240 (pow.f64 re 5)))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 -1/10080 (*.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 re 7)) (*.f64 (*.f64 1/240 (pow.f64 re 5)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/10080 (pow.f64 re 7))))))","(fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (+.f64 (fma.f64 1/240 (pow.f64 re 5) (*.f64 -1/10080 (pow.f64 re 7))) (*.f64 -1/12 (pow.f64 re 3)))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (+.f64 (*.f64 1/2 re) (fma.f64 1/240 (pow.f64 re 5) (*.f64 -1/10080 (pow.f64 re 7))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (sin.f64 re)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (*.f64 1/2 (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 1/2) im))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(neg.f64 (*.f64 im (sin.f64 re)))","(*.f64 (sin.f64 re) (neg.f64 im))","(*.f64 im (neg.f64 (sin.f64 re)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))","(-.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 3) -1/6)) (*.f64 im (sin.f64 re)))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re)))))","(-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re)))","(fma.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120) (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)))","(*.f64 (sin.f64 re) (-.f64 (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 5) -1/120)) im))","(*.f64 (sin.f64 re) (+.f64 (-.f64 (*.f64 (pow.f64 im 3) -1/6) im) (*.f64 (pow.f64 im 5) -1/120)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re))))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 5) -1/120) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (-.f64 (*.f64 (pow.f64 im 3) -1/6) im) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (*.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (*.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))))","(fma.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 3) -1/6))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re))))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 5) -1/120) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (-.f64 (*.f64 (pow.f64 im 3) -1/6) im) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (*.f64 -1/5040 (sin.f64 re)) (pow.f64 im 7))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (*.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (*.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))))","(fma.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 3) -1/6))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (fma.f64 -1/120 (*.f64 (pow.f64 im 5) (sin.f64 re)) (neg.f64 (*.f64 im (sin.f64 re))))))","(fma.f64 -1/5040 (*.f64 (pow.f64 im 7) (sin.f64 re)) (-.f64 (fma.f64 -1/6 (*.f64 (pow.f64 im 3) (sin.f64 re)) (*.f64 (pow.f64 im 5) (*.f64 (sin.f64 re) -1/120))) (*.f64 im (sin.f64 re))))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 5) -1/120) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (-.f64 (*.f64 (pow.f64 im 3) -1/6) im) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 -1/3 (pow.f64 im 3))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(*.f64 -1/60 (pow.f64 im 5))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))","(+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))","(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))"]],"stop":[["node limit",1]],"time":52.2509765625,"type":"simplify"},{"compiler":[[4450,3333]],"time":59.458984375,"type":"eval"},{"alts":[["(*.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",34.411045483344836],["(*.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1)) 1) (+.f64 (+.f64 (sin.f64 re) 1) 1))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.593024844985006],["(cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))","fresh",34.80738648521922],["(*.f64 (*.f64 1/2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.741193341046605],["(pow.f64 (sqrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 2)","fresh",26.13624142637959],["(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 3)","fresh",1.0641667194328501],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",0.6111826861480313],["(*.f64 (*.f64 1/2 (log1p.f64 (expm1.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",0.6417689166111472],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","next",0.5730776568427052],["(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","fresh",44.162639440056545]],"compiler":[[33,26],[41,32],[30,25],[34,24],[28,23],[28,23],[27,22],[27,22],[30,23],[24,18],[33,26],[41,32],[30,25],[34,24],[28,23],[28,23],[27,22],[27,22],[30,23],[24,18]],"count":[[153,10]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[151,9],"picked":[1,0]}],"min-error":[0.01171875],"time":75.259033203125,"type":"prune"},{"compiler":[[108,80]],"locations":[["(*.f64 -1/60 (pow.f64 im 5))",0.0546875,false],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))",0.0703125,true],["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))",0.09765625,false],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))",0.12109375,true]],"time":26.825927734375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","re","-inf",0.18505859375],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","re","inf",0.218994140625],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","re","0",0.455078125],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","im","-inf",0.30908203125],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","im","inf",0.320068359375],["(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))","im","0",0.302001953125],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","re","-inf",2.087890625],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","re","inf",0.89599609375],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","re","0",0.791015625],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","im","-inf",0.30078125],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","im","inf",0.27001953125],["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","im","0",0.447021484375]],"time":6.928955078125,"type":"series"},{"count":[[2,46]],"egraph":[[2,5040,62,0.0368645],[1,468,64,0.008432],[0,22,70,0.00082625]],"inputs":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) 1) (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2) (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) 3) (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3)) (fma.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (-.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 2) (*.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re))))) (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 2)) (-.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))) (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) (exp.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (exp.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -2 (*.f64 im (*.f64 1/2 (sin.f64 re))))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re))) (*.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7))) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 3) (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2520 (pow.f64 im 7)) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))) (*.f64 1/2 (sin.f64 re))))))))"]],"rules":[["egg-rr",19],["egg-rr",27]],"stop":[["node limit",1]],"time":61.008056640625,"type":"rewrite"},{"count":[[94,83]],"egraph":[[3,4731,1476,0.0201835],[2,929,1522,0.008175],[1,261,1912,0.002133792],[0,86,1912,0.000567292]],"inputs":[["(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re)","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re))","(+.f64 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 1/240 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/120 im))) (+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re)))","(+.f64 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 1/240 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/120 im))) (+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re) (*.f64 (+.f64 (*.f64 1/5040 im) (*.f64 -1/10080 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (pow.f64 re 7)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))) (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 5)))))","(+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 7))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))) (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 5))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (sin.f64 re) im))","(neg.f64 (*.f64 (sin.f64 re) im))","(*.f64 (sin.f64 re) (neg.f64 im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (neg.f64 (*.f64 (sin.f64 re) im)))","(-.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 (sin.f64 re) im))","(*.f64 (sin.f64 re) (-.f64 (*.f64 -1/6 (pow.f64 im 3)) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(fma.f64 (sin.f64 re) (*.f64 -1/6 (pow.f64 im 3)) (*.f64 (sin.f64 re) (-.f64 (*.f64 -1/120 (pow.f64 im 5)) im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (-.f64 (*.f64 -1/120 (pow.f64 im 5)) im)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 -1/5040 (pow.f64 im 7)))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/5040 (pow.f64 im 7)) (*.f64 -1/120 (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 -1/5040 (pow.f64 im 7)))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/5040 (pow.f64 im 7)) (*.f64 -1/120 (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re)","(*.f64 re (fma.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (neg.f64 im)))","(*.f64 re (-.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) im))","(*.f64 re (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re))","(fma.f64 (fma.f64 -1/12 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (*.f64 im 1/6)) (pow.f64 re 3) (*.f64 re (fma.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (neg.f64 im))))","(fma.f64 re (-.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) im) (*.f64 (fma.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) -1/12 (*.f64 im 1/6)) (pow.f64 re 3)))","(fma.f64 re (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im) (*.f64 (fma.f64 im 1/6 (fma.f64 (pow.f64 im 7) 1/30240 (+.f64 (*.f64 (pow.f64 im 5) 1/720) (*.f64 (pow.f64 im 3) 1/36)))) (pow.f64 re 3)))","(+.f64 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 1/240 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/120 im))) (+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re)))","(fma.f64 (pow.f64 re 5) (fma.f64 1/240 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (*.f64 im -1/120)) (fma.f64 (fma.f64 -1/12 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (*.f64 im 1/6)) (pow.f64 re 3) (*.f64 re (fma.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (neg.f64 im)))))","(fma.f64 (pow.f64 re 5) (fma.f64 im -1/120 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) 1/240)) (fma.f64 re (-.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) im) (*.f64 (fma.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) -1/12 (*.f64 im 1/6)) (pow.f64 re 3))))","(fma.f64 re (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im) (fma.f64 (pow.f64 re 5) (fma.f64 im -1/120 (fma.f64 (pow.f64 im 7) -1/604800 (+.f64 (*.f64 (pow.f64 im 5) -1/14400) (*.f64 (pow.f64 im 3) -1/720)))) (*.f64 (fma.f64 im 1/6 (fma.f64 (pow.f64 im 7) 1/30240 (+.f64 (*.f64 (pow.f64 im 5) 1/720) (*.f64 (pow.f64 im 3) 1/36)))) (pow.f64 re 3))))","(+.f64 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 1/240 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1/120 im))) (+.f64 (*.f64 (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/6 im)) (pow.f64 re 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 -1 im)) re) (*.f64 (+.f64 (*.f64 1/5040 im) (*.f64 -1/10080 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))) (pow.f64 re 7)))))","(fma.f64 (pow.f64 re 5) (fma.f64 1/240 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (*.f64 im -1/120)) (fma.f64 (fma.f64 -1/12 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (*.f64 im 1/6)) (pow.f64 re 3) (fma.f64 (fma.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (neg.f64 im)) re (*.f64 (fma.f64 1/5040 im (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) -1/10080)) (pow.f64 re 7)))))","(fma.f64 (pow.f64 re 5) (fma.f64 im -1/120 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) 1/240)) (fma.f64 (fma.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) -1/12 (*.f64 im 1/6)) (pow.f64 re 3) (fma.f64 re (-.f64 (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) im) (*.f64 (fma.f64 im 1/5040 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) -1/10080)) (pow.f64 re 7)))))","(fma.f64 (fma.f64 im 1/6 (fma.f64 (pow.f64 im 7) 1/30240 (+.f64 (*.f64 (pow.f64 im 5) 1/720) (*.f64 (pow.f64 im 3) 1/36)))) (pow.f64 re 3) (fma.f64 (pow.f64 re 5) (fma.f64 im -1/120 (fma.f64 (pow.f64 im 7) -1/604800 (+.f64 (*.f64 (pow.f64 im 5) -1/14400) (*.f64 (pow.f64 im 3) -1/720)))) (fma.f64 re (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im) (*.f64 (fma.f64 im 1/5040 (fma.f64 (pow.f64 im 7) 1/25401600 (+.f64 (*.f64 (pow.f64 im 3) 1/30240) (*.f64 (pow.f64 im 5) 1/604800)))) (pow.f64 re 7)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (sin.f64 re))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 (neg.f64 (sin.f64 re)) im (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))))","(*.f64 (sin.f64 re) (-.f64 (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) im))","(*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))","(*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))","(*.f64 (sin.f64 re) (*.f64 -1/6 (pow.f64 im 3)))","(*.f64 (pow.f64 im 3) (*.f64 (sin.f64 re) -1/6))","(+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))))","(fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3)))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 -1/5040 (pow.f64 im 7)))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/5040 (pow.f64 im 7)) (*.f64 -1/120 (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 -1/5040 (pow.f64 im 7)))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 (*.f64 (sin.f64 re) -1/5040) (pow.f64 im 7) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 -1/5040 (pow.f64 im 7)) (*.f64 -1/120 (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re))","(*.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3)))))","(*.f64 re (*.f64 1/2 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))))","(*.f64 re (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))))","(fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3)))) (*.f64 -1/12 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 3))))","(fma.f64 1/2 (*.f64 re (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (*.f64 (pow.f64 re 3) -1/12)))","(*.f64 (fma.f64 (pow.f64 im 3) -1/3 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 5) -1/60))) (+.f64 (*.f64 re 1/2) (*.f64 -1/12 (pow.f64 re 3))))","(*.f64 (fma.f64 (pow.f64 im 5) -1/60 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 3) -1/3))) (+.f64 (*.f64 re 1/2) (*.f64 -1/12 (pow.f64 re 3))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))) (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 5)))))","(fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3)))) (fma.f64 -1/12 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 3)) (*.f64 1/240 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 5)))))","(fma.f64 1/2 (*.f64 re (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) (fma.f64 -1/12 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 3)) (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (*.f64 1/240 (pow.f64 re 5)))))","(fma.f64 re (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))) (*.f64 (fma.f64 (pow.f64 im 3) -1/3 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 5) -1/60))) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 (pow.f64 re 5) 1/240))))","(*.f64 (fma.f64 (pow.f64 im 5) -1/60 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 3) -1/3))) (+.f64 (*.f64 re 1/2) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 (pow.f64 re 5) 1/240))))","(+.f64 (*.f64 -1/10080 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 7))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) re)) (+.f64 (*.f64 -1/12 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 3))) (*.f64 1/240 (*.f64 (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))) (pow.f64 re 5))))))","(fma.f64 -1/10080 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 7)) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3)))) (fma.f64 -1/12 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 3)) (*.f64 1/240 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 5))))))","(fma.f64 -1/10080 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 7)) (fma.f64 1/2 (*.f64 re (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3)))) (fma.f64 -1/12 (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (pow.f64 re 3)) (*.f64 (fma.f64 (pow.f64 im 7) -1/2520 (fma.f64 (pow.f64 im 5) -1/60 (*.f64 (pow.f64 im 3) -1/3))) (*.f64 1/240 (pow.f64 re 5))))))","(+.f64 (*.f64 (fma.f64 (pow.f64 im 3) -1/3 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 5) -1/60))) (+.f64 (*.f64 re 1/2) (*.f64 -1/12 (pow.f64 re 3)))) (*.f64 (fma.f64 (pow.f64 im 3) -1/3 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 5) -1/60))) (+.f64 (*.f64 (pow.f64 re 5) 1/240) (*.f64 -1/10080 (pow.f64 re 7)))))","(*.f64 (fma.f64 (pow.f64 im 5) -1/60 (fma.f64 (pow.f64 im 7) -1/2520 (*.f64 (pow.f64 im 3) -1/3))) (+.f64 (+.f64 (*.f64 (pow.f64 re 5) 1/240) (*.f64 -1/10080 (pow.f64 re 7))) (+.f64 (*.f64 -1/12 (pow.f64 re 3)) (*.f64 re 1/2))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (*.f64 -1/6 (sin.f64 re)) (pow.f64 im 3))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 (sin.f64 re) (fma.f64 -1/5040 (pow.f64 im 7) (+.f64 (*.f64 -1/6 (pow.f64 im 3)) (*.f64 -1/120 (pow.f64 im 5)))))"]],"stop":[["node limit",1]],"time":47.781982421875,"type":"simplify"},{"compiler":[[4421,3306]],"time":56.01708984375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","done",0.5730776568427052],["(pow.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)","fresh",26.13233517637959],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)","fresh",1.0602604694328501],["(*.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",34.411045483344836],["(*.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1)) 1) (+.f64 (+.f64 (sin.f64 re) 1) 1))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.593024844985006],["(cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))","fresh",34.80738648521922],["(*.f64 (*.f64 1/2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.741193341046605],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","next",0.6111826861480313],["(*.f64 (*.f64 1/2 (log1p.f64 (expm1.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",0.6417689166111472],["(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","fresh",44.162639440056545]],"compiler":[[30,23],[28,23],[28,23],[33,26],[41,32],[30,25],[34,24],[27,22],[27,22],[24,18],[28,23],[28,23],[33,26],[41,32],[30,25],[34,24],[27,22],[27,22],[24,18]],"count":[[141,10]],"kept":[{"done":[0,0],"fresh":[9,7],"new":[131,2],"picked":[1,1]}],"min-error":[0.01171875],"time":41.510009765625,"type":"prune"},{"compiler":[[109,76]],"locations":[["(fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))",0.09765625,false],["(expm1.f64 (log1p.f64 (sin.f64 re)))",0.125,true],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))",0.125,true],["(log1p.f64 (sin.f64 re))",0.2947837617629815,true]],"time":26.791015625,"type":"localize"},{"count":[[3,48]],"series":[["(expm1.f64 (log1p.f64 (sin.f64 re)))","re","-inf",0.131103515625],["(expm1.f64 (log1p.f64 (sin.f64 re)))","re","inf",0.133056640625],["(expm1.f64 (log1p.f64 (sin.f64 re)))","re","0",0.166015625],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","-inf",0.192138671875],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","inf",0.2099609375],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","im","0",0.18896484375],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","-inf",0.22900390625],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","inf",0.212158203125],["(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","re","0",0.328125],["(log1p.f64 (sin.f64 re))","re","-inf",7.44287109375],["(log1p.f64 (sin.f64 re))","re","inf",19.156005859375],["(log1p.f64 (sin.f64 re))","re","0",0.408935546875]],"time":29.017822265625,"type":"series"},{"count":[[3,71]],"egraph":[[2,4994,41,0.035923709],[1,469,41,0.008285667],[0,23,41,0.000834125]],"inputs":[["(log1p.f64 (sin.f64 re))","(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(expm1.f64 (log1p.f64 (sin.f64 re)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 re) 1)) (cbrt.f64 (+.f64 (sin.f64 re) 1)))) (log.f64 (cbrt.f64 (+.f64 (sin.f64 re) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (sin.f64 re) 1))) (log.f64 (sqrt.f64 (+.f64 (sin.f64 re) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (sin.f64 re) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (sin.f64 re) 2) (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (sin.f64 re)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (*.f64 (cos.f64 re) (cos.f64 re))) (log.f64 (-.f64 1 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (sin.f64 re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (sin.f64 re))) (pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 re))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 re))) 2) (cbrt.f64 (log1p.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (sin.f64 re))) (sqrt.f64 (log1p.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (sin.f64 re)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (sin.f64 re)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (sin.f64 re))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (sin.f64 re))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (sin.f64 re)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (sin.f64 re) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (sin.f64 re)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (sin.f64 re))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -2 im)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 re)) 1/2) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 1/2 (sin.f64 re)) 3) (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sin.f64 re)) (*.f64 -2 im) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (sin.f64 re) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 re))) (cbrt.f64 (exp.f64 (sin.f64 re))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (sin.f64 re) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 re))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 re))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 re))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 re)) (cbrt.f64 (pow.f64 (sin.f64 re) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 re) 2)) (cbrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 re)) (sqrt.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (sin.f64 re) 1) 3) 1) (fma.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1) (+.f64 1 (*.f64 (+.f64 (sin.f64 re) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1) -1) (+.f64 (+.f64 (sin.f64 re) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 re) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 re) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 re)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 re)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 re) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 re))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 re) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 re)))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 re)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 re)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (sin.f64 re) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (sin.f64 re) 1)) (cbrt.f64 (+.f64 (sin.f64 re) 1))) (cbrt.f64 (+.f64 (sin.f64 re) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (sin.f64 re) 1)) (sqrt.f64 (+.f64 (sin.f64 re) 1)) -1)))))"]],"rules":[["egg-rr",28],["egg-rr",22],["egg-rr",21]],"stop":[["node limit",1]],"time":61.504150390625,"type":"rewrite"},{"count":[[119,111]],"egraph":[[4,7545,860,0.033958875],[3,5918,868,0.020914250000000002],[2,1059,942,0.009086083],[1,282,1061,0.002039042],[0,91,1090,0.000481625]],"inputs":[["re","(+.f64 (*.f64 -1/2 (pow.f64 re 2)) re)","(+.f64 (*.f64 1/6 (pow.f64 re 3)) (+.f64 (*.f64 -1/2 (pow.f64 re 2)) re))","(+.f64 (*.f64 -1/12 (pow.f64 re 4)) (+.f64 (*.f64 1/6 (pow.f64 re 3)) (+.f64 (*.f64 -1/2 (pow.f64 re 2)) re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)"]],"method":["egg-herbie"],"outputs":[["re","(+.f64 (*.f64 -1/2 (pow.f64 re 2)) re)","(fma.f64 -1/2 (*.f64 re re) re)","(fma.f64 re (*.f64 re -1/2) re)","(+.f64 (*.f64 1/6 (pow.f64 re 3)) (+.f64 (*.f64 -1/2 (pow.f64 re 2)) re))","(fma.f64 1/6 (pow.f64 re 3) (fma.f64 -1/2 (*.f64 re re) re))","(fma.f64 1/6 (pow.f64 re 3) (fma.f64 re (*.f64 re -1/2) re))","(+.f64 (*.f64 -1/12 (pow.f64 re 4)) (+.f64 (*.f64 1/6 (pow.f64 re 3)) (+.f64 (*.f64 -1/2 (pow.f64 re 2)) re)))","(fma.f64 -1/12 (pow.f64 re 4) (fma.f64 1/6 (pow.f64 re 3) (fma.f64 -1/2 (*.f64 re re) re)))","(fma.f64 -1/12 (pow.f64 re 4) (fma.f64 1/6 (pow.f64 re 3) (fma.f64 re (*.f64 re -1/2) re)))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(log.f64 (+.f64 1 (sin.f64 re)))","(log1p.f64 (sin.f64 re))","(*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 re (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1/2))","(*.f64 re (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 1/2 re) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 re (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) 1/2)))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2)))) (+.f64 (*.f64 re 1/2) (*.f64 (pow.f64 re 3) -1/12)))","(*.f64 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))) (+.f64 1/2 (*.f64 re (*.f64 re -1/12))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (*.f64 1/240 (pow.f64 re 5)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 1/240 (pow.f64 re 5)))))","(fma.f64 re (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2)))) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 (pow.f64 re 3) -1/12))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2)))) (+.f64 (*.f64 re 1/2) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 (pow.f64 re 3) -1/12))))","(+.f64 (*.f64 -1/12 (*.f64 (pow.f64 re 3) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 1/2 (*.f64 re (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (+.f64 (*.f64 -1/10080 (*.f64 (pow.f64 re 7) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))) (*.f64 1/240 (*.f64 (pow.f64 re 5) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3))))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -2 im (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 -1/10080 (*.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (pow.f64 re 7)) (*.f64 (*.f64 1/240 (pow.f64 re 5)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))))))","(fma.f64 -1/12 (*.f64 (pow.f64 re 3) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (fma.f64 1/2 (*.f64 re (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (+.f64 (*.f64 1/240 (pow.f64 re 5)) (*.f64 -1/10080 (pow.f64 re 7))))))","(fma.f64 re (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2)))) (+.f64 (fma.f64 1/240 (pow.f64 re 5) (*.f64 -1/10080 (pow.f64 re 7))) (*.f64 (pow.f64 re 3) -1/12))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2)))) (+.f64 (*.f64 re 1/2) (+.f64 (*.f64 (pow.f64 re 3) -1/12) (fma.f64 1/240 (pow.f64 re 5) (*.f64 -1/10080 (pow.f64 re 7))))))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 1/2 (*.f64 (sin.f64 re) (+.f64 (*.f64 -2 im) (+.f64 (*.f64 -1/2520 (pow.f64 im 7)) (+.f64 (*.f64 -1/60 (pow.f64 im 5)) (*.f64 -1/3 (pow.f64 im 3)))))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))))","(*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 im -2 (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3))))) (*.f64 (sin.f64 re) 1/2))","(*.f64 (sin.f64 re) (*.f64 1/2 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 im -2))))))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/60 (pow.f64 im 5) (*.f64 -1/3 (pow.f64 im 3)))) 1/2) im))","(*.f64 -1 (*.f64 (sin.f64 re) im))","(neg.f64 (*.f64 (sin.f64 re) im))","(*.f64 (sin.f64 re) (neg.f64 im))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (neg.f64 (*.f64 (sin.f64 re) im)))","(-.f64 (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 3) -1/6)) (*.f64 (sin.f64 re) im))","(*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im))","(*.f64 (sin.f64 re) (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im))))","(fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im))))","(-.f64 (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))) (*.f64 (sin.f64 re) im))","(fma.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120) (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (fma.f64 (pow.f64 im 5) -1/120 (neg.f64 im))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (-.f64 (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))) (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/5040))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (*.f64 -1/120 (sin.f64 re)) (pow.f64 im 5)))","(fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/5040)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(fma.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (-.f64 (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))) (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 5) -1/120))))","(*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)))","(*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/5040))","(*.f64 (pow.f64 im 7) (*.f64 (sin.f64 re) -1/5040))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (*.f64 (*.f64 -1/120 (sin.f64 re)) (pow.f64 im 5)))","(fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 7) -1/5040)))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040)))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))))","(fma.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (+.f64 (*.f64 (pow.f64 im 3) -1/6) (*.f64 (pow.f64 im 7) -1/5040))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7))) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3))) (*.f64 -1 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (fma.f64 -1/120 (*.f64 (sin.f64 re) (pow.f64 im 5)) (neg.f64 (*.f64 (sin.f64 re) im)))))","(fma.f64 -1/5040 (*.f64 (sin.f64 re) (pow.f64 im 7)) (-.f64 (fma.f64 -1/6 (*.f64 (sin.f64 re) (pow.f64 im 3)) (*.f64 (sin.f64 re) (*.f64 (pow.f64 im 5) -1/120))) (*.f64 (sin.f64 re) im)))","(+.f64 (*.f64 (sin.f64 re) (-.f64 (*.f64 (pow.f64 im 3) -1/6) im)) (*.f64 (sin.f64 re) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 5) -1/120) (*.f64 (pow.f64 im 7) -1/5040))))","(*.f64 (sin.f64 re) (+.f64 (fma.f64 (pow.f64 im 3) -1/6 (neg.f64 im)) (+.f64 (*.f64 (pow.f64 im 7) -1/5040) (*.f64 (pow.f64 im 5) -1/120))))","re","(+.f64 re (*.f64 -1/6 (pow.f64 re 3)))","(+.f64 re (*.f64 (pow.f64 re 3) -1/6))","(fma.f64 (pow.f64 re 3) -1/6 re)","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (*.f64 -1/6 (pow.f64 re 3))))","(fma.f64 1/120 (pow.f64 re 5) (+.f64 re (*.f64 (pow.f64 re 3) -1/6)))","(fma.f64 (pow.f64 re 5) 1/120 (fma.f64 (pow.f64 re 3) -1/6 re))","(fma.f64 (pow.f64 re 3) -1/6 (fma.f64 (pow.f64 re 5) 1/120 re))","(+.f64 (*.f64 1/120 (pow.f64 re 5)) (+.f64 re (+.f64 (*.f64 -1/6 (pow.f64 re 3)) (*.f64 -1/5040 (pow.f64 re 7)))))","(fma.f64 1/120 (pow.f64 re 5) (+.f64 re (fma.f64 -1/6 (pow.f64 re 3) (*.f64 (pow.f64 re 7) -1/5040))))","(+.f64 (fma.f64 (pow.f64 re 7) -1/5040 (*.f64 (pow.f64 re 3) -1/6)) (fma.f64 (pow.f64 re 5) 1/120 re))","(fma.f64 (pow.f64 re 5) 1/120 (fma.f64 (pow.f64 re 3) -1/6 (fma.f64 (pow.f64 re 7) -1/5040 re)))","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)","(sin.f64 re)"]],"stop":[["node limit",1]],"time":59.55908203125,"type":"simplify"},{"compiler":[[4285,3173]],"time":57.796875,"type":"eval"},{"alts":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","done",0.5730776568427052],["(pow.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)","fresh",26.13233517637959],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)","fresh",1.0602604694328501],["(*.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",34.411045483344836],["(cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))","fresh",34.80738648521922],["(*.f64 (*.f64 1/2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.741193341046605],["(*.f64 (*.f64 1/2 (/.f64 (fma.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1) -1) (+.f64 (+.f64 (sin.f64 re) 1) 1))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",13.567024950911303],["(*.f64 (*.f64 1/2 (log1p.f64 (expm1.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","fresh",0.6417689166111472],["(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","fresh",44.162639440056545]],"compiler":[[30,23],[28,23],[28,23],[33,26],[30,25],[34,24],[40,31],[27,22],[24,18]],"count":[[153,9]],"kept":[{"done":[1,1],"fresh":[8,6],"new":[143,2],"picked":[1,0]}],"min-error":[0.01171875],"time":43.903076171875,"type":"prune"},{"accuracy":[0.5730776568427052],"baseline":[0.5730776568427052],"branch":[["re",0.5730776568427052,1],["im",0.5730776568427052,1],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",0.5730776568427052,1],["(*.f64 1/2 (sin.f64 re))",0.5730776568427052,1],["(sin.f64 re)",0.5730776568427052,1],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",0.5730776568427052,1],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",0.5730776568427052,1]],"compiler":[[3,2],[3,2],[13,10],[6,5],[4,3],[8,6],[8,6],[444,321]],"count":[[17,1]],"inputs":[["(*.f64 (*.f64 1/2 (/.f64 (fma.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1) -1) (+.f64 (+.f64 (sin.f64 re) 1) 1))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(*.f64 (*.f64 1/2 (log1p.f64 (expm1.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(pow.f64 (sqrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 2)","(pow.f64 (cbrt.f64 (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))) 3)","(*.f64 (*.f64 1/2 (*.f64 (pow.f64 (sin.f64 re) 1/4) (sqrt.f64 (pow.f64 (sin.f64 re) 3/2)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(*.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 (+.f64 (sin.f64 re) 1) (+.f64 (sin.f64 re) 1)) 1) (+.f64 (+.f64 (sin.f64 re) 1) 1))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(cbrt.f64 (*.f64 (pow.f64 (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))) 3) (pow.f64 (*.f64 1/2 (sin.f64 re)) 3)))","(*.f64 (*.f64 1/2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 re)))))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(pow.f64 (sqrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 2)","(pow.f64 (cbrt.f64 (*.f64 1/2 (*.f64 (sin.f64 re) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))))))) 3)","(*.f64 (*.f64 1/2 (expm1.f64 (log1p.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(*.f64 (*.f64 1/2 (log1p.f64 (expm1.f64 (sin.f64 re)))) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -2 im (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))","(*.f64 (*.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (sin.f64 re)) 4) 2)) (cbrt.f64 (cbrt.f64 (sin.f64 re))))) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))","(*.f64 (sin.f64 re) (fma.f64 (exp.f64 im) -1/2 (/.f64 1/2 (exp.f64 im))))","(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))"]],"link":["."],"name":["math.cos on complex, imaginary part"],"oracle":[55.264300279060215],"outputs":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))"]],"time":45.205810546875,"times":[["re",7.053955078125],["im",6.655029296875],["(*.f64 (*.f64 1/2 (sin.f64 re)) (-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im)))",2.833984375],["(*.f64 1/2 (sin.f64 re))",7.054931640625],["(sin.f64 re)",6.783203125],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",2.56494140625],["(-.f64 (exp.f64 (neg.f64 im)) (exp.f64 im))",2.572021484375]],"type":"regimes"},{"compiler":[[30,23]],"egraph":[[1,26,41,6.5083e-5],[0,22,41,3.7333e-5]],"inputs":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5)))) (*.f64 1/2 (sin.f64 re))))","(fma.f64 (*.f64 -2 im) (*.f64 1/2 (sin.f64 re)) (*.f64 (*.f64 1/2 (sin.f64 re)) (fma.f64 -1/2520 (pow.f64 im 7) (fma.f64 -1/3 (pow.f64 im 3) (*.f64 -1/60 (pow.f64 im 5))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.22509765625,"type":"simplify"},{"time":0.02197265625,"type":"soundness"},{"compiler":[[30,23]],"remove-preprocessing":[[]],"time":16.906982421875,"type":"end"}]