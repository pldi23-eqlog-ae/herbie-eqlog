[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.23586688459091854,0.7582827942633662,0.005850321145715265],[11,0.1403505428970755,0.8576977621487947,0.0019516949541298345],[10,0.10916153336439205,0.8888867716814781,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":132.22314453125,"type":"analyze"},{"outcomes":[["body",256,"invalid",35.73974609375,777],["body",256,"valid",370.01416015625,8256]],"time":414.27392578125,"type":"sample"},{"compiler":[[13,8]],"egraph":[[0,4,4,2.25e-6],[6,5880,91,0.030430459],[5,2317,91,0.016565042000000002],[4,925,91,0.0059370840000000005],[3,403,91,0.002205459],[2,162,91,0.0008456249999999999],[1,62,91,0.00029866699999999996],[0,28,91,0.000103084]],"inputs":[["0","1","2","3"],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","(/.f64 (*.f64 y (-.f64 x z)) (-.f64 t z))","(/.f64 (*.f64 z (-.f64 y x)) (-.f64 t x))","(/.f64 (*.f64 t (-.f64 y z)) (-.f64 x z))","(/.f64 (*.f64 x (-.f64 z y)) (-.f64 t y))","(/.f64 (*.f64 x (-.f64 t z)) (-.f64 y z))","(/.f64 (*.f64 x (-.f64 y t)) (-.f64 z t))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","(*.f64 (-.f64 y z) (/.f64 x (-.f64 t z)))","(*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 y (-.f64 x z)) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) (-.f64 x z)))","(*.f64 (-.f64 x z) (/.f64 y (-.f64 t z)))","(*.f64 y (/.f64 (-.f64 x z) (-.f64 t z)))","(*.f64 y (/.f64 (-.f64 z x) (-.f64 z t)))","(/.f64 (*.f64 z (-.f64 y x)) (-.f64 t x))","(*.f64 (/.f64 (-.f64 y x) (-.f64 t x)) z)","(*.f64 z (/.f64 (-.f64 y x) (-.f64 t x)))","(/.f64 (*.f64 t (-.f64 y z)) (-.f64 x z))","(/.f64 (*.f64 (-.f64 y z) t) (-.f64 x z))","(*.f64 (/.f64 t (-.f64 x z)) (-.f64 y z))","(*.f64 (-.f64 y z) (/.f64 t (-.f64 x z)))","(/.f64 (*.f64 x (-.f64 z y)) (-.f64 t y))","(/.f64 x (/.f64 (-.f64 t y) (-.f64 z y)))","(*.f64 (/.f64 x (-.f64 t y)) (-.f64 z y))","(*.f64 (-.f64 z y) (/.f64 x (-.f64 t y)))","(*.f64 x (/.f64 (-.f64 z y) (-.f64 t y)))","(*.f64 x (/.f64 (-.f64 y z) (-.f64 y t)))","(/.f64 (*.f64 x (-.f64 t z)) (-.f64 y z))","(/.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))","(*.f64 (/.f64 x (-.f64 y z)) (-.f64 t z))","(*.f64 (-.f64 t z) (/.f64 x (-.f64 y z)))","(/.f64 (-.f64 t z) (/.f64 (-.f64 y z) x))","(/.f64 (*.f64 x (-.f64 y t)) (-.f64 z t))","(/.f64 x (/.f64 (-.f64 z t) (-.f64 y t)))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 y t))","(*.f64 (-.f64 y t) (/.f64 x (-.f64 z t)))","(*.f64 x (/.f64 (-.f64 y t) (-.f64 z t)))","(*.f64 x (/.f64 (-.f64 t y) (-.f64 t z)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":55.77587890625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,7916,13,0.042629209],[8,6545,13,0.035336001],[7,2146,13,0.020359376],[6,712,13,0.0058434179999999995],[5,319,13,0.0022665009999999998],[4,175,13,0.001090084],[3,79,13,0.000516168],[2,34,13,0.000227834],[1,15,13,0.000100584],[0,9,13,4.0792e-5]],"inputs":[["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))","(*.f64 (-.f64 y z) (/.f64 x (-.f64 t z)))","(*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))","(*.f64 (-.f64 z y) (/.f64 x (-.f64 z t)))"]],"stop":[["node limit",1]],"time":54.037109375,"type":"simplify"},{"compiler":[[22,12]],"time":0.347900390625,"type":"eval"},{"alts":[["(*.f64 (-.f64 z y) (/.f64 x (-.f64 z t)))","fresh",11.048168005414107],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","next",11.041527996448902]],"compiler":[[13,8],[13,8],[13,8],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.078125],"time":1.244140625,"type":"prune"},{"compiler":[[28,8]],"locations":[["(*.f64 x (-.f64 y z))",0.00390625,true],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))",10.395325516962442,true]],"time":5.408935546875,"type":"localize"},{"count":[[2,84]],"series":[["(*.f64 x (-.f64 y z))","z","-inf",0.2177734375],["(*.f64 x (-.f64 y z))","z","inf",0.278076171875],["(*.f64 x (-.f64 y z))","z","0",0.214111328125],["(*.f64 x (-.f64 y z))","y","-inf",0.2509765625],["(*.f64 x (-.f64 y z))","y","inf",0.151123046875],["(*.f64 x (-.f64 y z))","y","0",0.58984375],["(*.f64 x (-.f64 y z))","x","-inf",0.305908203125],["(*.f64 x (-.f64 y z))","x","inf",0.31103515625],["(*.f64 x (-.f64 y z))","x","0",0.142822265625],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","t","-inf",0.401123046875],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","t","inf",0.531005859375],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","t","0",0.47216796875],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","z","-inf",0.427001953125],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","z","inf",0.838134765625],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","z","0",0.56396484375],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","y","-inf",0.5478515625],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","y","inf",0.657958984375],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","y","0",0.4970703125],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","x","-inf",0.43603515625],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","x","inf",0.448974609375],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","x","0",0.6669921875]],"time":9.241943359375,"type":"series"},{"count":[[2,80]],"egraph":[[2,3157,20,0.026311460000000002],[1,205,20,0.003881543],[0,9,20,0.000204834]],"inputs":[["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","(*.f64 x (-.f64 y z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (-.f64 y z) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) (*.f64 x (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 y z)) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) 2) (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 2) (*.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) (sqrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y z) (neg.f64 x)) (/.f64 1 (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) 1) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 2) 1) (/.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) 1) (/.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (-.f64 y z) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 x (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (*.f64 x (-.f64 y z)) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (-.f64 t z))) (/.f64 (-.f64 y z) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 (*.f64 x (-.f64 y z)) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (-.f64 y z)) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (-.f64 y z)) (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) (*.f64 x (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3) (pow.f64 (-.f64 t z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 t z) (*.f64 x (-.f64 y z))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (-.f64 y z)) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3) (pow.f64 (-.f64 t z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y x) (*.f64 (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 x (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 z 3)) x) (fma.f64 z (+.f64 y z) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 z z)) x) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 y z) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 y z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 y z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 y z) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 y z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 y z) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (-.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 x (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 (neg.f64 z) x))))))"]],"rules":[["egg-rr",29],["egg-rr",51]],"stop":[["node limit",1]],"time":48.119140625,"type":"rewrite"},{"count":[[164,125]],"egraph":[[2,1466,1199,0.013155083],[1,382,1393,0.002650333],[0,112,1489,0.000550333]],"inputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) t)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(/.f64 (neg.f64 (*.f64 z x)) (-.f64 t z))","(/.f64 (*.f64 z (neg.f64 x)) (-.f64 t z))","(/.f64 z (/.f64 (-.f64 t z) (neg.f64 x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 x t) y)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 y (/.f64 t x)) (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))))","(fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 y (/.f64 t x)))","(fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 y (/.f64 t x)) (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 t (*.f64 z z)))))","(+.f64 (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 y (/.f64 t x))) (*.f64 (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) t) (*.f64 z z)))","(fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (fma.f64 (/.f64 (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) t) (*.f64 z z) (*.f64 (/.f64 x t) y)))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","(+.f64 (+.f64 (/.f64 y (/.f64 t x)) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 (*.f64 t t) (pow.f64 z 3)))) (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 t (*.f64 z z)))))","(+.f64 (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (*.f64 (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) t) (*.f64 z z))) (+.f64 (/.f64 y (/.f64 t x)) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 (*.f64 t t) (pow.f64 z 3)))))","(fma.f64 (/.f64 y t) x (fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) t) (+.f64 (*.f64 z z) (/.f64 (pow.f64 z 3) t)))))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t)))) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 x z) (-.f64 y t))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t))) x)) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (-.f64 (*.f64 (/.f64 x (/.f64 (*.f64 z z) (fma.f64 y -1 t))) (+.f64 (/.f64 (*.f64 t t) z) t)) (*.f64 (/.f64 x z) (-.f64 y t))))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t)))) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 x z) (-.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t))) x)) (neg.f64 (/.f64 t (/.f64 z x))))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (-.f64 (*.f64 (/.f64 x (/.f64 (*.f64 z z) (fma.f64 y -1 t))) (+.f64 (/.f64 (*.f64 t t) z) t)) (*.f64 (/.f64 x z) (-.f64 y t))))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(neg.f64 (/.f64 (-.f64 y z) (/.f64 z x)))","(/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z)","(*.f64 (/.f64 (neg.f64 (-.f64 y z)) z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (neg.f64 (/.f64 (-.f64 y z) (/.f64 z x))))","(-.f64 (/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x)))","(*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (-.f64 y z) (/.f64 z x)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (*.f64 (-.f64 y z) x))))))","(-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x))) (/.f64 (*.f64 (-.f64 y z) x) (/.f64 (pow.f64 z 3) (*.f64 t t))))","(-.f64 (*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z))) (*.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y z))) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (fma.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x)) (fma.f64 -1 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (*.f64 (-.f64 y z) x))) (neg.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (*.f64 (-.f64 y z) x)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 (-.f64 y z) x))) (/.f64 (-.f64 y z) (/.f64 z x))) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x)))","(-.f64 (*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z))) (*.f64 (*.f64 (-.f64 y z) x) (+.f64 (*.f64 (/.f64 t (pow.f64 z 3)) t) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 z (/.f64 t x))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 x (*.f64 z z))))","(fma.f64 (/.f64 (-.f64 y z) t) x (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z x) (/.f64 t z)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (-.f64 y z) (*.f64 x (pow.f64 z 3))) (pow.f64 t 4))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 x (*.f64 z z))) (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (-.f64 y z) t) x)))","(fma.f64 (/.f64 (-.f64 y z) t) x (fma.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z x) (/.f64 t z))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 z (/.f64 t x))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 x (*.f64 z z))))","(fma.f64 (/.f64 (-.f64 y z) t) x (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z x) (/.f64 t z)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (-.f64 y z) (*.f64 x (pow.f64 z 3))) (pow.f64 t 4))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 x (*.f64 z z))) (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (-.f64 y z) t) x)))","(fma.f64 (/.f64 (-.f64 y z) t) x (fma.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z x) (/.f64 t z))))))","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (-.f64 y z) x)"]],"stop":[["node limit",1]],"time":35.015869140625,"type":"simplify"},{"compiler":[[2170,707]],"time":16.773193359375,"type":"eval"},{"alts":[["(*.f64 (-.f64 z y) (/.f64 x (-.f64 z t)))","fresh",11.048168005414107],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","done",11.041527996448902],["(pow.f64 (/.f64 (-.f64 t z) (*.f64 x (-.f64 y z))) -1)","fresh",11.304979573184447],["(*.f64 x (*.f64 (-.f64 y z) (/.f64 1 (-.f64 t z))))","fresh",2.6528300592764107],["(*.f64 x (/.f64 1 (/.f64 (-.f64 t z) (-.f64 y z))))","fresh",2.5903300592764107],["(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","fresh",29.627745102253513],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","next",2.5668925592764107]],"compiler":[[13,8],[13,8],[15,10],[15,10],[15,10],[13,8],[15,10],[13,8],[15,10],[15,10],[15,10],[13,8],[15,10]],"count":[[127,7]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[125,5],"picked":[1,1]}],"min-error":[0],"time":26.663818359375,"type":"prune"},{"compiler":[[36,13]],"locations":[["(/.f64 (-.f64 y z) (-.f64 t z))",0.01171875,true],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))",2.491221787069559,true]],"time":7.001953125,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 (-.f64 y z) (-.f64 t z))","t","-inf",0.284912109375],["(/.f64 (-.f64 y z) (-.f64 t z))","t","inf",0.3330078125],["(/.f64 (-.f64 y z) (-.f64 t z))","t","0",0.530029296875],["(/.f64 (-.f64 y z) (-.f64 t z))","z","-inf",0.31201171875],["(/.f64 (-.f64 y z) (-.f64 t z))","z","inf",0.35400390625],["(/.f64 (-.f64 y z) (-.f64 t z))","z","0",1.09521484375],["(/.f64 (-.f64 y z) (-.f64 t z))","y","-inf",0.402099609375],["(/.f64 (-.f64 y z) (-.f64 t z))","y","inf",0.2822265625],["(/.f64 (-.f64 y z) (-.f64 t z))","y","0",0.35205078125],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","t","-inf",0.242919921875],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","t","inf",0.21484375],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","t","0",0.243896484375],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","z","-inf",0.2041015625],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","z","inf",0.2470703125],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","z","0",0.22998046875],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","y","-inf",0.2080078125],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","y","inf",0.18310546875],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","y","0",0.173828125],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","x","-inf",0.197998046875],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","x","inf",0.29296875],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","x","0",0.23095703125]],"time":6.93310546875,"type":"series"},{"count":[[2,272]],"egraph":[[2,3526,23,0.028351833],[1,253,23,0.004447833],[0,11,23,0.000291833]],"inputs":[["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z)))) (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 1 x) (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (-.f64 t z) (-.f64 y z)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 t z) (*.f64 x (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y z) (*.f64 (/.f64 1 x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y z) (*.f64 (-.f64 t z) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y z) (-.f64 t z)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 2) (/.f64 1 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) (/.f64 1 (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 y z)) (*.f64 (/.f64 1 x) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 -1 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (/.f64 (-.f64 t z) (-.f64 y z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (-.f64 y z))) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 (-.f64 y z))) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 (-.f64 y z))) (*.f64 -1 (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 y z)) x) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 y z)) x) (*.f64 (neg.f64 (-.f64 t z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 y z)) 1) (*.f64 (neg.f64 (-.f64 t z)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y z) (neg.f64 x)) (*.f64 (-.f64 t z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 y z)) (neg.f64 x)) (*.f64 (neg.f64 (-.f64 t z)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 y z)) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (-.f64 y z)) (sqrt.f64 (-.f64 t z))) (sqrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y z) (-.f64 t z)) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y z) (-.f64 t z)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 z (-.f64 t z)))) (sqrt.f64 (/.f64 z (-.f64 t z))) (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y z) (-.f64 t z)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 y z) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 z (-.f64 t z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 t z))) 1 (*.f64 (/.f64 z (-.f64 t z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) z (*.f64 (/.f64 1 (-.f64 t z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 t z))) (cbrt.f64 (/.f64 z (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 t z)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 z (cbrt.f64 (-.f64 t z))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 t z)))) (/.f64 1 (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 t z))) (/.f64 1 (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 t z)) (/.f64 (pow.f64 (cbrt.f64 z) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 t z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 t z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z)))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z)))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 t z))) (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z t) (*.f64 t t))) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z t) (*.f64 t t)) (/.f64 z (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z t)) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 z t) (/.f64 z (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 y z) (-.f64 t z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y z) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) 2) (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) 2) (*.f64 (cbrt.f64 (-.f64 y z)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) (sqrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 y z)) (*.f64 (sqrt.f64 (-.f64 y z)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 y z)) (/.f64 1 (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (-.f64 y z) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 (-.f64 y z) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) 2) 1) (/.f64 (cbrt.f64 (-.f64 y z)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y z)) 1) (/.f64 (sqrt.f64 (-.f64 y z)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y z)) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 (-.f64 y z)) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 (-.f64 y z)) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 y z) (-.f64 t z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y z) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 y z) 3) (pow.f64 (-.f64 t z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 y z) (-.f64 t z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z t) (*.f64 t t)) (neg.f64 (/.f64 z (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 z t) (neg.f64 (/.f64 z (-.f64 t z))))))))"]],"rules":[["egg-rr",224],["egg-rr",48]],"stop":[["node limit",1]],"time":85.10595703125,"type":"rewrite"},{"count":[[356,350]],"egraph":[[2,2433,1683,0.016154209],[1,648,2031,0.00435025],[0,206,2231,0.000910166]],"inputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) t)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 z (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(/.f64 y t)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (/.f64 y t))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (+.f64 (/.f64 y t) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 -1 (/.f64 y (pow.f64 t 4)))) (pow.f64 z 3))) (+.f64 (/.f64 y t) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) (*.f64 -1 (/.f64 t z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) t) (pow.f64 z 2)) 1)) (*.f64 -1 (/.f64 t z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) t) (pow.f64 z 2)) (+.f64 1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) (pow.f64 t 2)) (pow.f64 z 3))))) (*.f64 -1 (/.f64 t z)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y t) z)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) t) (pow.f64 z 2)))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) t) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 (-.f64 y z) z))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y z) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) z) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)))))","(/.f64 (-.f64 y z) t)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (/.f64 y t)) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 y t)))) (/.f64 z t))","(/.f64 (-.f64 y z) t)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (/.f64 y t)) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 y t)))) (/.f64 z t))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(neg.f64 (/.f64 z (/.f64 (-.f64 t z) x)))","(/.f64 (neg.f64 z) (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 z (-.f64 t z)) (neg.f64 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 y t) x)","(*.f64 (/.f64 x t) y)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 y (/.f64 t x)) (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))))","(fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (*.f64 (/.f64 y t) x))","(fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 y (/.f64 t x)) (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 t (*.f64 z z)))))","(+.f64 (*.f64 (/.f64 y t) x) (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 t (*.f64 z z)))))","(+.f64 (fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y)) (*.f64 (/.f64 (*.f64 z z) t) (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t)))))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","(+.f64 (/.f64 y (/.f64 t x)) (+.f64 (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 t (*.f64 z z)))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 y (/.f64 (*.f64 t t) x)))) (/.f64 (*.f64 t t) (pow.f64 z 3)))))","(+.f64 (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 t (*.f64 z z)))) (+.f64 (*.f64 (/.f64 y t) x) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 y (*.f64 t t)) x)) (/.f64 t (/.f64 (pow.f64 z 3) t)))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) t) (+.f64 (*.f64 z z) (/.f64 (pow.f64 z 3) t))) (fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y)))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 t (/.f64 (*.f64 z z) (*.f64 -1 (*.f64 x (-.f64 y t))))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 x z) (-.f64 y t))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 x (/.f64 t (/.f64 (*.f64 z z) (*.f64 -1 (*.f64 x (-.f64 y t)))))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 (*.f64 (/.f64 (*.f64 x (-.f64 t y)) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t t) z) t)) (-.f64 x (*.f64 (/.f64 x z) (-.f64 y t))))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 t (/.f64 (*.f64 z z) (*.f64 -1 (*.f64 x (-.f64 y t))))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(-.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 x z) (-.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 x (/.f64 t (/.f64 (*.f64 z z) (*.f64 -1 (*.f64 x (-.f64 y t)))))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 t (*.f64 z z)) (*.f64 x (-.f64 y t)))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 (*.f64 (/.f64 (*.f64 x (-.f64 t y)) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t t) z) t)) (-.f64 x (*.f64 (/.f64 x z) (-.f64 y t))))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(neg.f64 (/.f64 (-.f64 y z) (/.f64 z x)))","(/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z)","(-.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(*.f64 -1 (+.f64 (/.f64 t (/.f64 (*.f64 z z) (*.f64 (-.f64 y z) x))) (/.f64 (-.f64 y z) (/.f64 z x))))","(-.f64 (/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x)))","(*.f64 (-.f64 (*.f64 (/.f64 y z) x) x) (-.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 z z) (*.f64 (-.f64 y z) x))) (*.f64 -1 (+.f64 (/.f64 (-.f64 y z) (/.f64 z x)) (/.f64 (*.f64 (*.f64 (*.f64 t t) (-.f64 y z)) x) (pow.f64 z 3)))))","(-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 x) (-.f64 y z)) z) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 (-.f64 y z) x)))","(-.f64 (*.f64 (-.f64 (*.f64 (/.f64 y z) x) x) (-.f64 -1 (/.f64 t z))) (*.f64 (*.f64 (/.f64 t (pow.f64 z 3)) t) (*.f64 (-.f64 y z) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 t (/.f64 (*.f64 z z) (*.f64 (-.f64 y z) x))) (fma.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (*.f64 (-.f64 y z) x))) (/.f64 (*.f64 (*.f64 (*.f64 t t) (-.f64 y z)) x) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 t t)) (pow.f64 z 3)) (/.f64 (*.f64 (-.f64 y z) x) (/.f64 (pow.f64 z 4) (pow.f64 t 3)))) (*.f64 (+.f64 (/.f64 y z) -1) x)) (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (-.f64 y z) x)))","(-.f64 (*.f64 (-.f64 (*.f64 (/.f64 y z) x) x) (-.f64 -1 (/.f64 t z))) (*.f64 (*.f64 (-.f64 y z) x) (+.f64 (*.f64 (/.f64 t (pow.f64 z 3)) t) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z x) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (*.f64 (-.f64 y z) (*.f64 z z)) x) (pow.f64 t 3))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z (*.f64 z x)) t))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 y z) (*.f64 z z)) x) (pow.f64 t 3)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 x (pow.f64 z 3)))))))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (+.f64 (/.f64 (*.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 t 4) (-.f64 y z))) (*.f64 (/.f64 (-.f64 y z) t) x)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 t t)))) (*.f64 (/.f64 (-.f64 y z) t) (+.f64 (/.f64 (*.f64 z (*.f64 z x)) (*.f64 t t)) x)))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z x) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (*.f64 (-.f64 y z) (*.f64 z z)) x) (pow.f64 t 3))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 z (*.f64 z x)) t))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (*.f64 (*.f64 (-.f64 y z) (*.f64 z z)) x) (pow.f64 t 3)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 x (pow.f64 z 3)))))))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (*.f64 z x)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))) (+.f64 (/.f64 (*.f64 x (pow.f64 z 3)) (/.f64 (pow.f64 t 4) (-.f64 y z))) (*.f64 (/.f64 (-.f64 y z) t) x)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 (*.f64 z x) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 t t)))) (*.f64 (/.f64 (-.f64 y z) t) (+.f64 (/.f64 (*.f64 z (*.f64 z x)) (*.f64 t t)) x)))","(*.f64 -1 (/.f64 z (-.f64 t z)))","(neg.f64 (/.f64 z (-.f64 t z)))","(/.f64 (neg.f64 z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 z (-.f64 t z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 t z))) (/.f64 y (-.f64 t z)))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 z (-.f64 t z)))","(/.f64 (-.f64 y z) (-.f64 t z))","(/.f64 y t)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (/.f64 y t))","(fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 t) (/.f64 (neg.f64 y) (*.f64 t t)))) (/.f64 y t))","(-.f64 (/.f64 y t) (*.f64 z (-.f64 (/.f64 1 t) (/.f64 y (*.f64 t t)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (+.f64 (/.f64 y t) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)))))","(+.f64 (fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 t) (/.f64 (neg.f64 y) (*.f64 t t)))) (/.f64 y t)) (neg.f64 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 (*.f64 t t)) (/.f64 (neg.f64 y) (pow.f64 t 3))))))","(-.f64 (-.f64 (/.f64 y t) (*.f64 z (-.f64 (/.f64 1 t) (/.f64 y (*.f64 t t))))) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 t t)) (/.f64 y (pow.f64 t 3)))))","(-.f64 (/.f64 y t) (+.f64 (*.f64 z (*.f64 z (-.f64 (/.f64 1 (*.f64 t t)) (/.f64 y (pow.f64 t 3))))) (*.f64 z (-.f64 (/.f64 1 t) (/.f64 y (*.f64 t t))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 t) (*.f64 -1 (/.f64 y (pow.f64 t 2)))) z)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 3)) (*.f64 -1 (/.f64 y (pow.f64 t 4)))) (pow.f64 z 3))) (+.f64 (/.f64 y t) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 t 2)) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))))))","(fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 t) (/.f64 (neg.f64 y) (*.f64 t t)))) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 1 (pow.f64 t 3)) (/.f64 (neg.f64 y) (pow.f64 t 4)))) (+.f64 (/.f64 y t) (neg.f64 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 (*.f64 t t)) (/.f64 (neg.f64 y) (pow.f64 t 3))))))))","(-.f64 (-.f64 (-.f64 (/.f64 y t) (*.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 t t)) (/.f64 y (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 (pow.f64 t 3)) (/.f64 y (pow.f64 t 4))))) (*.f64 z (-.f64 (/.f64 1 t) (/.f64 y (*.f64 t t)))))","(-.f64 (-.f64 (/.f64 y t) (*.f64 z (*.f64 z (-.f64 (/.f64 1 (*.f64 t t)) (/.f64 y (pow.f64 t 3)))))) (+.f64 (*.f64 z (-.f64 (/.f64 1 t) (/.f64 y (*.f64 t t)))) (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 (pow.f64 t 3)) (/.f64 y (pow.f64 t 4))))))","1","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) 1) (*.f64 -1 (/.f64 t z)))","(-.f64 (fma.f64 -1 (/.f64 y z) 1) (/.f64 (neg.f64 t) z))","(-.f64 1 (/.f64 (-.f64 y t) z))","(+.f64 1 (/.f64 (-.f64 t y) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) t) (pow.f64 z 2)) 1)) (*.f64 -1 (/.f64 t z)))","(-.f64 (fma.f64 -1 (/.f64 y z) (+.f64 1 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (*.f64 z z) t)))) (/.f64 (neg.f64 t) z))","(-.f64 (-.f64 1 (/.f64 (-.f64 y t) z)) (/.f64 (-.f64 y t) (/.f64 (*.f64 z z) t)))","(+.f64 1 (*.f64 (/.f64 (-.f64 y t) z) (-.f64 -1 (/.f64 t z))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) t) (pow.f64 z 2)) (+.f64 1 (/.f64 (*.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 t)) (pow.f64 t 2)) (pow.f64 z 3))))) (*.f64 -1 (/.f64 t z)))","(-.f64 (fma.f64 -1 (/.f64 y z) (+.f64 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (*.f64 z z) t)) (+.f64 1 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (pow.f64 z 3) (*.f64 t t)))))) (/.f64 (neg.f64 t) z))","(+.f64 1 (-.f64 (-.f64 (/.f64 (fma.f64 y -1 t) z) (/.f64 (-.f64 y t) (/.f64 (*.f64 z z) t))) (*.f64 (/.f64 (-.f64 y t) (pow.f64 z 3)) (*.f64 t t))))","(+.f64 1 (+.f64 (/.f64 (-.f64 t y) z) (*.f64 (/.f64 (-.f64 t y) (*.f64 z z)) (+.f64 t (/.f64 (*.f64 t t) z)))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 y t) z)))","(-.f64 (fma.f64 -1 (/.f64 y z) 1) (/.f64 (neg.f64 t) z))","(-.f64 1 (/.f64 (-.f64 y t) z))","(+.f64 1 (/.f64 (-.f64 t y) z))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) t) (pow.f64 z 2)))))","(-.f64 (fma.f64 -1 (/.f64 y z) (+.f64 1 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (*.f64 z z) t)))) (/.f64 (neg.f64 t) z))","(-.f64 (-.f64 1 (/.f64 (-.f64 y t) z)) (/.f64 (-.f64 y t) (/.f64 (*.f64 z z) t)))","(+.f64 1 (*.f64 (/.f64 (-.f64 y t) z) (-.f64 -1 (/.f64 t z))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y t) z)) (*.f64 -1 (/.f64 (*.f64 (-.f64 y t) t) (pow.f64 z 2))))))","(-.f64 (fma.f64 -1 (/.f64 y z) (+.f64 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (*.f64 z z) t)) (+.f64 1 (/.f64 (*.f64 -1 (-.f64 y t)) (/.f64 (pow.f64 z 3) (*.f64 t t)))))) (/.f64 (neg.f64 t) z))","(+.f64 1 (-.f64 (-.f64 (/.f64 (fma.f64 y -1 t) z) (/.f64 (-.f64 y t) (/.f64 (*.f64 z z) t))) (*.f64 (/.f64 (-.f64 y t) (pow.f64 z 3)) (*.f64 t t))))","(+.f64 1 (+.f64 (/.f64 (-.f64 t y) z) (*.f64 (/.f64 (-.f64 t y) (*.f64 z z)) (+.f64 t (/.f64 (*.f64 t t) z)))))","(*.f64 -1 (/.f64 (-.f64 y z) z))","(neg.f64 (/.f64 (-.f64 y z) z))","(/.f64 (neg.f64 (-.f64 y z)) z)","(-.f64 1 (/.f64 y z))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y z) z)))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (neg.f64 (/.f64 (-.f64 y z) z)))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (/.f64 (neg.f64 (-.f64 y z)) z))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (-.f64 1 (/.f64 y z)))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) z)))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (fma.f64 -1 (/.f64 (-.f64 y z) z) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))))))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (-.f64 (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))) (+.f64 (/.f64 y z) -1)))","(+.f64 (-.f64 1 (/.f64 y z)) (*.f64 (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (+.f64 t (/.f64 (*.f64 t t) z))))","(+.f64 (*.f64 t (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) z) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 1 z) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)))))","(fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (+.f64 (fma.f64 -1 (/.f64 (-.f64 y z) z) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))))) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))) (*.f64 z z))))","(+.f64 (fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (-.f64 (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))) (+.f64 (/.f64 y z) -1))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))))","(+.f64 (fma.f64 t (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (-.f64 1 (/.f64 y z))) (*.f64 (-.f64 (/.f64 1 z) (/.f64 y (*.f64 z z))) (+.f64 (/.f64 (*.f64 t t) z) (/.f64 (pow.f64 t 3) (*.f64 z z)))))","(/.f64 (-.f64 y z) t)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (/.f64 y t)) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y z) t))","(+.f64 (/.f64 (-.f64 y z) t) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)))","(*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y z) t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 y t) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y z) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t))) (/.f64 (-.f64 y z) t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 y t)))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (/.f64 y t) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (pow.f64 z 3)))))) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (pow.f64 z 3))) (/.f64 (-.f64 y z) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t))) (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (pow.f64 z 3))) (/.f64 z t)))","(/.f64 (-.f64 y z) t)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (/.f64 y t)) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y z) t))","(+.f64 (/.f64 (-.f64 y z) t) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)))","(*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y z) t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 y t) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y z) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t))) (/.f64 (-.f64 y z) t))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 y z) z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 y t)))) (/.f64 z t))","(-.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (/.f64 y t) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (pow.f64 z 3)))))) (/.f64 z t))","(+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) z)) (+.f64 (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (pow.f64 z 3))) (/.f64 (-.f64 y z) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y z) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t))) (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (pow.f64 z 3))) (/.f64 z t)))"]],"stop":[["node limit",1]],"time":47.126953125,"type":"simplify"},{"compiler":[[14337,4586]],"time":83.01806640625,"type":"eval"},{"alts":[["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","next",2.2991559640367125],["(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","fresh",11.115882008230862],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","done",11.041527996448902],["(/.f64 1 (*.f64 (/.f64 1 x) (/.f64 (-.f64 t z) (-.f64 y z))))","fresh",2.6296775603091413],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","done",2.5668925592764107]],"compiler":[[13,8],[13,8],[13,8],[17,12],[15,10],[13,8],[13,8],[17,12]],"count":[[357,5]],"kept":[{"done":[1,1],"fresh":[5,0],"new":[350,3],"picked":[1,1]}],"min-error":[0],"time":134.458984375,"type":"prune"},{"compiler":[[30,8]],"locations":[["(/.f64 (-.f64 t z) (-.f64 y z))",0.0078125,true],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))",2.2396793339828576,true]],"time":5.333984375,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 (-.f64 t z) (-.f64 y z))","y","-inf",0.3779296875],["(/.f64 (-.f64 t z) (-.f64 y z))","y","inf",0.413818359375],["(/.f64 (-.f64 t z) (-.f64 y z))","y","0",0.376953125],["(/.f64 (-.f64 t z) (-.f64 y z))","z","-inf",0.306884765625],["(/.f64 (-.f64 t z) (-.f64 y z))","z","inf",0.337158203125],["(/.f64 (-.f64 t z) (-.f64 y z))","z","0",0.49609375],["(/.f64 (-.f64 t z) (-.f64 y z))","t","-inf",0.3779296875],["(/.f64 (-.f64 t z) (-.f64 y z))","t","inf",0.348876953125],["(/.f64 (-.f64 t z) (-.f64 y z))","t","0",0.346923828125],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","y","-inf",0.177978515625],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","y","inf",0.192138671875],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","y","0",0.16796875],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","z","-inf",0.22119140625],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","z","inf",0.219970703125],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","z","0",0.241943359375],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","t","-inf",0.219970703125],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","t","inf",0.237060546875],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","t","0",0.218017578125],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","x","-inf",0.18505859375],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","x","inf",0.16796875],["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","x","0",0.22900390625]],"time":6.156005859375,"type":"series"},{"count":[[2,274]],"egraph":[[2,3501,23,0.028323168],[1,214,23,0.0042740009999999995],[0,9,23,0.000214084]],"inputs":[["(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (/.f64 x (-.f64 t z))) (*.f64 (neg.f64 z) (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 t z)) y) (*.f64 (/.f64 x (-.f64 t z)) (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z)))) (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y z) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 2) (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (/.f64 (neg.f64 (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y z) (-.f64 t z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 t z)) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (-.f64 t z)) (/.f64 (sqrt.f64 x) (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (/.f64 x (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (-.f64 t z)) (/.f64 (cbrt.f64 x) (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2)) (/.f64 x (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2)) (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))) (/.f64 x (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 (-.f64 t z))) (neg.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 t z)) 1) (-.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 t z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (-.f64 t z)) (sqrt.f64 (-.f64 y z))) (sqrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 t z) (-.f64 y z)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (/.f64 (neg.f64 (-.f64 t z)) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (/.f64 (-.f64 y z) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (/.f64 (-.f64 y z) (-.f64 t z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 x (-.f64 t z)) (*.f64 (neg.f64 z) (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 t z)) y (*.f64 (/.f64 x (-.f64 t z)) (neg.f64 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 t z) (-.f64 y z)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 z (-.f64 y z)))) (sqrt.f64 (/.f64 z (-.f64 y z))) (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 t z) (-.f64 y z)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 t (-.f64 y z)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 t z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 1 (-.f64 y z)) z))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 y z))) z (*.f64 (/.f64 1 (-.f64 y z)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 z (-.f64 y z)) 1))) (fma.f64 (neg.f64 (/.f64 z (-.f64 y z))) 1 (*.f64 (/.f64 z (-.f64 y z)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) 1) (*.f64 (/.f64 (cbrt.f64 z) (-.f64 y z)) (/.f64 (cbrt.f64 (*.f64 z z)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (-.f64 y z))) (/.f64 (sqrt.f64 z) 1) (*.f64 (/.f64 (sqrt.f64 z) (-.f64 y z)) (/.f64 (sqrt.f64 z) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 (-.f64 y z)))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 z (cbrt.f64 (-.f64 y z))) (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z)))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (*.f64 (/.f64 (sqrt.f64 z) (cbrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 z) (cbrt.f64 (pow.f64 (-.f64 y z) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 (-.f64 y z)))) (/.f64 1 (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 z (sqrt.f64 (-.f64 y z))) (/.f64 1 (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z)))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))) (*.f64 (/.f64 (cbrt.f64 z) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (*.f64 z z)) (sqrt.f64 (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 z y) (*.f64 y y))) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 z y) (*.f64 y y)) (/.f64 z (-.f64 (pow.f64 y 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 z y)) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))) (*.f64 (+.f64 z y) (/.f64 z (-.f64 (*.f64 y y) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 t z) (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 t z) (/.f64 1 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 t z) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2) (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 t z)) 2) (*.f64 (cbrt.f64 (-.f64 t z)) (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 t z)) (*.f64 (sqrt.f64 (-.f64 t z)) (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 t z)) (/.f64 1 (neg.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y z)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (-.f64 t z) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 (-.f64 t z) (sqrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 t z)) 2) 1) (/.f64 (cbrt.f64 (-.f64 t z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 t z)) 1) (/.f64 (sqrt.f64 (-.f64 t z)) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 t z)) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 t z)) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 (-.f64 t z)) (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 t z)) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 (-.f64 t z)) (sqrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 t z) (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y z) (-.f64 t z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 t z) (neg.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 t z) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 t z) (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 t z) 3) (pow.f64 (-.f64 y z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 t z) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 t z) (-.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 1 (-.f64 y z)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 t (-.f64 y z))) (cbrt.f64 (/.f64 t (-.f64 y z)))) (cbrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 t (-.f64 y z))) (sqrt.f64 (/.f64 t (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 t (cbrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 y z))) (/.f64 t (sqrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (/.f64 (cbrt.f64 t) (-.f64 y z)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 t) 1) (/.f64 (sqrt.f64 t) (-.f64 y z)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (cbrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (/.f64 (sqrt.f64 t) (cbrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 t) 2) (sqrt.f64 (-.f64 y z))) (/.f64 (cbrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (/.f64 (sqrt.f64 t) (sqrt.f64 (-.f64 y z))) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 z (+.f64 z y) (*.f64 y y)) (neg.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 z y) (neg.f64 (/.f64 z (-.f64 y z))))))))"]],"rules":[["egg-rr",224],["egg-rr",50]],"stop":[["node limit",1]],"time":84.819091796875,"type":"rewrite"},{"count":[[358,353]],"egraph":[[2,2596,1668,0.016568958],[1,694,2032,0.004511875],[0,215,2244,0.000935125]],"inputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(/.f64 (*.f64 y x) t)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(*.f64 -1 (/.f64 z (-.f64 y z)))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(/.f64 t (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(/.f64 t (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(/.f64 t y)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (/.f64 t y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (+.f64 (/.f64 t y) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 t (pow.f64 y 3))))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (+.f64 (/.f64 t y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 t (pow.f64 y 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3))))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 t z))) (*.f64 -1 (/.f64 y z)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 2)) (*.f64 -1 (/.f64 t z)))) (*.f64 -1 (/.f64 y z)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 2)) (*.f64 -1 (/.f64 t z))))) (*.f64 -1 (/.f64 y z)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 t y) z)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 t y)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 t y) z))))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 t y)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 t y)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 t y) z)))))","(*.f64 -1 (/.f64 (-.f64 t z) z))","(+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) z) (+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) z) (+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z)))))","(/.f64 (-.f64 t z) y)","(-.f64 (+.f64 (/.f64 t y) (/.f64 (*.f64 z (-.f64 t z)) (pow.f64 y 2))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 t z)) (pow.f64 y 3)) (+.f64 (/.f64 t y) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2)))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 t z)) (pow.f64 y 4)) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2))))) (/.f64 z y))","(/.f64 (-.f64 t z) y)","(-.f64 (+.f64 (/.f64 t y) (/.f64 (*.f64 z (-.f64 t z)) (pow.f64 y 2))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 t z)) (pow.f64 y 3)) (+.f64 (/.f64 t y) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2)))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 3)) (pow.f64 y 4)) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2))))) (/.f64 z y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 (-.f64 y z) x) (-.f64 t z))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z))","(neg.f64 (/.f64 (-.f64 y z) (/.f64 z x)))","(/.f64 (neg.f64 (-.f64 y z)) (/.f64 z x))","(-.f64 x (*.f64 (/.f64 y z) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (neg.f64 (/.f64 (-.f64 y z) (/.f64 z x))))","(-.f64 (/.f64 (neg.f64 (-.f64 y z)) (/.f64 z x)) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z)))","(*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (-.f64 y z) (/.f64 z x)) (/.f64 (*.f64 (*.f64 (-.f64 y z) x) (*.f64 t t)) (pow.f64 z 3)))))","(-.f64 (-.f64 (/.f64 (neg.f64 (-.f64 y z)) (/.f64 z x)) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 (-.f64 y z) x)))","(-.f64 (*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z))) (*.f64 (/.f64 (*.f64 (-.f64 y z) x) (/.f64 (pow.f64 z 3) t)) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 y z) x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 (-.f64 y z) x) t) (*.f64 z z)) (fma.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (*.f64 (-.f64 y z) x))) (/.f64 (*.f64 (*.f64 (-.f64 y z) x) (*.f64 t t)) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 x) (-.f64 y z)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 (-.f64 y z) x))) (*.f64 (/.f64 (-.f64 y z) z) x)) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z)))","(-.f64 (*.f64 (*.f64 (/.f64 x z) (-.f64 y z)) (-.f64 -1 (/.f64 t z))) (*.f64 (*.f64 (-.f64 y z) x) (+.f64 (*.f64 (/.f64 t (pow.f64 z 3)) t) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z x) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (+.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (/.f64 (-.f64 y z) t) t) (+.f64 (*.f64 z x) (/.f64 (*.f64 z (*.f64 z x)) t))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 x (pow.f64 z 3)))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (+.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)) (+.f64 (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x))))))","(+.f64 (*.f64 (/.f64 (/.f64 (-.f64 y z) t) t) (+.f64 (*.f64 z x) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 t t)))) (*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z (*.f64 z x)) (*.f64 t t)))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(*.f64 (/.f64 (-.f64 y z) t) x)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)))","(*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z x) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (+.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (*.f64 (/.f64 (/.f64 (-.f64 y z) t) t) (+.f64 (*.f64 z x) (/.f64 (*.f64 z (*.f64 z x)) t))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 3) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 x (pow.f64 z 3)))))))","(+.f64 (*.f64 (/.f64 (-.f64 y z) t) x) (+.f64 (*.f64 (/.f64 (*.f64 z (-.f64 y z)) t) (/.f64 x t)) (+.f64 (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 x (pow.f64 z 3))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x))))))","(+.f64 (*.f64 (/.f64 (/.f64 (-.f64 y z) t) t) (+.f64 (*.f64 z x) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 t t)))) (*.f64 (/.f64 (-.f64 y z) t) (+.f64 x (/.f64 (*.f64 z (*.f64 z x)) (*.f64 t t)))))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 x t) y)","(+.f64 (/.f64 (*.f64 y x) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))","(+.f64 (/.f64 y (/.f64 t x)) (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t))))))","(fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 (*.f64 y x) t))","(fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z)))","(+.f64 (/.f64 y (/.f64 t x)) (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t)))) (/.f64 t (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) t) (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 t (*.f64 z z)))))","(+.f64 (fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y)) (*.f64 (*.f64 (/.f64 z t) z) (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t)))))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 3)) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) (pow.f64 z 2)) t) (*.f64 (-.f64 (*.f64 -1 (/.f64 x t)) (*.f64 -1 (/.f64 (*.f64 y x) (pow.f64 t 2)))) z))))","(+.f64 (/.f64 y (/.f64 t x)) (+.f64 (+.f64 (*.f64 z (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t))))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t)))) (/.f64 t (*.f64 z z)))) (/.f64 (*.f64 -1 (-.f64 (/.f64 x t) (/.f64 (*.f64 y x) (*.f64 t t)))) (/.f64 (*.f64 t t) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 y x) t) (+.f64 (fma.f64 z (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 t (*.f64 z z)))) (/.f64 (fma.f64 -1 (/.f64 x t) (*.f64 (/.f64 x t) (/.f64 y t))) (/.f64 t (/.f64 (pow.f64 z 3) t)))))","(+.f64 (*.f64 (/.f64 (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) t) (+.f64 (*.f64 z z) (/.f64 (pow.f64 z 3) t))) (fma.f64 z (*.f64 (/.f64 x t) (+.f64 -1 (/.f64 y t))) (*.f64 (/.f64 x t) y)))","x","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) x) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (/.f64 (*.f64 x (-.f64 t y)) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) t) (pow.f64 z 2)) x)) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t)))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 x (*.f64 (/.f64 x (/.f64 z (-.f64 y t))) (/.f64 t z))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (*.f64 x (-.f64 t y)) z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y x) z)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x))) (pow.f64 t 2)) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 t (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t x)))) (pow.f64 z 2)) x))) (*.f64 -1 (/.f64 (*.f64 t x) z)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 x (/.f64 z (-.f64 y t))) (/.f64 t z))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 (+.f64 x (*.f64 (/.f64 (*.f64 x (-.f64 t y)) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t t) z) t))) (/.f64 (*.f64 x (-.f64 t y)) z))","x","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) x)","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) x) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 x (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (/.f64 (*.f64 x (-.f64 t y)) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t)))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 x (*.f64 (/.f64 x (/.f64 z (-.f64 y t))) (/.f64 t z))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 x (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (*.f64 x (-.f64 t y)) z)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 y x) (*.f64 t x)) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 (*.f64 y x) (*.f64 t x))) (pow.f64 z 2))) x)))","(-.f64 (fma.f64 -1 (/.f64 y (/.f64 z x)) (+.f64 (+.f64 x (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (*.f64 z z) t))) (/.f64 (*.f64 -1 (*.f64 x (-.f64 y t))) (/.f64 (pow.f64 z 3) (*.f64 t t))))) (/.f64 (*.f64 (neg.f64 t) x) z))","(-.f64 (-.f64 (-.f64 x (*.f64 (/.f64 x (/.f64 z (-.f64 y t))) (/.f64 t z))) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (*.f64 x (-.f64 y t)))) (/.f64 x (/.f64 z (-.f64 y t))))","(+.f64 (+.f64 x (*.f64 (/.f64 (*.f64 x (-.f64 t y)) (*.f64 z z)) (+.f64 (/.f64 (*.f64 t t) z) t))) (/.f64 (*.f64 x (-.f64 t y)) z))","(*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z)))","(neg.f64 (/.f64 z (/.f64 (-.f64 t z) x)))","(/.f64 (*.f64 (neg.f64 x) z) (-.f64 t z))","(*.f64 (/.f64 z (-.f64 t z)) (neg.f64 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (*.f64 y x) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) x))","(*.f64 (/.f64 y (-.f64 t z)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (-.f64 t z))) (/.f64 (*.f64 y x) (-.f64 t z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(*.f64 -1 (/.f64 z (-.f64 y z)))","(neg.f64 (/.f64 z (-.f64 y z)))","(/.f64 (neg.f64 z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(/.f64 t (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(/.f64 t (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z))))","(+.f64 (neg.f64 (/.f64 z (-.f64 y z))) (/.f64 t (-.f64 y z)))","(-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z)))","(/.f64 (-.f64 t z) (-.f64 y z))","(/.f64 t y)","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (/.f64 t y))","(fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 y) (/.f64 (neg.f64 t) (*.f64 y y)))) (/.f64 t y))","(-.f64 (/.f64 t y) (*.f64 z (-.f64 (/.f64 1 y) (/.f64 t (*.f64 y y)))))","(fma.f64 (+.f64 (/.f64 t (*.f64 y y)) (/.f64 -1 y)) z (/.f64 t y))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (+.f64 (/.f64 t y) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 t (pow.f64 y 3))))))))","(+.f64 (fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 y) (/.f64 (neg.f64 t) (*.f64 y y)))) (/.f64 t y)) (neg.f64 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 t) (pow.f64 y 3))))))","(-.f64 (-.f64 (/.f64 t y) (*.f64 z (-.f64 (/.f64 1 y) (/.f64 t (*.f64 y y))))) (*.f64 z (*.f64 z (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 t (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 t (*.f64 y y)) (/.f64 -1 y)) z (-.f64 (/.f64 t y) (*.f64 z (*.f64 z (-.f64 (/.f64 (/.f64 1 y) y) (/.f64 t (pow.f64 y 3)))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 t (pow.f64 y 2)))) z)) (+.f64 (/.f64 t y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (/.f64 1 (pow.f64 y 2)) (*.f64 -1 (/.f64 t (pow.f64 y 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 t (pow.f64 y 4))) (/.f64 1 (pow.f64 y 3))) (pow.f64 z 3))))))","(+.f64 (fma.f64 -1 (*.f64 z (+.f64 (/.f64 1 y) (/.f64 (neg.f64 t) (*.f64 y y)))) (/.f64 t y)) (fma.f64 -1 (*.f64 (*.f64 z z) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 (neg.f64 t) (pow.f64 y 3)))) (neg.f64 (*.f64 (pow.f64 z 3) (fma.f64 -1 (/.f64 t (pow.f64 y 4)) (/.f64 1 (pow.f64 y 3)))))))","(-.f64 (fma.f64 -1 (fma.f64 (*.f64 z z) (-.f64 (/.f64 1 (*.f64 y y)) (/.f64 t (pow.f64 y 3))) (*.f64 (pow.f64 z 3) (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 t (pow.f64 y 4))))) (/.f64 t y)) (*.f64 z (-.f64 (/.f64 1 y) (/.f64 t (*.f64 y y)))))","(+.f64 (fma.f64 (+.f64 (/.f64 t (*.f64 y y)) (/.f64 -1 y)) z (/.f64 t y)) (*.f64 (*.f64 z z) (-.f64 (*.f64 (+.f64 (/.f64 t (pow.f64 y 4)) (/.f64 -1 (pow.f64 y 3))) z) (-.f64 (/.f64 (/.f64 1 y) y) (/.f64 t (pow.f64 y 3))))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 t z))) (*.f64 -1 (/.f64 y z)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 t) z) (/.f64 (neg.f64 y) z)))","(-.f64 1 (/.f64 (-.f64 t y) z))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 2)) (*.f64 -1 (/.f64 t z)))) (*.f64 -1 (/.f64 y z)))","(+.f64 1 (-.f64 (+.f64 (/.f64 (neg.f64 t) z) (/.f64 (*.f64 y (*.f64 -1 (-.f64 t y))) (*.f64 z z))) (/.f64 (neg.f64 y) z)))","(+.f64 1 (+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 y t) z)) (/.f64 (-.f64 y t) z)))","(-.f64 1 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 t y) z)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 3)) (+.f64 (/.f64 (*.f64 y (-.f64 (*.f64 -1 t) (*.f64 -1 y))) (pow.f64 z 2)) (*.f64 -1 (/.f64 t z))))) (*.f64 -1 (/.f64 y z)))","(+.f64 1 (-.f64 (+.f64 (+.f64 (/.f64 (neg.f64 t) z) (/.f64 (*.f64 y (*.f64 -1 (-.f64 t y))) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 -1 (-.f64 t y))))) (/.f64 (neg.f64 y) z)))","(+.f64 1 (+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 y t) z)) (+.f64 (/.f64 (-.f64 y t) z) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 y t)))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 y t)) (-.f64 1 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 t y) z))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 t y) z)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 t) z) (/.f64 (neg.f64 y) z)))","(-.f64 1 (/.f64 (-.f64 t y) z))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 t y)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 t y) z))))","(+.f64 1 (-.f64 (+.f64 (/.f64 (neg.f64 t) z) (/.f64 (*.f64 y (*.f64 -1 (-.f64 t y))) (*.f64 z z))) (/.f64 (neg.f64 y) z)))","(+.f64 1 (+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 y t) z)) (/.f64 (-.f64 y t) z)))","(-.f64 1 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 t y) z)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 t y)) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 t y)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 t y) z)))))","(+.f64 1 (-.f64 (+.f64 (+.f64 (/.f64 (neg.f64 t) z) (/.f64 (*.f64 y (*.f64 -1 (-.f64 t y))) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) (*.f64 -1 (-.f64 t y))))) (/.f64 (neg.f64 y) z)))","(+.f64 1 (+.f64 (*.f64 (/.f64 y z) (/.f64 (-.f64 y t) z)) (+.f64 (/.f64 (-.f64 y t) z) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 y t)))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (-.f64 y t)) (-.f64 1 (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 (-.f64 t y) z))))","(*.f64 -1 (/.f64 (-.f64 t z) z))","(neg.f64 (/.f64 (-.f64 t z) z))","(/.f64 (neg.f64 (-.f64 t z)) z)","(-.f64 1 (/.f64 t z))","(+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z)))","(fma.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (neg.f64 (/.f64 (-.f64 t z) z)))","(-.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))) (+.f64 (/.f64 t z) -1))","(fma.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (-.f64 1 (/.f64 t z)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) z) (+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z))))","(+.f64 (fma.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (neg.f64 (/.f64 (-.f64 t z) z))) (/.f64 (*.f64 y y) (/.f64 z (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))))))","(+.f64 (-.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))) (+.f64 (/.f64 t z) -1)) (*.f64 (/.f64 (*.f64 y y) z) (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))))","(+.f64 (-.f64 1 (/.f64 t z)) (*.f64 (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (+.f64 y (*.f64 (/.f64 y z) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) z) (+.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 t z) z)))))","(+.f64 (+.f64 (fma.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (neg.f64 (/.f64 (-.f64 t z) z))) (/.f64 (*.f64 y y) (/.f64 z (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))))) (/.f64 (pow.f64 y 3) (/.f64 (*.f64 z z) (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))))))","(+.f64 (-.f64 (*.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))) (+.f64 (/.f64 t z) -1)) (+.f64 (*.f64 (/.f64 (*.f64 y y) z) (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 y 3) (*.f64 z z)) (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))))))","(+.f64 (fma.f64 y (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (-.f64 1 (/.f64 t z))) (*.f64 (-.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (+.f64 (*.f64 (/.f64 y z) y) (/.f64 (pow.f64 y 3) (*.f64 z z)))))","(/.f64 (-.f64 t z) y)","(-.f64 (+.f64 (/.f64 t y) (/.f64 (*.f64 z (-.f64 t z)) (pow.f64 y 2))) (/.f64 z y))","(+.f64 (/.f64 t y) (-.f64 (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z))) (/.f64 z y)))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (/.f64 (-.f64 t z) y))","(*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 t z) y))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 t z)) (pow.f64 y 3)) (+.f64 (/.f64 t y) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2)))) (/.f64 z y))","(-.f64 (+.f64 (+.f64 (/.f64 t y) (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z)))) (/.f64 (*.f64 (-.f64 t z) (*.f64 z z)) (pow.f64 y 3))) (/.f64 z y))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (pow.f64 y 3)) (*.f64 z z)) (+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (/.f64 (-.f64 t z) y)))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))) (/.f64 (-.f64 t z) y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 t z)) (pow.f64 y 4)) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2))))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (-.f64 t z) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (+.f64 (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z))) (/.f64 (*.f64 (-.f64 t z) (*.f64 z z)) (pow.f64 y 3))))) (/.f64 z y))","(+.f64 (+.f64 (/.f64 (-.f64 t z) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (*.f64 (/.f64 (-.f64 t z) (pow.f64 y 3)) (*.f64 z z)))) (/.f64 (-.f64 t z) y))","(+.f64 (*.f64 (-.f64 t z) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3)))) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 t z) y)))","(/.f64 (-.f64 t z) y)","(-.f64 (+.f64 (/.f64 t y) (/.f64 (*.f64 z (-.f64 t z)) (pow.f64 y 2))) (/.f64 z y))","(+.f64 (/.f64 t y) (-.f64 (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z))) (/.f64 z y)))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (/.f64 (-.f64 t z) y))","(*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 t z) y))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 t z)) (pow.f64 y 3)) (+.f64 (/.f64 t y) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2)))) (/.f64 z y))","(-.f64 (+.f64 (+.f64 (/.f64 t y) (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z)))) (/.f64 (*.f64 (-.f64 t z) (*.f64 z z)) (pow.f64 y 3))) (/.f64 z y))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (pow.f64 y 3)) (*.f64 z z)) (+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (/.f64 (-.f64 t z) y)))","(+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) (+.f64 z (/.f64 (*.f64 z z) y))) (/.f64 (-.f64 t z) y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 3)) (pow.f64 y 4)) (+.f64 (/.f64 (*.f64 (-.f64 t z) (pow.f64 z 2)) (pow.f64 y 3)) (/.f64 (*.f64 (-.f64 t z) z) (pow.f64 y 2))))) (/.f64 z y))","(-.f64 (+.f64 (/.f64 t y) (+.f64 (/.f64 (-.f64 t z) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (+.f64 (/.f64 z (/.f64 (*.f64 y y) (-.f64 t z))) (/.f64 (*.f64 (-.f64 t z) (*.f64 z z)) (pow.f64 y 3))))) (/.f64 z y))","(+.f64 (+.f64 (/.f64 (-.f64 t z) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (+.f64 (*.f64 (/.f64 (-.f64 t z) (*.f64 y y)) z) (*.f64 (/.f64 (-.f64 t z) (pow.f64 y 3)) (*.f64 z z)))) (/.f64 (-.f64 t z) y))","(+.f64 (*.f64 (-.f64 t z) (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3)))) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 (-.f64 t z) y)))"]],"stop":[["node limit",1]],"time":50.887939453125,"type":"simplify"},{"compiler":[[13961,3926]],"time":72.41796875,"type":"eval"},{"alts":[["(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","fresh",11.115882008230862],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","done",11.041527996448902],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","next",2.397182282415806],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","done",2.5668925592764107]],"compiler":[[13,8],[13,8],[76,17],[15,10],[13,8],[76,17]],"count":[[358,4]],"kept":[{"done":[2,2],"fresh":[2,1],"new":[353,1],"picked":[1,0]}],"min-error":[0],"time":125.947021484375,"type":"prune"},{"compiler":[[300,23]],"locations":[["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))",0.19826127930532603,true],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))",2.2396793339828576,true],["(cbrt.f64 (/.f64 z (-.f64 y z)))",4.534258716467297,true],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))",22.038515709550282,true]],"time":23.068115234375,"type":"localize"},{"count":[[4,91]],"series":[["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","y","-inf",1.8359375],["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","y","inf",1.509033203125],["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","y","0",0.212890625],["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","z","-inf",0.4208984375],["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","z","inf",0.344970703125],["(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))","z","0",0.506103515625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","z","-inf",2.77587890625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","z","inf",2.39599609375],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","z","0",0.630126953125],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","y","-inf",0.772216796875],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","y","inf",0.796142578125],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","y","0",5.7890625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","t","-inf",0.432861328125],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","t","inf",0.552978515625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","t","0",0.659912109375],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","x","-inf",0.56103515625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","x","inf",1.099853515625],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","x","0",4.86279296875],["(cbrt.f64 (/.f64 z (-.f64 y z)))","y","-inf",0.56982421875],["(cbrt.f64 (/.f64 z (-.f64 y z)))","y","inf",0.589111328125],["(cbrt.f64 (/.f64 z (-.f64 y z)))","y","0",0.39404296875],["(cbrt.f64 (/.f64 z (-.f64 y z)))","z","-inf",0.35009765625],["(cbrt.f64 (/.f64 z (-.f64 y z)))","z","inf",0.408203125],["(cbrt.f64 (/.f64 z (-.f64 y z)))","z","0",1.589111328125],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","y","-inf",0.754150390625],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","y","inf",0.690185546875],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","y","0",2.333984375],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","z","-inf",6.426025390625],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","z","inf",2.836181640625],["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","z","0",0.797119140625]],"time":44.958984375,"type":"series"},{"count":[[4,139]],"egraph":[[2,5418,60,0.035569833],[1,396,62,0.007182291],[0,18,80,0.000421458]],"inputs":[["(fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))","(cbrt.f64 (/.f64 z (-.f64 y z)))","(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","(*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (-.f64 y z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (-.f64 y z)) (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (/.f64 z (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 z (-.f64 y z)) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (+.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) (+.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (-.f64 y z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 z (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (/.f64 z (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) 2) (cbrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) (sqrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 z (-.f64 y z)) 3) (pow.f64 (/.f64 z (-.f64 y z)) 3)) (+.f64 (pow.f64 (/.f64 z (-.f64 y z)) 2) (-.f64 (pow.f64 (/.f64 z (-.f64 y z)) 2) (pow.f64 (/.f64 z (-.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 z (-.f64 y z)) 2) (pow.f64 (/.f64 z (-.f64 y z)) 2)) (*.f64 (/.f64 z (-.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 z (-.f64 y z)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 z (-.f64 y z))) (exp.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z)))) (exp.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 z (-.f64 y z))) (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z)))) (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z)))) (exp.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 z (-.f64 y z))) (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z)))) (+.f64 1 (expm1.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 z (-.f64 y z)) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 z (-.f64 y z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2) (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2) (neg.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 1 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (pow.f64 (/.f64 1 (-.f64 y z)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (/.f64 1 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z (-.f64 y z)) 1/6) (pow.f64 (/.f64 z (-.f64 y z)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 z (-.f64 y z)) 1/6) (neg.f64 (pow.f64 (/.f64 z (-.f64 y z)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 z (-.f64 y z))) 1/3) (pow.f64 (sqrt.f64 (/.f64 z (-.f64 y z))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 z (-.f64 y z)) 1/6)) (pow.f64 (/.f64 z (-.f64 y z)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (/.f64 z (-.f64 y z)) 1/6)) (pow.f64 (/.f64 z (-.f64 y z)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 z (-.f64 y z)) (+.f64 0 (+.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) (*.f64 0 (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (-.f64 y z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (-.f64 y z)) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 z) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 z)) (cbrt.f64 (neg.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 z)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 z)) (neg.f64 (cbrt.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 z)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (-.f64 y z)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (-.f64 y z)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (/.f64 z (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 z (-.f64 y z))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) 2) (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) (sqrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 2)) (/.f64 x (cbrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 2)) (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) (/.f64 x (sqrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (pow.f64 (+.f64 (/.f64 z (-.f64 y z)) (/.f64 t (-.f64 y z))) 3) (pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 3))) (fma.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) (-.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) (+.f64 (/.f64 z (-.f64 y z)) (/.f64 t (-.f64 y z)))) (pow.f64 (+.f64 (/.f64 z (-.f64 y z)) (/.f64 t (-.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 (+.f64 (/.f64 z (-.f64 y z)) (/.f64 t (-.f64 y z))) 2) (pow.f64 (*.f64 (/.f64 z (-.f64 y z)) 0) 2))) (+.f64 (/.f64 t (-.f64 y z)) (-.f64 (/.f64 z (-.f64 y z)) (*.f64 (/.f64 z (-.f64 y z)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 (fma.f64 (/.f64 z (-.f64 y z)) 0 (/.f64 t (-.f64 y z))) (/.f64 z (-.f64 y z))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 z) (cbrt.f64 (/.f64 z (-.f64 y z)))) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 z)) (cbrt.f64 (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 z (-.f64 y z)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 z (-.f64 y z)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 z (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (/.f64 z (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (/.f64 z (-.f64 y z)))) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",35],["egg-rr",47],["egg-rr",34]],"stop":[["node limit",1]],"time":64.3408203125,"type":"rewrite"},{"count":[[230,253]],"egraph":[[1,2295,6034,0.016625958],[0,619,6912,0.003217875]],"inputs":[["(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z))))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2)))))))))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3)))))) (pow.f64 z 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))))))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 3)))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))))))))))) 1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))))))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -2 (pow.f64 y 3))))) y)) (*.f64 -2 (*.f64 y (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (*.f64 -2 (pow.f64 y 3))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) 2)) (+.f64 (*.f64 2/3 (*.f64 y (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))))) (*.f64 -1 (pow.f64 y 4)))))) (pow.f64 z 4))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (*.f64 1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))) (pow.f64 z 4))))))))))))))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z)))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))))) (/.f64 1 (pow.f64 z 2))) (pow.f64 y 2)) (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z))))) 1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))))) (/.f64 1 (pow.f64 z 2))) (pow.f64 y 2)) (+.f64 (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z))) (*.f64 (-.f64 (+.f64 (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z))))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 1 (pow.f64 z 3))) (pow.f64 y 3))))) 1)","(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (pow.f64 y 3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (cbrt.f64 -1))))","(cbrt.f64 -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (cbrt.f64 -1)) (pow.f64 z 2)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (cbrt.f64 -1)) (pow.f64 z 2))) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (cbrt.f64 -1)) (pow.f64 z 3))))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2)))))) (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2)))))) (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4)))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4))))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4))))))","(/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3))) (*.f64 -1 (/.f64 t (pow.f64 z 4))))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))) (*.f64 -1 (/.f64 t (pow.f64 z 3)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z)))))))","(/.f64 (*.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) t) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) t))) y)) (/.f64 (*.f64 y x) t)))","(/.f64 (*.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 y t))) (+.f64 (/.f64 (*.f64 y x) t) (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 y t)))))","(/.f64 (*.f64 y x) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y x) t) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t)))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (*.f64 (pow.f64 y 2) t)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) t))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t))) y)))) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 y x) t) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t))))))))","(*.f64 -1 (/.f64 x (cbrt.f64 -1)))","(+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) t)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))))))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3))))) (cbrt.f64 -1))))))) x) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1)))))) (cbrt.f64 -1)))) (pow.f64 z 3))))))","x","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) x)","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) x) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (pow.f64 z 2))) x))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 x (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) x) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x)) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) x) (pow.f64 z 3)) x)))))","1","(+.f64 1 (*.f64 2/3 (/.f64 y z)))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3))))) (pow.f64 z 3))) (+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2)))))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))) (pow.f64 z 3))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 y z)))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 5/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (+.f64 (*.f64 5/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 40/81 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))","(+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(+.f64 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(fma.f64 -1 (cbrt.f64 -1) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z))))) 1)","(+.f64 (fma.f64 -1 (/.f64 y z) (fma.f64 -1 (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z))))) -1)","(+.f64 (-.f64 (-.f64 (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 y z) 1/3))) (cbrt.f64 -1)) (/.f64 y z)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2)))))))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 -1 (/.f64 y z) (fma.f64 1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (*.f64 z z)))))))))) -1)","(+.f64 (-.f64 (+.f64 (*.f64 (/.f64 y z) (+.f64 -1 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (*.f64 z (*.f64 z (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (+.f64 (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1)) (/.f64 1/3 (/.f64 (*.f64 z z) (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 y y) -5/3)))))))) (cbrt.f64 -1)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3)))))) (pow.f64 z 3))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))))))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (pow.f64 y 2) (pow.f64 z 2)))) (+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 3)))) (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))))))))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 -1 (/.f64 y z) (fma.f64 1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -2/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 (pow.f64 z 3) (fma.f64 -4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (fma.f64 2 (*.f64 y (*.f64 -3 (*.f64 y y))) (*.f64 (pow.f64 y 3) 62/27))))) (fma.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) y) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (*.f64 y y) (*.f64 z z))) (fma.f64 2/9 (/.f64 y (/.f64 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)))) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (fma.f64 1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (*.f64 z z)) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 y (/.f64 (pow.f64 z 3) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))))) (neg.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))))))))))) -1)","(+.f64 (-.f64 (+.f64 (*.f64 (/.f64 y z) (+.f64 -1 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (*.f64 z (*.f64 z (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 z 3)) (fma.f64 -4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (fma.f64 (pow.f64 y 3) 62/27 (*.f64 (*.f64 -6 (*.f64 y y)) y)))) (fma.f64 1/3 (/.f64 (fma.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 y 3) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 y z) (/.f64 y z))) (fma.f64 2/9 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y 3))) (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (-.f64 (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) z) (/.f64 (*.f64 (*.f64 y y) -5/3) z)) (fma.f64 (*.f64 -1/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 (*.f64 y y) -5/3)) (/.f64 (neg.f64 (pow.f64 y 3)) (pow.f64 z 3)))) (*.f64 (/.f64 y z) (/.f64 y z)))))))))) (cbrt.f64 -1)) -1)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z))","(neg.f64 (/.f64 (fma.f64 -1/3 y (*.f64 1/3 y)) z))","(/.f64 (neg.f64 (*.f64 y 0)) z)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/3 y (*.f64 1/3 y)) z) (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 z z)) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) -7/9))))","(-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -7/9 (*.f64 2/9 (*.f64 (/.f64 y z) (/.f64 y z))))) (/.f64 (*.f64 y 0) z))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))))))))","(fma.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/9 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (fma.f64 -1/3 (+.f64 (pow.f64 y 3) (fma.f64 -1/27 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3)))))) (fma.f64 1/9 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -1/3 (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3)))))))))) (pow.f64 z 3)) (fma.f64 -1 (/.f64 (fma.f64 -1/3 y (*.f64 1/3 y)) z) (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 z z)) (*.f64 2/9 (/.f64 (*.f64 y y) (*.f64 z z))))))))","(-.f64 (-.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) -7/9 (*.f64 2/9 (*.f64 (/.f64 y z) (/.f64 y z))))) (/.f64 (*.f64 y 0) z)) (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/9 (*.f64 (pow.f64 y 3) -2/3) (fma.f64 -1/3 (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3)) (fma.f64 -1/3 (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (*.f64 -2 (+.f64 (pow.f64 y 3) (*.f64 -3 (pow.f64 y 3)))))) (*.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 y 1/9)))))) (pow.f64 z 3)))","(+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 y) (+.f64 y (*.f64 -2/3 y))) z)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (pow.f64 z 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (+.f64 (*.f64 4/3 (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -2 (pow.f64 y 3))))) y)) (*.f64 -2 (*.f64 y (+.f64 (*.f64 -2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (*.f64 -2 (pow.f64 y 3))))))))) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) 2)) (+.f64 (*.f64 2/3 (*.f64 y (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))))) (*.f64 -1 (pow.f64 y 4)))))) (pow.f64 z 4))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (*.f64 1/9 (/.f64 (*.f64 y (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))) (pow.f64 z 4))))))))))))))","(fma.f64 2/9 (/.f64 y (/.f64 (pow.f64 z 4) (+.f64 (pow.f64 y 3) (fma.f64 -1/27 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3)))))))) (fma.f64 -1 (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/9 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (fma.f64 -1/3 (+.f64 (pow.f64 y 3) (fma.f64 -1/27 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3)))))) (fma.f64 1/9 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -1/3 (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3)))))))))) (pow.f64 z 3)) (fma.f64 -1 (/.f64 (fma.f64 -1/3 y (*.f64 1/3 y)) z) (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (*.f64 z z)) (fma.f64 2/9 (/.f64 (*.f64 y y) (*.f64 z z)) (fma.f64 -1/3 (/.f64 (fma.f64 -4/9 (*.f64 (*.f64 y y) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (fma.f64 1/3 (pow.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) 2) (fma.f64 -1 (*.f64 (*.f64 y y) (*.f64 -3 (*.f64 y y))) (fma.f64 4/3 (*.f64 y (fma.f64 -2 (*.f64 y (*.f64 -3 (*.f64 y y))) (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 (pow.f64 y 3) -2))))) (*.f64 -2 (*.f64 y (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3))))))))) (pow.f64 z 4)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/27 (*.f64 (*.f64 y y) (*.f64 (*.f64 y y) -2/3)) (fma.f64 -2/27 (*.f64 (*.f64 y y) (*.f64 (*.f64 y y) -2/3)) (fma.f64 1/3 (pow.f64 (*.f64 (*.f64 y y) -2/3) 2) (fma.f64 2/3 (*.f64 y (fma.f64 -1/27 (pow.f64 y 3) (+.f64 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3))))))) (neg.f64 (pow.f64 y 4)))))) (pow.f64 z 4)) (fma.f64 1/9 (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (pow.f64 z 4) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)))) (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 z z)) (fma.f64 -1 (/.f64 (pow.f64 y 4) (pow.f64 z 4)) (*.f64 1/9 (/.f64 y (/.f64 (pow.f64 z 4) (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3)))))))))))))))))))","(fma.f64 2/9 (*.f64 (/.f64 y (pow.f64 z 4)) (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3))) (-.f64 (-.f64 (+.f64 (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 z z)) (*.f64 2/9 (*.f64 (/.f64 y z) (/.f64 y z)))) (fma.f64 2/9 (*.f64 (/.f64 y z) (/.f64 y z)) (fma.f64 -1/3 (/.f64 (fma.f64 -4/9 (*.f64 (*.f64 y y) (*.f64 (*.f64 y y) -5/3)) (fma.f64 1/3 (pow.f64 (*.f64 (*.f64 y y) -5/3) 2) (-.f64 (fma.f64 4/3 (*.f64 y (fma.f64 (*.f64 -3 (pow.f64 y 3)) -2 (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 (pow.f64 y 3) -2 (*.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 y 4/3)))))) (*.f64 -2 (+.f64 (*.f64 (*.f64 -3 (pow.f64 y 4)) -2) (*.f64 (pow.f64 y 4) -2)))) (*.f64 -3 (pow.f64 y 4))))) (pow.f64 z 4)) (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 (*.f64 (pow.f64 y 4) -2/3) -1/9) (-.f64 (fma.f64 1/3 (*.f64 (pow.f64 y 4) 4/9) (*.f64 (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3)) (*.f64 y 2/3))) (pow.f64 y 4))) (pow.f64 z 4)) (fma.f64 1/9 (/.f64 (*.f64 y y) (/.f64 (/.f64 (pow.f64 z 4) (*.f64 (*.f64 y y) -5/3)) -2/3)) (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 1/9 y) (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (*.f64 -2 (+.f64 (pow.f64 y 3) (*.f64 -3 (pow.f64 y 3))))))) (pow.f64 z 4)) (/.f64 (pow.f64 y 4) (pow.f64 z 4))) (*.f64 (/.f64 y z) (/.f64 y z)))))))) (/.f64 (*.f64 y 0) z)) (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/9 (*.f64 (pow.f64 y 3) -2/3) (fma.f64 -1/3 (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3)) (fma.f64 -1/3 (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (*.f64 -2 (+.f64 (pow.f64 y 3) (*.f64 -3 (pow.f64 y 3)))))) (*.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 y 1/9)))))) (pow.f64 z 3))))","(-.f64 (*.f64 -1 (cbrt.f64 -1)) 1)","(fma.f64 -1 (cbrt.f64 -1) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z)))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (*.f64 y (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z)))) -1)","(fma.f64 -1 (cbrt.f64 -1) (fma.f64 y (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 -1 z))) -1))","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))))) (/.f64 1 (pow.f64 z 2))) (pow.f64 y 2)) (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 (-.f64 (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z))))) (/.f64 1 (*.f64 z z))) (*.f64 y y) (*.f64 y (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z))))) -1)","(+.f64 (-.f64 (fma.f64 (*.f64 y y) (+.f64 (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)))) (/.f64 -1 (*.f64 z z))) (*.f64 y (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 -1 z))))) (cbrt.f64 -1)) -1)","(-.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))))) (/.f64 1 (pow.f64 z 2))) (pow.f64 y 2)) (+.f64 (*.f64 y (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z))) (*.f64 (-.f64 (+.f64 (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3))) (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z))))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 1 (pow.f64 z 3))) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -1 (cbrt.f64 -1) (fma.f64 (-.f64 (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z))))) (/.f64 1 (*.f64 z z))) (*.f64 y y) (fma.f64 y (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z))) (/.f64 1 z)) (*.f64 (pow.f64 y 3) (-.f64 (fma.f64 5/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (pow.f64 z 3))) (fma.f64 2/9 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (*.f64 z (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3)) (*.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) z))))) (pow.f64 (cbrt.f64 -1) 2)))))) (/.f64 1 (pow.f64 z 3))))))) -1)","(+.f64 (-.f64 (fma.f64 (*.f64 y y) (+.f64 (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)))) (/.f64 -1 (*.f64 z z))) (fma.f64 (pow.f64 y 3) (fma.f64 5/27 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 3)) (+.f64 (fma.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (*.f64 z (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) z)) (/.f64 1 (pow.f64 z 3)))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (*.f64 -40/81 (cbrt.f64 -1)) (pow.f64 z 3)))) (/.f64 -1 (pow.f64 z 3)))) (*.f64 y (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 -1 z)))))) (cbrt.f64 -1)) -1)","(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))","(+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(+.f64 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(/.f64 z y)","(+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2)))","(+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y)))","(+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y)))","(+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 3)) (+.f64 (/.f64 z y) (/.f64 (pow.f64 z 2) (pow.f64 y 2))))","(+.f64 (+.f64 (/.f64 z y) (/.f64 (*.f64 z z) (*.f64 y y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(+.f64 (+.f64 (/.f64 z y) (*.f64 (/.f64 z y) (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 3)))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1))","(fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1))","(fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1)))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1)))","(fma.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (*.f64 z (*.f64 z (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (pow.f64 y 3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (cbrt.f64 -1))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (*.f64 (*.f64 z z) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1/3 (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) y) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1))))","(fma.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (*.f64 z (*.f64 z (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (fma.f64 (/.f64 (fma.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 y 3) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y 3))) (pow.f64 y 3))) (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) -1/3 (cbrt.f64 -1))))","(cbrt.f64 -1)","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (cbrt.f64 -1))","(fma.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z) (cbrt.f64 -1))","(fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (cbrt.f64 -1)) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z) (cbrt.f64 -1)) (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 z z) (cbrt.f64 -1)))))","(+.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (cbrt.f64 -1)) (/.f64 (*.f64 (*.f64 y (*.f64 y 2/9)) (cbrt.f64 -1)) (*.f64 z z)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z)) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) (cbrt.f64 -1)) (pow.f64 z 2))) (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (cbrt.f64 -1)) (pow.f64 z 3))))))","(+.f64 (fma.f64 1/3 (/.f64 (*.f64 y (cbrt.f64 -1)) z) (cbrt.f64 -1)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -2/3) (/.f64 (*.f64 z z) (cbrt.f64 -1))) (*.f64 1/3 (/.f64 (fma.f64 -1/27 (pow.f64 y 3) (+.f64 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3)))))) (/.f64 (pow.f64 z 3) (cbrt.f64 -1))))))","(+.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 -1) (/.f64 z y)) (cbrt.f64 -1)) (fma.f64 1/3 (/.f64 (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3)) (/.f64 (pow.f64 z 3) (cbrt.f64 -1))) (/.f64 (*.f64 (*.f64 y (*.f64 y 2/9)) (cbrt.f64 -1)) (*.f64 z z))))","(cbrt.f64 -1)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (cbrt.f64 -1))","(fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1))","(fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2)))))) (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1)))","(fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z)))))) (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 -1)))","(fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z)))) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 y z))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z)))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2)))))) (pow.f64 (cbrt.f64 -1) 2))) (cbrt.f64 -1))))","(fma.f64 -1/3 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) z)))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z)))))) (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 -1))))","(fma.f64 (*.f64 (/.f64 y z) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) -1/3 (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) z)) (/.f64 1 (pow.f64 z 3))))) (fma.f64 -1/3 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z)))) (cbrt.f64 -1))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 z (-.f64 y z))))))","(/.f64 x (+.f64 (/.f64 t (-.f64 y z)) (*.f64 -1 (/.f64 z (-.f64 y z)))))","(/.f64 x (-.f64 (/.f64 t (-.f64 y z)) (/.f64 z (-.f64 y z))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z)))","(*.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x)))","(/.f64 (neg.f64 (*.f64 x (-.f64 y z))) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x))) (*.f64 -1 (/.f64 t (/.f64 (*.f64 z z) (*.f64 x (-.f64 y z))))))","(-.f64 (/.f64 (neg.f64 (*.f64 x (-.f64 y z))) z) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2))))))","(+.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x))) (*.f64 -1 (/.f64 t (/.f64 (*.f64 z z) (*.f64 x (-.f64 y z)))))) (*.f64 -1 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (*.f64 x (-.f64 y z))))))","(-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 x (-.f64 y z))) z) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z))) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (*.f64 x (-.f64 y z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (-.f64 y z) x)) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) x) z))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 t (*.f64 (-.f64 y z) x)) (pow.f64 z 2)))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (-.f64 y z) x)) (pow.f64 z 4)))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (*.f64 x (-.f64 y z))))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y z) (/.f64 z x))) (+.f64 (*.f64 -1 (/.f64 t (/.f64 (*.f64 z z) (*.f64 x (-.f64 y z))))) (*.f64 -1 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (*.f64 x (-.f64 y z))))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 x (-.f64 y z))) z) (*.f64 (*.f64 (/.f64 (-.f64 y z) z) x) (/.f64 t z))) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 x (-.f64 y z)))) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (*.f64 x (-.f64 y z))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 1 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 1 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (-.f64 y z) (*.f64 (*.f64 z z) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4))))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (fma.f64 1 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (*.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (*.f64 z z) x)) (pow.f64 t 3)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 (pow.f64 z 3) x)))))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (+.f64 (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 (pow.f64 z 3) x))))","(/.f64 (*.f64 (-.f64 y z) x) t)","(/.f64 (-.f64 y z) (/.f64 t x))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 1 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 1 (+.f64 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (/.f64 (*.f64 (-.f64 y z) (*.f64 (*.f64 z z) x)) (pow.f64 t 3)))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))))","(+.f64 (/.f64 (*.f64 (-.f64 y z) x) t) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 2) x)) (pow.f64 t 3))) (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 y z) (*.f64 (pow.f64 z 3) x)) (pow.f64 t 4))))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (fma.f64 1 (/.f64 (-.f64 y z) (/.f64 (*.f64 t t) (*.f64 z x))) (*.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 y z) (*.f64 (*.f64 z z) x)) (pow.f64 t 3)) (/.f64 (-.f64 y z) (/.f64 (pow.f64 t 4) (*.f64 (pow.f64 z 3) x)))))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (+.f64 (+.f64 (*.f64 (/.f64 z (/.f64 t x)) (/.f64 (-.f64 y z) t)) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 3)) (*.f64 z (*.f64 z x)))) (*.f64 (/.f64 (-.f64 y z) (pow.f64 t 4)) (*.f64 (pow.f64 z 3) x))))","(/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))","(/.f64 x (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))))","(/.f64 x (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z)))))","(fma.f64 -1 (/.f64 y (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z))))))) (/.f64 x (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z)))))","(-.f64 (/.f64 x (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z))) (/.f64 y (/.f64 (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2) x) (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))))","(fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z)) (/.f64 (neg.f64 t) (pow.f64 z 3))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) x)) (neg.f64 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 3) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))))))))) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z))))))) (/.f64 x (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))))))","(-.f64 (-.f64 (/.f64 x (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z))) (/.f64 y (/.f64 (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2) x) (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z))))))) (*.f64 y (*.f64 y (-.f64 (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (-.f64 (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)) (/.f64 t (pow.f64 z 3))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2)) x) (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 3)) (*.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z))))))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 5/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 3)))) (+.f64 (*.f64 2/9 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 1/27 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) z))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3))) (*.f64 -1 (/.f64 t (pow.f64 z 4))))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2))) (*.f64 -1 (/.f64 t (pow.f64 z 3)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2)))))) (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (/.f64 (+.f64 (/.f64 1 (pow.f64 z 2)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (/.f64 1 (pow.f64 z 2))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 t (pow.f64 z 3))) (*.f64 -5/9 (/.f64 (cbrt.f64 -1) (pow.f64 z 2)))))) x) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 3)))))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 1 z))) (*.f64 -1 (/.f64 t (pow.f64 z 2))))) x)) (pow.f64 (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z))) 2))) (/.f64 x (+.f64 (*.f64 -1 (cbrt.f64 -1)) (*.f64 -1 (/.f64 t z)))))))","(fma.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 (fma.f64 5/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (pow.f64 z 3))) (fma.f64 2/9 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (*.f64 z (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (/.f64 1 (pow.f64 z 3)) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) z))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -40/81 (/.f64 (cbrt.f64 -1) (pow.f64 z 3)) (/.f64 (neg.f64 t) (pow.f64 z 4)))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) x)) (fma.f64 -1 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 3) (*.f64 x (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z)) (/.f64 (neg.f64 t) (pow.f64 z 3)))))))) (neg.f64 (/.f64 (+.f64 (neg.f64 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 3) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))))))) (/.f64 (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z)) (/.f64 (neg.f64 t) (pow.f64 z 3))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) x))) (/.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))))))))) (fma.f64 -1 (*.f64 (*.f64 y y) (+.f64 (/.f64 (fma.f64 1/3 (/.f64 (+.f64 (/.f64 1 (*.f64 z z)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (/.f64 1 (*.f64 z z))))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 (*.f64 z z))) (fma.f64 -5/9 (/.f64 (cbrt.f64 -1) (*.f64 z z)) (/.f64 (neg.f64 t) (pow.f64 z 3))))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) x)) (neg.f64 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))) (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 3) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z)))))))))) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z))) 2) (*.f64 x (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 1 z)) (fma.f64 -2/3 (/.f64 (cbrt.f64 -1) z) (/.f64 (neg.f64 t) (*.f64 z z))))))) (/.f64 x (*.f64 -1 (+.f64 (cbrt.f64 -1) (/.f64 t z)))))))","(-.f64 (-.f64 (-.f64 (/.f64 x (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z))) (/.f64 y (/.f64 (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2) x) (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z))))))) (*.f64 y (*.f64 y (-.f64 (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (-.f64 (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)) (/.f64 t (pow.f64 z 3))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2)) x) (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 3)) (*.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))))))))) (*.f64 (pow.f64 y 3) (-.f64 (-.f64 (*.f64 (/.f64 (fma.f64 5/27 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 3)) (fma.f64 2/9 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (*.f64 z (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (/.f64 (-.f64 (/.f64 1/27 (*.f64 (pow.f64 z 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) z)) (/.f64 1 (pow.f64 z 3)))) (pow.f64 (cbrt.f64 -1) 2)) (-.f64 (/.f64 (*.f64 -40/81 (cbrt.f64 -1)) (pow.f64 z 3)) (/.f64 t (pow.f64 z 4)))))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2)) x) (/.f64 (*.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (-.f64 (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)) (/.f64 t (pow.f64 z 3)))))) (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 3) x))) (/.f64 (-.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 2) (fma.f64 2/9 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 z z)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (/.f64 1 (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (-.f64 (*.f64 (/.f64 -5/9 z) (/.f64 (cbrt.f64 -1) z)) (/.f64 t (pow.f64 z 3))))))) (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))) (pow.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) 3)) (*.f64 x (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z))))))) (/.f64 (-.f64 (neg.f64 (cbrt.f64 -1)) (/.f64 t z)) (fma.f64 1/3 (/.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) z) (-.f64 (*.f64 -2/3 (/.f64 (cbrt.f64 -1) z)) (/.f64 t (*.f64 z z)))))))))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 y t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(/.f64 (-.f64 y z) (/.f64 t x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) t) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) t))) y)) (/.f64 (*.f64 y x) t)))","(fma.f64 -1 (/.f64 z (/.f64 t x)) (fma.f64 -1 (/.f64 (*.f64 0 (/.f64 (*.f64 z z) (/.f64 t x))) y) (/.f64 y (/.f64 t x))))","(-.f64 (+.f64 (*.f64 (/.f64 y t) x) (/.f64 0 y)) (/.f64 z (/.f64 t x)))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 y t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(/.f64 (-.f64 y z) (/.f64 t x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 y t))) (+.f64 (/.f64 (*.f64 y x) t) (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 y t)))))","(fma.f64 -1 (/.f64 z (/.f64 t x)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 z z) y) (/.f64 x t)) (+.f64 (/.f64 y (/.f64 t x)) (*.f64 (/.f64 (*.f64 z z) y) (/.f64 x t)))))","(-.f64 (-.f64 (fma.f64 (/.f64 z (/.f64 y z)) (/.f64 x t) (*.f64 (/.f64 y t) x)) (/.f64 z (/.f64 (/.f64 (*.f64 y t) x) z))) (/.f64 z (/.f64 t x)))","(/.f64 (*.f64 y x) t)","(/.f64 y (/.f64 t x))","(*.f64 (/.f64 y t) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (/.f64 (*.f64 y x) t))","(/.f64 (-.f64 y z) (/.f64 t x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (/.f64 (*.f64 y x) t) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t)))))))","(+.f64 (fma.f64 -1 (/.f64 z (/.f64 t x)) (/.f64 y (/.f64 t x))) (neg.f64 (*.f64 (*.f64 z z) (*.f64 0 (/.f64 x (*.f64 y t))))))","(+.f64 (/.f64 (-.f64 y z) (/.f64 t x)) (*.f64 z (*.f64 z 0)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) t)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 x (*.f64 (pow.f64 y 2) t)) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (pow.f64 y 2) t))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t))) y)))) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 y x) t) (*.f64 -1 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1 (/.f64 x (*.f64 y t))) (/.f64 x (*.f64 y t))))))))","(fma.f64 -1 (/.f64 z (/.f64 t x)) (fma.f64 -1 (*.f64 (pow.f64 z 3) (+.f64 (/.f64 x (*.f64 (*.f64 y y) t)) (fma.f64 -1 (/.f64 x (*.f64 (*.f64 y y) t)) (neg.f64 (/.f64 (*.f64 0 (/.f64 x (*.f64 y t))) y))))) (+.f64 (/.f64 y (/.f64 t x)) (neg.f64 (*.f64 (*.f64 z z) (*.f64 0 (/.f64 x (*.f64 y t))))))))","(-.f64 (-.f64 (+.f64 (*.f64 (/.f64 y t) x) (*.f64 z (*.f64 z 0))) (*.f64 (pow.f64 z 3) (+.f64 (*.f64 0 (/.f64 x (*.f64 y (*.f64 y t)))) (/.f64 0 y)))) (/.f64 z (/.f64 t x)))","(*.f64 -1 (/.f64 x (cbrt.f64 -1)))","(neg.f64 (/.f64 x (cbrt.f64 -1)))","(/.f64 (neg.f64 x) (cbrt.f64 -1))","(+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))))","(*.f64 -1 (+.f64 (/.f64 x (cbrt.f64 -1)) (*.f64 (/.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 x z))))","(-.f64 (/.f64 (neg.f64 x) (cbrt.f64 -1)) (/.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x z))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z)))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2)) (/.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x))) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 x (cbrt.f64 -1)) (*.f64 (/.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 x z)))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) (cbrt.f64 -1)) (/.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x z)))) (/.f64 (-.f64 (*.f64 (/.f64 (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 y y) -5/3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) 2/9)))) (*.f64 y t)) (pow.f64 (cbrt.f64 -1) 2)) x) (*.f64 x (pow.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) 2))) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x)) (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x (cbrt.f64 -1))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) z))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2)) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) (*.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) x))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 2/9 (/.f64 (*.f64 y (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))) (pow.f64 y 2))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) t)) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 y (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2))))))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3))))) (cbrt.f64 -1))))))) x) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 1/3 (/.f64 (+.f64 (pow.f64 y 2) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 y 2)))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (pow.f64 y 2)))))) x) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2) x))) (+.f64 (*.f64 -1 t) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) y)) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1)))))) (cbrt.f64 -1)))) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2)) (/.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x))) (*.f64 z z)) (fma.f64 -1 (/.f64 x (cbrt.f64 -1)) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 x z)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (*.f64 x (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1)))))) (fma.f64 -1 (*.f64 y t) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))))) (+.f64 (/.f64 (fma.f64 2/9 (/.f64 y (/.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y))) (fma.f64 -1 (*.f64 (*.f64 y y) t) (*.f64 1/3 (+.f64 (/.f64 (+.f64 (pow.f64 y 3) (fma.f64 2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) y) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y))) (*.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (cbrt.f64 -1) (fma.f64 -4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (fma.f64 2 (*.f64 y (*.f64 -3 (*.f64 y y))) (*.f64 (pow.f64 y 3) 62/27))))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x)) (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))) 2)) (/.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (fma.f64 1/3 (/.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 2/9 (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) x))) (/.f64 (cbrt.f64 -1) (fma.f64 -1 t (fma.f64 1/3 (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/3 (*.f64 y (cbrt.f64 -1))))))))) (pow.f64 z 3))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) (pow.f64 (cbrt.f64 -1) 2)) (/.f64 x z) (/.f64 (+.f64 (fma.f64 (neg.f64 (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 y y) -5/3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) 2/9)))) (*.f64 y t))) (*.f64 x (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t)) (*.f64 (/.f64 (fma.f64 2/9 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y 3))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y (*.f64 (*.f64 y y) -5/3))) (fma.f64 1/3 (+.f64 (/.f64 (fma.f64 -1/27 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (*.f64 2/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (pow.f64 y 3) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 y 3))) (pow.f64 y 3))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (cbrt.f64 -1) (fma.f64 -4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (fma.f64 (pow.f64 y 3) 62/27 (*.f64 (*.f64 -6 (*.f64 y y)) y))))) (*.f64 (*.f64 y y) (neg.f64 t))))) (pow.f64 (cbrt.f64 -1) 2)) x)) (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 y y) -5/3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) 2/9)))) (*.f64 y t)) (pow.f64 (cbrt.f64 -1) 2)) x) (*.f64 x (pow.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) 2))) (cbrt.f64 -1)) (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t))) (pow.f64 z 3)))) (/.f64 x (cbrt.f64 -1))) (/.f64 (-.f64 (*.f64 (/.f64 (-.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 -1) (*.f64 (*.f64 y y) -5/3)) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) 1) (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) 2/9)))) (*.f64 y t)) (pow.f64 (cbrt.f64 -1) 2)) x) (*.f64 x (pow.f64 (-.f64 (fma.f64 -2/3 (*.f64 y (cbrt.f64 -1)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y 1/3))) t) 2))) (*.f64 z z)))","x","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) x)","(+.f64 x (/.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) (/.f64 z x)))","(+.f64 x (/.f64 (+.f64 (*.f64 y -1) t) (/.f64 z x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) x) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (pow.f64 z 2))) x))","(+.f64 (/.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) (/.f64 z x)) (fma.f64 -1 (/.f64 (fma.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 2/9 (*.f64 y y) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 y y) -2/3) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)))))) x (neg.f64 (*.f64 x (pow.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) 2)))) (*.f64 z z)) x))","(+.f64 (/.f64 (+.f64 (*.f64 y -1) t) (/.f64 z x)) (-.f64 x (/.f64 (*.f64 x (+.f64 (-.f64 (fma.f64 (*.f64 y y) 2/9 (fma.f64 (*.f64 (*.f64 y y) -5/3) -1/3 (*.f64 y (*.f64 y 2/9)))) (*.f64 y t)) (neg.f64 (pow.f64 (+.f64 (*.f64 y -1) t) 2)))) (*.f64 z z))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x) z) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 x (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))))))) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t))) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) x) (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) 2) x))) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 y t)) (+.f64 (*.f64 2/9 (pow.f64 y 2)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2)))) (*.f64 -1/3 (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))))) (*.f64 (+.f64 (*.f64 -1/3 y) (+.f64 (*.f64 -2/3 y) t)) x)) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 (pow.f64 y 2) t) (+.f64 (*.f64 2/9 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))) (+.f64 (*.f64 -1/3 (+.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))) y)) (*.f64 1/3 (*.f64 y (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 1/3 (pow.f64 y 2))))))))) (+.f64 (*.f64 1/9 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (*.f64 -1/3 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))))))) x) (pow.f64 z 3)) x)))))","(+.f64 (/.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) (/.f64 z x)) (fma.f64 -1 (/.f64 (fma.f64 x (fma.f64 -1/3 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (fma.f64 -1 (*.f64 y t) (fma.f64 2/9 (*.f64 y y) (*.f64 -1/3 (*.f64 (*.f64 y y) -2/3))))) (neg.f64 (*.f64 x (pow.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) 2)))) (/.f64 (pow.f64 z 3) (fma.f64 -1/3 y (fma.f64 -2/3 y t)))) (fma.f64 -1 (/.f64 (fma.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 2/9 (*.f64 y y) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 y y) -2/3) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)))))) x (neg.f64 (*.f64 x (pow.f64 (fma.f64 -1/3 y (fma.f64 -2/3 y t)) 2)))) (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 y t) (fma.f64 2/9 (*.f64 y y) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 y y) -2/3) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)))))) (/.f64 (pow.f64 z 3) (*.f64 x (fma.f64 -1/3 y (fma.f64 -2/3 y t))))) (+.f64 x (/.f64 (fma.f64 (*.f64 y y) t (fma.f64 2/9 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (fma.f64 -1/3 (+.f64 (pow.f64 y 3) (fma.f64 -1/27 (pow.f64 y 3) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 (*.f64 y y) -2/3)) (*.f64 y (*.f64 (*.f64 y y) -2/3)))))) (fma.f64 1/9 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -1/3 (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3)))))))))) (/.f64 (pow.f64 z 3) x)))))))","(+.f64 (-.f64 (/.f64 (+.f64 (*.f64 y -1) t) (/.f64 z x)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (+.f64 (*.f64 y -1) t) 2)) (fma.f64 (*.f64 (*.f64 y y) -5/3) -1/3 (-.f64 (fma.f64 (*.f64 y y) 2/9 (*.f64 y (*.f64 y 2/9))) (*.f64 y t))))) (/.f64 (pow.f64 z 3) (+.f64 (*.f64 y -1) t)))) (-.f64 (-.f64 (+.f64 x (/.f64 x (/.f64 (pow.f64 z 3) (fma.f64 (*.f64 y y) t (fma.f64 2/9 (*.f64 (pow.f64 y 3) -2/3) (fma.f64 -1/3 (+.f64 (*.f64 26/27 (pow.f64 y 3)) (*.f64 (*.f64 (pow.f64 y 3) -2/3) 2/3)) (fma.f64 -1/3 (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (*.f64 -2 (+.f64 (pow.f64 y 3) (*.f64 -3 (pow.f64 y 3)))))) (*.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 y 1/9))))))))) (/.f64 (-.f64 (fma.f64 (*.f64 y y) 2/9 (fma.f64 (*.f64 (*.f64 y y) -5/3) -1/3 (*.f64 y (*.f64 y 2/9)))) (*.f64 y t)) (/.f64 (/.f64 (pow.f64 z 3) x) (+.f64 (*.f64 y -1) t)))) (/.f64 (*.f64 x (+.f64 (-.f64 (fma.f64 (*.f64 y y) 2/9 (fma.f64 (*.f64 (*.f64 y y) -5/3) -1/3 (*.f64 y (*.f64 y 2/9)))) (*.f64 y t)) (neg.f64 (pow.f64 (+.f64 (*.f64 y -1) t) 2)))) (*.f64 z z))))","1","(+.f64 1 (*.f64 2/3 (/.f64 y z)))","(+.f64 1 (*.f64 (/.f64 y z) 2/3))","(fma.f64 (/.f64 y z) 2/3 1)","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2)))))","(+.f64 1 (fma.f64 2/3 (/.f64 y z) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (*.f64 z z)))))","(+.f64 1 (fma.f64 (/.f64 y z) 2/3 (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 z z)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4/3 (*.f64 y (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (pow.f64 y 2) (*.f64 -4 (pow.f64 y 2))) y)) (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 8/27 (pow.f64 y 3))))) (pow.f64 z 3))) (+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))) (pow.f64 z 2))))))","(fma.f64 -1/3 (/.f64 (fma.f64 -4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (fma.f64 2 (*.f64 y (*.f64 -3 (*.f64 y y))) (*.f64 (pow.f64 y 3) 62/27))) (pow.f64 z 3)) (+.f64 1 (fma.f64 2/3 (/.f64 y z) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3)) (*.f64 z z))))))","(fma.f64 -1/3 (/.f64 (fma.f64 -4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (fma.f64 (pow.f64 y 3) 62/27 (*.f64 (*.f64 -6 (*.f64 y y)) y))) (pow.f64 z 3)) (+.f64 1 (fma.f64 (/.f64 y z) 2/3 (*.f64 -1/3 (/.f64 (*.f64 (*.f64 y y) -5/3) (*.f64 z z))))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 2/3 (/.f64 y (/.f64 z (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 2/3 (*.f64 (/.f64 y z) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2)))))","(+.f64 (fma.f64 2/3 (/.f64 y (/.f64 z (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (*.f64 z z))))","(fma.f64 2/3 (*.f64 (/.f64 y z) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (*.f64 z z) (*.f64 (*.f64 y y) -5/3))) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 y (pow.f64 (cbrt.f64 -1) 2)) z)) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (+.f64 (*.f64 4/3 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (+.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (+.f64 (*.f64 -2 (*.f64 y (+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 y 2)))) (*.f64 -2 (pow.f64 y 3)))))) (pow.f64 z 3))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (pow.f64 y 2) (+.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4/3 (pow.f64 y 2))))) (pow.f64 z 2))))))","(+.f64 (fma.f64 2/3 (/.f64 y (/.f64 z (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (pow.f64 z 3) (fma.f64 -8/27 (pow.f64 y 3) (fma.f64 4/3 (+.f64 (pow.f64 y 3) (*.f64 (*.f64 (*.f64 y y) -8/3) y)) (*.f64 -2 (+.f64 (*.f64 y (*.f64 -3 (*.f64 y y))) (pow.f64 y 3))))))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 y y) (*.f64 (*.f64 y y) -8/3))) (*.f64 z z)))))","(+.f64 (fma.f64 2/3 (*.f64 (/.f64 y z) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 z 3)) (fma.f64 (pow.f64 y 3) -8/27 (fma.f64 4/3 (*.f64 y (*.f64 (*.f64 y y) -5/3)) (*.f64 -2 (+.f64 (pow.f64 y 3) (*.f64 -3 (pow.f64 y 3))))))) (*.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (*.f64 z z) (*.f64 (*.f64 y y) -5/3))))))","1","(+.f64 1 (*.f64 2/3 (/.f64 y z)))","(+.f64 1 (*.f64 (/.f64 y z) 2/3))","(fma.f64 (/.f64 y z) 2/3 1)","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (*.f64 5/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2)))))","(+.f64 1 (fma.f64 2/3 (/.f64 y z) (*.f64 (/.f64 (*.f64 y y) (*.f64 z z)) 5/9)))","(+.f64 (fma.f64 (/.f64 y z) 2/3 1) (*.f64 (*.f64 (/.f64 y z) (/.f64 y z)) 5/9))","(+.f64 1 (+.f64 (*.f64 2/3 (/.f64 y z)) (+.f64 (*.f64 5/9 (/.f64 (pow.f64 y 2) (pow.f64 z 2))) (*.f64 40/81 (/.f64 (pow.f64 y 3) (pow.f64 z 3))))))","(+.f64 1 (fma.f64 2/3 (/.f64 y z) (fma.f64 5/9 (/.f64 (*.f64 y y) (*.f64 z z)) (/.f64 (*.f64 40/81 (pow.f64 y 3)) (pow.f64 z 3)))))","(+.f64 (fma.f64 (/.f64 y z) 2/3 1) (fma.f64 (*.f64 (/.f64 y z) (/.f64 y z)) 5/9 (/.f64 (*.f64 (pow.f64 y 3) 40/81) (pow.f64 z 3))))"]],"stop":[["node limit",1]],"time":70.405029296875,"type":"simplify"},{"compiler":[[70543,19463]],"time":333.774169921875,"type":"eval"},{"alts":[["(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","fresh",11.115882008230862],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","done",11.041527996448902],["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","done",2.397182282415806],["(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","done",2.5668925592764107]],"compiler":[[13,8],[13,8],[76,17],[15,10]],"count":[[851,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[847,0],"picked":[1,1]}],"min-error":[0],"time":675.94580078125,"type":"prune"},{"accuracy":[0.823072335280093],"baseline":[2.2991559640367125],"branch":[["x",0.823072335280093,3],["y",2.299155964036713,1],["z",0.9756977666419464,3],["t",2.299155964036713,1],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))",0.884438160355603,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[178,51]],"count":[[11,3]],"inputs":[["(/.f64 x (+.f64 (fma.f64 1 (/.f64 t (-.f64 y z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z)))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (*.f64 (cbrt.f64 (/.f64 z (-.f64 y z))) (cbrt.f64 (/.f64 z (-.f64 y z))))))))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 (-.f64 y z) (/.f64 (-.f64 t z) x))","(/.f64 1 (*.f64 (/.f64 1 x) (/.f64 (-.f64 t z) (-.f64 y z))))","(pow.f64 (/.f64 (-.f64 t z) (*.f64 x (-.f64 y z))) -1)","(*.f64 x (*.f64 (-.f64 y z) (/.f64 1 (-.f64 t z))))","(*.f64 x (/.f64 1 (/.f64 (-.f64 t z) (-.f64 y z))))","(-.f64 x (*.f64 (/.f64 x z) (-.f64 y t)))","(*.f64 (/.f64 x 1) (/.f64 (-.f64 y z) (-.f64 t z)))","(*.f64 (-.f64 z y) (/.f64 x (-.f64 z t)))","(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))"]],"link":["."],"name":["Graphics.Rendering.Chart.Plot.AreaSpots:renderAreaSpots4D from Chart-1.5.3"],"oracle":[45.30170769506562],"outputs":[["(*.f64 (-.f64 z y) (/.f64 x (-.f64 z t)))","(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))"]],"time":54.43310546875,"times":[["x",17.15087890625],["y",4.734130859375],["z",13.632080078125],["t",4.7900390625],["(/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z))",11.610107421875]],"type":"regimes"},{"bstep":[[-3.2889982621126373e-271,-7.705091433078575e-288,9.2822265625],[-265550142.1674508,-0.02628750446836573,9.239990234375]],"compiler":[[15,10],[5,4]],"method":["binary-search","binary-search"],"time":18.657958984375,"type":"bsearch"},{"compiler":[[39,20]],"egraph":[[4,52,51,0.00027475000000000004],[3,49,51,0.00021487500000000003],[2,43,51,0.00015537500000000002],[1,31,51,9.9333e-5],[0,22,51,4.8625e-5]],"inputs":[["(if (<=.f64 x -2227596046987015/8388608) (*.f64 (-.f64 z y) (/.f64 x (-.f64 z t))) (if (<=.f64 x -6260218915475885/19033816428515623203815199976318727169680130581240249075913879799244040411653175981378154425550801287549423664514470055045818691142974793059722631438110651210022026757727486386466386045879011031939061706014098396237667183448036865128410866436462823462554177349813042084144196464827957248) (/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -2227596046987015/8388608) (*.f64 (-.f64 z y) (/.f64 x (-.f64 z t))) (if (<=.f64 x -6260218915475885/19033816428515623203815199976318727169680130581240249075913879799244040411653175981378154425550801287549423664514470055045818691142974793059722631438110651210022026757727486386466386045879011031939061706014098396237667183448036865128410866436462823462554177349813042084144196464827957248) (/.f64 (*.f64 x (-.f64 y z)) (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) (-.f64 y z)))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.3740234375,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[39,20]],"remove-preprocessing":[[]],"time":11.405029296875,"type":"end"}]