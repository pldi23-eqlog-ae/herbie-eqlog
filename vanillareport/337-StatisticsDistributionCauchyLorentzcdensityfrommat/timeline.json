[{"compiler":[[15,11]],"method":["search"],"sampling":[[12,0.7918077417657514,0.19697680275453422,0.011215455479714365],[11,0.7176976575610752,0.27693768308063227,0.005364659358292556],[10,0.6552891655992426,0.34324670579007943,0.0014641286106780171],[9,0.6240849196183262,0.37445095177099574,0.0014641286106780171],[8,0.43685944373282837,0.5616764276564936,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":53.60009765625,"type":"analyze"},{"outcomes":[["body",256,"invalid",24.537109375,554],["body",256,"valid",371.385986328125,8256]],"time":403.6669921875,"type":"sample"},{"compiler":[[14,10]],"egraph":[[1,3,3,5.75e-6],[0,3,3,4.792e-6],[6,624,56,0.005998333],[5,616,56,0.004751458],[4,495,56,0.00347175],[3,326,56,0.0020875],[2,146,56,0.000904625],[1,69,56,0.00033358300000000003],[0,22,64,0.000111166]],"inputs":[["0","1","2"],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 y) (*.f64 x (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 z) (*.f64 y (+.f64 1 (*.f64 x x))))","(/.f64 (/.f64 1 x) (*.f64 z (+.f64 1 (*.f64 y y))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2"],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","(/.f64 (/.f64 1 (*.f64 x y)) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (*.f64 x (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","(/.f64 (/.f64 1 (*.f64 x y)) (fma.f64 z z 1))","(/.f64 (/.f64 1 z) (*.f64 y (+.f64 1 (*.f64 x x))))","(/.f64 (/.f64 1 z) (*.f64 y (fma.f64 x x 1)))","(/.f64 (/.f64 1 y) (*.f64 z (fma.f64 x x 1)))","(/.f64 (/.f64 1 x) (*.f64 z (+.f64 1 (*.f64 y y))))","(/.f64 (/.f64 1 x) (*.f64 z (fma.f64 y y 1)))","(/.f64 1 (*.f64 x (*.f64 z (fma.f64 y y 1))))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort x y)"]],"time":29.364013671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,243,14,0.002281459],[5,239,14,0.001776584],[4,172,14,0.0012488760000000001],[3,107,14,0.0007217510000000001],[2,46,14,0.000314459],[1,24,14,0.000137209],[0,10,16,5.3375e-5]],"inputs":[["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 (/.f64 (/.f64 1 x) y) (+.f64 1 (*.f64 z z)))","(/.f64 1 (*.f64 (fma.f64 z z 1) (*.f64 y x)))","(/.f64 1 (*.f64 x (*.f64 y (fma.f64 z z 1))))","(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))"]],"stop":[["saturated",1]],"time":12.52490234375,"type":"simplify"},{"compiler":[[24,16]],"time":0.377197265625,"type":"eval"},{"alts":[["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","next",6.808978056145421]],"compiler":[[13,9],[13,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[6.808978056145421],"time":1.1708984375,"type":"prune"},{"compiler":[[30,17]],"locations":[["(*.f64 y (fma.f64 z z 1))",3.8365376051477447,true],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))",4.007905832444555,true]],"time":7.31005859375,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 y (fma.f64 z z 1))","z","-inf",0.318115234375],["(*.f64 y (fma.f64 z z 1))","z","inf",0.40380859375],["(*.f64 y (fma.f64 z z 1))","z","0",0.2939453125],["(*.f64 y (fma.f64 z z 1))","y","-inf",0.263916015625],["(*.f64 y (fma.f64 z z 1))","y","inf",0.291015625],["(*.f64 y (fma.f64 z z 1))","y","0",0.303955078125],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","z","-inf",0.4248046875],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","z","inf",0.4560546875],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","z","0",0.890869140625],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","y","-inf",0.31494140625],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","y","inf",0.384033203125],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","y","0",0.80908203125],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","x","-inf",0.56201171875],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","x","inf",0.506103515625],["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","x","0",1.093017578125]],"time":7.515869140625,"type":"series"},{"count":[[2,55]],"egraph":[[2,2473,22,0.021341251],[1,186,22,0.003231709],[0,9,22,0.000230959]],"inputs":[["(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","(*.f64 y (fma.f64 z z 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (/.f64 1 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) 2) (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (/.f64 1 (cbrt.f64 x)) (/.f64 (/.f64 1 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 x (*.f64 y (fma.f64 z z 1))))) (/.f64 1 (sqrt.f64 (*.f64 x (*.f64 y (fma.f64 z z 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (*.f64 (pow.f64 x -1/2) (/.f64 (/.f64 1 y) (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 1 (*.f64 y (neg.f64 (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 y) (fma.f64 z z 1)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 y x)) (/.f64 1 (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) 1) (/.f64 (/.f64 1 (cbrt.f64 x)) (*.f64 y (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) 1) (/.f64 (pow.f64 x -1/2) (*.f64 y (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (/.f64 1 x) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) y) (/.f64 (/.f64 1 (cbrt.f64 x)) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) y) (/.f64 (pow.f64 x -1/2) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (fma.f64 z z 1)) (/.f64 (pow.f64 x -1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (fma.f64 z z 1)) (/.f64 (/.f64 1 (cbrt.f64 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 2)) (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 y (fma.f64 z z 1)))) (/.f64 (/.f64 1 x) (sqrt.f64 (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (sqrt.f64 (*.f64 y (fma.f64 z z 1)))) (/.f64 (/.f64 1 (cbrt.f64 x)) (sqrt.f64 (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (sqrt.f64 (*.f64 x (*.f64 y (fma.f64 z z 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y (fma.f64 z z 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 x) (*.f64 y (neg.f64 (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (*.f64 y (fma.f64 z z 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 (pow.f64 x -2) x) (pow.f64 (*.f64 y (fma.f64 z z 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 x (*.f64 y (fma.f64 z z 1))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) y) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (fma.f64 z z 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (fma.f64 z z 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (fma.f64 z z 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (fma.f64 z z 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (fma.f64 z z 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (fma.f64 z z 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (fma.f64 z z 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (fma.f64 z z 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (fma.f64 z z 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 z z 1) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (fma.f64 z z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (fma.f64 z z 1))))))))"]],"rules":[["egg-rr",16],["egg-rr",39]],"stop":[["node limit",1]],"time":41.88916015625,"type":"rewrite"},{"count":[[115,80]],"egraph":[[4,4712,867,0.021621915999999998],[3,1234,895,0.009534708],[2,392,903,0.0027387080000000003],[1,135,903,0.0009009580000000001],[0,51,998,0.000274125]],"inputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (pow.f64 z 2) 1) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 1 (*.f64 z z)) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 (fma.f64 z z 1) x)))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y x))","(/.f64 (/.f64 1 y) x)","(/.f64 (/.f64 1 x) y)","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (neg.f64 (/.f64 (*.f64 z z) (*.f64 y x))))","(-.f64 (/.f64 1 (*.f64 y x)) (/.f64 z (/.f64 (*.f64 y x) z)))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z (*.f64 y x)) z))","(fma.f64 (/.f64 z x) (/.f64 (neg.f64 z) y) (/.f64 (/.f64 1 y) x))","(-.f64 (/.f64 (/.f64 1 x) y) (*.f64 (/.f64 z y) (/.f64 z x)))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (-.f64 (/.f64 1 (*.f64 y x)) (/.f64 z (/.f64 (*.f64 y x) z))) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z (*.f64 y x)) z)))","(fma.f64 (*.f64 z (/.f64 z x)) (fma.f64 (/.f64 z y) z (/.f64 -1 y)) (/.f64 (/.f64 1 y) x))","(+.f64 (/.f64 (/.f64 1 x) y) (*.f64 (/.f64 z (*.f64 y x)) (-.f64 (pow.f64 z 3) z)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(fma.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x)) (+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(-.f64 (+.f64 (-.f64 (/.f64 1 (*.f64 y x)) (/.f64 z (/.f64 (*.f64 y x) z))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z (*.f64 y x)) z)) (/.f64 (pow.f64 z 6) (*.f64 y x))))","(-.f64 (fma.f64 (*.f64 z (/.f64 z x)) (fma.f64 (/.f64 z y) z (/.f64 -1 y)) (/.f64 (/.f64 1 y) x)) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 (/.f64 1 x) y) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z (*.f64 y x)) (+.f64 (pow.f64 z 5) z))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x)))","(/.f64 1 (*.f64 y (*.f64 z (*.f64 z x))))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z))","(/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4)))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4)))))","(*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (-.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (-.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4)))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 8))))","(+.f64 (+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8)))))","(+.f64 (-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4))))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8))))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))) (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x)))","(/.f64 1 (*.f64 y (*.f64 z (*.f64 z x))))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z))","(/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4)))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4)))))","(*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (-.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 z (*.f64 z x)))) (-.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 4)))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 8))))","(+.f64 (+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8)))))","(+.f64 (-.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 z z)) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 4))))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8))))))","(+.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))) (*.f64 (+.f64 (/.f64 -1 (*.f64 z z)) 1) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6))))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(*.f64 z (*.f64 y z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(*.f64 z (*.f64 y z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (+.f64 1 (*.f64 z z)))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(fma.f64 z (*.f64 y z) y)"]],"stop":[["node limit",1]],"time":42.531005859375,"type":"simplify"},{"compiler":[[1224,790]],"time":16.243896484375,"type":"eval"},{"alts":[["(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","fresh",4.759682647135872],["(*.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) 2) (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))","fresh",7.053603300356473],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 y (fma.f64 z z 1)))))","fresh",7.105342021051147],["(*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))","fresh",7.761391316721506],["(*.f64 (/.f64 1 y) (/.f64 (/.f64 1 x) (fma.f64 z z 1)))","fresh",7.0680687343759105],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","next",4.007905832444555]],"compiler":[[13,8],[28,20],[26,19],[15,11],[15,11],[13,8],[13,8],[28,20],[26,19],[15,11],[15,11],[13,8]],"count":[[81,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[80,6],"picked":[1,0]}],"min-error":[1.5224692116627363],"time":16.5830078125,"type":"prune"},{"compiler":[[29,11]],"locations":[["(fma.f64 z (*.f64 y z) y)",0.05859375,true],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))",4.007905832444555,true]],"time":5.715087890625,"type":"localize"},{"count":[[2,60]],"series":[["(fma.f64 z (*.f64 y z) y)","y","-inf",0.55908203125],["(fma.f64 z (*.f64 y z) y)","y","inf",0.160888671875],["(fma.f64 z (*.f64 y z) y)","y","0",0.143798828125],["(fma.f64 z (*.f64 y z) y)","z","-inf",0.265869140625],["(fma.f64 z (*.f64 y z) y)","z","inf",0.25],["(fma.f64 z (*.f64 y z) y)","z","0",0.26806640625],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","y","-inf",0.906982421875],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","y","inf",0.696044921875],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","y","0",0.661865234375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","z","-inf",0.287109375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","z","inf",0.26611328125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","z","0",0.27392578125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","x","-inf",0.330078125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","x","inf",0.3779296875],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","x","0",1.69091796875]],"time":7.3359375,"type":"series"},{"count":[[2,52]],"egraph":[[2,2371,22,0.021983707999999998],[1,185,22,0.003161833],[0,9,22,0.000224375]],"inputs":[["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","(fma.f64 z (*.f64 y z) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2) (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (/.f64 1 (cbrt.f64 x)) (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (/.f64 1 (sqrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (*.f64 (pow.f64 x -1/2) (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 1 (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) 1) (/.f64 (/.f64 1 (cbrt.f64 x)) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) 1) (/.f64 (pow.f64 x -1/2) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 z (*.f64 z y) y))) (/.f64 (/.f64 1 x) (sqrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (sqrt.f64 (fma.f64 z (*.f64 z y) y))) (/.f64 (/.f64 1 (cbrt.f64 x)) (sqrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (sqrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 x) (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 x -2) (pow.f64 (fma.f64 z (*.f64 z y) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (/.f64 (pow.f64 x -2) x) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 z (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (*.f64 z y)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 z (*.f64 z y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (*.f64 z y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) (sqrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (*.f64 z y)) 3) (pow.f64 y 3)) (+.f64 (*.f64 (*.f64 z (*.f64 z y)) (*.f64 z (*.f64 z y))) (-.f64 (*.f64 y y) (pow.f64 (*.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z (*.f64 z y)) (*.f64 z (*.f64 z y))) (*.f64 y y)) (-.f64 (*.f64 z (*.f64 z y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (*.f64 z y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))))))"]],"rules":[["egg-rr",21],["egg-rr",31]],"stop":[["node limit",1]],"time":43.363037109375,"type":"rewrite"},{"count":[[112,78]],"egraph":[[4,5215,895,0.024187251],[3,1493,895,0.011163125999999999],[2,451,903,0.0033130010000000003],[1,153,903,0.001027459],[0,57,908,0.000294709]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (/.f64 (neg.f64 (*.f64 z z)) (*.f64 y x)))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))","(-.f64 (/.f64 1 (*.f64 y x)) (/.f64 z (*.f64 x (/.f64 y z))))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 z (/.f64 z (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z (/.f64 x z)) (+.f64 (/.f64 -1 y) (/.f64 z (/.f64 y z)))))","(fma.f64 (*.f64 z (/.f64 z x)) (fma.f64 (/.f64 z y) z (/.f64 -1 y)) (/.f64 1 (*.f64 y x)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(fma.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x)) (+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (*.f64 (/.f64 z (/.f64 x z)) (+.f64 (/.f64 -1 y) (/.f64 z (/.f64 y z)))) (/.f64 (pow.f64 z 6) (*.f64 y x))))","(-.f64 (fma.f64 (*.f64 z (/.f64 z x)) (fma.f64 (/.f64 z y) z (/.f64 -1 y)) (/.f64 1 (*.f64 y x))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x)))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x))","(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (-.f64 (-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 8))))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x)))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x))","(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (-.f64 (-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 1 (*.f64 x (*.f64 y (pow.f64 z 8))))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (+.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 (*.f64 z z) x))) (+.f64 (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 z (*.f64 z (*.f64 y x)))) (/.f64 (/.f64 -1 x) (*.f64 y (pow.f64 z 4)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 1 y) (*.f64 x (fma.f64 z z 1)))","(/.f64 (/.f64 1 y) (fma.f64 (*.f64 z z) x x))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 1 (*.f64 (*.f64 y (fma.f64 z z 1)) x))","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))"]],"stop":[["node limit",1]],"time":45.166015625,"type":"simplify"},{"compiler":[[1267,593]],"time":12.296875,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","fresh",4.298378598507817],["(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","fresh",4.759682647135872],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","next",4.0593508519814385],["(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","fresh",28.256630077284104],["(*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))","fresh",7.761391316721506],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))","fresh",4.358663596192489],["(*.f64 (/.f64 1 y) (/.f64 (/.f64 1 x) (fma.f64 z z 1)))","fresh",7.0680687343759105],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","done",4.007905832444555]],"compiler":[[28,16],[13,8],[15,10],[12,8],[15,11],[26,14],[15,11],[13,8],[28,16],[13,8],[15,10],[12,8],[15,11],[26,14],[15,11]],"count":[[84,8]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[78,4],"picked":[1,1]}],"min-error":[0.8482607457300486],"time":17.5830078125,"type":"prune"},{"compiler":[[39,15]],"locations":[["(fma.f64 z (*.f64 z y) y)",0.05859375,true],["(/.f64 1 (fma.f64 z (*.f64 z y) y))",0.2530834064335753,true],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))",3.9185288830444622,true]],"time":7.566162109375,"type":"localize"},{"count":[[3,84]],"series":[["(fma.f64 z (*.f64 z y) y)","y","-inf",0.163818359375],["(fma.f64 z (*.f64 z y) y)","y","inf",0.14111328125],["(fma.f64 z (*.f64 z y) y)","y","0",0.14111328125],["(fma.f64 z (*.f64 z y) y)","z","-inf",0.158935546875],["(fma.f64 z (*.f64 z y) y)","z","inf",0.14208984375],["(fma.f64 z (*.f64 z y) y)","z","0",0.14208984375],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","y","-inf",0.4111328125],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","y","inf",0.301025390625],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","y","0",0.39599609375],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","z","-inf",0.20703125],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","z","inf",0.337158203125],["(/.f64 1 (fma.f64 z (*.f64 z y) y))","z","0",0.305908203125],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","y","-inf",0.174072265625],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","y","inf",0.185791015625],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","y","0",0.156005859375],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","z","-inf",0.2109375],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","z","inf",0.22802734375],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","z","0",0.185791015625],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","x","-inf",0.18212890625],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","x","inf",0.1669921875],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","x","0",0.227783203125]],"time":4.81982421875,"type":"series"},{"count":[[3,160]],"egraph":[[2,2654,33,0.024122957],[1,207,33,0.003497416],[0,10,33,0.000248416]],"inputs":[["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","(/.f64 1 (fma.f64 z (*.f64 z y) y))","(fma.f64 z (*.f64 z y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 x) (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (neg.f64 (fma.f64 z (*.f64 z y) y)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 z (*.f64 z y) y) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -2)) (/.f64 x (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (fma.f64 z (*.f64 z y) y) (/.f64 1 (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) (/.f64 x (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (/.f64 (fma.f64 z (*.f64 z y) y) (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 x) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 x (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (fma.f64 z (*.f64 z y) y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (fma.f64 z (*.f64 z y) y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 1 x)) (neg.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (sqrt.f64 (fma.f64 z (*.f64 z y) y))) (sqrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) 1) (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2))) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 1 x)) (neg.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 1 (fma.f64 z (*.f64 z y) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) -1) (neg.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 x) (neg.f64 (fma.f64 z (*.f64 z y) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (fma.f64 z (*.f64 z y) y)) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z (*.f64 z y) y) (/.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (/.f64 1 (fma.f64 z (*.f64 z y) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 2)) (cbrt.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (sqrt.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) -1) (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (neg.f64 (log.f64 x)) 1) (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (neg.f64 (log.f64 x)) (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) -1) (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (neg.f64 (log.f64 x)) 1) (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) -1) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) 1) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) (*.f64 (log.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) -1) (*.f64 (log.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) 1) (*.f64 (log.f64 x) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -2)) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) -2) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (*.f64 z y) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (log.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (neg.f64 (fma.f64 z (*.f64 z y) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))) 2)) (cbrt.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))))) (sqrt.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (fma.f64 z (*.f64 z y) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 z (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 z y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (*.f64 z y)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 z (*.f64 z y) y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (*.f64 z y) y)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (*.f64 z y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2)) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) (sqrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z (*.f64 z y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2)) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (*.f64 z y)) 3) (pow.f64 y 3)) (+.f64 (pow.f64 (*.f64 z (*.f64 z y)) 2) (-.f64 (*.f64 y y) (pow.f64 (*.f64 z y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z (*.f64 z y)) 2) (*.f64 y y)) (fma.f64 z (*.f64 z y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (*.f64 z y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 z (*.f64 z y) y))) 2)) (cbrt.f64 (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))) (sqrt.f64 (log.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 y)) (pow.f64 (exp.f64 z) (*.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 z) (*.f64 z y)) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 z (*.f64 z y) y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 z (*.f64 z y) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (*.f64 z y) y)) 1) 1))))))"]],"rules":[["egg-rr",45],["egg-rr",41],["egg-rr",74]],"stop":[["node limit",1]],"time":50.590087890625,"type":"rewrite"},{"count":[[244,207]],"egraph":[[4,6421,1325,0.027370875],[3,2082,1327,0.015081542],[2,573,1345,0.004483084],[1,214,1353,0.0013708750000000001],[0,83,1379,0.00040175]],"inputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y x))","(/.f64 (/.f64 1 x) y)","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (/.f64 (neg.f64 (*.f64 z z)) (*.f64 y x)))","(-.f64 (/.f64 (/.f64 1 x) y) (/.f64 (/.f64 (*.f64 z z) y) x))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))","(-.f64 (/.f64 1 (*.f64 y x)) (/.f64 z (*.f64 y (/.f64 x z))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (/.f64 (*.f64 z z) y) x) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (-.f64 (/.f64 (/.f64 1 x) y) (/.f64 (/.f64 (*.f64 z z) y) x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (/.f64 (*.f64 (/.f64 z y) (-.f64 (pow.f64 z 3) z)) x))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(fma.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x)) (+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (/.f64 (*.f64 z z) y) x) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(-.f64 (+.f64 (-.f64 (/.f64 (/.f64 1 x) y) (/.f64 (/.f64 (*.f64 z z) y) x)) (/.f64 (pow.f64 z 4) (*.f64 y x))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(-.f64 (+.f64 (-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 (*.f64 (/.f64 z y) (-.f64 (pow.f64 z 3) z)) x) (-.f64 (/.f64 1 (*.f64 y x)) (/.f64 (pow.f64 z 6) (*.f64 y x))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x))","(/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y)","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 (pow.f64 z 4)) (*.f64 y x)))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (-.f64 (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 4))))","(+.f64 (-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 (pow.f64 z 4)) (*.f64 y x))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(-.f64 (+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (-.f64 (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 4)))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 8))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (+.f64 (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x))","(/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z))","(/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x)))","(/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y)","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 (pow.f64 z 4)) (*.f64 y x)))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (-.f64 (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 4))))","(+.f64 (-.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (/.f64 (/.f64 1 (pow.f64 z 4)) (*.f64 y x))) (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 (*.f64 z z) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(-.f64 (+.f64 (/.f64 (/.f64 (/.f64 1 x) y) (*.f64 z z)) (-.f64 (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 6)) (/.f64 (/.f64 (/.f64 1 x) y) (pow.f64 z 4)))) (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 8))))","(+.f64 (/.f64 (/.f64 1 y) (*.f64 z (*.f64 z x))) (+.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 y x)) (pow.f64 z 6)) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4)))) (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 8)))))","(+.f64 (/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y) (+.f64 (/.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) x) (+.f64 (/.f64 -1 (*.f64 (*.f64 y x) (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 (fma.f64 y (*.f64 z z) y) x))","(/.f64 (/.f64 (/.f64 1 x) y) (fma.f64 z z 1))","(/.f64 (/.f64 1 y) (fma.f64 z (*.f64 z x) x))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (*.f64 (fma.f64 z z 1) -1) x)))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (neg.f64 (*.f64 y (fma.f64 z (*.f64 z x) x))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (*.f64 (fma.f64 z z 1) -1) x)))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (neg.f64 (*.f64 y (fma.f64 z (*.f64 z x) x))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (*.f64 (fma.f64 z z 1) -1) x)))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (neg.f64 (*.f64 y (fma.f64 z (*.f64 z x) x))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (*.f64 (fma.f64 z z 1) -1) x)))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (neg.f64 (*.f64 y (fma.f64 z (*.f64 z x) x))))","(/.f64 1 y)","(+.f64 (/.f64 1 y) (*.f64 -1 (/.f64 (pow.f64 z 2) y)))","(+.f64 (/.f64 1 y) (/.f64 (neg.f64 (*.f64 z z)) y))","(-.f64 (/.f64 1 y) (/.f64 (*.f64 z z) y))","(-.f64 (/.f64 1 y) (*.f64 z (/.f64 z y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y)))","(+.f64 (/.f64 1 y) (fma.f64 -1 (/.f64 (*.f64 z z) y) (/.f64 (pow.f64 z 4) y)))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 (pow.f64 z 4) y) (/.f64 (*.f64 z z) y)))","(+.f64 (-.f64 (/.f64 1 y) (/.f64 (*.f64 z z) y)) (/.f64 (pow.f64 z 4) y))","(+.f64 (/.f64 1 y) (*.f64 (/.f64 z y) (-.f64 (pow.f64 z 3) z)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) y)) (/.f64 (pow.f64 z 4) y))))","(+.f64 (/.f64 1 y) (fma.f64 -1 (/.f64 (pow.f64 z 6) y) (fma.f64 -1 (/.f64 (*.f64 z z) y) (/.f64 (pow.f64 z 4) y))))","(+.f64 (/.f64 1 y) (-.f64 (-.f64 (/.f64 (pow.f64 z 4) y) (/.f64 (*.f64 z z) y)) (/.f64 (pow.f64 z 6) y)))","(+.f64 (/.f64 1 y) (-.f64 (/.f64 (pow.f64 z 4) y) (+.f64 (/.f64 (*.f64 z z) y) (/.f64 (pow.f64 z 6) y))))","(+.f64 (/.f64 1 y) (-.f64 (*.f64 (/.f64 z y) (-.f64 (pow.f64 z 3) z)) (/.f64 (pow.f64 z 6) y)))","(fma.f64 (/.f64 z y) (-.f64 (pow.f64 z 3) z) (-.f64 (/.f64 1 y) (/.f64 (pow.f64 z 6) y)))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(/.f64 1 (*.f64 y (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 4)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 -1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 1 y) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 -1 (*.f64 y (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 1 (*.f64 y (pow.f64 z 8))))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 1 (*.f64 y (pow.f64 z 8))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 6))) (+.f64 (/.f64 -1 (*.f64 y (pow.f64 z 4))) (/.f64 -1 (*.f64 y (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 -1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (pow.f64 z 2)))","(/.f64 1 (*.f64 y (*.f64 z z)))","(-.f64 (/.f64 1 (*.f64 y (pow.f64 z 2))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 4)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 -1 (*.f64 y (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (/.f64 1 (*.f64 y (pow.f64 z 4))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 1 y) (pow.f64 z 4))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 -1 (*.f64 y (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 6))) (/.f64 1 (*.f64 y (pow.f64 z 2)))) (+.f64 (/.f64 1 (*.f64 y (pow.f64 z 4))) (/.f64 1 (*.f64 y (pow.f64 z 8)))))","(+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (-.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 1 (*.f64 y (pow.f64 z 8))))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (-.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 4)) (/.f64 1 (*.f64 y (pow.f64 z 8))))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (/.f64 (/.f64 1 y) (pow.f64 z 6))) (+.f64 (/.f64 -1 (*.f64 y (pow.f64 z 4))) (/.f64 -1 (*.f64 y (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 z z))) (+.f64 (/.f64 -1 (*.f64 y (pow.f64 z 4))) (+.f64 (/.f64 (/.f64 1 y) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (pow.f64 z 8)))))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 1 (*.f64 y (+.f64 (pow.f64 z 2) 1)))","(/.f64 1 (*.f64 y (+.f64 1 (*.f64 z z))))","(/.f64 1 (*.f64 y (fma.f64 z z 1)))","(/.f64 1 (fma.f64 y (*.f64 z z) y))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 y (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (-.f64 -1 (*.f64 z z))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 y (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (-.f64 -1 (*.f64 z z))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 y (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (-.f64 -1 (*.f64 z z))))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(/.f64 -1 (*.f64 y (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 y (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (-.f64 -1 (*.f64 z z))))","y","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(+.f64 (*.f64 y (pow.f64 z 2)) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 (+.f64 (pow.f64 z 2) 1) y)","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) y))","(fma.f64 y (*.f64 z z) y)","(*.f64 y (fma.f64 z z 1))"]],"stop":[["node limit",1]],"time":55.008056640625,"type":"simplify"},{"compiler":[[3326,1567]],"time":30.68896484375,"type":"eval"},{"alts":[["(*.f64 (/.f64 1 x) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 3)))","fresh",4.305457321517819],["(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","fresh",28.256630077284104],["(/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y)","fresh",31.526942859315746],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","next",4.298378598507817],["(*.f64 (/.f64 1 x) (pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) 2))","fresh",15.345170871518322],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","done",4.0593508519814385],["(*.f64 (/.f64 1 x) (pow.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) 3))","fresh",4.395083737581332],["(*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))","fresh",7.761391316721506],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","done",4.007905832444555],["(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","fresh",4.759682647135872]],"compiler":[[18,13],[12,8],[12,8],[28,16],[17,12],[15,10],[18,13],[15,11],[13,8],[13,8],[18,13],[12,8],[12,8],[28,16],[17,12],[18,13],[15,11],[13,8]],"count":[[215,10]],"kept":[{"done":[1,1],"fresh":[6,3],"new":[207,5],"picked":[1,1]}],"min-error":[0.8404482457300486],"time":63.200927734375,"type":"prune"},{"compiler":[[79,33]],"locations":[["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))",0.2265625,true],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)",0.4225387695368841,true],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))",4.007905832444555,true],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))",20.340372191262503,true]],"time":14.447021484375,"type":"localize"},{"count":[[4,80]],"series":[["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","y","-inf",0.201171875],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","y","inf",0.169921875],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","y","0",0.158935546875],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","z","-inf",0.236083984375],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","z","inf",0.20703125],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","z","0",0.217041015625],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","x","-inf",2.044921875],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","x","inf",0.405029296875],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","x","0",0.174072265625],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","y","-inf",0.325927734375],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","y","inf",0.3369140625],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","y","0",0.282958984375],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","z","-inf",0.45703125],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","z","inf",0.675048828125],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","z","0",0.705078125],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","x","-inf",0.498046875],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","x","inf",0.333984375],["(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","x","0",0.359130859375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","y","-inf",0.154052734375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","y","inf",0.18017578125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","y","0",0.151123046875],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","z","-inf",0.21484375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","z","inf",0.18603515625],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","z","0",0.205078125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","x","-inf",0.15283203125],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","x","inf",0.154052734375],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","x","0",0.18603515625],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","y","-inf",1.9541015625],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","y","inf",0.3310546875],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","y","0",0.276123046875],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","z","-inf",0.5068359375],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","z","inf",0.615966796875],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","z","0",0.758056640625],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","x","-inf",0.47900390625],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","x","inf",0.347900390625],["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","x","0",0.43994140625]],"time":16.18505859375,"type":"series"},{"count":[[4,177]],"egraph":[[2,3006,60,0.026098916],[1,269,63,0.004294875],[0,13,63,0.000352083]],"inputs":[["(cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)))","(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))","(pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2)","(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8))) (sqrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) (cbrt.f64 (/.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 1 x)) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 -1 x)) (cbrt.f64 (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 1 x))) (neg.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) (cbrt.f64 (/.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 1) 1/2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8)) (pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x -2)) (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) (pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (*.f64 (pow.f64 x -1/2) (/.f64 1 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (/.f64 1 (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 4) (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) 1) (/.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) 1) (/.f64 (pow.f64 x -1/2) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) -2) (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x -1/2) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (/.f64 (pow.f64 x -1/2) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) (/.f64 (/.f64 1 x) (sqrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 x -2)) (sqrt.f64 (fma.f64 z (*.f64 z y) y))) (/.f64 (cbrt.f64 (/.f64 1 x)) (sqrt.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8))) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 5/6) (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 x) (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) (cbrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 5/6) (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 x -2)) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 8))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 x -2)) (/.f64 (fma.f64 z (*.f64 z y) y) (cbrt.f64 (/.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 x -1/2) (/.f64 (fma.f64 z (*.f64 z y) y) (pow.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 x) (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (fma.f64 z (*.f64 z y) y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 x) (neg.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 z (*.f64 z y) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 -1 x)) (neg.f64 (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (sqrt.f64 (fma.f64 z (*.f64 z y) y))) (sqrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) 1) (fma.f64 z (*.f64 z y) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 1 x) (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 1 (fma.f64 z (*.f64 z y) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 z (*.f64 z y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 1 x) (neg.f64 (fma.f64 z (*.f64 z y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x -3) (pow.f64 (fma.f64 z (*.f64 z y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)) -1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (neg.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y))))) 1) 3))))))"]],"rules":[["egg-rr",49],["egg-rr",30],["egg-rr",54],["egg-rr",44]],"stop":[["node limit",1]],"time":58.180908203125,"type":"rewrite"},{"count":[[257,182]],"egraph":[[3,3534,1688,0.018998043],[2,828,1728,0.006649251],[1,263,1816,0.001882501],[0,94,1830,0.000522417]],"inputs":[["(pow.f64 (/.f64 1 (*.f64 y x)) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (pow.f64 (/.f64 1 (*.f64 y x)) 1/3))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (pow.f64 (/.f64 1 (*.f64 y x)) 1/3)))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (+.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (*.f64 -14/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 6))))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)","(+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))))","(+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))) (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3))) (pow.f64 z 4))))","(+.f64 (*.f64 (pow.f64 z 6) (+.f64 (*.f64 -28/81 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 -4/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)))) (+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))) (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3))) (pow.f64 z 4)))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 y x))","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 1 (*.f64 y x)) 1/3)","(cbrt.f64 (/.f64 1 (*.f64 y x)))","(cbrt.f64 (/.f64 (/.f64 1 y) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (pow.f64 (/.f64 1 (*.f64 y x)) 1/3))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (*.f64 z z)) (cbrt.f64 (/.f64 1 (*.f64 y x))))","(*.f64 (+.f64 (*.f64 -1/3 (*.f64 z z)) 1) (cbrt.f64 (/.f64 1 (*.f64 y x))))","(*.f64 (+.f64 (*.f64 -1/3 (*.f64 z z)) 1) (cbrt.f64 (/.f64 (/.f64 1 y) x)))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (pow.f64 (/.f64 1 (*.f64 y x)) 1/3)))","(fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (pow.f64 z 4)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (*.f64 z z)) (cbrt.f64 (/.f64 1 (*.f64 y x)))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (+.f64 (*.f64 -1/3 (*.f64 z z)) (*.f64 2/9 (pow.f64 z 4)))))","(*.f64 (cbrt.f64 (/.f64 (/.f64 1 y) x)) (+.f64 (*.f64 -1/3 (*.f64 z z)) (+.f64 (*.f64 2/9 (pow.f64 z 4)) 1)))","(+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 4))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 2))) (+.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (*.f64 -14/81 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (pow.f64 z 6))))))","(fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (pow.f64 z 4)) (+.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (*.f64 z z)) (cbrt.f64 (/.f64 1 (*.f64 y x)))) (*.f64 (*.f64 -14/81 (cbrt.f64 (/.f64 1 (*.f64 y x)))) (pow.f64 z 6))))","(fma.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (pow.f64 z 4)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (*.f64 z z)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) -14/81) (pow.f64 z 6) (cbrt.f64 (/.f64 1 (*.f64 y x))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 z z)) 1) (cbrt.f64 (/.f64 1 (*.f64 y x)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (+.f64 (*.f64 -14/81 (pow.f64 z 6)) (*.f64 2/9 (pow.f64 z 4)))))","(+.f64 (cbrt.f64 (/.f64 (/.f64 1 y) x)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 y) x)) (+.f64 (*.f64 -1/3 (*.f64 z z)) (+.f64 (*.f64 -14/81 (pow.f64 z 6)) (*.f64 2/9 (pow.f64 z 4))))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y x))","(/.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (/.f64 (neg.f64 (*.f64 z z)) (*.f64 y x)))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))","(-.f64 (/.f64 (/.f64 1 y) x) (/.f64 (/.f64 z y) (/.f64 x z)))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))))","(+.f64 (/.f64 (/.f64 1 y) x) (*.f64 (/.f64 (/.f64 z y) (/.f64 x z)) (+.f64 -1 (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(fma.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x)) (+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))) (/.f64 (pow.f64 z 6) (*.f64 y x))))","(+.f64 (/.f64 (/.f64 1 y) x) (+.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 -1 (*.f64 y x)) (+.f64 (*.f64 z z) (pow.f64 z 6)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z)))","(/.f64 1 (*.f64 y (*.f64 x (*.f64 z z))))","(/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x)) (-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x))) (+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z)))","(/.f64 1 (*.f64 y (*.f64 x (*.f64 z z))))","(/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x)) (-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x))) (+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)","(cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x)))","(cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x)))))","(cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x)))))","(cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 y x)))","(+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))))","(+.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) (*.f64 -2/3 (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))))))","(fma.f64 -2/3 (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x)))))) (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))))","(*.f64 (+.f64 (*.f64 z (*.f64 z -2/3)) 1) (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x))))))","(*.f64 (+.f64 (*.f64 z (*.f64 z -2/3)) 1) (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 y x))))","(+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))) (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3))) (pow.f64 z 4))))","(+.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) (fma.f64 -2/3 (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x)))) (*.f64 (pow.f64 z 4) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) 5/9))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) (fma.f64 (pow.f64 z 4) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) 5/9) (*.f64 (*.f64 z z) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) -2/3))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x))))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x))))) (+.f64 (*.f64 z (*.f64 z -2/3)) (*.f64 (pow.f64 z 4) 5/9))))","(*.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 y x))) (+.f64 (+.f64 (*.f64 z (*.f64 z -2/3)) 1) (*.f64 (pow.f64 z 4) 5/9)))","(+.f64 (*.f64 (pow.f64 z 6) (+.f64 (*.f64 -28/81 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 -4/27 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)))) (+.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (pow.f64 z 2))) (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3))) (pow.f64 z 4)))))","(fma.f64 (pow.f64 z 6) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) -40/81) (+.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) (fma.f64 -2/3 (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x)))) (*.f64 (pow.f64 z 4) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y y)) (*.f64 x x))) 5/9)))))","(fma.f64 (pow.f64 z 6) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) -40/81) (+.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) (fma.f64 (pow.f64 z 4) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) 5/9) (*.f64 (*.f64 z z) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 y (*.f64 x x))))) -2/3)))))","(+.f64 (*.f64 (+.f64 (*.f64 z (*.f64 z -2/3)) 1) (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x)))))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 y x))))) (+.f64 (*.f64 (pow.f64 z 4) 5/9) (*.f64 (pow.f64 z 6) -40/81))))","(+.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 y x))) (*.f64 (cbrt.f64 (/.f64 (/.f64 (/.f64 1 y) x) (*.f64 y x))) (+.f64 (*.f64 z (*.f64 z -2/3)) (+.f64 (*.f64 (pow.f64 z 4) 5/9) (*.f64 (pow.f64 z 6) -40/81)))))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 (+.f64 (*.f64 y (pow.f64 z 2)) y) x))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y x))","(/.f64 (/.f64 1 y) x)","(+.f64 (/.f64 1 (*.f64 y x)) (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (/.f64 (neg.f64 (*.f64 z z)) (*.f64 y x)))","(-.f64 (/.f64 1 (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))","(-.f64 (/.f64 (/.f64 1 y) x) (/.f64 (/.f64 z y) (/.f64 x z)))","(+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x))))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))))","(+.f64 (/.f64 (/.f64 1 y) x) (*.f64 (/.f64 (/.f64 z y) (/.f64 x z)) (+.f64 -1 (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x))) (+.f64 (/.f64 1 (*.f64 y x)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (*.f64 y x))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(fma.f64 -1 (/.f64 (pow.f64 z 6) (*.f64 y x)) (+.f64 (/.f64 1 (*.f64 y x)) (fma.f64 -1 (/.f64 (*.f64 z z) (*.f64 y x)) (/.f64 (pow.f64 z 4) (*.f64 y x)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x)))) (/.f64 (pow.f64 z 6) (*.f64 y x)))","(+.f64 (/.f64 1 (*.f64 y x)) (-.f64 (-.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 z y) (/.f64 z x))) (/.f64 (pow.f64 z 6) (*.f64 y x))))","(+.f64 (/.f64 (/.f64 1 y) x) (+.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (/.f64 -1 (*.f64 y x)) (+.f64 (*.f64 z z) (pow.f64 z 6)))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z)))","(/.f64 1 (*.f64 y (*.f64 x (*.f64 z z))))","(/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x)) (-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x))) (+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))","(/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z)))","(/.f64 1 (*.f64 y (*.f64 x (*.f64 z z))))","(/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z)))","(-.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x)) (-.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 6) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 2) x)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 8) x))) (/.f64 1 (*.f64 y (*.f64 (pow.f64 z 4) x)))))","(-.f64 (+.f64 (/.f64 (/.f64 1 y) (*.f64 x (*.f64 z z))) (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 6)) x))) (+.f64 (/.f64 1 (*.f64 (*.f64 y (pow.f64 z 4)) x)) (/.f64 (/.f64 1 y) (*.f64 x (pow.f64 z 8)))))","(+.f64 (/.f64 1 (*.f64 y (*.f64 x (*.f64 z z)))) (-.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 6)))) (+.f64 (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 4)))) (/.f64 1 (*.f64 y (*.f64 x (pow.f64 z 8)))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 y x) (pow.f64 z 6))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8)))) (/.f64 -1 (*.f64 y (*.f64 x (pow.f64 z 4))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 y z))) (+.f64 (/.f64 (/.f64 (/.f64 1 y) x) (pow.f64 z 6)) (+.f64 (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 4))) (/.f64 (/.f64 -1 y) (*.f64 x (pow.f64 z 8))))))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 1 (*.f64 y (*.f64 (+.f64 (pow.f64 z 2) 1) x)))","(/.f64 1 (*.f64 x (fma.f64 y (*.f64 z z) y)))","(/.f64 1 (*.f64 y (*.f64 x (fma.f64 z z 1))))","(/.f64 (/.f64 (/.f64 1 y) x) (fma.f64 z z 1))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))","(/.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 z 2)) 1) (*.f64 y x)))","(/.f64 -1 (*.f64 (*.f64 y x) (fma.f64 -1 (*.f64 z z) -1)))","(/.f64 -1 (*.f64 (*.f64 y x) (*.f64 (fma.f64 z z 1) -1)))","(/.f64 -1 (*.f64 y (*.f64 x (-.f64 -1 (*.f64 z z)))))","(/.f64 (/.f64 -1 (-.f64 -1 (*.f64 z z))) (*.f64 y x))"]],"stop":[["node limit",1]],"time":47.8271484375,"type":"simplify"},{"compiler":[[9497,4411]],"time":74.5,"type":"eval"},{"alts":[["(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","fresh",28.256630077284104],["(/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y)","fresh",31.526942859315746],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (/.f64 (*.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))","fresh",4.4431923476960895],["(*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))","fresh",7.761391316721506],["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","done",4.298378598507817],["(*.f64 (/.f64 1 x) (pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) 2))","fresh",15.345170871518322],["(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","done",4.0593508519814385],["(*.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y)))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","fresh",4.246633518044954],["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","done",4.007905832444555],["(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","fresh",4.759682647135872]],"compiler":[[12,8],[12,8],[39,20],[15,11],[28,16],[17,12],[15,10],[31,19],[13,8],[13,8]],"count":[[319,10]],"kept":[{"done":[2,2],"fresh":[7,5],"new":[309,2],"picked":[1,1]}],"min-error":[0.8404482457300486],"time":107.431884765625,"type":"prune"},{"accuracy":[1.727879221431178],"baseline":[4.007905832444555],"branch":[["x",1.727879221431178,2],["y",1.9536816581509726,2],["z",4.007905832444555,1],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))",2.73254199297085,3],["(/.f64 1 x)",2.3889555685422703,2],["(/.f64 1 x)",2.3889555685422703,2],["(*.f64 y (+.f64 1 (*.f64 z z)))",2.4767686661880135,2],["(+.f64 1 (*.f64 z z))",4.007905832444554,1],["(*.f64 z z)",4.007905832444554,1]],"compiler":[[4,3],[4,3],[4,3],[14,10],[6,5],[6,5],[10,7],[8,6],[6,4],[312,160]],"count":[[19,2]],"inputs":[["(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (/.f64 (*.f64 (/.f64 1 (cbrt.f64 (*.f64 x (fma.f64 z (*.f64 z y) y)))) (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))","(*.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y)))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","(*.f64 (/.f64 1 x) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 3)))","(/.f64 (/.f64 (/.f64 1 z) (*.f64 z x)) y)","(*.f64 (/.f64 1 x) (pow.f64 (pow.f64 (fma.f64 z (*.f64 z y) y) -1/2) 2))","(*.f64 (/.f64 1 x) (pow.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (*.f64 z y) y))) 3))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(*.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y))) 2))","(*.f64 (/.f64 1 x) (/.f64 1 (fma.f64 z (*.f64 z y) y)))","(/.f64 1 (*.f64 z (*.f64 z (*.f64 y x))))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (*.f64 z y) y)) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (fma.f64 z (*.f64 z y) y))))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))","(*.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))) 2) (cbrt.f64 (/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 y (fma.f64 z z 1))) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 (*.f64 y (fma.f64 z z 1)))))","(*.f64 (/.f64 1 (fma.f64 z z 1)) (/.f64 1 (*.f64 y x)))","(*.f64 (/.f64 1 y) (/.f64 (/.f64 1 x) (fma.f64 z z 1)))","(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","(/.f64 (/.f64 1 x) (*.f64 y (fma.f64 z z 1)))","(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))"]],"link":["."],"name":["Statistics.Distribution.CauchyLorentz:$cdensity from math-functions-0.1.5.2"],"oracle":[39.65946879200488],"outputs":[["(/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y))","(/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x)))"]],"time":103.30712890625,"times":[["x",12.93310546875],["y",13.010986328125],["z",6.90283203125],["(/.f64 (/.f64 1 x) (*.f64 y (+.f64 1 (*.f64 z z))))",12.6318359375],["(/.f64 1 x)",12.638916015625],["(/.f64 1 x)",13.830078125],["(*.f64 y (+.f64 1 (*.f64 z z)))",11.156005859375],["(+.f64 1 (*.f64 z z))",5.982177734375],["(*.f64 z z)",8.859130859375]],"type":"regimes"},{"bstep":[[-2043830133440607.5,-4438733899914.06,9.9072265625]],"compiler":[[16,12],[4,3]],"method":["binary-search"],"time":10.06982421875,"type":"bsearch"},{"compiler":[[27,16]],"egraph":[[1,22,34,6.0292e-5],[0,17,34,3.4792e-5]],"inputs":[["(if (<=.f64 x -4087660266881215/2) (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y)) (/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -4087660266881215/2) (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 y z) y)) (/.f64 1 (*.f64 y (fma.f64 z (*.f64 z x) x))))","(if (<=.f64 x -4087660266881215/2) (/.f64 (/.f64 1 x) (fma.f64 z (*.f64 z y) y)) (/.f64 1 (*.f64 y (fma.f64 z (*.f64 x z) x))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.845947265625,"type":"simplify"},{"time":0.028076171875,"type":"soundness"},{"compiler":[[27,16],[27,16],[27,16]],"remove-preprocessing":[[]],"time":19.9970703125,"type":"end"}]