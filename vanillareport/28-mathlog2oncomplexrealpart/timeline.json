[{"compiler":[[32,21]],"method":["search"],"sampling":[[12,0.28522631091931316,0.3388586086990131,0.37591508038167376],[11,0.24280803903900505,0.3812768805793212,0.37591508038167376],[10,0.2047778642497633,0.41930705536856294,0.37591508038167376],[9,0.13651857616650886,0.6123833273754826,0.2510980964580085],[8,0.08581167644751986,0.6630902270944716,0.2510980964580085],[7,0.04680636897137447,0.702095534570617,0.2510980964580085],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":141.906982421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",170.21728515625,2068],["body",256,"valid",729.005859375,8256]],"time":908.2001953125,"type":"sample"},{"compiler":[[31,20]],"egraph":[[1,3,3,6.75e-6],[0,3,3,5.708e-6],[11,6632,44,0.043982458],[10,5371,44,0.033906458],[9,4408,44,0.025600208],[8,4012,44,0.019977458],[7,2418,44,0.014265625],[6,647,44,0.00830375],[5,224,44,0.00259975],[4,199,44,0.001394958],[3,142,56,0.000985],[2,109,84,0.000657625],[1,92,84,0.000404833],[0,50,88,0.000174458]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 im im) (*.f64 re re)))) (log.f64 base)) (*.f64 (atan2.f64 re im) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 base base) (*.f64 im im)))) (log.f64 re)) (*.f64 (atan2.f64 im base) 0)) (+.f64 (*.f64 (log.f64 re) (log.f64 re)) (*.f64 0 0)))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 base base)))) (log.f64 im)) (*.f64 (atan2.f64 base re) 0)) (+.f64 (*.f64 (log.f64 im) (log.f64 im)) (*.f64 0 0)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2"],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","(/.f64 (fma.f64 (log.f64 (hypot.f64 re im)) (log.f64 base) 0) (*.f64 (log.f64 base) (log.f64 base)))","(/.f64 (*.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) (*.f64 (log.f64 base) (log.f64 base)))","(/.f64 (log.f64 (hypot.f64 re im)) (/.f64 (*.f64 (log.f64 base) (log.f64 base)) (log.f64 base)))","(*.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 im im) (*.f64 re re)))) (log.f64 base)) (*.f64 (atan2.f64 re im) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","(/.f64 (fma.f64 (log.f64 (hypot.f64 re im)) (log.f64 base) 0) (*.f64 (log.f64 base) (log.f64 base)))","(/.f64 (*.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) (*.f64 (log.f64 base) (log.f64 base)))","(/.f64 (log.f64 (hypot.f64 re im)) (/.f64 (*.f64 (log.f64 base) (log.f64 base)) (log.f64 base)))","(*.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 base base) (*.f64 im im)))) (log.f64 re)) (*.f64 (atan2.f64 im base) 0)) (+.f64 (*.f64 (log.f64 re) (log.f64 re)) (*.f64 0 0)))","(/.f64 (fma.f64 (log.f64 (hypot.f64 base im)) (log.f64 re) 0) (*.f64 (log.f64 re) (log.f64 re)))","(/.f64 (*.f64 (log.f64 (hypot.f64 im base)) (log.f64 re)) (*.f64 (log.f64 re) (log.f64 re)))","(*.f64 (/.f64 (log.f64 (hypot.f64 im base)) (log.f64 re)) (/.f64 (log.f64 re) (log.f64 re)))","(*.f64 (/.f64 (log.f64 (hypot.f64 im base)) (log.f64 re)) 1)","(/.f64 (log.f64 (hypot.f64 im base)) (log.f64 re))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 base base)))) (log.f64 im)) (*.f64 (atan2.f64 base re) 0)) (+.f64 (*.f64 (log.f64 im) (log.f64 im)) (*.f64 0 0)))","(/.f64 (fma.f64 (log.f64 (hypot.f64 re base)) (log.f64 im) 0) (*.f64 (log.f64 im) (log.f64 im)))","(/.f64 (*.f64 (log.f64 (hypot.f64 re base)) (log.f64 im)) (*.f64 (log.f64 im) (log.f64 im)))","(*.f64 (/.f64 (log.f64 (hypot.f64 re base)) (log.f64 im)) (/.f64 (log.f64 im) (log.f64 im)))","(*.f64 1 (/.f64 (log.f64 (hypot.f64 re base)) (log.f64 im)))","(/.f64 (log.f64 (hypot.f64 re base)) (log.f64 im))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort re im)"]],"time":69.126953125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[15,7474,11,0.058594833],[14,6914,11,0.048823458],[13,5728,11,0.039426249],[12,3627,11,0.030371124],[11,2728,11,0.021051999],[10,2236,11,0.016095624],[9,1748,11,0.012015248999999999],[8,1531,11,0.008929583],[7,925,11,0.005743667],[6,220,11,0.003370833],[5,75,11,0.000975333],[4,66,11,0.000550625],[3,49,14,0.000394625],[2,38,21,0.000271042],[1,31,21,0.000169458],[0,19,22,7.2875e-5]],"inputs":[["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","(/.f64 (fma.f64 (log.f64 (hypot.f64 re im)) (log.f64 base) 0) (*.f64 (log.f64 base) (log.f64 base)))","(/.f64 (*.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) (*.f64 (log.f64 base) (log.f64 base)))","(*.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) (/.f64 (log.f64 base) (log.f64 base)))","(*.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))"]],"stop":[["node limit",1]],"time":69.97802734375,"type":"simplify"},{"compiler":[[38,23]],"time":0.52197265625,"type":"eval"},{"alts":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","next",0.37728500976844204],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","fresh",30.961598718750842]],"compiler":[[10,7],[31,20],[10,7],[31,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.32259750976844204],"time":1.885986328125,"type":"prune"},{"compiler":[[22,7]],"locations":[["(hypot.f64 re im)",0.0078125,true],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))",0.37728500976844204,true]],"time":5.85791015625,"type":"localize"},{"count":[[2,60]],"series":[["(hypot.f64 re im)","im","-inf",0.2490234375],["(hypot.f64 re im)","im","inf",0.218017578125],["(hypot.f64 re im)","im","0",0.179931640625],["(hypot.f64 re im)","re","-inf",0.260009765625],["(hypot.f64 re im)","re","inf",0.260009765625],["(hypot.f64 re im)","re","0",3.0009765625],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","base","-inf",6.802978515625],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","base","inf",4.404052734375],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","base","0",26.402099609375],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","im","-inf",0.426025390625],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","im","inf",0.81982421875],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","im","0",0.880126953125],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","re","-inf",0.52294921875],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","re","inf",1.06591796875],["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","re","0",1.442138671875]],"time":47.22607421875,"type":"series"},{"count":[[2,52]],"egraph":[[2,1946,15,0.019203709],[1,158,15,0.002622334],[0,8,15,0.000175625]],"inputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(hypot.f64 re im)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 2) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (*.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (/.f64 1 (neg.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 base)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (log.f64 base))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (sqrt.f64 (log.f64 base))) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log.f64 (hypot.f64 re im)) (neg.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (-.f64 (hypot.f64 re im) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (hypot.f64 re im)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 re im) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 re im))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (hypot.f64 re im)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 re im)) 2) (cbrt.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 re im)) (sqrt.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 re im) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 re im) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 re im) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 re im)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 re im)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (cbrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (hypot.f64 re im) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 re im) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 re im)))))))"]],"rules":[["egg-rr",21],["egg-rr",31]],"stop":[["node limit",1]],"time":39.99609375,"type":"rewrite"},{"count":[[112,125]],"egraph":[[3,7229,1470,0.025210041000000002],[2,1378,1470,0.0118855],[1,463,1518,0.0029112499999999998],[0,164,1638,0.00070975]],"inputs":[["(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 base) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","im","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) im)))","re","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) re)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","(*.f64 -1 re)","(+.f64 (*.f64 -1 re) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re)))","(+.f64 (*.f64 -1 re) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re))))","(+.f64 (*.f64 -1 re) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re)))))","re","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) re)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","im","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) im)))","(*.f64 -1 im)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im)))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im)))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (/.f64 (log.f64 im) (log.f64 base)))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)))))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)) (/.f64 (log.f64 im) (log.f64 base))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4))))))","(fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (pow.f64 im 6)) (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)) (/.f64 (log.f64 im) (log.f64 base)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 base))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (/.f64 (log.f64 re) (log.f64 base)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (/.f64 (log.f64 re) (log.f64 base))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re)) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 base)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (/.f64 1/6 (log.f64 base))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(-.f64 (*.f64 (/.f64 (*.f64 im im) (log.f64 base)) (/.f64 1/2 (*.f64 re re))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))))","(-.f64 (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (*.f64 (/.f64 (*.f64 im im) (log.f64 base)) (/.f64 1/2 (*.f64 re re)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re)) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 base)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (/.f64 1/6 (log.f64 base))))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(/.f64 (log.f64 re) (log.f64 base))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (/.f64 (log.f64 re) (log.f64 base)))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (/.f64 (log.f64 re) (log.f64 base))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 base) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4))) (-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 im im) (log.f64 base)) (*.f64 re re)) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 base)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 (log.f64 base) (*.f64 re re))) im) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (log.f64 base)) (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (/.f64 1/6 (log.f64 base))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im)))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (/.f64 (log.f64 im) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (/.f64 (log.f64 im) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)))))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)) (/.f64 (log.f64 im) (log.f64 base))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4))))))","(fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (pow.f64 im 6)) (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)) (/.f64 (log.f64 im) (log.f64 base)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 base))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(-.f64 (*.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (/.f64 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) -1/4) (log.f64 base))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (log.f64 base) (*.f64 im im))) (fma.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 base)) (pow.f64 im 6)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (-.f64 (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (pow.f64 im 4)) (*.f64 (/.f64 1/720 (log.f64 base)) (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 im 6)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 (/.f64 re im) im)) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (pow.f64 im 6)) (/.f64 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) -1/4) (log.f64 base)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","im","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im)","(fma.f64 1/2 (/.f64 (*.f64 re re) im) im)","(fma.f64 1/2 (/.f64 re (/.f64 im re)) im)","(fma.f64 1/2 (*.f64 (/.f64 re im) re) im)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) im) im))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 re (/.f64 im re)) im))","(fma.f64 1/2 (*.f64 (/.f64 re im) re) (fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) im))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) im)))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) im) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 re (/.f64 im re)) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","(fma.f64 1/2 (*.f64 (/.f64 re im) re) (fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","re","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) re)","(fma.f64 1/2 (/.f64 (*.f64 im im) re) re)","(fma.f64 1/2 (/.f64 im (/.f64 re im)) re)","(fma.f64 1/2 (*.f64 (/.f64 im re) im) re)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 im im) re) re) (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))","(fma.f64 1/2 (/.f64 im (/.f64 re im)) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re))","(fma.f64 1/2 (*.f64 (/.f64 im re) im) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","(fma.f64 1/2 (/.f64 (*.f64 im im) re) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","(fma.f64 1/2 (/.f64 im (/.f64 re im)) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re)))","(fma.f64 1/2 (*.f64 (/.f64 im re) im) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) re)))","(*.f64 -1 re)","(neg.f64 re)","(+.f64 (*.f64 -1 re) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re)))","(fma.f64 -1 re (*.f64 (/.f64 (*.f64 im im) re) -1/2))","(fma.f64 (/.f64 im (/.f64 re im)) -1/2 (neg.f64 re))","(-.f64 (/.f64 -1/2 (/.f64 (/.f64 re im) im)) re)","(+.f64 (*.f64 -1 re) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re))))","(fma.f64 -1 re (fma.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) (*.f64 (/.f64 (*.f64 im im) re) -1/2)))","(-.f64 (fma.f64 (/.f64 im (/.f64 re im)) -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) 1/8)) re)","(fma.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) 1/8 (-.f64 (/.f64 -1/2 (/.f64 (/.f64 re im) im)) re))","(-.f64 (/.f64 -1/2 (/.f64 (/.f64 re im) im)) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re))","(+.f64 (*.f64 -1 re) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (*.f64 -1/2 (/.f64 (pow.f64 im 2) re)))))","(fma.f64 -1 re (fma.f64 1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) (fma.f64 -1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) (*.f64 (/.f64 (*.f64 im im) re) -1/2))))","(-.f64 (fma.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) 1/8 (fma.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) -1/16 (*.f64 (/.f64 im (/.f64 re im)) -1/2))) re)","(-.f64 (fma.f64 (*.f64 (/.f64 im re) im) -1/2 (fma.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) 1/8 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) -1/16))) re)","re","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) re)","(fma.f64 1/2 (/.f64 (*.f64 im im) re) re)","(fma.f64 1/2 (/.f64 im (/.f64 re im)) re)","(fma.f64 1/2 (*.f64 (/.f64 im re) im) re)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 im im) re) re) (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))","(fma.f64 1/2 (/.f64 im (/.f64 re im)) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re))","(fma.f64 1/2 (*.f64 (/.f64 im re) im) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) re)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5))) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","(fma.f64 1/2 (/.f64 (*.f64 im im) re) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) (+.f64 re (*.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3))))))","(fma.f64 1/2 (/.f64 im (/.f64 re im)) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) re)))","(fma.f64 1/2 (*.f64 (/.f64 im re) im) (fma.f64 -1/8 (/.f64 (pow.f64 im 4) (pow.f64 re 3)) (fma.f64 1/16 (/.f64 (pow.f64 im 6) (pow.f64 re 5)) re)))","im","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im)","(fma.f64 1/2 (/.f64 (*.f64 re re) im) im)","(fma.f64 1/2 (/.f64 re (/.f64 im re)) im)","(fma.f64 1/2 (*.f64 (/.f64 re im) re) im)","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) im))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) im) im))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 re (/.f64 im re)) im))","(fma.f64 1/2 (*.f64 (/.f64 re im) re) (fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) im))","(+.f64 (*.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) im)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) im)))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) im) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","(fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/2 (/.f64 re (/.f64 im re)) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","(fma.f64 1/2 (*.f64 (/.f64 re im) re) (fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im)))","(*.f64 -1 im)","(neg.f64 im)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im))","(fma.f64 -1/2 (/.f64 (*.f64 re re) im) (neg.f64 im))","(fma.f64 (/.f64 re (/.f64 im re)) -1/2 (neg.f64 im))","(-.f64 (*.f64 (*.f64 (/.f64 re im) re) -1/2) im)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im)))","(fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 -1/2 (/.f64 (*.f64 re re) im) (neg.f64 im)))","(fma.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) 1/8 (fma.f64 (/.f64 re (/.f64 im re)) -1/2 (neg.f64 im)))","(-.f64 (fma.f64 (*.f64 (/.f64 re im) re) -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) 1/8)) im)","(-.f64 (*.f64 (*.f64 (/.f64 re im) re) -1/2) (fma.f64 -1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) im))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 re 2) im)) (*.f64 -1 im))))","(fma.f64 -1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) (fma.f64 1/8 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) (fma.f64 -1/2 (/.f64 (*.f64 re re) im) (neg.f64 im))))","(fma.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) -1/16 (fma.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) 1/8 (fma.f64 (/.f64 re (/.f64 im re)) -1/2 (neg.f64 im))))","(fma.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) -1/16 (-.f64 (fma.f64 (*.f64 (/.f64 re im) re) -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) 1/8)) im))","(-.f64 (fma.f64 (*.f64 (/.f64 re im) re) -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 3)) 1/8)) (fma.f64 1/16 (/.f64 (pow.f64 re 6) (pow.f64 im 5)) im))"]],"stop":[["node limit",1]],"time":50.64990234375,"type":"simplify"},{"compiler":[[2349,1248]],"time":22.719970703125,"type":"eval"},{"alts":[["(/.f64 (log.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (cbrt.f64 (log.f64 (hypot.f64 re im))))) (log.f64 base))","fresh",0.861238061431851],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))","fresh",0.7616541505061232],["(/.f64 (log.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 (hypot.f64 re im))))) (log.f64 base))","fresh",15.227008935600402],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","fresh",0.4030075195368841],["(pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 3)","fresh",0.8518679688852175],["(pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1/3)","fresh",33.001991308610656],["(-.f64 (+.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1)","fresh",0.6839215803286534],["(*.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))","fresh",15.378044225831205],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))","fresh",0.7973341551367785],["(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","fresh",0.6511388809025879],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))","fresh",30.961598718750842],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","next",0.39880756837909415]],"compiler":[[21,13],[19,13],[19,11],[15,12],[13,10],[14,11],[14,11],[24,13],[25,16],[12,9],[31,20],[12,9],[21,13],[19,13],[19,11],[15,12],[13,10],[14,11],[14,11],[24,13],[25,16],[12,9],[31,20],[12,9]],"count":[[127,12]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[125,11],"picked":[1,0]}],"min-error":[0.015625],"time":25.631103515625,"type":"prune"},{"compiler":[[32,10]],"locations":[["(hypot.f64 re im)",0.0078125,false],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)",0.234375,true],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))",0.34765625,true]],"time":7.419921875,"type":"localize"},{"count":[[2,72]],"series":[["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","im","-inf",1.156982421875],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","im","inf",1.64306640625],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","im","0",1.331787109375],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","re","-inf",1.01611328125],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","re","inf",1.52783203125],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","re","0",1.047119140625],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","base","-inf",0.49609375],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","base","inf",0.473876953125],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","base","0",0.465087890625],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","im","-inf",1.157958984375],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","im","inf",1.031005859375],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","im","0",0.828125],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","re","-inf",0.7509765625],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","re","inf",1.31005859375],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","re","0",0.8408203125],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","base","-inf",0.47412109375],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","base","inf",0.473876953125],["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","base","0",0.5]],"time":17.01708984375,"type":"series"},{"count":[[2,71]],"egraph":[[2,2406,22,0.021943334],[1,200,22,0.0033049589999999997],[0,10,25,0.000237917]],"inputs":[["(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 base) (/.f64 1 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2) (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (*.f64 (cbrt.f64 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 base)) (*.f64 (sqrt.f64 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 base)) (/.f64 1 (neg.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 (hypot.f64 re im))) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) 1) (/.f64 (cbrt.f64 (log.f64 base)) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 base)) 1) (/.f64 (sqrt.f64 (log.f64 base)) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (/.f64 (log.f64 base) (cbrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 base)) (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (/.f64 (sqrt.f64 (log.f64 base)) (cbrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (log.f64 (hypot.f64 re im)))) (/.f64 (log.f64 base) (sqrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (sqrt.f64 (log.f64 (hypot.f64 re im)))) (/.f64 (cbrt.f64 (log.f64 base)) (sqrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 base (/.f64 1 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 base) 3) (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (cbrt.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -1) (pow.f64 (/.f64 1 (log.f64 (hypot.f64 re im))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2) -1) (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) -1) (pow.f64 (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (log.f64 base))) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (sqrt.f64 (log.f64 base))) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 base))) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 base)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (log.f64 base))) (neg.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (/.f64 (log.f64 base) (cbrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 (log.f64 base) (sqrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (sqrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 base))) (sqrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) 1) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2)) (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))))"]],"rules":[["egg-rr",40],["egg-rr",31]],"stop":[["node limit",1]],"time":45.539794921875,"type":"rewrite"},{"count":[[143,169]],"egraph":[[2,6173,5700,0.027029625],[1,1459,5732,0.01143425],[0,442,6101,0.002219792]],"inputs":[["(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 im))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (/.f64 (log.f64 base) (log.f64 im)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4))) (/.f64 (log.f64 base) (log.f64 im))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 re 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4))) (/.f64 (log.f64 base) (log.f64 im)))))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))))) (pow.f64 re 6))))))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))))","(/.f64 (log.f64 base) (log.f64 re))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (/.f64 (log.f64 base) (log.f64 re)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 im 4))) (/.f64 (log.f64 base) (log.f64 re))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (*.f64 (log.f64 re) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 im 4))) (/.f64 (log.f64 base) (log.f64 re)))))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3)))) (pow.f64 im 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3)))) (pow.f64 im 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 1 im)) 3))))) (pow.f64 im 6))))))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (pow.f64 im 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (log.f64 (/.f64 -1 im)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (pow.f64 im 4))))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (log.f64 im)) (*.f64 (pow.f64 (log.f64 base) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 1 re)) 2))))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2))) (pow.f64 (log.f64 base) 2))))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2))) (pow.f64 (log.f64 base) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 (log.f64 re) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (log.f64 re)) (*.f64 (pow.f64 (log.f64 base) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 re) 2) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4))))) (*.f64 (log.f64 re) (pow.f64 re 2)))) (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))) (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 6))))))) (pow.f64 (log.f64 base) 2))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 re) 2) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))))) (pow.f64 (log.f64 base) 2)))) (*.f64 (log.f64 re) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 (log.f64 re) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 im 4))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 1 im)) 3))))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im)))) (pow.f64 (log.f64 base) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 im 4))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 -1 im)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (log.f64 (/.f64 -1 im)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))))) (pow.f64 (log.f64 base) 2))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))))) (pow.f64 (log.f64 base) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 base)) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2))))))","(/.f64 (log.f64 base) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) (log.f64 (hypot.f64 re im)))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) (log.f64 (hypot.f64 re im)))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) (log.f64 (hypot.f64 re im)))","(/.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))))","(/.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))))","(/.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) (log.f64 (hypot.f64 re im)))","(/.f64 (log.f64 base) (log.f64 im))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (/.f64 (log.f64 base) (log.f64 im)))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (pow.f64 (log.f64 im) 2)) (*.f64 im im)) (/.f64 (log.f64 base) (log.f64 im)))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (/.f64 (log.f64 base) (log.f64 im)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4))) (/.f64 (log.f64 base) (log.f64 im))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (pow.f64 (log.f64 im) 2)) (*.f64 im im)) (fma.f64 -1 (*.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (log.f64 base) (log.f64 im))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (fma.f64 (*.f64 1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (pow.f64 re 4) (/.f64 (log.f64 base) (log.f64 im))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 re 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4))) (/.f64 (log.f64 base) (log.f64 im)))))","(fma.f64 -1 (*.f64 (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6))) (fma.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6))) (/.f64 (*.f64 -1/2 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)))))) (*.f64 (*.f64 im im) (log.f64 im))))) (pow.f64 re 6)) (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (pow.f64 (log.f64 im) 2)) (*.f64 im im)) (fma.f64 -1 (*.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (log.f64 base) (log.f64 im)))))","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (fma.f64 (*.f64 1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (pow.f64 re 4) (/.f64 (log.f64 base) (log.f64 im)))) (*.f64 (fma.f64 1/6 (/.f64 (/.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 im) 2)) (fma.f64 1/8 (/.f64 (/.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 im) 3)) (/.f64 (*.f64 1/8 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (*.f64 (*.f64 im im) (log.f64 im))))) (pow.f64 re 6)))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re))))","(neg.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 re))))","(/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 re)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2)))))","(fma.f64 -1 (/.f64 (log.f64 base) (neg.f64 (log.f64 re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 re)) 2)))))","(-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2))) (/.f64 (log.f64 base) (neg.f64 (log.f64 re))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 base) (neg.f64 (log.f64 re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 re)) 2))))))","(-.f64 (-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2))) (/.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 re 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))))) (pow.f64 re 6))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 base) (neg.f64 (log.f64 re))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 re)) 2))) (neg.f64 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (neg.f64 (log.f64 re)) (*.f64 im im))) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (*.f64 (pow.f64 im 6) 120)))))) (pow.f64 re 6))))))","(-.f64 (-.f64 (-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2))) (/.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (/.f64 (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 im 6)) (fma.f64 1/720 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (*.f64 (pow.f64 im 6) 120)) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4))))) (neg.f64 (log.f64 re))))) (pow.f64 re 6))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 re 4)))","(-.f64 (-.f64 (-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2))) (/.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 re 4))) (/.f64 (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 im 6)) (fma.f64 1/720 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (*.f64 (pow.f64 im 6) 120)) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4))))) (neg.f64 (log.f64 re))))) (pow.f64 re 6)))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))))","(neg.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))))","(/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 re)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))","(fma.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))","(fma.f64 -1/2 (/.f64 (log.f64 base) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) im))) (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 re))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (log.f64 (/.f64 -1 re)) 2))))))","(-.f64 (fma.f64 -1/2 (/.f64 (log.f64 base) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) im))) (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (pow.f64 re 4)))","(-.f64 (*.f64 -1/2 (/.f64 (log.f64 base) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) im)))) (+.f64 (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (*.f64 (log.f64 base) (*.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 1/2 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 im im)))))) (pow.f64 re 6)) (fma.f64 -1 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))))","(-.f64 (-.f64 (fma.f64 -1/2 (/.f64 (log.f64 base) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) im))) (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (pow.f64 re 4))) (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (pow.f64 im 6) 120))) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4)))))) (log.f64 (/.f64 -1 re))))) (pow.f64 re 6)))","(-.f64 (-.f64 (*.f64 -1/2 (/.f64 (log.f64 base) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) im)))) (+.f64 (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (pow.f64 re 4)) (/.f64 (log.f64 base) (log.f64 (/.f64 -1 re))))) (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (pow.f64 im 6) 120))) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4)))))) (log.f64 (/.f64 -1 re))))) (pow.f64 re 6)))","(/.f64 (log.f64 base) (log.f64 re))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (/.f64 (log.f64 base) (log.f64 re)))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (/.f64 (*.f64 im im) (*.f64 re re))) (/.f64 (log.f64 base) (log.f64 re)))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2)) (/.f64 (log.f64 base) (log.f64 re)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 im 4))) (/.f64 (log.f64 base) (log.f64 re))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (*.f64 (pow.f64 im 4) (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2)))))) (/.f64 (log.f64 base) (log.f64 re))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2)) (fma.f64 (*.f64 1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (pow.f64 im 4) (/.f64 (log.f64 base) (log.f64 re))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (*.f64 (log.f64 re) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 im 4))) (/.f64 (log.f64 base) (log.f64 re)))))","(fma.f64 -1 (*.f64 (pow.f64 im 6) (fma.f64 -1/2 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (*.f64 (*.f64 re re) (log.f64 re))) (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 2))) (/.f64 (*.f64 1/8 (log.f64 base)) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 3)))))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (*.f64 (pow.f64 im 4) (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2)))))) (/.f64 (log.f64 base) (log.f64 re)))))","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 im im) (/.f64 (*.f64 re re) (log.f64 base))) (pow.f64 (log.f64 re) 2)) (fma.f64 (*.f64 1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (pow.f64 im 4) (/.f64 (log.f64 base) (log.f64 re)))) (*.f64 (pow.f64 im 6) (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 2))) (fma.f64 1/8 (/.f64 (/.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 re) 3)) (/.f64 (*.f64 1/8 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (*.f64 re (*.f64 re (log.f64 re))))))))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im))))","(neg.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 im))))","(/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 im)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 im)))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 im))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3)))) (pow.f64 im 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (pow.f64 im 4)) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 im))))))","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 im)))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 im 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3)))) (pow.f64 im 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 1 im)) 3))))) (pow.f64 im 6))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (pow.f64 im 4)) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 -1 (+.f64 (/.f64 (log.f64 base) (neg.f64 (log.f64 im))) (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 (pow.f64 re 6) 120))) (/.f64 (*.f64 -1/8 (*.f64 (log.f64 base) (pow.f64 re 6))) (pow.f64 (neg.f64 (log.f64 im)) 3)))) (pow.f64 im 6))))))","(-.f64 (-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 im)))) (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 re 6)) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 re 6) 120)))))) (pow.f64 im 6))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 im 4)))","(-.f64 (-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 im) 2)) (/.f64 (neg.f64 (log.f64 base)) (neg.f64 (log.f64 im)))) (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 im 4))) (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 -1/8 (/.f64 (log.f64 base) (neg.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 re 6)))) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 re 6) 120)))))) (pow.f64 im 6)))","(*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))","(neg.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))","(/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 im)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 im))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (pow.f64 im 4)))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 -1 (+.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))) (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4)))))","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 im)))) (/.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4)))","(-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (+.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))) (/.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (log.f64 (/.f64 -1 im)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (pow.f64 im 4))))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1 (/.f64 (fma.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (log.f64 (/.f64 -1 im)) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))) (/.f64 (*.f64 1/720 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 6) 120))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))) (pow.f64 im 6)) (*.f64 -1 (+.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))) (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4))))))","(fma.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (-.f64 (-.f64 (/.f64 (neg.f64 (log.f64 base)) (log.f64 (/.f64 -1 im))) (/.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4))) (/.f64 (fma.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 (/.f64 -1 im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (/.f64 (*.f64 1/720 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 6) 120))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))) (pow.f64 im 6))))","(-.f64 (-.f64 (*.f64 -1/2 (/.f64 (/.f64 (*.f64 (log.f64 base) (*.f64 re re)) (*.f64 im im)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))) (+.f64 (/.f64 (log.f64 base) (log.f64 (/.f64 -1 im))) (/.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (pow.f64 im 4)))) (/.f64 (fma.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 (/.f64 -1 im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (/.f64 (*.f64 1/720 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 6) 120))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))) (pow.f64 im 6)))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 re im)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 re im)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 re im)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 re im)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im))))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (log.f64 im) (log.f64 base)))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 (pow.f64 re 4) (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2))))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 (pow.f64 re 4) (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (/.f64 (*.f64 1/2 (/.f64 (*.f64 re re) (log.f64 base))) (*.f64 im im))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (log.f64 im)) (*.f64 (pow.f64 (log.f64 base) 2) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)))) (+.f64 (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (*.f64 (log.f64 im) (pow.f64 im 2)))))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 -1 (*.f64 (pow.f64 re 6) (fma.f64 -1/2 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (/.f64 (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 2)) (log.f64 im))) (fma.f64 -1 (/.f64 (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6))) (fma.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 3) (pow.f64 im 6))) (/.f64 (*.f64 -1/2 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)))))) (*.f64 (*.f64 im im) (log.f64 im))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2))))) (*.f64 (*.f64 im im) (log.f64 im))))))) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (*.f64 (pow.f64 re 4) (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2)))))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (-.f64 (fma.f64 (pow.f64 re 4) (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (/.f64 (*.f64 1/2 (/.f64 (*.f64 re re) (log.f64 base))) (*.f64 im im))) (*.f64 (pow.f64 re 6) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (*.f64 (*.f64 im im) (log.f64 im)))) (-.f64 (/.f64 (*.f64 1/8 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (/.f64 (pow.f64 (log.f64 base) 2) (/.f64 (log.f64 im) (*.f64 im im)))) (*.f64 (/.f64 (fma.f64 1/6 (/.f64 (/.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 im) 2)) (fma.f64 1/8 (/.f64 (/.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 im) 3)) (/.f64 (*.f64 1/8 (+.f64 (/.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 3)) (pow.f64 im 4)) (/.f64 (/.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)))) (*.f64 (*.f64 im im) (log.f64 im))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 base))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 base)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (neg.f64 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (neg.f64 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 re)) 2))))) (pow.f64 re 4)))))","(-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))) (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (pow.f64 re 4)))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 base)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 base))) (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (pow.f64 re 4)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 im 2)) (log.f64 (/.f64 1 re)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 1 re)) 2))))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2))) (pow.f64 (log.f64 base) 2))))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 re))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 1 re)) 2)))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (fma.f64 -1 (/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (neg.f64 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 re)) 2))))) (/.f64 (neg.f64 (log.f64 re)) (*.f64 im im))) (fma.f64 -1 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (neg.f64 (log.f64 re)) (*.f64 im im))) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (*.f64 (pow.f64 im 6) 120)))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 re)) 2))) (*.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 (*.f64 im im) (neg.f64 (log.f64 re)))))))) (pow.f64 re 6)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (neg.f64 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (neg.f64 (log.f64 re)))) (neg.f64 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 3)) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (neg.f64 (log.f64 re)) 2)))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 re)) 2))))) (pow.f64 re 4))))))","(-.f64 (-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (pow.f64 re 4))) (/.f64 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (neg.f64 (log.f64 re))) (*.f64 im im)) (-.f64 (*.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 (*.f64 im im) (neg.f64 (log.f64 re)))))) (*.f64 (/.f64 (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 im 6)) (fma.f64 1/720 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (*.f64 (pow.f64 im 6) 120)) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4))))) (neg.f64 (log.f64 re))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2)))) (pow.f64 re 6))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(-.f64 (-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 base)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 base))) (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (pow.f64 re 4))) (/.f64 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (neg.f64 (log.f64 re)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2))) (neg.f64 (log.f64 re))) (*.f64 im im)) (-.f64 (*.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4)))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 (*.f64 im im) (neg.f64 (log.f64 re)))))) (*.f64 (/.f64 (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 im 6)) (fma.f64 1/720 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (*.f64 (pow.f64 im 6) 120)) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 re) 2)) (pow.f64 im 4)) (/.f64 (*.f64 (log.f64 base) 1/4) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 im 4))))) (neg.f64 (log.f64 re))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 re) 2)))) (pow.f64 re 6)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (log.f64 (/.f64 -1 re))))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))))))","(-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))) (pow.f64 re 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2))) (pow.f64 (log.f64 base) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 re)))))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6)))) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 3)))) (pow.f64 im 2)) (log.f64 (/.f64 -1 re)))))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 (log.f64 base) 2))))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (log.f64 (/.f64 -1 re))))) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 (*.f64 im im) (log.f64 (/.f64 -1 re))))) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 im 4) (log.f64 base)) (log.f64 (/.f64 -1 re))))) (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 im im))) (neg.f64 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (*.f64 (log.f64 base) (*.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 1/2 (/.f64 (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 im 4))) (pow.f64 (log.f64 (/.f64 -1 re)) 3))) (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 im im)))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))) (pow.f64 re 6)) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (/.f64 (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 im (*.f64 im (log.f64 (/.f64 -1 re)))))) (/.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 (*.f64 im im) (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))))) (*.f64 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (pow.f64 im 6) 120))) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4)))))) (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (pow.f64 re 6))) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))) (pow.f64 re 4)))","(-.f64 (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (+.f64 (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))) (pow.f64 re 4)) (/.f64 (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 im (*.f64 im (log.f64 (/.f64 -1 re)))))) (/.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 (*.f64 im im) (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re)))) (/.f64 (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))))))) (*.f64 (/.f64 (fma.f64 -1/8 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 im 6))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (pow.f64 im 6) 120))) (/.f64 (*.f64 (*.f64 (*.f64 1/2 im) im) (fma.f64 -1/4 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4))) (/.f64 1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 (log.f64 base) (pow.f64 im 4)))))) (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (pow.f64 re 6))))","(/.f64 (log.f64 re) (log.f64 base))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re)))))","(-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base)) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 im (log.f64 base)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 base)))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 (log.f64 re) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (*.f64 (pow.f64 im 4) (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2))))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 im (log.f64 base)) (/.f64 im (*.f64 re re))) (/.f64 (log.f64 re) (log.f64 base))) (*.f64 (pow.f64 im 4) (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (/.f64 -1/4 (/.f64 (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2)) (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2)))))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (log.f64 re)) (*.f64 (pow.f64 (log.f64 base) 2) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 re) 2) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4))))) (*.f64 (log.f64 re) (pow.f64 re 2)))) (+.f64 (*.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))) (*.f64 1/8 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 6))))))) (pow.f64 (log.f64 base) 2))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 re) 2) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))))) (pow.f64 (log.f64 base) 2)))) (*.f64 (log.f64 re) (pow.f64 re 2)))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 (-.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 base) (*.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 3) (pow.f64 re 4)))) (*.f64 -1/4 (/.f64 (log.f64 base) (*.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))))) (pow.f64 (log.f64 re) 2)) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4)))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 -1 (*.f64 (pow.f64 im 6) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (pow.f64 (log.f64 base) 2)) (/.f64 (log.f64 re) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 re) 2) (/.f64 (pow.f64 (log.f64 base) 2) (fma.f64 -1/2 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (*.f64 (*.f64 re re) (log.f64 re))) (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 2))) (/.f64 (*.f64 1/8 (log.f64 base)) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 3))))))) (/.f64 (*.f64 -1/2 (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2)))))) (*.f64 (*.f64 re re) (log.f64 re)))))) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (log.f64 base) (*.f64 re re))) (*.f64 (pow.f64 im 4) (-.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (neg.f64 (/.f64 (*.f64 -1/4 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2)))))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (-.f64 (fma.f64 (pow.f64 im 4) (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (/.f64 -1/4 (/.f64 (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2)) (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))))) (/.f64 (/.f64 (*.f64 (*.f64 1/2 im) im) (*.f64 re re)) (log.f64 base))) (*.f64 (pow.f64 im 6) (+.f64 (/.f64 (*.f64 1/8 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (/.f64 (pow.f64 (log.f64 base) 2) (/.f64 (log.f64 re) (*.f64 re re)))) (-.f64 (/.f64 -1/2 (/.f64 (*.f64 re (*.f64 re (log.f64 re))) (+.f64 (/.f64 1/4 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (log.f64 re)))) (/.f64 -1/4 (/.f64 (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 re) 2)) (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))))))) (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 2)) (fma.f64 1/6 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 re) 2))) (fma.f64 1/8 (/.f64 (/.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 re) 3)) (/.f64 (*.f64 1/8 (+.f64 (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 3))) (/.f64 (log.f64 base) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))))) (*.f64 re (*.f64 re (log.f64 re))))))))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im))))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (log.f64 im) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 im 4))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 im)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (neg.f64 (log.f64 im))))) (pow.f64 im 4)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)))))","(-.f64 (-.f64 (/.f64 (*.f64 1/2 (/.f64 (*.f64 re re) (log.f64 base))) (*.f64 im im)) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (pow.f64 im 4))) (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (log.f64 im) (log.f64 base))) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (pow.f64 im 4)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 1 im)) 2))) (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 1 im)) 3))))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 re 2)) (log.f64 (/.f64 1 im)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im)))) (pow.f64 (log.f64 base) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 1 im)) 2)))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 (log.f64 base) 2))) (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 1 im)))))) (pow.f64 im 4))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 (pow.f64 re 6) 120))) (/.f64 (*.f64 -1/8 (*.f64 (log.f64 base) (pow.f64 re 6))) (pow.f64 (neg.f64 (log.f64 im)) 3)))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 im)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (neg.f64 (log.f64 im))))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (*.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (pow.f64 (log.f64 base) 2) (*.f64 (*.f64 re re) (neg.f64 (log.f64 im)))))))) (pow.f64 im 6)) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (neg.f64 (log.f64 im)) 3)) (/.f64 (*.f64 -1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (neg.f64 (log.f64 im)) 2))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (neg.f64 (log.f64 im)) 2))) (*.f64 1/4 (/.f64 (/.f64 (pow.f64 re 4) (log.f64 base)) (neg.f64 (log.f64 im))))) (pow.f64 im 4)) (*.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 1/2 (/.f64 (*.f64 re re) (log.f64 base))) (*.f64 im im)) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (pow.f64 im 4))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (neg.f64 (*.f64 (log.f64 im) (*.f64 re re)))) (/.f64 -1/2 (/.f64 (neg.f64 (log.f64 im)) (*.f64 re (*.f64 re (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2)))))))) (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 -1/8 (*.f64 (/.f64 (log.f64 base) (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 re 6)) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 re 6) 120)))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2)))) (pow.f64 im 6))) (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(-.f64 (-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (log.f64 im) (log.f64 base))) (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2))) (pow.f64 im 4))) (/.f64 (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (neg.f64 (*.f64 (log.f64 im) (*.f64 re re)))) (/.f64 -1/2 (/.f64 (neg.f64 (log.f64 im)) (*.f64 re (*.f64 re (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))) (*.f64 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 2)) (pow.f64 (log.f64 im) 2)))))))) (/.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1/4 (*.f64 (/.f64 (log.f64 base) (pow.f64 (log.f64 im) 2)) (pow.f64 re 4)) (/.f64 1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (*.f64 (log.f64 base) (pow.f64 re 4))))) (/.f64 (neg.f64 (log.f64 im)) (*.f64 re re))) (fma.f64 -1/8 (/.f64 (log.f64 base) (neg.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 re 6)))) (*.f64 1/720 (/.f64 (log.f64 base) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 re 6) 120)))))) (/.f64 (pow.f64 (log.f64 base) 2) (pow.f64 (log.f64 im) 2)))) (pow.f64 im 6)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 base))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(-.f64 (/.f64 (*.f64 1/2 (/.f64 (*.f64 re re) (log.f64 base))) (*.f64 im im)) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 (log.f64 base) 2) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))))) (pow.f64 im 4)) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (neg.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 2)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))))) (pow.f64 im 4))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 re 2)) (log.f64 (/.f64 -1 im)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (log.f64 (/.f64 -1 im)))) (*.f64 1/720 (/.f64 (*.f64 (log.f64 base) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))))) (pow.f64 (log.f64 base) 2))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))))) (pow.f64 (log.f64 base) 2))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im))))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))) (pow.f64 (log.f64 base) 2)))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/2 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 (log.f64 base) 2) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))))) (/.f64 (log.f64 (/.f64 -1 im)) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 (log.f64 base) 2) (fma.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (log.f64 (/.f64 -1 im)) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))) (/.f64 (*.f64 1/720 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 6) 120))) (pow.f64 (log.f64 (/.f64 -1 im)) 2)))))) (*.f64 1/2 (/.f64 (*.f64 (*.f64 (log.f64 (/.f64 -1 im)) (*.f64 re re)) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (pow.f64 (log.f64 base) 2))))) (pow.f64 im 6)) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 re re) (log.f64 base)) (*.f64 im im)) (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (log.f64 (/.f64 -1 im)))) (neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 (log.f64 base) 2) (fma.f64 -1/4 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))))) (pow.f64 im 4)) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(-.f64 (-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 re im) (/.f64 re im)) (log.f64 base)) (/.f64 (neg.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 2)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))))) (pow.f64 im 4))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))) (/.f64 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im)))) (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 2)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))))) (log.f64 (/.f64 -1 im))) (*.f64 re re)) (-.f64 (/.f64 (*.f64 1/2 (*.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3))) (*.f64 (*.f64 re re) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 2)) (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 2)) (fma.f64 -1/8 (/.f64 (*.f64 (log.f64 base) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (log.f64 (/.f64 -1 im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (log.f64 base))) (/.f64 (*.f64 1/4 (*.f64 (log.f64 base) (pow.f64 re 4))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)))) (/.f64 (*.f64 1/720 (*.f64 (log.f64 base) (*.f64 (pow.f64 re 6) 120))) (pow.f64 (log.f64 (/.f64 -1 im)) 2))))))) (pow.f64 im 6)))"]],"stop":[["node limit",1]],"time":80.408203125,"type":"simplify"},{"compiler":[[9439,5789]],"time":96.3359375,"type":"eval"},{"alts":[["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","next",0.4030075195368841],["(pow.f64 (*.f64 (log.f64 base) (/.f64 1 (log.f64 (hypot.f64 re im)))) -1)","fresh",0.4479675781475362],["(/.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2)) (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))","fresh",0.7690329344421046],["(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","fresh",0.6511388809025879],["(/.f64 (/.f64 1 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im))))","fresh",0.5120888183790941],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))","fresh",0.7616541505061232],["(pow.f64 (log.f64 (pow.f64 base (/.f64 1 (log.f64 (hypot.f64 re im))))) -1)","fresh",0.6315745980015285],["(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","done",0.39880756837909415],["(pow.f64 (-.f64 (+.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 1) -1)","fresh",0.6375589805642108],["(/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (log.f64 base)))","fresh",0.761290441895219]],"compiler":[[15,12],[14,11],[24,13],[12,9],[14,11],[19,13],[14,11],[12,9],[16,13],[17,11],[15,12],[14,11],[24,13],[12,9],[14,11],[19,13],[14,11],[16,13],[17,11]],"count":[[232,10]],"kept":[{"done":[0,0],"fresh":[11,1],"new":[220,8],"picked":[1,1]}],"min-error":[0.0078125],"time":45.0458984375,"type":"prune"},{"compiler":[[49,22]],"locations":[["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))",0.12109375,true],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))",0.37890625,true],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)",0.7029840332848187,true],["(pow.f64 (log.f64 base) 3)",0.7078477539794928,true]],"time":13.797119140625,"type":"localize"},{"count":[[4,104]],"series":[["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","base","-inf",0.18017578125],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","base","inf",0.189208984375],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","base","0",0.16015625],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","im","-inf",0.22998046875],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","im","inf",0.212158203125],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","im","0",0.199951171875],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","re","-inf",0.2119140625],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","re","inf",0.217041015625],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","re","0",0.2080078125],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","base","-inf",0.485107421875],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","base","inf",0.468017578125],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","base","0",0.808837890625],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","im","-inf",1.97998046875],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","im","inf",10.843994140625],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","im","0",0.863037109375],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","re","-inf",1.01806640625],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","re","inf",1.308837890625],["(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","re","0",0.905029296875],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","im","-inf",2.1220703125],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","im","inf",1.4111328125],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","im","0",0.908935546875],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","re","-inf",0.89794921875],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","re","inf",1.322021484375],["(pow.f64 (log.f64 (hypot.f64 re im)) 3)","re","0",0.950927734375],["(pow.f64 (log.f64 base) 3)","base","-inf",0.55908203125],["(pow.f64 (log.f64 base) 3)","base","inf",0.47900390625],["(pow.f64 (log.f64 base) 3)","base","0",0.557861328125]],"time":30.39404296875,"type":"series"},{"count":[[4,171]],"egraph":[[2,2882,40,0.027103083],[1,253,40,0.004303208],[0,12,43,0.000303958]],"inputs":[["(pow.f64 (log.f64 base) 3)","(pow.f64 (log.f64 (hypot.f64 re im)) 3)","(/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3))","(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log.f64 base) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 base) 3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 base) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 base) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 base) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log.f64 base) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 base) (pow.f64 (log.f64 base) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 base) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) 2) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (*.f64 (cbrt.f64 (log.f64 base)) (pow.f64 (log.f64 base) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 base)) (pow.f64 (log.f64 base) 5/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) 3/2) (pow.f64 (log.f64 base) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) 5/2) (sqrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 base) 2) 1) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (log.f64 base) (cbrt.f64 (log.f64 base))) 2) (cbrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 base) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log.f64 base) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 base) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 base))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log.f64 base) 9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 base))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (log.f64 base))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 base)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 base))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 base)) 3/2) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log.f64 (hypot.f64 re im)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 (hypot.f64 re im)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 (hypot.f64 re im)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (*.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 (hypot.f64 re im)) 5/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 (hypot.f64 re im)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 5/2) (sqrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) 1) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 (hypot.f64 re im)))) 2) (cbrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (hypot.f64 re im)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 (hypot.f64 re im)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (log.f64 (hypot.f64 re im)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 (hypot.f64 re im))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (hypot.f64 re im)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 (hypot.f64 re im))) 3/2) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2) (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3/2) (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3)) (/.f64 1 (neg.f64 (pow.f64 (log.f64 base) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -3) (pow.f64 (log.f64 (hypot.f64 re im)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 base)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 base)) (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) 2)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (log.f64 base)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) 2)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) 1) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) 1) (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) 1) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -2) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) 3/2)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) 3/2)) (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -3/2) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2) 1) (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 2) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 5/2) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 6) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 9) (pow.f64 (log.f64 base) 9)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))) 2)) (cbrt.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (sqrt.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (neg.f64 (pow.f64 (log.f64 base) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 9) (pow.f64 (log.f64 base) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))) (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) 1) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) 1) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 base)) -2) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -1/2) (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (sqrt.f64 (log.f64 base))) (/.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) (sqrt.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (/.f64 (log.f64 base) (cbrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (/.f64 (log.f64 base) (sqrt.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3))) (cbrt.f64 (neg.f64 (pow.f64 (log.f64 base) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (log.f64 (hypot.f64 re im))) (neg.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) 1) (log.f64 base))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (sqrt.f64 (log.f64 base))) (sqrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (log.f64 base)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 6) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 9) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/3) (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) -3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 2)) (cbrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))) (sqrt.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)))) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1) 1))))))"]],"rules":[["egg-rr",55],["egg-rr",60],["egg-rr",28],["egg-rr",28]],"stop":[["node limit",1]],"time":57.663818359375,"type":"rewrite"},{"count":[[275,325]],"egraph":[[1,2130,6952,0.015180500999999999],[0,600,7561,0.002943709]],"inputs":[["(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (log.f64 im) 3)","(+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (pow.f64 (log.f64 im) 3))","(+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4))) (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)))) (pow.f64 re 4)) (+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (pow.f64 (log.f64 im) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4))) (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)))) (pow.f64 re 4)) (+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (+.f64 (pow.f64 (log.f64 im) 3) (*.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (log.f64 im) (pow.f64 im 6)))))) (pow.f64 re 6)))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3))","(+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (pow.f64 re 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (pow.f64 re 6))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))))))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (pow.f64 re 6))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 re 6))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (pow.f64 re 6))))))))))))","(pow.f64 (log.f64 re) 3)","(+.f64 (pow.f64 (log.f64 re) 3) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)))","(+.f64 (pow.f64 (log.f64 re) 3) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)) (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))) (+.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 im 4))))","(+.f64 (pow.f64 (log.f64 re) 3) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 re 2))) (+.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)) (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))) (+.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 im 4)))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2)))))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2)))))))))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (pow.f64 im 4))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (pow.f64 im 6))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (pow.f64 im 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))))))))))))","(/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (/.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))))))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))))))))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 base) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 base)) 3))","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3)","(pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3)","(pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3)","(pow.f64 (log.f64 im) 3)","(+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (pow.f64 (log.f64 im) 3))","(fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (pow.f64 (log.f64 im) 3))","(+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4))) (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)))) (pow.f64 re 4)) (+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (pow.f64 (log.f64 im) 3)))","(fma.f64 (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)) (fma.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (*.f64 (log.f64 im) (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4)))))) (pow.f64 re 4) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (pow.f64 (log.f64 im) 3)))","(fma.f64 (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)) (fma.f64 (log.f64 im) (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (/.f64 (*.f64 1/2 (log.f64 im)) (pow.f64 im 4)))) (pow.f64 re 4) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (pow.f64 (log.f64 im) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4))) (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)))) (pow.f64 re 4)) (+.f64 (*.f64 (pow.f64 re 2) (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 2))))) (+.f64 (pow.f64 (log.f64 im) 3) (*.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (log.f64 im) (pow.f64 im 6)))))) (pow.f64 re 6)))))","(fma.f64 (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)) (fma.f64 1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (*.f64 (log.f64 im) (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4)))))) (pow.f64 re 4) (+.f64 (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (pow.f64 (log.f64 im) 3)) (*.f64 (fma.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (/.f64 1/4 (pow.f64 im 6))) (log.f64 im) (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4))) (*.f64 im im)) (*.f64 -1/4 (/.f64 (log.f64 im) (pow.f64 im 6)))))) (pow.f64 re 6))))","(fma.f64 (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)) (fma.f64 (log.f64 im) (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (/.f64 (*.f64 1/2 (log.f64 im)) (pow.f64 im 4)))) (pow.f64 re 4) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (fma.f64 (fma.f64 (log.f64 im) (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (/.f64 -1/4 (pow.f64 im 6))) (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 6)) (fma.f64 1/2 (/.f64 (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (*.f64 im im)) (*.f64 -1/4 (/.f64 (log.f64 im) (pow.f64 im 6)))))) (pow.f64 re 6) (pow.f64 (log.f64 im) 3))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 re)) 3))","(+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))))","(fma.f64 -1 (pow.f64 (neg.f64 (log.f64 re)) 3) (*.f64 3/2 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im)))))","(-.f64 (*.f64 3/2 (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re))) (pow.f64 (neg.f64 (log.f64 re)) 3))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))))","(fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re)))) (fma.f64 -1/2 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 -1 (pow.f64 (neg.f64 (log.f64 re)) 3) (fma.f64 1/2 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))))))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4)) (pow.f64 im 4)) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re)))) (pow.f64 (neg.f64 (log.f64 re)) 3))) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (pow.f64 re 6))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 re)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (pow.f64 re 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (pow.f64 re 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (pow.f64 re 6))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))))))))","(fma.f64 -1 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 -1/360 (*.f64 (neg.f64 (log.f64 re)) (*.f64 (pow.f64 im 6) 120)))) (/.f64 (pow.f64 re 6) (neg.f64 (log.f64 re)))) (fma.f64 -1 (pow.f64 (neg.f64 (log.f64 re)) 3) (fma.f64 1/2 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (/.f64 (pow.f64 re 6) (pow.f64 (neg.f64 (log.f64 re)) 2))) (fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re)))) (fma.f64 -1/2 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 6) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/4 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))))))))))))","(-.f64 (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re)) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (pow.f64 (log.f64 re) 2)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4)) (pow.f64 im 4)) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (/.f64 (pow.f64 re 6) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 re) 2))) (fma.f64 1/4 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 6)) (pow.f64 im 6)) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re)))))) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re))))))) (pow.f64 (neg.f64 (log.f64 re)) 3)) (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (neg.f64 (log.f64 re)) (*.f64 (*.f64 (pow.f64 im 6) 120) -1/360))) (/.f64 (pow.f64 re 6) (neg.f64 (log.f64 re)))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3))","(neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)))))","(+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))))))","(+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im))) (neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))) (+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))))","(-.f64 (+.f64 (-.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im))) (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im))) (*.f64 -1/2 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))))))) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (pow.f64 re 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (pow.f64 re 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (pow.f64 re 6))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (pow.f64 re 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 re 6))) (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (pow.f64 re 6))))))))))))","(fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (fma.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 -1 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 -1/360 (*.f64 (*.f64 (pow.f64 im 6) 120) (log.f64 (/.f64 -1 re))))) (/.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 re)))) (fma.f64 1/2 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (/.f64 (pow.f64 re 6) (*.f64 im im))) (+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 1/720 (/.f64 (*.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (pow.f64 re 6)) (*.f64 1/4 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (pow.f64 re 6) (pow.f64 im 6)))))))))))))","(-.f64 (-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))) (-.f64 (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 re 6)) (*.f64 im im)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im)))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 re im) (/.f64 re im))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 1/4 (/.f64 (pow.f64 im 6) (/.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 re))))))))) (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 (/.f64 -1 re)) -1/360))) (/.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 re)))))) (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (/.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 re)))))","(pow.f64 (log.f64 re) 3)","(+.f64 (pow.f64 (log.f64 re) 3) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)))","(+.f64 (pow.f64 (log.f64 re) 3) (*.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re)))))","(fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re))) (pow.f64 (log.f64 re) 3))","(+.f64 (pow.f64 (log.f64 re) 3) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)) (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))) (+.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 im 4))))","(+.f64 (pow.f64 (log.f64 re) 3) (fma.f64 (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re))) (*.f64 im im) (*.f64 (pow.f64 im 4) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (fma.f64 (log.f64 re) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))))))","(+.f64 (pow.f64 (log.f64 re) 3) (fma.f64 (pow.f64 im 4) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (fma.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (*.f64 (log.f64 re) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (*.f64 3/2 (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re)))))","(+.f64 (pow.f64 (log.f64 re) 3) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 re 2))) (+.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 2)))) (pow.f64 im 2)) (*.f64 (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4))) (+.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 im 4)))))","(+.f64 (pow.f64 (log.f64 re) 3) (fma.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 re re)) (fma.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (/.f64 1/4 (pow.f64 re 6))) (fma.f64 -1/4 (/.f64 (log.f64 re) (pow.f64 re 6)) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 6)))))) (pow.f64 im 6) (fma.f64 (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re))) (*.f64 im im) (*.f64 (pow.f64 im 4) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (fma.f64 (log.f64 re) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))))))))","(+.f64 (pow.f64 (log.f64 re) 3) (fma.f64 (pow.f64 im 6) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4))) (*.f64 re re)) (fma.f64 (log.f64 re) (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (/.f64 -1/4 (pow.f64 re 6))) (fma.f64 -1/4 (/.f64 (log.f64 re) (pow.f64 re 6)) (/.f64 (*.f64 1/6 (pow.f64 (log.f64 re) 2)) (pow.f64 re 6))))) (fma.f64 (pow.f64 im 4) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (fma.f64 1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (*.f64 (log.f64 re) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (*.f64 3/2 (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (pow.f64 (log.f64 re) 2) re))))))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3))","(neg.f64 (pow.f64 (neg.f64 (log.f64 im)) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1 (pow.f64 (neg.f64 (log.f64 im)) 3) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2)))))","(fma.f64 1/2 (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (-.f64 (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (pow.f64 (neg.f64 (log.f64 im)) 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2)))))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1 (pow.f64 (neg.f64 (log.f64 im)) 3) (fma.f64 -1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2))))))))","(fma.f64 1/2 (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (neg.f64 (log.f64 im))) (-.f64 (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (/.f64 (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4))) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))))) (pow.f64 (neg.f64 (log.f64 im)) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 1 im)) 3)) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (pow.f64 im 2)))))))))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1 (pow.f64 (neg.f64 (log.f64 im)) 3) (fma.f64 1/4 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) (neg.f64 (log.f64 im)))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (pow.f64 im 6) (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/720 (+.f64 (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120)) (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120))))))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 re 6) 120) (/.f64 (pow.f64 im 6) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (pow.f64 im 6) (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))))) (fma.f64 1/2 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2))) (fma.f64 -1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (pow.f64 (neg.f64 (log.f64 im)) 2))))))))))))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)) (-.f64 (fma.f64 1/4 (*.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (neg.f64 (log.f64 im))) (-.f64 (-.f64 (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 im) 2)) (fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (pow.f64 im 6) re)) (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4)))) (fma.f64 1/2 (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (neg.f64 (log.f64 im))) (*.f64 re (*.f64 re (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))))))) (/.f64 (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4))) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 6)) (fma.f64 -1/4 (pow.f64 re 6) (*.f64 (*.f64 (pow.f64 re 6) (*.f64 120 (neg.f64 (log.f64 im)))) -1/360))))) (pow.f64 (neg.f64 (log.f64 im)) 3)))","(*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3))","(neg.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)))))","(+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)) (*.f64 re re)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)) (*.f64 re re)) (neg.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (pow.f64 im 4))))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 im)))) (+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))))","(-.f64 (+.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)) (*.f64 re re)) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)) (*.f64 re re)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 4)) (pow.f64 re 4)) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (pow.f64 re 4)))))) (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (pow.f64 im 6))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (pow.f64 im 6))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (pow.f64 im 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (pow.f64 im 2))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))))))))))))","(fma.f64 1/2 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 6) (*.f64 re re))) (fma.f64 1/720 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) 120))) (fma.f64 1/4 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (fma.f64 -1 (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/360 (*.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 6) (log.f64 (/.f64 -1 im)))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 im)))) (fma.f64 -1 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (+.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/2 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/2 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 im 6)) (*.f64 re re)) (fma.f64 1/720 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) 120))) (fma.f64 1/4 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 4)) (pow.f64 re 4)) (-.f64 (-.f64 (+.f64 (*.f64 3/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)) (*.f64 re re))) (*.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (pow.f64 re 4)))) (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))))))) (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 6) (fma.f64 -1/4 (pow.f64 re 6) (*.f64 (log.f64 (/.f64 -1 im)) (*.f64 (*.f64 (pow.f64 re 6) 120) -1/360)))))))))","(/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))))))","(fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2))))","(fma.f64 (+.f64 (/.f64 (*.f64 (log.f64 im) (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3))) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4))))) (pow.f64 re 4) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))))))","(fma.f64 (pow.f64 re 4) (+.f64 (*.f64 (/.f64 (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 1/2 (/.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 -1/4 (pow.f64 im 4)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3))))) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))))","(fma.f64 (+.f64 (/.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (/.f64 1/4 (pow.f64 im 6))) (/.f64 (pow.f64 (log.f64 base) 3) (log.f64 im))) (fma.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4))) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3))))))) (pow.f64 re 6) (fma.f64 (+.f64 (/.f64 (*.f64 (log.f64 im) (+.f64 (/.f64 1/4 (pow.f64 im 4)) (/.f64 (*.f64 -1/2 (log.f64 im)) (pow.f64 im 4)))) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3))) (*.f64 -1/4 (/.f64 (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4))))) (pow.f64 re 4) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))))))))","(fma.f64 (pow.f64 re 6) (+.f64 (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (/.f64 -1/4 (pow.f64 im 6))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 -1/4 (/.f64 (/.f64 (log.f64 im) (pow.f64 im 6)) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 1/6 (pow.f64 im 6)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3)))))) (fma.f64 (pow.f64 re 4) (+.f64 (*.f64 (/.f64 (fma.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) -1/2 (/.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 1/2 (/.f64 (/.f64 (log.f64 im) (pow.f64 im 4)) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 -1/4 (pow.f64 im 4)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3))))) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))))))","(fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) 1/2)) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))))))))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4))) (+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 (/.f64 im re) (/.f64 im re)) 1/2))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)))) (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 -1/360 (*.f64 (neg.f64 (log.f64 re)) (*.f64 (pow.f64 im 6) 120)))) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 6))) (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 re 6))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4))) (+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/4 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (*.f64 1/2 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (pow.f64 re 6)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re)) (/.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 re 4)) (/.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (pow.f64 re 6))) (/.f64 (/.f64 (*.f64 1/4 (*.f64 (pow.f64 im 6) (neg.f64 (log.f64 re)))) (pow.f64 re 6)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)))) (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 4))))))) (*.f64 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (neg.f64 (log.f64 re)) (*.f64 (*.f64 (pow.f64 im 6) 120) -1/360))) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 re 6)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (pow.f64 (log.f64 base) 3))))","(-.f64 (*.f64 3/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (pow.f64 (log.f64 base) 3)))))))","(fma.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3))) (/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3)) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 re 4)))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (pow.f64 re 6))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/4 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (/.f64 (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 im 4) 1/4)) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4))) (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 -1/360 (*.f64 (*.f64 (pow.f64 im 6) 120) (log.f64 (/.f64 -1 re))))) (/.f64 (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3)) (log.f64 (/.f64 -1 re))))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 im im) (pow.f64 re 6)) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3))) (fma.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))) (fma.f64 1/4 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6))) (neg.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4)) (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 (/.f64 -1 re)) -1/360))))))))))))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))","(/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(fma.f64 (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 re re))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(fma.f64 (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (/.f64 (log.f64 re) (/.f64 (pow.f64 (log.f64 base) 3) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))))))) (pow.f64 im 4) (fma.f64 (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 re re))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(fma.f64 (pow.f64 im 4) (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (/.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (/.f64 (log.f64 re) (/.f64 (pow.f64 (log.f64 base) 3) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))))))) (pow.f64 im 4) (fma.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3))) (+.f64 (/.f64 (log.f64 re) (/.f64 (pow.f64 (log.f64 base) 3) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (/.f64 1/4 (pow.f64 re 6))))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3))))))) (pow.f64 im 6) (fma.f64 (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 re re))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 (pow.f64 im 4) (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (fma.f64 (pow.f64 im 6) (+.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (/.f64 -1/4 (pow.f64 re 6))))) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4))) (*.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 -1/4 (pow.f64 re 6)) (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3))))) (fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 re re)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (+.f64 (/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im)))))","(-.f64 (*.f64 3/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (/.f64 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3)) (neg.f64 (log.f64 im)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 4))) (+.f64 (/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))))))))","(-.f64 (fma.f64 -1/2 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im))) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4))) (pow.f64 im 4))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))))))))","(fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (/.f64 (*.f64 (pow.f64 im 4) (pow.f64 (log.f64 base) 3)) (neg.f64 (log.f64 im)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (pow.f64 im 6))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (+.f64 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 6))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 1/4 (/.f64 (pow.f64 re 6) (/.f64 (*.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3)) (neg.f64 (log.f64 im)))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 4))) (neg.f64 (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/720 (+.f64 (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120)) (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120))))) (pow.f64 im 6)))))))))))))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 (*.f64 re re) (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4)))) (pow.f64 (log.f64 base) 3)) (pow.f64 im 6)) (+.f64 (*.f64 3/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 -1/2 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 6)))) (*.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 (log.f64 base) 3))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 6)) (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 (*.f64 (pow.f64 re 6) (*.f64 120 (neg.f64 (log.f64 im)))) -1/360)) (pow.f64 (log.f64 base) 3))))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 1/2 (neg.f64 (*.f64 (pow.f64 re 4) (log.f64 im))) (*.f64 1/4 (pow.f64 re 4))) (pow.f64 im 4))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im))) (-.f64 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4))) (+.f64 (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3)))) (*.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im))) (-.f64 (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 re re) (pow.f64 im 6))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 im 6))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/360 (*.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 6))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 1/4 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (*.f64 im im) (pow.f64 (log.f64 base) 3))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 re (/.f64 (pow.f64 im 6) re))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120))) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im))) (-.f64 (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 1/4 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 6)) (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 im im)))))) (*.f64 (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 (log.f64 (/.f64 -1 im)) (*.f64 (*.f64 (pow.f64 re 6) 120) -1/360))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 6)))) (*.f64 (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (log.f64 im) (log.f64 base))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base)))))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (/.f64 (log.f64 im) (log.f64 base)))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (/.f64 (log.f64 im) (log.f64 base))) (*.f64 (/.f64 -1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (pow.f64 im 6) (log.f64 base))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base)))))))","(+.f64 (/.f64 (log.f64 im) (log.f64 base)) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (pow.f64 im 6)) (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (*.f64 (/.f64 -1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (pow.f64 im 4))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(/.f64 (neg.f64 (neg.f64 (log.f64 re))) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (-.f64 (*.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (pow.f64 re 6) (log.f64 base)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base))) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 base)))) (/.f64 (neg.f64 (log.f64 re)) (log.f64 base))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (log.f64 base))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (-.f64 (*.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (log.f64 base) (pow.f64 re 6)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base))) (*.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (pow.f64 re 6) (log.f64 base)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base))) (*.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 base)))) (/.f64 (log.f64 (/.f64 -1 re)) (log.f64 base))))","(/.f64 (log.f64 re) (log.f64 base))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base)))) (/.f64 (log.f64 re) (log.f64 base)))","(fma.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base))) (/.f64 (log.f64 re) (log.f64 base)))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base))) (/.f64 (*.f64 (pow.f64 im 4) -1/4) (*.f64 (pow.f64 re 4) (log.f64 base)))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (log.f64 base) (pow.f64 re 4)))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (log.f64 base) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (log.f64 base) (pow.f64 re 2)))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) (log.f64 base))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (*.f64 re re) (log.f64 base)))))))","(+.f64 (/.f64 (log.f64 re) (log.f64 base)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 re 4) (log.f64 base))) (fma.f64 1/2 (*.f64 (/.f64 im (*.f64 re re)) (/.f64 im (log.f64 base))) (*.f64 (/.f64 1/6 (pow.f64 re 6)) (/.f64 (pow.f64 im 6) (log.f64 base))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base)))","(neg.f64 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base)))))","(-.f64 (*.f64 (/.f64 1/2 (log.f64 base)) (*.f64 (/.f64 re im) (/.f64 re im))) (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (*.f64 (/.f64 -1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (log.f64 base))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (fma.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 base)) (pow.f64 im 6)) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base)))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (/.f64 120 (pow.f64 im 6)))))) (/.f64 (neg.f64 (log.f64 im)) (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (log.f64 base))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(-.f64 (*.f64 (/.f64 1/2 (log.f64 base)) (*.f64 (/.f64 re im) (/.f64 re im))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (*.f64 (/.f64 -1/4 (log.f64 base)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (log.f64 base) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (log.f64 base) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (log.f64 base) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (*.f64 im im) (log.f64 base))) (fma.f64 1/720 (/.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 base)) (pow.f64 im 6)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))))","(fma.f64 1/2 (*.f64 (/.f64 re (log.f64 base)) (/.f64 re (*.f64 im im))) (-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 im 4) (log.f64 base))) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 re 6) (log.f64 base)) (/.f64 120 (pow.f64 im 6))))) (/.f64 (log.f64 (/.f64 -1 im)) (log.f64 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 base))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base))","(/.f64 (log.f64 (hypot.f64 im re)) (log.f64 base))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (neg.f64 (log.f64 base)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (log.f64 (/.f64 1 base))))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (neg.f64 (log.f64 base))))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (neg.f64 (log.f64 base)))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 im re)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 im re)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 im re)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))))","(/.f64 (log.f64 (hypot.f64 im re)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))))"]],"stop":[["node limit",1]],"time":69.880126953125,"type":"simplify"},{"compiler":[[12443,7890]],"time":126.531005859375,"type":"eval"},{"alts":[["(cbrt.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))))","next",0.3818550293053261],["(log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))","fresh",1.784645073744095],["(cbrt.f64 (*.f64 (pow.f64 (log.f64 base) -2) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (log.f64 base))))","fresh",0.4248237793053261],["(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","fresh",0.6511388809025879],["(/.f64 (/.f64 1 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im))))","fresh",0.5120888183790941],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (*.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (*.f64 (cbrt.f64 (log.f64 base)) (pow.f64 (log.f64 base) 2)))))","fresh",0.4030075195368841],["(*.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 base)))","fresh",0.42806625976844204],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))","fresh",1.0677878203664646],["(pow.f64 (-.f64 (+.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 1) -1)","fresh",0.6375589805642108],["(cbrt.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (log.f64 base)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) 2))))","fresh",15.122421289073769],["(pow.f64 (log.f64 (pow.f64 base (/.f64 1 (log.f64 (hypot.f64 re im))))) -1)","fresh",0.6315745980015285]],"compiler":[[20,13],[12,9],[18,13],[12,9],[14,11],[25,17],[12,9],[26,18],[16,13],[25,16],[14,11],[20,13],[12,9],[18,13],[12,9],[14,11],[25,17],[12,9],[26,18],[16,13],[25,16],[14,11]],"count":[[335,11]],"kept":[{"done":[1,0],"fresh":[8,3],"new":[325,8],"picked":[1,0]}],"min-error":[0],"time":82.243896484375,"type":"prune"},{"compiler":[[69,28]],"locations":[["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))",0.38119125976844204,true],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))",0.38119125976844204,true],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)",0.485038769536884,true],["(pow.f64 (log.f64 base) -3)",0.6974565430532609,true]],"time":14.98193359375,"type":"localize"},{"count":[[4,108]],"series":[["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","base","-inf",0.2060546875],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","base","inf",0.183837890625],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","base","0",0.18505859375],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","im","-inf",0.449951171875],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","im","inf",0.44287109375],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","im","0",0.367919921875],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","re","-inf",0.445068359375],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","re","inf",0.44580078125],["(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))","re","0",0.402099609375],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","base","-inf",0.471923828125],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","base","inf",0.449951171875],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","base","0",0.412841796875],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","im","-inf",0.319091796875],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","im","inf",0.43603515625],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","im","0",0.39892578125],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","re","-inf",0.318115234375],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","re","inf",0.46923828125],["(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","re","0",0.455078125],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","im","-inf",0.406005859375],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","im","inf",0.445068359375],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","im","0",0.299072265625],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","re","-inf",0.39599609375],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","re","inf",0.41796875],["(pow.f64 (log.f64 (hypot.f64 re im)) 2)","re","0",0.34423828125],["(pow.f64 (log.f64 base) -3)","base","-inf",0.802001953125],["(pow.f64 (log.f64 base) -3)","base","inf",0.71484375],["(pow.f64 (log.f64 base) -3)","base","0",0.7861328125]],"time":12.091064453125,"type":"series"},{"count":[[4,97]],"egraph":[[2,2894,46,0.026135959],[1,264,46,0.004252209],[0,13,54,0.000356417]],"inputs":[["(pow.f64 (log.f64 base) -3)","(pow.f64 (log.f64 (hypot.f64 re im)) 2)","(*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))","(*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log.f64 base) -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 base) -3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 base) -3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log.f64 base) -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 base) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -1) (cbrt.f64 (pow.f64 (log.f64 base) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 base) -6)) (pow.f64 (log.f64 base) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 base) -3/2) (pow.f64 (log.f64 base) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 base)) -6) (pow.f64 (log.f64 base) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 base) -6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log.f64 base) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 base) -9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -3 (log.f64 (log.f64 base))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -3 (log.f64 (log.f64 base))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log.f64 base) -9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 base))) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log.f64 base) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -3/2 (log.f64 (log.f64 base))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 base)) 1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 -3 (log.f64 (log.f64 base))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 base)) -3/2) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log.f64 (hypot.f64 re im)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (hypot.f64 re im)) (log.f64 (hypot.f64 re im)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 (hypot.f64 re im)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 4) (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 (hypot.f64 re im)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (sqrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 5) (cbrt.f64 (log.f64 (hypot.f64 re im))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (log.f64 (hypot.f64 re im)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 (hypot.f64 re im)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 (hypot.f64 re im))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (log.f64 (hypot.f64 re im)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))) (log.f64 (sqrt.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) -6)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 base) -1) (cbrt.f64 (log.f64 (hypot.f64 re im)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 base) -3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))) 2)) (cbrt.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))) (sqrt.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (pow.f64 (log.f64 base) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (log.f64 base) -1) (cbrt.f64 (log.f64 (hypot.f64 re im))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (log.f64 base) -3/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (hypot.f64 re im) (pow.f64 (log.f64 base) -3)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (log.f64 base) -3)) (pow.f64 (log.f64 (hypot.f64 re im)) 3))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (log.f64 base) -3)) (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (log.f64 base) -3)) (pow.f64 (log.f64 (hypot.f64 re im)) 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (log.f64 base) -3)) (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 6) (pow.f64 (log.f64 base) -6)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) -3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1))))) 2)) (cbrt.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)))))) (sqrt.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 6) (pow.f64 (log.f64 base) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (log.f64 base) -3)) (pow.f64 (log.f64 (hypot.f64 re im)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)) 9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) -3/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -1)))) 1) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",24],["egg-rr",24],["egg-rr",25]],"stop":[["node limit",1]],"time":52.912109375,"type":"rewrite"},{"count":[[205,249]],"egraph":[[1,1772,5982,0.014104750000000001],[0,503,6506,0.002500125]],"inputs":[["(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(pow.f64 (log.f64 im) 2)","(+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (pow.f64 (log.f64 im) 2))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (pow.f64 (log.f64 im) 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (+.f64 (pow.f64 (log.f64 im) 2) (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (pow.f64 re 6)))))","(pow.f64 (log.f64 (/.f64 1 re)) 2)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (pow.f64 (log.f64 (/.f64 1 re)) 2))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))) (pow.f64 re 6))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (+.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(pow.f64 (log.f64 (/.f64 -1 re)) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))) (pow.f64 re 6))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(pow.f64 (log.f64 re) 2)","(+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4)) (+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4)) (+.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6)))) (pow.f64 im 6)) (+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2))))","(pow.f64 (log.f64 (/.f64 1 im)) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))) (pow.f64 im 6))) (+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))) (*.f64 -1/720 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6)))))))))","(pow.f64 (log.f64 (/.f64 -1 im)) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))))))","(/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (/.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))))))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))))))))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 1 (pow.f64 (log.f64 base) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 -1 (pow.f64 (log.f64 (/.f64 1 base)) 3))","(/.f64 -1 (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 1 (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(pow.f64 (log.f64 im) 2)","(+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (pow.f64 (log.f64 im) 2))","(+.f64 (pow.f64 (log.f64 im) 2) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (log.f64 im))))","(fma.f64 (log.f64 im) (log.f64 im) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (log.f64 im)))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (pow.f64 (log.f64 im) 2)))","(fma.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4) (+.f64 (pow.f64 (log.f64 im) 2) (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (log.f64 im)))))","(+.f64 (fma.f64 (fma.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (/.f64 1/4 (pow.f64 im 4))) (pow.f64 re 4) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (log.f64 im))) (pow.f64 (log.f64 im) 2))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4)) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 im)) (pow.f64 im 2)) (+.f64 (pow.f64 (log.f64 im) 2) (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (pow.f64 re 6)))))","(fma.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (pow.f64 re 4) (+.f64 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (log.f64 im))) (+.f64 (pow.f64 (log.f64 im) 2) (*.f64 (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (neg.f64 (/.f64 1/4 (pow.f64 im 6)))) (pow.f64 re 6)))))","(+.f64 (fma.f64 (fma.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (/.f64 1/4 (pow.f64 im 4))) (pow.f64 re 4) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (log.f64 im))) (fma.f64 (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (/.f64 -1/4 (pow.f64 im 6))) (pow.f64 re 6) (pow.f64 (log.f64 im) 2)))","(pow.f64 (log.f64 (/.f64 1 re)) 2)","(pow.f64 (neg.f64 (log.f64 re)) 2)","(pow.f64 (log.f64 re) 2)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (pow.f64 (log.f64 (/.f64 1 re)) 2))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (*.f64 re re) (*.f64 im im))) (pow.f64 (neg.f64 (log.f64 re)) 2))","(-.f64 (pow.f64 (log.f64 re) 2) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (neg.f64 (log.f64 re)) re)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (*.f64 re re) (*.f64 im im))) (+.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (*.f64 1/2 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))","(+.f64 (-.f64 (pow.f64 (log.f64 re) 2) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (neg.f64 (log.f64 re)) re))) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (*.f64 1/2 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re)))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))) (pow.f64 re 6))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (+.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/360 (/.f64 (*.f64 (pow.f64 im 6) 120) (/.f64 (pow.f64 re 6) (neg.f64 (log.f64 re)))) (fma.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (+.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (*.f64 1/2 (/.f64 (neg.f64 (log.f64 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))))","(-.f64 (fma.f64 -1/360 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (neg.f64 (log.f64 re))) (+.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (pow.f64 (log.f64 re) 2)) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (*.f64 1/2 (/.f64 (pow.f64 im 4) (/.f64 (pow.f64 re 4) (neg.f64 (log.f64 re)))))))) (*.f64 (/.f64 (*.f64 im im) re) (/.f64 (neg.f64 (log.f64 re)) re)))","(pow.f64 (log.f64 (/.f64 -1 re)) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (*.f64 re re) (*.f64 im im)))))","(-.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 re re)) (*.f64 im im)))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (*.f64 re re) (*.f64 im im))) (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (-.f64 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) 1/2) (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 re re)) (*.f64 im im)))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 2)) (pow.f64 re 2))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))) (pow.f64 re 6))) (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (pow.f64 re 4))))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (+.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (*.f64 re re) (*.f64 im im))) (fma.f64 -1/360 (/.f64 (*.f64 (pow.f64 im 6) 120) (/.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 re)))) (*.f64 1/2 (/.f64 (log.f64 (/.f64 -1 re)) (/.f64 (pow.f64 re 4) (pow.f64 im 4)))))))))","(+.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (fma.f64 1/4 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4)) (pow.f64 im 4)) (*.f64 -1/360 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 re 6)) (log.f64 (/.f64 -1 re))))) (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (*.f64 re re)) (*.f64 im im)))))","(pow.f64 (log.f64 re) 2)","(pow.f64 (neg.f64 (log.f64 re)) 2)","(+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2))","(+.f64 (pow.f64 (log.f64 re) 2) (/.f64 (log.f64 re) (/.f64 (*.f64 re re) (*.f64 im im))))","(+.f64 (pow.f64 (log.f64 re) 2) (*.f64 (/.f64 (log.f64 re) (*.f64 re re)) (*.f64 im im)))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4)) (+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2)))","(fma.f64 (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4) (+.f64 (pow.f64 (log.f64 re) 2) (/.f64 (log.f64 re) (/.f64 (*.f64 re re) (*.f64 im im)))))","(+.f64 (fma.f64 (pow.f64 im 4) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4))) (*.f64 (/.f64 (log.f64 re) (*.f64 re re)) (*.f64 im im))) (pow.f64 (log.f64 re) 2))","(+.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4)) (+.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6)))) (pow.f64 im 6)) (+.f64 (/.f64 (*.f64 (log.f64 re) (pow.f64 im 2)) (pow.f64 re 2)) (pow.f64 (log.f64 re) 2))))","(fma.f64 (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (pow.f64 im 4) (fma.f64 (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (neg.f64 (/.f64 1/4 (pow.f64 re 6)))) (pow.f64 im 6) (+.f64 (pow.f64 (log.f64 re) 2) (/.f64 (log.f64 re) (/.f64 (*.f64 re re) (*.f64 im im))))))","(fma.f64 (pow.f64 im 4) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4))) (+.f64 (fma.f64 (pow.f64 im 6) (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (/.f64 -1/4 (pow.f64 re 6))) (*.f64 (/.f64 (log.f64 re) (*.f64 re re)) (*.f64 im im))) (pow.f64 (log.f64 re) 2)))","(pow.f64 (log.f64 (/.f64 1 im)) 2)","(pow.f64 (log.f64 im) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))))","(+.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (neg.f64 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (neg.f64 (log.f64 im))))))","(-.f64 (pow.f64 (log.f64 im) 2) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (neg.f64 (log.f64 im))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))))))","(fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (+.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (fma.f64 1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (neg.f64 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (neg.f64 (log.f64 im))))))))","(+.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (pow.f64 (log.f64 im) 2)) (-.f64 (*.f64 1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im))))) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (neg.f64 (log.f64 im)))))","(+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (*.f64 -1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))) (pow.f64 im 6))) (+.f64 (pow.f64 (log.f64 (/.f64 1 im)) 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (pow.f64 im 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 re 2) (log.f64 (/.f64 1 im))) (pow.f64 im 2))) (*.f64 -1/720 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6)))))))))","(fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (fma.f64 -1/720 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) 120))) (+.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (fma.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (fma.f64 1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (fma.f64 -1 (/.f64 (*.f64 re re) (/.f64 (*.f64 im im) (neg.f64 (log.f64 im)))) (*.f64 -1/720 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) 120))))))))))","(fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (+.f64 (fma.f64 -1/720 (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 6)) (*.f64 (pow.f64 re 6) 120)) (pow.f64 (log.f64 im) 2)) (fma.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (fma.f64 1/2 (/.f64 (pow.f64 re 4) (/.f64 (pow.f64 im 4) (neg.f64 (log.f64 im)))) (-.f64 (/.f64 (*.f64 (pow.f64 re 6) (*.f64 120 (neg.f64 (log.f64 im)))) (/.f64 (pow.f64 im 6) -1/720)) (*.f64 (/.f64 re (/.f64 (*.f64 im im) re)) (neg.f64 (log.f64 im))))))))","(pow.f64 (log.f64 (/.f64 -1 im)) 2)","(+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))","(+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (*.f64 im im) (*.f64 re re)))))","(-.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (log.f64 (/.f64 -1 im)) im)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))))","(fma.f64 1/2 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (*.f64 im im) (*.f64 re re)))))))","(fma.f64 1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (pow.f64 re 4)) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (log.f64 (/.f64 -1 im)) im))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (pow.f64 im 4))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4))) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6))) (+.f64 (*.f64 -1/360 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (pow.f64 im 6))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 2)) (pow.f64 im 2))))))))","(fma.f64 1/2 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (+.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (fma.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (fma.f64 -1/360 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 re 6) 120))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (/.f64 (*.f64 im im) (*.f64 re re)))))))))","(fma.f64 1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (pow.f64 re 4)) (+.f64 (fma.f64 1/4 (/.f64 (pow.f64 re 4) (pow.f64 im 4)) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (*.f64 -1/360 (/.f64 (*.f64 (pow.f64 re 6) 120) (/.f64 (pow.f64 im 6) (log.f64 (/.f64 -1 im)))))) (*.f64 (/.f64 (*.f64 re re) im) (/.f64 (log.f64 (/.f64 -1 im)) im)))))","(/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))","(fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))))","(fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))))","(fma.f64 1/6 (/.f64 (pow.f64 re 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3))) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (-.f64 (*.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3))) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (-.f64 (fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3)) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3)) (/.f64 120 (pow.f64 re 6))))) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 re))) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))))","(-.f64 (*.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3))) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re))))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3)))) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(fma.f64 -1 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3)) (*.f64 1/720 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3)) (/.f64 120 (pow.f64 re 6)))))) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)))","(/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)))","(fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re))))) (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (fma.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3))))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 1/2 (/.f64 (pow.f64 im 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))))))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 1/6 (/.f64 (pow.f64 im 6) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 im im) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))))))","(+.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 1/6 (/.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 1/2 (/.f64 (*.f64 (/.f64 im re) (/.f64 im re)) (pow.f64 (log.f64 base) 3))))))","(*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (neg.f64 (log.f64 im))) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im)))))","(-.f64 (*.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im)))) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (*.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))))) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (log.f64 (/.f64 1 im)) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))","(fma.f64 -1 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (/.f64 (*.f64 1/720 (*.f64 (pow.f64 re 6) 120)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (*.f64 1/720 (/.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 base) 3))))) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)))","(*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))","(fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))","(fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (/.f64 (neg.f64 (log.f64 (/.f64 -1 im))) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 re 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 1/720 (/.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (*.f64 -1 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 re re) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (fma.f64 1/720 (/.f64 (*.f64 (pow.f64 re 6) 120) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (neg.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))))","(fma.f64 -1/4 (/.f64 (pow.f64 re 4) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (*.f64 1/720 (/.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 base) 3)))) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3))))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (log.f64 base) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (log.f64 (hypot.f64 im re))) (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (log.f64 (hypot.f64 im re)) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))","(+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))))))","(fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2))))","(fma.f64 (+.f64 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (/.f64 (pow.f64 (log.f64 base) 3) (log.f64 im))) (fma.f64 1/2 (/.f64 (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4)) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im)))))))","(fma.f64 (pow.f64 re 4) (+.f64 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (/.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (/.f64 -1/4 (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)))))) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6))) (*.f64 1/4 (/.f64 1 (pow.f64 im 6)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))) (pow.f64 re 6)) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 im 4))) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (log.f64 im)) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4)) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (+.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 1/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))) (pow.f64 re 2)))))","(fma.f64 (+.f64 (/.f64 (*.f64 (log.f64 im) (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (neg.f64 (/.f64 1/4 (pow.f64 im 6))))) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (*.f64 1/6 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))))))) (pow.f64 re 6) (fma.f64 (+.f64 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 im 4)) (*.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)))) (/.f64 (pow.f64 (log.f64 base) 3) (log.f64 im))) (fma.f64 1/2 (/.f64 (/.f64 (log.f64 im) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4)) (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))) (pow.f64 re 4) (+.f64 (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)) (*.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))))))))","(fma.f64 (pow.f64 re 6) (+.f64 (*.f64 (/.f64 (fma.f64 1/3 (/.f64 (log.f64 im) (pow.f64 im 6)) (/.f64 -1/4 (pow.f64 im 6))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 -1/4 (/.f64 (/.f64 (log.f64 im) (pow.f64 im 6)) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (/.f64 1/4 (pow.f64 im 4))) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (/.f64 (/.f64 (*.f64 1/6 (pow.f64 (log.f64 im) 2)) (pow.f64 (log.f64 base) 3)) (pow.f64 im 6))))) (fma.f64 (pow.f64 re 4) (+.f64 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 im) (pow.f64 im 4)) (/.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (log.f64 im)) (fma.f64 1/2 (/.f64 (log.f64 im) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (/.f64 -1/4 (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)))))) (fma.f64 (*.f64 re re) (*.f64 3/2 (/.f64 (/.f64 (pow.f64 (log.f64 im) 2) (*.f64 im im)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 im) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 re)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))))))","(fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))))))))","(fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 im 4))) (fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 1/4 (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (neg.f64 (log.f64 re)))) (+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (*.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4)))))))))","(fma.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 (log.f64 re) 2))) (-.f64 (fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)))) (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (pow.f64 re 4)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 1 re))))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (*.f64 -1/360 (*.f64 (pow.f64 im 6) 120)) (neg.f64 (log.f64 re)))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)) (neg.f64 (log.f64 re)))) (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 re 6))) (fma.f64 -1/4 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 im 4))) (fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 1/4 (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (neg.f64 (log.f64 re)))) (+.f64 (*.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/4 (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (*.f64 1/2 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (neg.f64 (log.f64 re))) (*.f64 1/4 (pow.f64 im 4))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)) (*.f64 im im)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))) (fma.f64 1/720 (*.f64 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3)) (/.f64 120 (pow.f64 re 6))) (pow.f64 (log.f64 re) 2)) (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 (log.f64 re) 2))) (-.f64 (fma.f64 (/.f64 (pow.f64 (log.f64 re) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (-.f64 (fma.f64 1/4 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) 1/2) (/.f64 (pow.f64 (log.f64 base) 3) (/.f64 (*.f64 im im) (pow.f64 re 6))))) (/.f64 (pow.f64 (neg.f64 (log.f64 re)) 3) (pow.f64 (log.f64 base) 3)))) (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 im 4) (+.f64 (*.f64 1/2 (neg.f64 (log.f64 re))) 1/4)) (pow.f64 re 4))))))) (*.f64 (/.f64 (neg.f64 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 (pow.f64 im 6) -1/4 (*.f64 -1/360 (*.f64 (pow.f64 im 6) (*.f64 120 (neg.f64 (log.f64 re)))))) (pow.f64 re 6)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))))","(-.f64 (*.f64 3/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))))))","(fma.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))) (-.f64 (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2)))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4)))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 im 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 re)) (pow.f64 im 4))) (*.f64 1/4 (pow.f64 im 4))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 im 6)) (*.f64 -1/360 (*.f64 (+.f64 (*.f64 90 (pow.f64 im 6)) (*.f64 30 (pow.f64 im 6))) (log.f64 (/.f64 -1 re))))) (log.f64 (/.f64 -1 re))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (pow.f64 re 6))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 4) (pow.f64 re 4))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 im im) (*.f64 re re))) (fma.f64 1/4 (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 im 6) (pow.f64 re 6))) (fma.f64 1/720 (/.f64 (*.f64 (*.f64 (pow.f64 im 6) 120) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 im 4) (log.f64 (/.f64 -1 re))) (*.f64 1/4 (pow.f64 im 4))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4))) (neg.f64 (/.f64 (fma.f64 -1/4 (pow.f64 im 6) (*.f64 (*.f64 -1/360 (*.f64 (pow.f64 im 6) 120)) (log.f64 (/.f64 -1 re)))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)) (log.f64 (/.f64 -1 re))))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (*.f64 im im)) (-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 im 4) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)) (pow.f64 (log.f64 (/.f64 -1 re)) 2))) (fma.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 im 4) (pow.f64 re 4)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 2) (pow.f64 (log.f64 base) 3)) (*.f64 (/.f64 im re) (/.f64 im re))) (fma.f64 1/4 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 re 6)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3))) (fma.f64 1/720 (*.f64 (*.f64 (/.f64 (pow.f64 im 6) (pow.f64 (log.f64 base) 3)) (/.f64 120 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 -1 re)) 2)) (neg.f64 (fma.f64 (/.f64 (*.f64 (pow.f64 im 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 re))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 re 4)) (*.f64 (/.f64 (log.f64 (/.f64 -1 re)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 (pow.f64 im 6) -1/4 (*.f64 (*.f64 (pow.f64 im 6) 120) (*.f64 (log.f64 (/.f64 -1 re)) -1/360))) (pow.f64 re 6))))))))))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 re)) 3) (pow.f64 (log.f64 base) 3))))","(/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(fma.f64 (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(fma.f64 (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (/.f64 (*.f64 (log.f64 re) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4) (fma.f64 (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(fma.f64 (pow.f64 im 4) (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4)))) (/.f64 (*.f64 (log.f64 re) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6)))) (+.f64 (/.f64 (*.f64 (log.f64 re) (-.f64 (*.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6))) (*.f64 1/4 (/.f64 1 (pow.f64 re 6))))) (pow.f64 (log.f64 base) 3)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 re 4))) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))))))) (pow.f64 im 6)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 2)))) (pow.f64 im 2)) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (/.f64 (*.f64 (log.f64 re) (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4))))) (pow.f64 (log.f64 base) 3)))) (pow.f64 im 4) (fma.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (+.f64 (/.f64 (log.f64 re) (/.f64 (pow.f64 (log.f64 base) 3) (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (neg.f64 (/.f64 1/4 (pow.f64 re 6)))))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/4 (pow.f64 re 4)) (*.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)))) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re))) (*.f64 -1/4 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))))))) (pow.f64 im 6) (fma.f64 (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (*.f64 im im) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 (pow.f64 im 4) (fma.f64 1/2 (/.f64 (log.f64 re) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (fma.f64 -1/4 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 4))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4)))))) (fma.f64 (pow.f64 im 6) (+.f64 (fma.f64 1/6 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 re 6))) (*.f64 (/.f64 (log.f64 re) (pow.f64 (log.f64 base) 3)) (fma.f64 1/3 (/.f64 (log.f64 re) (pow.f64 re 6)) (/.f64 -1/4 (pow.f64 re 6))))) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 (log.f64 re) (pow.f64 re 4)) (/.f64 1/4 (pow.f64 re 4))) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re))) (/.f64 (/.f64 (*.f64 -1/4 (log.f64 re)) (pow.f64 (log.f64 base) 3)) (pow.f64 re 6)))) (fma.f64 (*.f64 im im) (*.f64 3/2 (/.f64 (pow.f64 (log.f64 re) 2) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 re re)))) (/.f64 (pow.f64 (log.f64 re) 3) (pow.f64 (log.f64 base) 3)))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (neg.f64 (log.f64 im)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (+.f64 (neg.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im)))))","(-.f64 (*.f64 3/2 (*.f64 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (pow.f64 (log.f64 im) 2))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))))))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 4))) (+.f64 (neg.f64 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))))))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (+.f64 (-.f64 (*.f64 3/2 (*.f64 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (pow.f64 (log.f64 im) 2))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4)))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 (pow.f64 re 4) (*.f64 (neg.f64 (log.f64 im)) 1/2))) (pow.f64 im 4))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))))) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im)))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (/.f64 (*.f64 (pow.f64 re 2) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (*.f64 -1 (/.f64 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (/.f64 1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))))) (*.f64 -1/720 (*.f64 (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6))) (log.f64 (/.f64 1 im))))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))))))))))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (neg.f64 (log.f64 im)))))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (+.f64 (*.f64 (/.f64 (*.f64 re re) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (*.f64 im im))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 6))) (fma.f64 -1 (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4))) (fma.f64 1/4 (*.f64 (/.f64 (pow.f64 re 6) (pow.f64 (log.f64 base) 3)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 6))) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 2) (pow.f64 im 4))) (neg.f64 (/.f64 (neg.f64 (log.f64 im)) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)) (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/720 (+.f64 (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120)) (*.f64 (neg.f64 (log.f64 im)) (*.f64 (pow.f64 re 6) 120)))))))))))))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 re (/.f64 (pow.f64 im 6) re)) (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 (pow.f64 re 4) (*.f64 (neg.f64 (log.f64 im)) 1/2))) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 3/2 (*.f64 (*.f64 (/.f64 re (pow.f64 (log.f64 base) 3)) (/.f64 re (*.f64 im im))) (pow.f64 (log.f64 im) 2))) (fma.f64 1/720 (*.f64 (/.f64 (/.f64 (pow.f64 re 6) (/.f64 (pow.f64 im 6) 120)) (pow.f64 (log.f64 base) 3)) (pow.f64 (log.f64 im) 2)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (-.f64 (fma.f64 1/4 (*.f64 (/.f64 (pow.f64 re 6) (pow.f64 im 6)) (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3))) (*.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 im) 2) (pow.f64 im 4))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 (pow.f64 re 6) -1/4 (*.f64 (*.f64 (pow.f64 re 6) (*.f64 120 (neg.f64 (log.f64 im)))) -1/360)) (pow.f64 im 6))))) (/.f64 (pow.f64 (neg.f64 (log.f64 im)) 3) (pow.f64 (log.f64 base) 3)))))) (*.f64 (/.f64 (neg.f64 (log.f64 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 (pow.f64 re 4) (*.f64 (neg.f64 (log.f64 im)) 1/2))) (pow.f64 im 4))))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3)) (pow.f64 (log.f64 base) 3))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im)))))","(fma.f64 1/2 (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3)) (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))))))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)) (log.f64 (/.f64 -1 im)))) (+.f64 (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im)))) (*.f64 -1/4 (/.f64 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4)))))))","(fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 1/2 (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3)) (-.f64 (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 4))) (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 im 4))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 1/720 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/4 (pow.f64 re 4)) (*.f64 1/2 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 re 6)) (*.f64 -1/360 (*.f64 (log.f64 (/.f64 -1 im)) (+.f64 (*.f64 30 (pow.f64 re 6)) (*.f64 90 (pow.f64 re 6)))))) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 4)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)))) (+.f64 (*.f64 1/4 (/.f64 (*.f64 (log.f64 (/.f64 -1 im)) (pow.f64 re 6)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)))) (/.f64 (*.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 re 2)) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 2))))))))))))","(fma.f64 1/2 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6)) (*.f64 re re))) (fma.f64 1/720 (*.f64 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 im 6))) (fma.f64 -1 (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))) (fma.f64 -1 (/.f64 (fma.f64 1/4 (pow.f64 re 4) (*.f64 1/2 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))))) (/.f64 (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4)) (log.f64 (/.f64 -1 im)))) (fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1/4 (pow.f64 re 6) (*.f64 -1/360 (*.f64 (*.f64 (pow.f64 re 6) 120) (log.f64 (/.f64 -1 im))))) (pow.f64 (log.f64 base) 3)) (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 6))) (fma.f64 -1/4 (/.f64 (/.f64 (*.f64 (pow.f64 re 4) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (pow.f64 (log.f64 base) 3)) (pow.f64 im 4)) (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 re 4) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 4))) (fma.f64 1/4 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 im))) (*.f64 (pow.f64 (log.f64 base) 3) (pow.f64 im 6))) (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 (pow.f64 (log.f64 base) 3) (*.f64 im im))))))))))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (*.f64 (/.f64 (pow.f64 (log.f64 base) 3) re) (/.f64 (pow.f64 im 6) re))) (fma.f64 1/720 (*.f64 (/.f64 (*.f64 (pow.f64 re 6) 120) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 6))) (-.f64 (fma.f64 1/2 (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3)) (-.f64 (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3)) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 2) (pow.f64 im 4))) (fma.f64 -1/2 (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 im 4)) (/.f64 (pow.f64 re 4) (pow.f64 (log.f64 base) 3))) (fma.f64 1/4 (/.f64 (/.f64 (*.f64 (pow.f64 re 6) (log.f64 (/.f64 -1 im))) (pow.f64 im 6)) (pow.f64 (log.f64 base) 3)) (/.f64 (/.f64 (*.f64 (*.f64 re re) (pow.f64 (log.f64 (/.f64 -1 im)) 2)) (*.f64 im im)) (pow.f64 (log.f64 base) 3))))) (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (fma.f64 (pow.f64 re 6) -1/4 (*.f64 -1/360 (*.f64 (pow.f64 re 6) (*.f64 120 (log.f64 (/.f64 -1 im)))))) (pow.f64 im 6)))) (*.f64 (/.f64 (log.f64 (/.f64 -1 im)) (pow.f64 (log.f64 base) 3)) (/.f64 (*.f64 (pow.f64 re 4) (+.f64 1/4 (*.f64 1/2 (log.f64 (/.f64 -1 im))))) (pow.f64 im 4))))) (/.f64 (pow.f64 (log.f64 (/.f64 -1 im)) 3) (pow.f64 (log.f64 base) 3)))))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (log.f64 base) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (log.f64 base) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(*.f64 -1 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (log.f64 (/.f64 1 base)) 3)))","(neg.f64 (/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (neg.f64 (log.f64 base)) 3)))","(/.f64 (neg.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3)) (pow.f64 (neg.f64 (log.f64 base)) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (pow.f64 re 2) (pow.f64 im 2)))) 3) (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) 3) (pow.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 base)))) 3))","(/.f64 (pow.f64 (log.f64 (hypot.f64 im re)) 3) (pow.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 base))) 3))"]],"stop":[["node limit",1]],"time":60.781005859375,"type":"simplify"},{"compiler":[[10850,6907]],"time":109.83203125,"type":"eval"},{"alts":[["(cbrt.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))))","done",0.3818550293053261],["(log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))","fresh",1.784645073744095],["(cbrt.f64 (*.f64 (pow.f64 (log.f64 base) -2) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (log.f64 base))))","fresh",0.4248237793053261],["(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","fresh",0.6511388809025879],["(/.f64 (/.f64 1 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im))))","fresh",0.5120888183790941],["(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (*.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (*.f64 (cbrt.f64 (log.f64 base)) (pow.f64 (log.f64 base) 2)))))","fresh",0.4030075195368841],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))","fresh",1.0677878203664646],["(pow.f64 (-.f64 (+.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 1) -1)","fresh",0.6375589805642108],["(cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 5) (cbrt.f64 (log.f64 (hypot.f64 re im)))) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))))","fresh",0.5691376953688405],["(pow.f64 (log.f64 (pow.f64 base (/.f64 1 (log.f64 (hypot.f64 re im))))) -1)","fresh",0.6315745980015285]],"compiler":[[20,13],[12,9],[18,13],[12,9],[14,11],[25,17],[26,18],[16,13],[27,15],[14,11]],"count":[[260,10]],"kept":[{"done":[0,0],"fresh":[10,8],"new":[249,1],"picked":[1,1]}],"min-error":[0],"time":44.247802734375,"type":"prune"},{"accuracy":[0.37728500976844204],"baseline":[0.37728500976844204],"branch":[["re",0.37728500976844204,1],["im",0.37728500976844204,1],["base",0.37728500976844204,1],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))",0.37728500976844204,1],["(log.f64 base)",0.37728500976844204,1]],"compiler":[[4,3],[4,3],[4,3],[31,20],[5,4],[452,184]],"count":[[30,1]],"inputs":[["(cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 5) (cbrt.f64 (log.f64 (hypot.f64 re im)))) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 2) (*.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (log.f64 base) -3))))","(log1p.f64 (expm1.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 base) -2) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (log.f64 base))))","(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (*.f64 (pow.f64 (cbrt.f64 (log.f64 base)) 2) (*.f64 (cbrt.f64 (log.f64 base)) (pow.f64 (log.f64 base) 2)))))","(*.f64 (log.f64 (hypot.f64 re im)) (/.f64 1 (log.f64 base)))","(+.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))))","(cbrt.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (log.f64 base)) (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3/2) (pow.f64 (log.f64 base) 2))))","(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","(pow.f64 (*.f64 (log.f64 base) (/.f64 1 (log.f64 (hypot.f64 re im)))) -1)","(/.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 2)) (cbrt.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))))","(/.f64 (/.f64 1 (log.f64 base)) (/.f64 1 (log.f64 (hypot.f64 re im))))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))","(pow.f64 (log.f64 (pow.f64 base (/.f64 1 (log.f64 (hypot.f64 re im))))) -1)","(pow.f64 (-.f64 (+.f64 1 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im)))) 1) -1)","(/.f64 (/.f64 (log.f64 (hypot.f64 re im)) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (log.f64 base)))","(/.f64 (log.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2)) (cbrt.f64 (log.f64 (hypot.f64 re im))))) (log.f64 base))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (log.f64 (hypot.f64 re im)) (cbrt.f64 (log.f64 base))))","(/.f64 (log.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (hypot.f64 re im)))) (sqrt.f64 (log.f64 (hypot.f64 re im))))) (log.f64 base))","(cbrt.f64 (/.f64 (pow.f64 (log.f64 (hypot.f64 re im)) 3) (pow.f64 (log.f64 base) 3)))","(pow.f64 (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 3)","(pow.f64 (pow.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base)) 3) 1/3)","(-.f64 (+.f64 1 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))) 1)","(*.f64 (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (/.f64 (sqrt.f64 (log.f64 (hypot.f64 re im))) (cbrt.f64 (log.f64 base))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (log.f64 (hypot.f64 re im))) 2) (pow.f64 (cbrt.f64 (log.f64 base)) 2)) (cbrt.f64 (/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))))","(log.f64 (pow.f64 (hypot.f64 re im) (/.f64 1 (log.f64 base))))","(pow.f64 (/.f64 (log.f64 base) (log.f64 (hypot.f64 re im))) -1)","(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))","(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))"]],"link":["."],"name":["math.log/2 on complex, real part"],"oracle":[52.90557237270141],"outputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))"]],"time":51.2880859375,"times":[["re",10.216064453125],["im",9.07080078125],["base",9.136962890625],["(/.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (+.f64 (*.f64 re re) (*.f64 im im)))) (log.f64 base)) (*.f64 (atan2.f64 im re) 0)) (+.f64 (*.f64 (log.f64 base) (log.f64 base)) (*.f64 0 0)))",6.2060546875],["(log.f64 base)",9.276123046875]],"type":"regimes"},{"compiler":[[10,7]],"egraph":[[0,8,11,1.3708e-5]],"inputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (log.f64 (hypot.f64 re im)) (log.f64 base))"]],"stop":[["fuel",1],["saturated",1]],"time":8.238037109375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[10,7],[10,7],[10,7]],"remove-preprocessing":[["(sort re im)"]],"time":8.842041015625,"type":"end"}]