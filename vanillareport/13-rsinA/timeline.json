[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.2047778642497633,0.7937580071395587,0.0014641286106780171],[11,0.1911260066331124,0.8074098647562096,0.0014641286106780171],[10,0.16382229139981064,0.8347135799895113,0.0014641286106780171],[9,0.1404191069141234,0.8581167644751986,0.0014641286106780171],[8,0.09361273794274894,0.904923133446573,0.0014641286106780171],[7,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":195.4609375,"type":"analyze"},{"outcomes":[["body",512,"invalid",0.169189453125,1],["body",512,"valid",220.84423828125,1399],["body",1024,"valid",986.9453125,3654],["body",2048,"valid",138.8544921875,222],["body",256,"valid",233.39794921875,2981]],"time":1589.401123046875,"type":"sample"},{"compiler":[[12,8]],"egraph":[[0,3,3,1.666e-6],[4,69,56,0.000629209],[3,65,56,0.000489417],[2,53,56,0.000354251],[1,39,56,0.000212584],[0,23,56,0.000102417]],"inputs":[["0","1","2"],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 a (sin.f64 b)) (cos.f64 (+.f64 r b)))","(/.f64 (*.f64 b (sin.f64 r)) (cos.f64 (+.f64 a r)))","(/.f64 (*.f64 r (sin.f64 a)) (cos.f64 (+.f64 b a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","(/.f64 r (/.f64 (cos.f64 (+.f64 b a)) (sin.f64 b)))","(*.f64 (/.f64 r (cos.f64 (+.f64 b a))) (sin.f64 b))","(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 a (sin.f64 b)) (cos.f64 (+.f64 r b)))","(/.f64 a (/.f64 (cos.f64 (+.f64 r b)) (sin.f64 b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 r b)) a))","(/.f64 (*.f64 b (sin.f64 r)) (cos.f64 (+.f64 a r)))","(/.f64 b (/.f64 (cos.f64 (+.f64 r a)) (sin.f64 r)))","(/.f64 (sin.f64 r) (/.f64 (cos.f64 (+.f64 r a)) b))","(/.f64 (*.f64 r (sin.f64 a)) (cos.f64 (+.f64 b a)))","(*.f64 (/.f64 (sin.f64 a) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 a) (cos.f64 (+.f64 b a))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.8818359375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,21,14,0.000258084],[3,20,14,0.000204834],[2,17,14,0.000142709],[1,13,14,9.270900000000001e-5],[0,9,14,4.6792e-5]],"inputs":[["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 b a)))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))"]],"stop":[["saturated",1]],"time":10.47021484375,"type":"simplify"},{"compiler":[[21,12]],"time":0.7578125,"type":"eval"},{"alts":[["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","fresh",14.165379991000137],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","next",14.157567491000137]],"compiler":[[12,8],[12,8],[12,8],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[14.082684971463252],"time":1.31103515625,"type":"prune"},{"compiler":[[28,8]],"locations":[["(sin.f64 b)",0.01953125,true],["(*.f64 r (sin.f64 b))",0.15234375,true],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))",0.23046875,true],["(cos.f64 (+.f64 a b))",4.620822046780408,true]],"time":7.26513671875,"type":"localize"},{"count":[[4,80]],"series":[["(sin.f64 b)","b","-inf",0.1611328125],["(sin.f64 b)","b","inf",0.132080078125],["(sin.f64 b)","b","0",0.184814453125],["(*.f64 r (sin.f64 b))","b","-inf",0.1669921875],["(*.f64 r (sin.f64 b))","b","inf",0.14404296875],["(*.f64 r (sin.f64 b))","b","0",0.316162109375],["(*.f64 r (sin.f64 b))","r","-inf",0.263916015625],["(*.f64 r (sin.f64 b))","r","inf",0.30712890625],["(*.f64 r (sin.f64 b))","r","0",0.140869140625],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","a","-inf",0.419921875],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","a","inf",0.677978515625],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","a","0",0.77294921875],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","b","-inf",0.56103515625],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","b","inf",0.824951171875],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","b","0",0.787841796875],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","r","-inf",0.337158203125],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","r","inf",0.448974609375],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","r","0",1.16796875],["(cos.f64 (+.f64 a b))","b","-inf",0.2080078125],["(cos.f64 (+.f64 a b))","b","inf",0.162109375],["(cos.f64 (+.f64 a b))","b","0",0.3759765625],["(cos.f64 (+.f64 a b))","a","-inf",0.184814453125],["(cos.f64 (+.f64 a b))","a","inf",0.2099609375],["(cos.f64 (+.f64 a b))","a","0",0.440185546875]],"time":9.699951171875,"type":"series"},{"count":[[4,161]],"egraph":[[2,2940,29,0.025798375],[1,200,29,0.003667167],[0,9,29,0.000213125]],"inputs":[["(cos.f64 (+.f64 a b))","(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))","(*.f64 r (sin.f64 b))","(sin.f64 b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (+.f64 a b)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (+.f64 a b)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 a a) (-.f64 a b))) (cos.f64 (/.f64 (*.f64 b b) (-.f64 a b)))) (*.f64 (sin.f64 (/.f64 (*.f64 a a) (-.f64 a b))) (sin.f64 (/.f64 (*.f64 b b) (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (+.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2)) (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 a b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 1 (/.f64 (cos.f64 (+.f64 a b)) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (*.f64 r (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (sin.f64 b)) (/.f64 1 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 2) (*.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) -2)) (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) (*.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 r (neg.f64 (sin.f64 b))) (/.f64 1 (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 a b))) (*.f64 r (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r 1) (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) 1) (/.f64 r (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 2) 1) (/.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) 1) (/.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sin.f64 b) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) -2) (/.f64 (*.f64 r (sin.f64 b)) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 2) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 a b)) -1/2) (/.f64 (*.f64 r (sin.f64 b)) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 2) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 r (sin.f64 b)) 3) (pow.f64 (cos.f64 (+.f64 a b)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 r (sin.f64 b)) (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 r (sin.f64 b))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 r (sin.f64 b)) 3) (pow.f64 (cos.f64 (+.f64 a b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 r (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 r (sin.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 r (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 r (sin.f64 b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 r (sin.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 r (sin.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 r (sin.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 r (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 r (sin.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 r (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 r (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 r (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 r (sin.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 b))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 b))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 b))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 b)) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (cbrt.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 b)) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",17],["egg-rr",49],["egg-rr",72]],"stop":[["node limit",1]],"time":59.050048828125,"type":"rewrite"},{"count":[[241,214]],"egraph":[[3,7890,1267,0.030635666],[2,1591,1276,0.014237625],[1,480,1325,0.0033188749999999998],[0,150,1399,0.000778291]],"inputs":[["(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 r b)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (*.f64 r b))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 b 7) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r)))))","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","b","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) b)","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) b))","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) (+.f64 b (*.f64 -1/5040 (pow.f64 b 7)))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)) (*.f64 (sin.f64 b) a))","(-.f64 (*.f64 (cos.f64 b) (fma.f64 -1/2 (*.f64 a a) 1)) (*.f64 (sin.f64 b) a))","(fma.f64 (fma.f64 -1/2 (*.f64 a a) 1) (cos.f64 b) (*.f64 a (sin.f64 (neg.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))) (*.f64 (sin.f64 b) a))","(fma.f64 (fma.f64 -1/2 (*.f64 a a) 1) (cos.f64 b) (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 b (sin.f64 a))))","(-.f64 (cos.f64 a) (*.f64 b (sin.f64 a)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(+.f64 (-.f64 (cos.f64 a) (*.f64 b (sin.f64 a))) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 b (*.f64 -1/2 (cos.f64 a))) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(+.f64 (-.f64 (cos.f64 a) (*.f64 b (sin.f64 a))) (fma.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))) (*.f64 (pow.f64 b 3) (*.f64 1/6 (sin.f64 a)))))","(+.f64 (cos.f64 a) (fma.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))) (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 1/6 (pow.f64 b 3))))))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 b (neg.f64 a)))","(cos.f64 (+.f64 b a))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 b r) (cos.f64 a))","(*.f64 (/.f64 r (cos.f64 a)) b)","(*.f64 b (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (*.f64 (*.f64 b b) (*.f64 (sin.f64 a) r)) (pow.f64 (cos.f64 a) 2)))","(fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) (*.f64 b b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (/.f64 (*.f64 -1/6 r) (cos.f64 a)) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (/.f64 (*.f64 (*.f64 b b) (*.f64 (sin.f64 a) r)) (pow.f64 (cos.f64 a) 2)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) (*.f64 b b))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (fma.f64 (pow.f64 b 3) (-.f64 (/.f64 (*.f64 -1/6 r) (cos.f64 a)) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) (-.f64 (/.f64 (*.f64 -1/6 r) (cos.f64 a)) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))) (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) -1/3)) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (*.f64 b b) (*.f64 (sin.f64 a) r)) (pow.f64 (cos.f64 a) 2)) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) r) -1/3) (pow.f64 (cos.f64 a) 2)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 4))))","(-.f64 (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) (*.f64 b b)))) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) -1/3)) (*.f64 (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (/.f64 (sin.f64 a) (cos.f64 a)))) (pow.f64 b 4)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (*.f64 a r) (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (-.f64 (/.f64 (*.f64 a r) (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))))","(fma.f64 (*.f64 a a) (neg.f64 (fma.f64 -1/2 (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r)))) (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b)))))","(fma.f64 (*.f64 a a) (neg.f64 (-.f64 (*.f64 (/.f64 -1/2 (cos.f64 b)) (*.f64 (sin.f64 b) r)) (/.f64 r (pow.f64 (/.f64 (cos.f64 b) (sin.f64 b)) 3)))) (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))","(+.f64 (/.f64 (*.f64 a r) (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))) (-.f64 (-.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))) (*.f64 (pow.f64 a 3) (fma.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (-.f64 (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r))) (/.f64 (*.f64 r -1/3) (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))))) (fma.f64 -1/2 (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r)))))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (-.f64 (*.f64 r (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (*.f64 (/.f64 -1/2 (cos.f64 b)) (*.f64 (sin.f64 b) r)) (/.f64 r (pow.f64 (/.f64 (cos.f64 b) (sin.f64 b)) 3))) (/.f64 (*.f64 r -1/3) (/.f64 (pow.f64 (cos.f64 b) 2) (pow.f64 (sin.f64 b) 2))))) (-.f64 (*.f64 (/.f64 -1/2 (cos.f64 b)) (*.f64 (sin.f64 b) r)) (/.f64 r (pow.f64 (/.f64 (cos.f64 b) (sin.f64 b)) 3)))))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 r b)","(*.f64 b r)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (*.f64 r b))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (*.f64 b r))","(*.f64 r (fma.f64 (pow.f64 b 3) -1/6 b))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 r b (*.f64 1/120 (*.f64 r (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (*.f64 r (fma.f64 1/120 (pow.f64 b 5) b)))","(*.f64 r (fma.f64 1/120 (pow.f64 b 5) (fma.f64 (pow.f64 b 3) -1/6 b)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 b 7) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r)))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 -1/5040 (*.f64 r (pow.f64 b 7)) (fma.f64 r b (*.f64 1/120 (*.f64 r (pow.f64 b 5))))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 -1/5040 (*.f64 r (pow.f64 b 7)) (*.f64 r (fma.f64 1/120 (pow.f64 b 5) b))))","(*.f64 r (fma.f64 1/120 (pow.f64 b 5) (fma.f64 (pow.f64 b 3) -1/6 (fma.f64 -1/5040 (pow.f64 b 7) b))))","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","(*.f64 (sin.f64 b) r)","b","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) b)","(fma.f64 -1/6 (pow.f64 b 3) b)","(fma.f64 (pow.f64 b 3) -1/6 b)","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) b))","(fma.f64 -1/6 (pow.f64 b 3) (fma.f64 1/120 (pow.f64 b 5) b))","(fma.f64 (pow.f64 b 3) -1/6 (fma.f64 1/120 (pow.f64 b 5) b))","(fma.f64 1/120 (pow.f64 b 5) (fma.f64 (pow.f64 b 3) -1/6 b))","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) (+.f64 b (*.f64 -1/5040 (pow.f64 b 7)))))","(fma.f64 -1/6 (pow.f64 b 3) (+.f64 (fma.f64 1/120 (pow.f64 b 5) b) (*.f64 -1/5040 (pow.f64 b 7))))","(fma.f64 (pow.f64 b 3) -1/6 (fma.f64 1/120 (pow.f64 b 5) (fma.f64 -1/5040 (pow.f64 b 7) b)))","(fma.f64 1/120 (pow.f64 b 5) (fma.f64 (pow.f64 b 3) -1/6 (fma.f64 -1/5040 (pow.f64 b 7) b)))"]],"stop":[["node limit",1]],"time":56.380859375,"type":"simplify"},{"compiler":[[4642,1466]],"time":34.14111328125,"type":"eval"},{"alts":[["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","next",0.3190613281475361],["(/.f64 (*.f64 r (sin.f64 b)) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","fresh",0.3252525879159781],["(/.f64 (*.f64 r (*.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (cbrt.f64 (sin.f64 b)))) (cos.f64 (+.f64 a b)))","fresh",22.62754525545623],["(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (exp.f64 (cos.f64 (+.f64 a b)))))","fresh",14.305320294685332],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 3)","fresh",14.476341477758076],["(/.f64 (*.f64 r (sin.f64 b)) (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.40891143791572626],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))))","fresh",34.66045631092598],["(*.f64 (/.f64 1 (cos.f64 (+.f64 a b))) (*.f64 r (sin.f64 b)))","fresh",14.183953770305418],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","fresh",14.165379991000137],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))))","fresh",0.5747415528217029],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))))","fresh",24.48237130831183],["(*.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))","fresh",14.32886144845275],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))))","fresh",0.6294437095985042],["(/.f64 (*.f64 r (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))) (cos.f64 (+.f64 a b)))","fresh",35.41339239550446],["(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","fresh",14.164422520305463]],"compiler":[[19,12],[19,12],[19,13],[14,10],[15,11],[51,24],[48,19],[14,10],[12,8],[62,33],[45,24],[21,12],[71,28],[21,12],[12,8],[19,12],[19,12],[19,13],[14,10],[15,11],[51,24],[48,19],[14,10],[12,8],[62,33],[45,24],[21,12],[71,28],[21,12],[12,8]],"count":[[216,15]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[214,14],"picked":[1,0]}],"min-error":[0.05373002930532605],"time":67.427001953125,"type":"prune"},{"compiler":[[54,12]],"locations":[["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))",0.08719503162065376,true],["(*.f64 r (sin.f64 b))",0.15234375,false],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))",0.22494125976844204,true],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))",0.2421875,true]],"time":17.059814453125,"type":"localize"},{"count":[[3,84]],"series":[["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","a","-inf",0.202880859375],["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","a","inf",0.171142578125],["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","a","0",0.196044921875],["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","b","-inf",0.169921875],["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","b","inf",0.202880859375],["(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))","b","0",0.176025390625],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","a","-inf",2.719970703125],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","a","inf",0.969970703125],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","a","0",0.39990234375],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","b","-inf",0.77294921875],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","b","inf",0.9091796875],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","b","0",0.4189453125],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","r","-inf",0.427978515625],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","r","inf",0.6669921875],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","r","0",1.8271484375],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","b","-inf",0.43603515625],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","b","inf",0.6630859375],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","b","0",0.406005859375],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","a","-inf",0.454833984375],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","a","inf",0.464111328125],["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","a","0",1.321044921875]],"time":14.444091796875,"type":"series"},{"count":[[3,228]],"egraph":[[2,3560,28,0.028461291],[1,267,48,0.004718],[0,13,54,0.000318708]],"inputs":[["(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","(fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (+.f64 a b)) (cos.f64 (+.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 a) 3) (pow.f64 (sin.f64 b) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (sin.f64 a) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 a) 3) (pow.f64 (sin.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (sin.f64 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (*.f64 r (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 1 (/.f64 (cos.f64 (+.f64 a b)) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 b) r) (/.f64 1 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 2) (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (*.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (/.f64 1 (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 a b))) (*.f64 (sin.f64 b) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) 1) (/.f64 r (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r 1) (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) 1) (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sin.f64 b) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cos.f64 (+.f64 a b)) r) (sin.f64 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 b) r) 3) (pow.f64 (cos.f64 (+.f64 a b)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 (cos.f64 (+.f64 a b)) r) (sin.f64 b)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sin.f64 b) r) (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 b) r) 3) (pow.f64 (cos.f64 (+.f64 a b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (sin.f64 a) (sin.f64 b) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2)) (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 1) (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 b))) (sin.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b))) (sqrt.f64 (sin.f64 a)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (sin.f64 b)) (sqrt.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1 (*.f64 (*.f64 (sin.f64 a) (sin.f64 b)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (*.f64 (sqrt.f64 (cos.f64 b)) (sqrt.f64 (cos.f64 a))) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (+.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 2) (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 2)) (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 a b))) 1))))))"]],"rules":[["egg-rr",154],["egg-rr",49],["egg-rr",25]],"stop":[["node limit",1]],"time":74.14013671875,"type":"rewrite"},{"count":[[312,280]],"egraph":[[2,1599,1960,0.015561251],[1,474,2036,0.003519292],[0,146,2131,0.000805167]],"inputs":[["(*.f64 -1 (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 -1 (*.f64 (sin.f64 b) a)))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (*.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))))))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) b))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (*.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (sin.f64 b) a))","(neg.f64 (*.f64 (sin.f64 b) a))","(*.f64 (sin.f64 b) (neg.f64 a))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 -1 (*.f64 (sin.f64 b) a)))","(fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (neg.f64 (*.f64 (sin.f64 b) a)))","(-.f64 (*.f64 (*.f64 1/6 (pow.f64 a 3)) (sin.f64 b)) (*.f64 (sin.f64 b) a))","(*.f64 (sin.f64 b) (-.f64 (*.f64 1/6 (pow.f64 a 3)) a))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (*.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)))))","(fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1 (*.f64 (sin.f64 b) a) (*.f64 (*.f64 -1/120 (sin.f64 b)) (pow.f64 a 5))))","(fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (-.f64 (*.f64 (sin.f64 b) (*.f64 (pow.f64 a 5) -1/120)) (*.f64 (sin.f64 b) a)))","(fma.f64 (sin.f64 b) (*.f64 (pow.f64 a 5) -1/120) (*.f64 (sin.f64 b) (-.f64 (*.f64 1/6 (pow.f64 a 3)) a)))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))))))","(fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 (*.f64 1/5040 (sin.f64 b)) (pow.f64 a 7)))))","(fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (-.f64 (fma.f64 -1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 (sin.f64 b) (*.f64 (pow.f64 a 7) 1/5040))) (*.f64 (sin.f64 b) a)))","(+.f64 (*.f64 (sin.f64 b) (-.f64 (*.f64 1/6 (pow.f64 a 3)) a)) (*.f64 (sin.f64 b) (+.f64 (*.f64 (pow.f64 a 5) -1/120) (*.f64 (pow.f64 a 7) 1/5040))))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) b))","(neg.f64 (*.f64 b (sin.f64 a)))","(*.f64 b (neg.f64 (sin.f64 a)))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (neg.f64 (*.f64 b (sin.f64 a))))","(-.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 3) 1/6)) (*.f64 b (sin.f64 a)))","(*.f64 (sin.f64 a) (-.f64 (*.f64 1/6 (pow.f64 b 3)) b))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 -1 (*.f64 b (sin.f64 a)) (*.f64 (*.f64 -1/120 (sin.f64 a)) (pow.f64 b 5))))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)) (*.f64 b (neg.f64 (sin.f64 a)))))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/120 (pow.f64 b 5)) b)))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (*.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 -1 (*.f64 b (sin.f64 a)) (fma.f64 1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (*.f64 (*.f64 -1/120 (sin.f64 a)) (pow.f64 b 5)))))","(fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (-.f64 (fma.f64 -1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)) (*.f64 (*.f64 1/5040 (pow.f64 b 7)) (sin.f64 a))) (*.f64 b (sin.f64 a))))","(+.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 1/6 (pow.f64 b 3)) b)) (*.f64 (sin.f64 a) (+.f64 (*.f64 -1/120 (pow.f64 b 5)) (*.f64 1/5040 (pow.f64 b 7)))))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)))","(neg.f64 (*.f64 (sin.f64 b) (sin.f64 a)))","(*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 b (/.f64 (cos.f64 a) r))","(*.f64 (/.f64 r (cos.f64 a)) b)","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 r (*.f64 b b))))","(fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 r (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (sin.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 r (*.f64 b b))) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 r (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (sin.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r)))))) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3)) (pow.f64 b 4))))))","(+.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 r (*.f64 b b))) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) r) -1/3) (pow.f64 (cos.f64 a) 2)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (pow.f64 (sin.f64 a) 2))) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 4))))","(-.f64 (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (fma.f64 (/.f64 r (cos.f64 a)) b (*.f64 (/.f64 (*.f64 r (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (sin.f64 a)))) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) -1/3)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)))) (pow.f64 b 4)))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (/.f64 (pow.f64 (cos.f64 b) 2) a) r)))","(fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b)))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (-.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (/.f64 (pow.f64 (cos.f64 b) 2) a) r)) (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))","(-.f64 (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b))) (*.f64 (*.f64 a a) (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b))))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b)))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (/.f64 (pow.f64 (cos.f64 b) 2) a) r)) (-.f64 (-.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (*.f64 (pow.f64 a 3) (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r) (-.f64 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (*.f64 a a) (+.f64 (*.f64 (fma.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r))) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (/.f64 (pow.f64 (cos.f64 b) 2) r) -1/3))) a) (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r)))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))) r))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (neg.f64 (*.f64 b (sin.f64 a))) (cos.f64 a))","(fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a))","(fma.f64 b (neg.f64 (sin.f64 a)) (cos.f64 a))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 -1/2 (*.f64 (cos.f64 a) b)) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2))))","(+.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 1/6 (pow.f64 b 3)) b)) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 b b)) 1) (cos.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (fma.f64 -1/2 (*.f64 a (*.f64 a (cos.f64 b))) (cos.f64 b)) (*.f64 (sin.f64 b) a))","(-.f64 (*.f64 (fma.f64 -1/2 (*.f64 a a) 1) (cos.f64 b)) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 a (*.f64 a (cos.f64 b))) (cos.f64 b))) (*.f64 (sin.f64 b) a))","(fma.f64 (fma.f64 -1/2 (*.f64 a a) 1) (cos.f64 b) (*.f64 (sin.f64 b) (-.f64 (*.f64 1/6 (pow.f64 a 3)) a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))"]],"stop":[["node limit",1]],"time":50.15283203125,"type":"simplify"},{"compiler":[[9265,2386]],"time":54.696044921875,"type":"eval"},{"alts":[["(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.5630163552921352],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","fresh",0.6067966255326241],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))","fresh",16.793045117221308],["(/.f64 (*.f64 r (*.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (cbrt.f64 (sin.f64 b)))) (cos.f64 (+.f64 a b)))","fresh",22.62754525545623],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))","fresh",0.42770891092572777],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))","fresh",0.4168588813215731],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))","fresh",0.38070726452849185],["(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","fresh",14.193361600020053],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","next",0.3057213379159782],["(/.f64 (*.f64 r (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))) (cos.f64 (+.f64 a b)))","fresh",35.41339239550446],["(/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 3) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","fresh",0.7466229125898929],["(/.f64 (*.f64 r (sin.f64 b)) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","fresh",0.3252525879159781],["(*.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))","fresh",14.32886144845275],["(*.f64 r (/.f64 1 (/.f64 (cos.f64 (+.f64 a b)) (sin.f64 b))))","fresh",14.212892850020099]],"compiler":[[22,15],[62,30],[57,26],[19,13],[59,29],[24,17],[52,24],[14,10],[19,12],[21,12],[22,15],[19,12],[21,12],[14,10],[22,15],[62,30],[57,26],[19,13],[59,29],[24,17],[52,24],[14,10],[19,12],[21,12],[22,15],[19,12],[21,12],[14,10]],"count":[[321,14]],"kept":[{"done":[0,0],"fresh":[14,4],"new":[306,10],"picked":[1,0]}],"min-error":[0.015625],"time":129.60498046875,"type":"prune"},{"compiler":[[62,12]],"locations":[["(*.f64 (cos.f64 a) (cos.f64 b))",0.08984375,true],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))",0.10775375976844201,true],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))",0.17578125,true],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))",0.203125,true]],"time":13.10791015625,"type":"localize"},{"count":[[4,104]],"series":[["(*.f64 (cos.f64 a) (cos.f64 b))","b","-inf",0.14306640625],["(*.f64 (cos.f64 a) (cos.f64 b))","b","inf",0.171875],["(*.f64 (cos.f64 a) (cos.f64 b))","b","0",0.265869140625],["(*.f64 (cos.f64 a) (cos.f64 b))","a","-inf",0.175048828125],["(*.f64 (cos.f64 a) (cos.f64 b))","a","inf",0.14990234375],["(*.f64 (cos.f64 a) (cos.f64 b))","a","0",0.35302734375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","a","-inf",0.165771484375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","a","inf",0.171142578125],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","a","0",0.2001953125],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","b","-inf",0.1669921875],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","b","inf",0.197021484375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","b","0",0.173828125],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","a","-inf",0.504150390625],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","a","inf",0.5],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","a","0",0.653076171875],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","b","-inf",0.5009765625],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","b","inf",0.51416015625],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","b","0",0.52783203125],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","r","-inf",0.526123046875],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","r","inf",0.889892578125],["(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","r","0",0.5888671875],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","a","-inf",0.5830078125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","a","inf",0.7060546875],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","a","0",0.348876953125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","b","-inf",0.757080078125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","b","inf",0.69189453125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","b","0",0.3671875],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","r","-inf",0.298828125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","r","inf",0.639892578125],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","r","0",0.799072265625]],"time":13.295166015625,"type":"series"},{"count":[[4,246]],"egraph":[[2,3661,37,0.029627124999999997],[1,272,37,0.004945499999999999],[0,13,73,0.00030675]],"inputs":[["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(*.f64 (cos.f64 a) (cos.f64 b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 r (/.f64 (cos.f64 (-.f64 a b)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 b) (/.f64 (cos.f64 (-.f64 a b)) r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (-.f64 a b)) (*.f64 r (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 r (sin.f64 b)) (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 r (sin.f64 b))) (neg.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r (sin.f64 b)) 1) (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r (sin.f64 b)) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2)) (cbrt.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 r (sin.f64 b)) (sqrt.f64 (cos.f64 (-.f64 a b)))) (sqrt.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sin.f64 b)) (neg.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (neg.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (-.f64 a b)) (*.f64 r (sin.f64 b))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 3) (pow.f64 (sin.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 (-.f64 a b))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 r (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b))))) (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 r (cos.f64 (-.f64 a b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 1 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cos.f64 (-.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 r (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 r) 2) (*.f64 (cbrt.f64 r) (/.f64 1 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) 2) (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 r) (*.f64 (sqrt.f64 r) (/.f64 1 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) (sqrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 r) (/.f64 1 (neg.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (-.f64 a b))) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) 1) (/.f64 (cbrt.f64 r) (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) 1) (/.f64 (sqrt.f64 r) (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2)) (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2)) (/.f64 (sqrt.f64 r) (cbrt.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 (-.f64 a b)))) (/.f64 r (sqrt.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) (sqrt.f64 (cos.f64 (-.f64 a b)))) (/.f64 (cbrt.f64 r) (sqrt.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 r (cos.f64 (-.f64 a b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (-.f64 a b)) r) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cos.f64 (-.f64 a b)) r) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 r (neg.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 r (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 r (cos.f64 (-.f64 a b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 r 3) (pow.f64 (cos.f64 (-.f64 a b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 r (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 r (cos.f64 (-.f64 a b)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 a b)) (fma.f64 (sin.f64 a) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 a b)) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 a b)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 a b)) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 a)))) (*.f64 (sqrt.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))) (*.f64 (sqrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sqrt.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1)))) (fma.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1) (*.f64 (sin.f64 a) (*.f64 (sin.f64 b) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 a b)))) (cbrt.f64 (exp.f64 (cos.f64 (-.f64 a b)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 (neg.f64 b))) (*.f64 (sin.f64 a) (sin.f64 (neg.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 (*.f64 -1 b))) (*.f64 (sin.f64 a) (sin.f64 (*.f64 -1 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b)))) (*.f64 (sin.f64 a) (sin.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 b b))) (cbrt.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 a) (cos.f64 (*.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b)))) (*.f64 (sin.f64 a) (sin.f64 (*.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (fma.f64 (neg.f64 b) 1 b))) (*.f64 (sin.f64 (-.f64 a b)) (sin.f64 (fma.f64 (neg.f64 b) 1 b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)) b))) (*.f64 (sin.f64 (-.f64 a b)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 b)) (cbrt.f64 (*.f64 b b)) b))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) b))) (*.f64 (sin.f64 (-.f64 a b)) (sin.f64 (fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 2) (cbrt.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 a b))) (sqrt.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3)) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)) (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (neg.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)) (exp.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (exp.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)) (exp.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (exp.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 a b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b))) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 2 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (+.f64 (cos.f64 (-.f64 a b)) (cos.f64 (-.f64 a b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (cos.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 b) 3) (pow.f64 (cos.f64 a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",158],["egg-rr",37],["egg-rr",29]],"stop":[["node limit",1]],"time":81.0068359375,"type":"rewrite"},{"count":[[350,307]],"egraph":[[2,2083,2781,0.016555583],[1,576,2856,0.004197417],[0,177,3006,0.000985334]],"inputs":[["(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 a 4) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (cos.f64 b))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 a 4) (cos.f64 b))) (cos.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))","(+.f64 (*.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4))) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (*.f64 -1/720 (*.f64 (cos.f64 a) (pow.f64 b 6))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4))) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 b (/.f64 (cos.f64 a) r))","(*.f64 (/.f64 r (cos.f64 a)) b)","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (*.f64 (*.f64 (sin.f64 a) (*.f64 b r)) b) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (*.f64 b (*.f64 b r)) (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) (*.f64 b r)) b) (pow.f64 (cos.f64 a) 2)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (*.f64 (*.f64 b (*.f64 b r)) (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (/.f64 b (/.f64 (cos.f64 a) r))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))) (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3)) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) (*.f64 b r)) b) (pow.f64 (cos.f64 a) 2)) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (*.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (sin.f64 a))) -1/3) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (pow.f64 b 4))))","(-.f64 (+.f64 (*.f64 (*.f64 b (*.f64 b r)) (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (/.f64 b (/.f64 (cos.f64 a) r)))) (*.f64 (-.f64 (/.f64 (sin.f64 a) (/.f64 (/.f64 (pow.f64 (cos.f64 a) 2) r) -1/3)) (*.f64 (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (/.f64 (sin.f64 a) (cos.f64 a)))) (pow.f64 b 4)))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r)","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (*.f64 (*.f64 r a) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 3)) (pow.f64 (cos.f64 b) 3)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)) (*.f64 a (*.f64 a (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r)))))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (-.f64 (*.f64 (*.f64 r a) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (*.f64 a (*.f64 a (*.f64 (sin.f64 b) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 3)) (pow.f64 (cos.f64 b) 3)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (*.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 2)) (pow.f64 (cos.f64 b) 2)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 3)) (pow.f64 (cos.f64 b) 3)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)) (-.f64 (-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 a (*.f64 a (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r)))))) (*.f64 (pow.f64 a 3) (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (-.f64 (*.f64 (*.f64 r a) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (*.f64 r (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) -1/3 (*.f64 (*.f64 (sin.f64 b) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))) (/.f64 (sin.f64 b) (cos.f64 b))))) (*.f64 (sin.f64 b) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))) r)","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 r (cos.f64 a)) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r))))","(+.f64 (/.f64 r (cos.f64 a)) (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)))","(*.f64 (+.f64 (/.f64 b (/.f64 (cos.f64 a) (sin.f64 a))) 1) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r))) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 r (cos.f64 a)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)) (*.f64 b (*.f64 b (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 a)) (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (sin.f64 a) 2))))))))","(-.f64 (*.f64 (+.f64 (/.f64 b (/.f64 (cos.f64 a) (sin.f64 a))) 1) (/.f64 r (cos.f64 a))) (*.f64 b (*.f64 b (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2)))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r))) (fma.f64 -1 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3) (/.f64 (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r)))) (/.f64 (cos.f64 a) (sin.f64 a))))) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (/.f64 r (cos.f64 a)))))","(+.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)) (-.f64 (-.f64 (/.f64 r (cos.f64 a)) (*.f64 b (*.f64 b (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 a)) (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (sin.f64 a) 2))))))) (*.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (sin.f64 a))) -1/3 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 a)) (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (sin.f64 a) 2)))) (cos.f64 a)) (sin.f64 a))))))","(+.f64 (*.f64 (+.f64 (/.f64 b (/.f64 (cos.f64 a) (sin.f64 a))) 1) (/.f64 r (cos.f64 a))) (*.f64 (*.f64 b b) (-.f64 (*.f64 b (neg.f64 (fma.f64 (*.f64 r (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) -1/3 (*.f64 (sin.f64 a) (/.f64 (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2)))) (cos.f64 a)))))) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2)))))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 r (cos.f64 b)) (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))))","(+.f64 (/.f64 r (cos.f64 b)) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)))","(*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)) (*.f64 a (*.f64 a (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 3)) r))))))","(-.f64 (*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b))) (*.f64 (*.f64 a a) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(fma.f64 -1 (*.f64 (pow.f64 a 3) (fma.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2)) (fma.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (cos.f64 b))))) (+.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 r a))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b)))))","(-.f64 (+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 r a)) (*.f64 a (*.f64 a (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 3)) r)))))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 3)) r))) (*.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) r) -1/3))))","(-.f64 (-.f64 (*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b))) (*.f64 (*.f64 a a) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))) (/.f64 (sin.f64 b) (cos.f64 b))) (/.f64 (*.f64 r -1/3) (/.f64 (pow.f64 (cos.f64 b) 2) (sin.f64 b))))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 r (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 b (sin.f64 a))))","(fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 b (*.f64 (cos.f64 a) -1/2)) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2))))","(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 b b) -1/2) 1) (cos.f64 a)) (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 (pow.f64 b 3) 1/6))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (cos.f64 b))","(fma.f64 (neg.f64 (sin.f64 b)) a (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(fma.f64 (neg.f64 (sin.f64 b)) a (fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 b) a) a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 b) (+.f64 (*.f64 a (*.f64 a -1/2)) 1)) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 b) a) a) (cos.f64 b))) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 (cos.f64 b) (+.f64 (*.f64 a (*.f64 a -1/2)) 1)) (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","(cos.f64 b)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))","(fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))","(fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 b) a) a) (cos.f64 b))","(*.f64 (cos.f64 b) (+.f64 (*.f64 a (*.f64 a -1/2)) 1))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 a 4) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (fma.f64 1/24 (*.f64 (cos.f64 b) (pow.f64 a 4)) (cos.f64 b)))","(+.f64 (cos.f64 b) (*.f64 (cos.f64 b) (+.f64 (*.f64 -1/2 (*.f64 a a)) (*.f64 1/24 (pow.f64 a 4)))))","(*.f64 (cos.f64 b) (+.f64 (+.f64 (*.f64 a (*.f64 a -1/2)) 1) (*.f64 1/24 (pow.f64 a 4))))","(+.f64 (*.f64 -1/720 (*.f64 (pow.f64 a 6) (cos.f64 b))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (+.f64 (*.f64 1/24 (*.f64 (pow.f64 a 4) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1/720 (*.f64 (cos.f64 b) (pow.f64 a 6)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (fma.f64 1/24 (*.f64 (cos.f64 b) (pow.f64 a 4)) (cos.f64 b))))","(+.f64 (fma.f64 1/24 (*.f64 (cos.f64 b) (pow.f64 a 4)) (cos.f64 b)) (*.f64 (cos.f64 b) (+.f64 (*.f64 -1/720 (pow.f64 a 6)) (*.f64 -1/2 (*.f64 a a)))))","(+.f64 (*.f64 (cos.f64 b) (+.f64 (+.f64 (*.f64 -1/720 (pow.f64 a 6)) (*.f64 a (*.f64 a -1/2))) (*.f64 1/24 (pow.f64 a 4)))) (cos.f64 b))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))","(+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))","(fma.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))) (cos.f64 a))","(*.f64 (+.f64 (*.f64 (*.f64 b b) -1/2) 1) (cos.f64 a))","(+.f64 (*.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4))) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(fma.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4)) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(fma.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4)) (fma.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))) (cos.f64 a)))","(+.f64 (cos.f64 a) (*.f64 (cos.f64 a) (+.f64 (*.f64 (*.f64 b b) -1/2) (*.f64 (pow.f64 b 4) 1/24))))","(+.f64 (*.f64 -1/720 (*.f64 (cos.f64 a) (pow.f64 b 6))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4))) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(fma.f64 -1/720 (*.f64 (cos.f64 a) (pow.f64 b 6)) (fma.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4)) (+.f64 (cos.f64 a) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(fma.f64 -1/720 (*.f64 (cos.f64 a) (pow.f64 b 6)) (fma.f64 1/24 (*.f64 (cos.f64 a) (pow.f64 b 4)) (fma.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))) (cos.f64 a))))","(+.f64 (*.f64 (+.f64 (*.f64 (*.f64 b b) -1/2) 1) (cos.f64 a)) (*.f64 (cos.f64 a) (+.f64 (*.f64 (pow.f64 b 4) 1/24) (*.f64 -1/720 (pow.f64 b 6)))))"]],"stop":[["node limit",1]],"time":54.834228515625,"type":"simplify"},{"compiler":[[10041,2810]],"time":58.966796875,"type":"eval"},{"alts":[["(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.5630163552921352],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","fresh",0.6067966255326241],["(*.f64 (/.f64 r (+.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))) (sin.f64 b))","fresh",0.48157895513728255],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 3))) (sin.f64 b))","fresh",0.5383611708235644],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))","fresh",0.42770891092572777],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))","fresh",0.4168588813215731],["(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","fresh",14.193361600020053],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","done",0.3057213379159782],["(/.f64 (*.f64 r (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))) (cos.f64 (+.f64 a b)))","fresh",35.41339239550446],["(/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 3) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","fresh",0.7466229125898929],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","next",0.34802631837909415],["(/.f64 (*.f64 r (*.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (cbrt.f64 (sin.f64 b)))) (cos.f64 (+.f64 a b)))","fresh",22.62754525545623],["(/.f64 r (/.f64 (cos.f64 (-.f64 a b)) (sin.f64 b)))","fresh",14.222675106644756],["(*.f64 (/.f64 r (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))) (sin.f64 b))","fresh",0.47767270513728255]],"compiler":[[22,15],[62,30],[59,30],[22,15],[59,29],[24,17],[14,10],[19,12],[21,12],[22,15],[19,12],[19,13],[12,8],[59,30],[22,15],[62,30],[59,30],[22,15],[59,29],[24,17],[14,10],[21,12],[22,15],[19,12],[19,13],[12,8],[59,30]],"count":[[321,14]],"kept":[{"done":[0,0],"fresh":[13,8],"new":[307,5],"picked":[1,1]}],"min-error":[0.0078125],"time":121.609130859375,"type":"prune"},{"compiler":[[65,12]],"locations":[["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))",0.12566376953688402,true],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))",0.171875,true],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))",0.2109375,true],["(*.f64 (sin.f64 b) (sin.f64 a))",0.2421875,true]],"time":12.012939453125,"type":"localize"},{"count":[[4,108]],"series":[["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","-inf",0.1630859375],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","inf",0.1630859375],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","0",0.1669921875],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","-inf",0.1650390625],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","inf",0.178955078125],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","0",0.169921875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","-inf",0.4921875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","inf",0.485107421875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","0",0.301025390625],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","-inf",0.498046875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","inf",0.4951171875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","0",0.306884765625],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","-inf",0.35302734375],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","inf",0.498046875],["(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","0",0.488037109375],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","-inf",0.51708984375],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","inf",0.509033203125],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","0",0.800048828125],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","-inf",0.52783203125],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","inf",0.532958984375],["(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","0",0.651123046875],["(*.f64 (sin.f64 b) (sin.f64 a))","a","-inf",0.1669921875],["(*.f64 (sin.f64 b) (sin.f64 a))","a","inf",0.14990234375],["(*.f64 (sin.f64 b) (sin.f64 a))","a","0",0.234130859375],["(*.f64 (sin.f64 b) (sin.f64 a))","b","-inf",0.30615234375],["(*.f64 (sin.f64 b) (sin.f64 a))","b","inf",0.162109375],["(*.f64 (sin.f64 b) (sin.f64 a))","b","0",0.31298828125]],"time":10.260009765625,"type":"series"},{"count":[[4,266]],"egraph":[[2,4353,39,0.032679709],[1,296,39,0.005707251],[0,13,75,0.000318459]],"inputs":[["(*.f64 (sin.f64 b) (sin.f64 a))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 (-.f64 b a)) 2) (/.f64 (cos.f64 (+.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 2 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))) (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))) (cbrt.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 2)) (cbrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))) (sqrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sqrt.f64 (sin.f64 b)) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 b)) (/.f64 1 (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 b a))) (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) 1) (/.f64 (cbrt.f64 (sin.f64 b)) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 b)) 1) (/.f64 (sqrt.f64 (sin.f64 b)) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (/.f64 (sin.f64 b) (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (cbrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (/.f64 (sqrt.f64 (sin.f64 b)) (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 (+.f64 b a)))) (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (sqrt.f64 (cos.f64 (+.f64 b a)))) (/.f64 (cbrt.f64 (sin.f64 b)) (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) (cos.f64 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 b a)) (sin.f64 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 b) (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 (+.f64 b a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))) (cbrt.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 r (/.f64 (cos.f64 (+.f64 b a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 b) r)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) 1) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (cos.f64 (+.f64 b a)))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 b)) r) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 r (neg.f64 (sin.f64 b))) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 r) (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 3) (pow.f64 r 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 r 3) (pow.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))) r)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a)))) (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (-.f64 b a)) (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (cos.f64 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (neg.f64 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) (neg.f64 (cos.f64 (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (-.f64 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3) (pow.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 3)) (+.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2) (-.f64 (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))) (-.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a)) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a)))) (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (exp.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 b a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))) (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))) (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (sqrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) 1) (sin.f64 a) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 a))) (sqrt.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))))"]],"rules":[["egg-rr",181],["egg-rr",27],["egg-rr",38],["egg-rr",20]],"stop":[["node limit",1]],"time":74.966064453125,"type":"rewrite"},{"count":[[374,330]],"egraph":[[2,2355,2702,0.017251124],[1,653,2785,0.004797957],[0,196,2867,0.001034791]],"inputs":[["(*.f64 (sin.f64 a) b)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 b) a)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(/.f64 b (cos.f64 a))","(+.f64 (/.f64 b (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 b (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 b (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 4) (+.f64 (*.f64 1/6 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))))))) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2)))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (cos.f64 b))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2)))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)))))) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)))))) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2)))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 a) b)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) b))","(fma.f64 (sin.f64 a) b (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))))","(*.f64 (sin.f64 a) (+.f64 b (*.f64 -1/6 (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 5) 1/120))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 5) 1/120)))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))) (*.f64 (sin.f64 a) (+.f64 (*.f64 -1/6 (pow.f64 b 3)) (*.f64 -1/5040 (pow.f64 b 7)))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 b) a)","(*.f64 a (sin.f64 b))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 a (sin.f64 b)))","(fma.f64 a (sin.f64 b) (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))))","(*.f64 (sin.f64 b) (+.f64 a (*.f64 -1/6 (pow.f64 a 3))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 a (sin.f64 b))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 a (sin.f64 b) (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 (sin.f64 b) (+.f64 a (*.f64 1/120 (pow.f64 a 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 a (sin.f64 b)))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7)) (fma.f64 a (sin.f64 b) (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))))))","(+.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 1/120 (pow.f64 a 5)) (*.f64 -1/6 (pow.f64 a 3)))) (*.f64 (sin.f64 b) (+.f64 a (*.f64 -1/5040 (pow.f64 a 7)))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(/.f64 b (cos.f64 a))","(+.f64 (/.f64 b (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 b (cos.f64 a)) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))))","(+.f64 (/.f64 b (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 b (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 b (cos.f64 a)) (fma.f64 (-.f64 (/.f64 1/2 (cos.f64 a)) (+.f64 (/.f64 1/6 (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b)))))","(+.f64 (/.f64 b (cos.f64 a)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 1 (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))) (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 b (cos.f64 a)) (*.f64 (*.f64 b b) (+.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 (+.f64 (/.f64 1/3 (cos.f64 a)) (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))) b))))","(+.f64 (/.f64 b (cos.f64 a)) (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 4) (+.f64 (*.f64 1/6 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 1/2 (/.f64 1 (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 1 (cos.f64 a))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))))))) (/.f64 (*.f64 (sin.f64 a) (pow.f64 b 2)) (pow.f64 (cos.f64 a) 2)))))","(+.f64 (/.f64 b (cos.f64 a)) (fma.f64 (-.f64 (/.f64 1/2 (cos.f64 a)) (+.f64 (/.f64 1/6 (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3) (fma.f64 -1 (*.f64 (pow.f64 b 4) (fma.f64 1/6 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (fma.f64 -1/2 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (neg.f64 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) (-.f64 (/.f64 1/2 (cos.f64 a)) (+.f64 (/.f64 1/6 (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))))))))))) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))))))","(+.f64 (/.f64 b (cos.f64 a)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 1 (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))) (-.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (*.f64 (pow.f64 b 4) (-.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) -1/3) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 1 (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3)))))))))","(-.f64 (+.f64 (/.f64 b (cos.f64 a)) (*.f64 (*.f64 b b) (+.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 (+.f64 (/.f64 1/3 (cos.f64 a)) (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3))) b)))) (*.f64 (pow.f64 b 4) (-.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) -1/3) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (+.f64 (/.f64 1/3 (cos.f64 a)) (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (cos.f64 b))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2)))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) a)))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) a))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)))))) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2))))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) a))))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) a) (*.f64 (*.f64 a a) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))))","(+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (*.f64 a (-.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3)) a))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)))))) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) a) (pow.f64 (cos.f64 b) 2)))))","(fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (fma.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) -1/3))) (+.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) a)))))","(+.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) a) (*.f64 (*.f64 a a) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (fma.f64 (neg.f64 (pow.f64 a 3)) (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3))))) (/.f64 (sin.f64 b) (cos.f64 b))))","(+.f64 (*.f64 a (-.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3)) a))) (fma.f64 (neg.f64 (pow.f64 a 3)) (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (*.f64 -1/2 (/.f64 (sin.f64 b) (cos.f64 b))) (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3)))) (/.f64 (sin.f64 b) (cos.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 b r) (cos.f64 a))","(*.f64 (/.f64 b (cos.f64 a)) r)","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (/.f64 (*.f64 (*.f64 (sin.f64 a) r) (*.f64 b b)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (*.f64 (/.f64 b (cos.f64 a)) r) (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (/.f64 (pow.f64 (cos.f64 a) 2) r)))","(+.f64 (*.f64 (/.f64 b (cos.f64 a)) r) (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))) r))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) r) (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) r) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 b (cos.f64 a)) r)))","(+.f64 (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))) r) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (*.f64 (/.f64 b (cos.f64 a)) r)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) r) (*.f64 b b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 b r) (cos.f64 a)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (pow.f64 b 4) (fma.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r)))))) (cos.f64 a)) (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) -1/3)))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b b)) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) r) (pow.f64 (cos.f64 a) 3))) (*.f64 (/.f64 b (cos.f64 a)) r)) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (*.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) r) (pow.f64 (cos.f64 a) 3))))))))","(-.f64 (+.f64 (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))) r) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (*.f64 (/.f64 b (cos.f64 a)) r))) (*.f64 (pow.f64 b 4) (-.f64 (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) -1/3)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r))))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r)","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 a (*.f64 a (-.f64 (/.f64 (sin.f64 b) (/.f64 (/.f64 (cos.f64 b) r) -1/2)) (*.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3) r))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (*.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (-.f64 (-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))) (*.f64 (pow.f64 a 3) (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (*.f64 (*.f64 -1/2 r) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (sin.f64 b) (/.f64 (/.f64 (cos.f64 b) r) -1/2)) (*.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3) r))))) (-.f64 (/.f64 (sin.f64 b) (/.f64 (/.f64 (cos.f64 b) r) -1/2)) (*.f64 (pow.f64 (/.f64 (sin.f64 b) (cos.f64 b)) 3) r))))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b)) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 (*.f64 (sin.f64 b) (pow.f64 a 3)) 1/6 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b))) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b)) (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 (sin.f64 a) b)))","(-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (*.f64 (*.f64 -1/2 (cos.f64 a)) (*.f64 b b))))","(+.f64 (cos.f64 a) (-.f64 (*.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a)))) (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 (*.f64 (cos.f64 a) -1/2) b) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (*.f64 -1/2 (cos.f64 a)) (*.f64 b b)))))","(+.f64 (cos.f64 a) (-.f64 (fma.f64 (*.f64 (sin.f64 a) (pow.f64 b 3)) 1/6 (*.f64 -1/2 (*.f64 b (*.f64 b (cos.f64 a))))) (*.f64 (sin.f64 a) b)))","(+.f64 (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 1/6 (pow.f64 b 3)))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 b b)) 1) (cos.f64 a)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))"]],"stop":[["node limit",1]],"time":53.298828125,"type":"simplify"},{"compiler":[[8492,2346]],"time":52.81005859375,"type":"eval"},{"alts":[["(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.5630163552921352],["(/.f64 r (/.f64 (cos.f64 (+.f64 b a)) (sin.f64 b)))","fresh",14.179357840251654],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","fresh",0.6067966255326241],["(*.f64 (/.f64 r (+.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))) (sin.f64 b))","fresh",0.48157895513728255],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 3))) (sin.f64 b))","fresh",0.5383611708235644],["(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))","fresh",0.42770891092572777],["(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))","fresh",0.4168588813215731],["(*.f64 r (/.f64 (sin.f64 b) (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.44148261722130433],["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","done",0.3057213379159782],["(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","fresh",14.301528921136745],["(*.f64 r (/.f64 (sin.f64 b) (expm1.f64 (log1p.f64 (cos.f64 (+.f64 b a))))))","fresh",14.197293760537022],["(*.f64 r (/.f64 (sin.f64 b) (/.f64 1 (/.f64 (cos.f64 (-.f64 b a)) (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))","fresh",14.208055039842389],["(/.f64 (*.f64 r (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))) (cos.f64 (+.f64 a b)))","fresh",35.41339239550446],["(*.f64 r (/.f64 (sin.f64 b) (fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))","fresh",0.3434562988422101],["(*.f64 r (*.f64 (/.f64 1 (cos.f64 (+.f64 b a))) (sin.f64 b)))","fresh",14.193361600020053]],"compiler":[[22,15],[12,8],[62,30],[59,30],[22,15],[59,29],[24,17],[37,18],[19,12],[14,10],[14,10],[24,14],[21,12],[19,12],[14,10]],"count":[[344,15]],"kept":[{"done":[1,1],"fresh":[12,7],"new":[330,7],"picked":[1,0]}],"min-error":[0.00390625],"time":129.423095703125,"type":"prune"},{"accuracy":[0.30572133791597816],"baseline":[0.3057213379159782],"branch":[["r",0.30572133791597816,1],["a",0.30572133791597816,1],["b",0.3057213379159782,1],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))",0.30572133791597816,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[994,317]],"count":[[38,1]],"inputs":[["(/.f64 r (/.f64 (cos.f64 (+.f64 b a)) (sin.f64 b)))","(*.f64 r (/.f64 (sin.f64 b) (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","(*.f64 r (/.f64 (sin.f64 b) (expm1.f64 (log1p.f64 (cos.f64 (+.f64 b a))))))","(*.f64 r (/.f64 (sin.f64 b) (/.f64 1 (/.f64 (cos.f64 (-.f64 b a)) (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))","(*.f64 r (/.f64 (sin.f64 b) (fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))","(*.f64 r (*.f64 (/.f64 1 (cos.f64 (+.f64 b a))) (sin.f64 b)))","(*.f64 (/.f64 r (+.f64 (fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))) (sin.f64 b))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 3))) (sin.f64 b))","(*.f64 r (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 r (/.f64 (cos.f64 (-.f64 a b)) (sin.f64 b)))","(*.f64 (/.f64 r (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (*.f64 (cbrt.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))) (sin.f64 b))","(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (/.f64 (exp.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (*.f64 (cos.f64 b) (cbrt.f64 (pow.f64 (cos.f64 a) 2))) (cbrt.f64 (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (cbrt.f64 (sin.f64 a)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 a)) (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)))))","(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))))","(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(/.f64 (pow.f64 (cbrt.f64 (*.f64 r (sin.f64 b))) 3) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","(*.f64 r (/.f64 1 (/.f64 (cos.f64 (+.f64 a b)) (sin.f64 b))))","(/.f64 (*.f64 r (sin.f64 b)) (fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))))","(/.f64 (*.f64 r (sin.f64 b)) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))","(/.f64 (*.f64 r (*.f64 (cbrt.f64 (pow.f64 (sin.f64 b) 2)) (cbrt.f64 (sin.f64 b)))) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 r (sin.f64 b)) (log.f64 (exp.f64 (cos.f64 (+.f64 a b)))))","(pow.f64 (cbrt.f64 (*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))) 3)","(/.f64 (*.f64 r (sin.f64 b)) (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b))) (*.f64 (sqrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sqrt.f64 (sin.f64 b)))))))","(*.f64 (/.f64 1 (cos.f64 (+.f64 a b))) (*.f64 r (sin.f64 b)))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2))) (*.f64 (cbrt.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (cbrt.f64 (pow.f64 (sin.f64 b) 2)))))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))) (fma.f64 (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) 1) (*.f64 (sin.f64 b) (*.f64 (sin.f64 a) 1)))))","(*.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))","(/.f64 (*.f64 r (sin.f64 b)) (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) 2) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))))","(/.f64 (*.f64 r (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))"]],"link":["."],"name":["rsin A"],"oracle":[57.06556160751824],"outputs":[["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))"]],"time":58.27099609375,"times":[["r",11.22314453125],["a",11.34521484375],["b",11.41796875],["(/.f64 (*.f64 r (sin.f64 b)) (cos.f64 (+.f64 a b)))",10.7431640625]],"type":"regimes"},{"compiler":[[19,12]],"egraph":[[3,22,26,0.000121917],[2,21,26,9.383300000000001e-5],[1,19,26,6.5417e-5],[0,13,26,3.7125e-5]],"inputs":[["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))) (sin.f64 b))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.64404296875,"type":"simplify"},{"time":0.016845703125,"type":"soundness"},{"compiler":[[19,12]],"remove-preprocessing":[[]],"time":10.47314453125,"type":"end"}]