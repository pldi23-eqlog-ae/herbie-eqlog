[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.4680636897137447,0.4383221427631838,0.0936141675230715],[11,0.41345625924714113,0.5197457221196373,0.06679801863322155],[10,0.34324670579007943,0.5928806736374099,0.06387262057251064],[9,0.2496339678473305,0.7098965960658461,0.04046943608682341],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":83.23095703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",49.02490234375,1260],["body",1024,"valid",14.614501953125,131],["body",512,"valid",7.423095703125,105],["body",2048,"valid",0.264892578125,2],["body",256,"valid",316.998779296875,8018]],"time":398.172119140625,"type":"sample"},{"compiler":[[12,8]],"egraph":[[0,3,3,3.167e-6],[5,230,44,0.001697958],[4,226,44,0.001314583],[3,200,44,0.00096575],[2,137,44,0.000603583],[1,54,44,0.000314167],[0,20,44,9.1458e-5]],"inputs":[["0","1","2"],["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))","(+.f64 (*.f64 y (+.f64 x z)) (*.f64 z 5))","(+.f64 (*.f64 z (+.f64 y x)) (*.f64 x 5))","(+.f64 (*.f64 x (+.f64 z y)) (*.f64 y 5))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 y (+.f64 x z)) (*.f64 z 5))","(fma.f64 y (+.f64 x z) (*.f64 z 5))","(fma.f64 x y (*.f64 z (+.f64 y 5)))","(+.f64 (*.f64 z (+.f64 y x)) (*.f64 x 5))","(fma.f64 z (+.f64 x y) (*.f64 x 5))","(fma.f64 x 5 (*.f64 z (+.f64 x y)))","(+.f64 (*.f64 x (+.f64 z y)) (*.f64 y 5))","(fma.f64 x (+.f64 y z) (*.f64 y 5))","(fma.f64 y 5 (*.f64 x (+.f64 y z)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":28.264892578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,64,11,0.000665458],[4,63,11,0.000518541],[3,53,11,0.000388458],[2,37,11,0.000256624],[1,20,11,0.00015254100000000002],[0,9,11,6.2833e-5]],"inputs":[["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))","(fma.f64 x (+.f64 y z) (*.f64 z 5))"]],"stop":[["saturated",1]],"time":11.73095703125,"type":"simplify"},{"compiler":[[20,11]],"time":0.427978515625,"type":"eval"},{"alts":[["(fma.f64 x (+.f64 y z) (*.f64 z 5))","next",0.05078125]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.05078125],"time":0.965087890625,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 x (+.f64 y z) (*.f64 z 5))",0.0234375,true]],"time":5.214111328125,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 x (+.f64 y z) (*.f64 z 5))","z","-inf",0.3759765625],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","z","inf",0.39501953125],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","z","0",0.330078125],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","y","-inf",0.39599609375],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","y","inf",0.31982421875],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","y","0",0.3310546875],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","x","-inf",0.373046875],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","x","inf",0.3359375],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","x","0",0.83203125]],"time":3.81298828125,"type":"series"},{"count":[[1,21]],"egraph":[[2,2213,11,0.022267916],[1,170,11,0.003188166],[0,8,11,0.000221541]],"inputs":[["(fma.f64 x (+.f64 y z) (*.f64 z 5))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z 5) (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (+.f64 y z)) 1) (*.f64 z 5))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (+.f64 y z) (*.f64 z 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 2) (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) (sqrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 (*.f64 z 5) 3)) (+.f64 (*.f64 (*.f64 x (+.f64 y z)) (*.f64 x (+.f64 y z))) (-.f64 (*.f64 25 (*.f64 z z)) (*.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (+.f64 y z)) (*.f64 x (+.f64 y z))) (*.f64 25 (*.f64 z z))) (-.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":43.034912109375,"type":"rewrite"},{"count":[[57,33]],"egraph":[[9,1655,348,0.023519458],[8,1649,348,0.020027542],[7,1599,348,0.015323833999999998],[6,1203,348,0.011477208999999999],[5,624,348,0.006820916999999999],[4,348,348,0.003485126],[3,201,348,0.001696542],[2,106,348,0.000872625],[1,57,348,0.000426417],[0,23,348,0.000159167]],"inputs":[["(*.f64 5 z)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(*.f64 (+.f64 y z) x)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(*.f64 (+.f64 y z) x)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 z x) (*.f64 5 z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(*.f64 z (+.f64 5 x))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 5 z)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 z y) x)","(*.f64 x (+.f64 z y))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 z y) x)","(*.f64 x (+.f64 z y))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (*.f64 5 z))","(*.f64 z (+.f64 5 x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 z (+.f64 5 x))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5)))","(*.f64 z (+.f64 5 x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 (+.f64 z y) x (*.f64 5 z))","(fma.f64 z (+.f64 5 x) (*.f64 y x))","(fma.f64 5 z (*.f64 (+.f64 z y) x))","(fma.f64 x (+.f64 z y) (*.f64 5 z))","(fma.f64 5 z (*.f64 x (+.f64 z y)))"]],"stop":[["saturated",1]],"time":42.409912109375,"type":"simplify"},{"compiler":[[386,185]],"time":5.277099609375,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 2))","fresh",0.7685091798114493],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","next",0.0078125],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","done",0.05078125]],"compiler":[[24,15],[11,7],[11,7],[24,15],[11,7]],"count":[[34,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[33,2],"picked":[1,1]}],"min-error":[0],"time":6.451904296875,"type":"prune"},{"compiler":[[23,8]],"locations":[["(*.f64 x (+.f64 z y))",0.015625,true],["(fma.f64 5 z (*.f64 x (+.f64 z y)))",0.03125,true]],"time":4.64501953125,"type":"localize"},{"count":[[2,72]],"series":[["(*.f64 x (+.f64 z y))","y","-inf",0.156005859375],["(*.f64 x (+.f64 z y))","y","inf",0.174072265625],["(*.f64 x (+.f64 z y))","y","0",0.16015625],["(*.f64 x (+.f64 z y))","z","-inf",0.19189453125],["(*.f64 x (+.f64 z y))","z","inf",0.160888671875],["(*.f64 x (+.f64 z y))","z","0",0.162841796875],["(*.f64 x (+.f64 z y))","x","-inf",0.239013671875],["(*.f64 x (+.f64 z y))","x","inf",0.2177734375],["(*.f64 x (+.f64 z y))","x","0",0.260986328125],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","y","-inf",0.241943359375],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","y","inf",0.283935546875],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","y","0",0.239013671875],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","x","-inf",0.241943359375],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","x","inf",0.2939453125],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","x","0",0.237060546875],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","z","-inf",0.421875],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","z","inf",0.69287109375],["(fma.f64 5 z (*.f64 x (+.f64 z y)))","z","0",0.430908203125]],"time":5.107177734375,"type":"series"},{"count":[[2,48]],"egraph":[[2,2432,18,0.023860958],[1,176,18,0.004258375],[0,8,18,0.000302875]],"inputs":[["(fma.f64 5 z (*.f64 x (+.f64 z y)))","(*.f64 x (+.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 z y)) (*.f64 5 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 z) (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 5 z) 1) (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 5 z) (*.f64 z x)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 5 z (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) (pow.f64 (cbrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) 2) (cbrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) (sqrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 5 z) 3) (pow.f64 (*.f64 x (+.f64 z y)) 3)) (+.f64 (*.f64 (*.f64 5 z) (*.f64 5 z)) (-.f64 (pow.f64 (*.f64 x (+.f64 z y)) 2) (*.f64 (*.f64 5 z) (*.f64 x (+.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 5 z) (*.f64 5 z)) (pow.f64 (*.f64 x (+.f64 z y)) 2)) (-.f64 (*.f64 5 z) (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 5 z (*.f64 x (+.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 5 z (*.f64 x (+.f64 z y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z x) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z x) 1) (*.f64 (*.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (+.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z x) 3) (pow.f64 (*.f64 x y) 3)) (+.f64 (*.f64 (*.f64 z x) (*.f64 z x)) (-.f64 (*.f64 (*.f64 x y) (*.f64 x y)) (*.f64 (*.f64 z x) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z x) (*.f64 z x)) (*.f64 (*.f64 x y) (*.f64 x y))) (-.f64 (*.f64 z x) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 y 3)) x) (fma.f64 z z (*.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 z z) (*.f64 y y)) x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 z z (*.f64 y (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (+.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (+.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 z y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z x (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x z (*.f64 x y))))))"]],"rules":[["egg-rr",25],["egg-rr",23]],"stop":[["node limit",1]],"time":45.262939453125,"type":"rewrite"},{"count":[[120,65]],"egraph":[[9,1638,582,0.020700374],[8,1632,582,0.017382624],[7,1582,582,0.014032249],[6,1193,582,0.010579124],[5,615,582,0.006142416],[4,342,582,0.0028669990000000003],[3,195,582,0.0015407910000000001],[2,109,582,0.000845332],[1,60,582,0.00041808199999999996],[0,24,582,0.000159541]],"inputs":[["(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(*.f64 z (+.f64 5 x))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(*.f64 5 z)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(*.f64 (+.f64 y z) x)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(*.f64 (+.f64 y z) x)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(+.f64 (*.f64 z x) (*.f64 5 z))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 (+.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))","(+.f64 (*.f64 z x) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 z (+.f64 5 x))","(*.f64 z (+.f64 x 5))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 y x) (*.f64 z (+.f64 5 x)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5)))","(*.f64 z (+.f64 x 5))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 (*.f64 -1 x) 5))) (*.f64 y x))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 5 z)","(*.f64 z 5)","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 (+.f64 y z) x) (*.f64 5 z))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (*.f64 5 z))","(*.f64 z (+.f64 x 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 y x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 z x) (+.f64 (*.f64 y x) (*.f64 5 z)))","(fma.f64 y x (*.f64 z (+.f64 x 5)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 (+.f64 y z) x)","(*.f64 x (+.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(*.f64 z x)","(*.f64 x z)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(*.f64 z x)","(*.f64 x z)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(*.f64 z x)","(*.f64 x z)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))","(+.f64 (*.f64 z x) (*.f64 y x))","(*.f64 x (+.f64 y z))"]],"stop":[["saturated",1]],"time":43.636962890625,"type":"simplify"},{"compiler":[[781,342]],"time":9.2470703125,"type":"eval"},{"alts":[["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","next",0.4037476562950724],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","done",0.05078125]],"compiler":[[14,10],[11,7],[14,10]],"count":[[68,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[65,1],"picked":[1,0]}],"min-error":[0],"time":14.780029296875,"type":"prune"},{"compiler":[[41,14]],"locations":[["(*.f64 x (+.f64 z y))",0.015625,false],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))",0.03125,true],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)",0.7130815430532608,true],["(cbrt.f64 (*.f64 x (+.f64 z y)))",2.045419116284321,true]],"time":8.949951171875,"type":"localize"},{"count":[[3,31]],"series":[["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","y","-inf",0.26416015625],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","y","inf",0.2919921875],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","y","0",0.657958984375],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","x","-inf",0.280029296875],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","x","inf",0.27001953125],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","x","0",0.288818359375],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","z","-inf",0.359130859375],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","z","inf",0.298095703125],["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","z","0",0.744873046875],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","y","-inf",0.48583984375],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","y","inf",0.593017578125],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","y","0",1.765869140625],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","z","-inf",0.498046875],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","z","inf",0.64306640625],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","z","0",1.669921875],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","x","-inf",1.049072265625],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","x","inf",0.48095703125],["(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","x","0",0.552001953125],["(cbrt.f64 (*.f64 x (+.f64 z y)))","y","-inf",0.281005859375],["(cbrt.f64 (*.f64 x (+.f64 z y)))","y","inf",0.31201171875],["(cbrt.f64 (*.f64 x (+.f64 z y)))","y","0",1.632080078125],["(cbrt.f64 (*.f64 x (+.f64 z y)))","z","-inf",0.2998046875],["(cbrt.f64 (*.f64 x (+.f64 z y)))","z","inf",0.295166015625],["(cbrt.f64 (*.f64 x (+.f64 z y)))","z","0",0.88916015625],["(cbrt.f64 (*.f64 x (+.f64 z y)))","x","-inf",0.450927734375],["(cbrt.f64 (*.f64 x (+.f64 z y)))","x","inf",0.2958984375],["(cbrt.f64 (*.f64 x (+.f64 z y)))","x","0",0.49609375]],"time":16.781005859375,"type":"series"},{"count":[[3,136]],"egraph":[[2,2932,27,0.026727918000000003],[1,246,27,0.0043183760000000005],[0,11,27,0.000354542]],"inputs":[["(cbrt.f64 (*.f64 x (+.f64 z y)))","(pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3)","(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (+.f64 z y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 x (+.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (+.f64 z y)) 1/6) (pow.f64 (*.f64 x (+.f64 z y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 z y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 z y)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (+.f64 z y))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 z y)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 x (+.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (+.f64 z y))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x z) 1) (*.f64 (*.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 z y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 z y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (+.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) (cbrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 z y)) 2) (*.f64 (cbrt.f64 (+.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (+.f64 z y)) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 z y)) (*.f64 (sqrt.f64 (+.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (+.f64 z y))) (sqrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (+.f64 z y)) 1/6) (*.f64 (pow.f64 (*.f64 x (+.f64 z y)) 1/6) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (+.f64 z y)) 2)) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (+.f64 z y))) (sqrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 z y) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) 1) (cbrt.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) (cbrt.f64 x)) (cbrt.f64 (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 2) (pow.f64 (*.f64 x (+.f64 z y)) 1/6)) (pow.f64 (*.f64 x (+.f64 z y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x z) 3) (pow.f64 (*.f64 x y) 3)) (+.f64 (pow.f64 (*.f64 x z) 2) (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 x z) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x z) 2) (pow.f64 (*.f64 x y) 2)) (-.f64 (*.f64 x z) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 z 3) (pow.f64 y 3)) x) (fma.f64 y (-.f64 y z) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 z z) (*.f64 y y)) x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (+.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y z) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (+.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 x y)) (exp.f64 (*.f64 x z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (+.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 z y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (+.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x z (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z x (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) x) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) x) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x z) 1 (*.f64 (*.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (cbrt.f64 (*.f64 x y)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x z)) 2) (cbrt.f64 (*.f64 x z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x y)) (sqrt.f64 (*.f64 x y)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x z)) (sqrt.f64 (*.f64 x z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (sqrt.f64 y)) (*.f64 (sqrt.f64 x) (sqrt.f64 y)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 y) (sqrt.f64 x)) (*.f64 (sqrt.f64 y) (sqrt.f64 x)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (sqrt.f64 z)) (*.f64 (sqrt.f64 x) (sqrt.f64 z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 z) (sqrt.f64 x)) (*.f64 (sqrt.f64 z) (sqrt.f64 x)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 y)) (sqrt.f64 y) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (sqrt.f64 x)) (sqrt.f64 x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 z) 2)) (cbrt.f64 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 z)) (sqrt.f64 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 x)) (sqrt.f64 x) (*.f64 x y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (+.f64 z y)) (*.f64 z 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z 5) (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (+.f64 z y) (*.f64 z 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z 5) 1) (*.f64 x (+.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z 5 (*.f64 x z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (+.f64 z y) (*.f64 z 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) 2) (cbrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) (sqrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z 5) 3) (pow.f64 (*.f64 x (+.f64 z y)) 3)) (+.f64 (pow.f64 (*.f64 z 5) 2) (-.f64 (pow.f64 (*.f64 x (+.f64 z y)) 2) (*.f64 (*.f64 z 5) (*.f64 x (+.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z 5) 2) (pow.f64 (*.f64 x (+.f64 z y)) 2)) (-.f64 (*.f64 z 5) (*.f64 x (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) (+.f64 z y)) (exp.f64 (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 z y)))) (exp.f64 (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z 5)) (+.f64 1 (expm1.f64 (*.f64 x (+.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (+.f64 z y) (*.f64 z 5))) 1))))))"]],"rules":[["egg-rr",31],["egg-rr",77],["egg-rr",28]],"stop":[["node limit",1]],"time":55.47900390625,"type":"rewrite"},{"count":[[167,184]],"egraph":[[2,2912,2137,0.01809425],[1,809,2229,0.005658165999999999],[0,221,2449,0.00133]],"inputs":[["(pow.f64 (*.f64 y x) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (pow.f64 (*.f64 y x) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 y x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 y 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 y x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 y 7)) 1/9) (pow.f64 z 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))) (pow.f64 z 3)))))))","(pow.f64 (*.f64 z x) 1/3)","(+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 z 7)) 1/9) (pow.f64 y 2))) (+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 z 2) (pow.f64 x 2))) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 z 7)) 1/9) (pow.f64 y 2))) (+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y)))))","(*.f64 (pow.f64 1 1/3) (*.f64 y x))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x))))","(+.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))))))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))))","(*.f64 (pow.f64 1 1/3) (*.f64 z x))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (*.f64 z x))))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) z))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (pow.f64 y 3)) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))))","(*.f64 (pow.f64 1 1/3) (*.f64 y x))","(+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x))))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3)))))) (pow.f64 (*.f64 1 (*.f64 y x)) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3)))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))))","(*.f64 5 z)","(*.f64 5 z)","(*.f64 5 z)","(*.f64 5 z)","(*.f64 5 z)","(+.f64 (*.f64 5 z) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z)))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z))))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) z))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))))))) (pow.f64 (*.f64 1 (*.f64 z x)) 1/3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z)))))","(*.f64 5 z)","(*.f64 5 z)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (*.f64 y x) 1/3)","(cbrt.f64 (*.f64 y x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (pow.f64 (*.f64 y x) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) z) (cbrt.f64 (*.f64 y x)))","(fma.f64 1/3 (*.f64 (*.f64 z (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (cbrt.f64 (*.f64 y x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 y x) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 y 7)) 1/9) (pow.f64 z 2)))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) z) (cbrt.f64 (*.f64 y x))) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)) (*.f64 z z))))","(fma.f64 1/3 (*.f64 (*.f64 z (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (fma.f64 -1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)))) (cbrt.f64 (*.f64 y x))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) z) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)) (*.f64 z z)) (cbrt.f64 (*.f64 y x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) z)) (+.f64 (pow.f64 (*.f64 y x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 y 7)) 1/9) (pow.f64 z 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))) (pow.f64 z 3)))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) z) (cbrt.f64 (*.f64 y x))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)) (*.f64 z z)) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 y y) (*.f64 x x)))) (+.f64 (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) 1/27))) (pow.f64 z 3)))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 z (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (cbrt.f64 (*.f64 y x))) (fma.f64 -1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (*.f64 x (*.f64 x (*.f64 y y))))))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) z) (cbrt.f64 (*.f64 y x))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 y 7)) 1/18)) (*.f64 z z)) (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 y x)) (*.f64 y x))) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (*.f64 -1/3 (pow.f64 z 3))))))","(pow.f64 (*.f64 z x) 1/3)","(cbrt.f64 (*.f64 x z))","(+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y)))","(+.f64 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) y) (cbrt.f64 (*.f64 x z)))","(fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) (cbrt.f64 (*.f64 x z)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 z 7)) 1/9) (pow.f64 y 2))) (+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y))))","(fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18))) (+.f64 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) y) (cbrt.f64 (*.f64 x z))))","(fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18)))) (fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) (cbrt.f64 (*.f64 x z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 z 2) (pow.f64 x 2))) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 11)) (pow.f64 z 7)) 1/9) (pow.f64 y 2))) (+.f64 (pow.f64 (*.f64 z x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) y)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 z z) (*.f64 x x)))) (*.f64 (pow.f64 y 3) (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))))))) (fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18))) (+.f64 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) y) (cbrt.f64 (*.f64 x z)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 x z) (*.f64 x z)))) (*.f64 (pow.f64 y 3) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27))) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18)))) (fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) (cbrt.f64 (*.f64 x z)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x (*.f64 x (*.f64 z z))))) (*.f64 (pow.f64 y 3) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27))) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18) (pow.f64 (/.f64 (pow.f64 x 11) (pow.f64 z 7)) 1/18)))) (fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18))) (cbrt.f64 (*.f64 x z)))))","(*.f64 (pow.f64 1 1/3) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))","(fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) z (*.f64 y x))","(fma.f64 y x (*.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18))))","(fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) (*.f64 y x))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x))))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18))))) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) z (*.f64 y x)))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))))) (fma.f64 y x (*.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)))))","(fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) 1/9)) (fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) (*.f64 y x)))","(+.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))))))) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))))","(fma.f64 (pow.f64 z 3) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) 1/27))) (fma.f64 (cbrt.f64 (*.f64 y x)) (+.f64 (*.f64 -2/27 (/.f64 (*.f64 x x) y)) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) 1/27)) (cbrt.f64 (/.f64 1 (*.f64 y x)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))))))) (fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18))))) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) z (*.f64 y x))))","(fma.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (fma.f64 (cbrt.f64 (*.f64 y x)) (fma.f64 -2/27 (/.f64 x (/.f64 y x)) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 y x)))))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -2/27 (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18))))))) (fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))))) (fma.f64 y x (*.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18))))))","(fma.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (fma.f64 (cbrt.f64 (*.f64 y x)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) -5/27) (*.f64 -2/27 (*.f64 (/.f64 x y) x))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18))) -1/9) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -2/27)))) (fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) 1/9)) (fma.f64 z (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) (*.f64 y x))))","(*.f64 (pow.f64 1 1/3) (*.f64 z x))","(*.f64 x z)","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (*.f64 x z))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (*.f64 x z))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (*.f64 (pow.f64 1 1/3) (*.f64 z x))))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (fma.f64 (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)) 1/9)) (*.f64 y y) (*.f64 x z)))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 x z (*.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)))))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) 1/9))) (*.f64 x z)))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) z))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (pow.f64 y 3)) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (fma.f64 (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)) 1/9)) (*.f64 y y) (fma.f64 (fma.f64 (cbrt.f64 (*.f64 x z)) (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))))) (cbrt.f64 (/.f64 1 (*.f64 x z)))) (*.f64 -2/27 (/.f64 (*.f64 x x) z))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9)) (+.f64 (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)))))) (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))))))) (pow.f64 y 3) (*.f64 x z))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)))) (fma.f64 x z (*.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 x z)) (fma.f64 -2/27 (/.f64 (*.f64 x x) z) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 x z)))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -2/27))))))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) 1/9))) (fma.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 x z)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (cbrt.f64 (/.f64 (/.f64 1 z) x))) (*.f64 -2/27 (*.f64 (/.f64 x z) x))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -2/27)))) (*.f64 x z))))","(*.f64 (pow.f64 1 1/3) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))","(fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) 5) z (*.f64 y x))","(fma.f64 y x (*.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5)))","(fma.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5) (*.f64 y x))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x))))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18))))) (fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) 5) z (*.f64 y x)))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))))) (fma.f64 y x (*.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5))))","(fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) 1/9)) (fma.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5) (*.f64 y x)))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)))) (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) y) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3))))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) y))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 y x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/3)))))) (pow.f64 (*.f64 1 (*.f64 y x)) 1/3)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 4)) 1/9))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 2)) 1/3)))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 5 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 y 4) (pow.f64 x 13))) 1/9)))) z) (*.f64 (pow.f64 1 1/3) (*.f64 y x)))))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 (cbrt.f64 (*.f64 y x)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18))))) (fma.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) 1/27))) (fma.f64 (cbrt.f64 (*.f64 y x)) (+.f64 (*.f64 -2/27 (/.f64 (*.f64 x x) y)) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) 1/27)) (cbrt.f64 (/.f64 1 (*.f64 y x)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))))))) (pow.f64 z 3) (fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 1) 5) z (*.f64 y x))))","(fma.f64 (*.f64 z z) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))))) (fma.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (fma.f64 (cbrt.f64 (*.f64 y x)) (fma.f64 -2/27 (/.f64 x (/.f64 y x)) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 y x)))))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -2/27 (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18))))))) (fma.f64 y x (*.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5)))))","(fma.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 y x)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) y) 1/18)) 1/9)) (fma.f64 (pow.f64 z 3) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -5/27) (fma.f64 (cbrt.f64 (*.f64 y x)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y x))) (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)))) -5/27) (*.f64 -2/27 (*.f64 (/.f64 x y) x))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 y y)) 1/18))) -1/9) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 y y))) -2/27)))) (fma.f64 z (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18) (pow.f64 (*.f64 (pow.f64 y 4) (pow.f64 x 13)) 1/18)) 5) (*.f64 y x))))","(*.f64 5 z)","(*.f64 z 5)","(*.f64 5 z)","(*.f64 z 5)","(*.f64 5 z)","(*.f64 z 5)","(*.f64 5 z)","(*.f64 z 5)","(*.f64 5 z)","(*.f64 z 5)","(+.f64 (*.f64 5 z) (*.f64 (pow.f64 1 1/3) (*.f64 z x)))","(fma.f64 5 z (*.f64 x z))","(*.f64 z (+.f64 x 5))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z)))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (fma.f64 5 z (*.f64 x z)))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (*.f64 z (+.f64 x 5)))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z))))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (fma.f64 (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)) 1/9)) (*.f64 y y) (fma.f64 5 z (*.f64 x z))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)))) (*.f64 z (+.f64 x 5))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) 1/9))) (*.f64 z (+.f64 x 5))))","(+.f64 (*.f64 y (+.f64 (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 z 4) (pow.f64 x 13))) 1/9)))) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)))) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) z) 1/9)))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 z 4)) 1/9))))) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 x 2) z))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 z x)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))))))) (pow.f64 (*.f64 1 (*.f64 z x)) 1/3)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3))) (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 z 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 z 2)) 1/3)))))) (pow.f64 y 3)) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 z x)) (*.f64 5 z)))))","(fma.f64 y (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) 1) (fma.f64 (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)) 1/9)) (*.f64 y y) (fma.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18)) -1/9)) (fma.f64 (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))))) (cbrt.f64 (/.f64 1 (*.f64 x z)))) (*.f64 -2/27 (/.f64 (*.f64 x x) z))) (cbrt.f64 (*.f64 x z)) (+.f64 (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)))))) (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))))))) (pow.f64 y 3) (fma.f64 5 z (*.f64 x z)))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18)))) (fma.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 x z)) (fma.f64 -2/27 (/.f64 (*.f64 x x) z) (*.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 x z)))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -2/27)))) (*.f64 z (+.f64 x 5)))))","(fma.f64 y (*.f64 (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18) (pow.f64 (*.f64 (pow.f64 x 13) (pow.f64 z 4)) 1/18)) (fma.f64 (*.f64 y y) (fma.f64 (cbrt.f64 (*.f64 x z)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) z) 1/18) 1/9))) (fma.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (*.f64 z z)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 z 4)) 1/18) -1/9))) (fma.f64 (cbrt.f64 (*.f64 x z)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (cbrt.f64 (/.f64 (/.f64 1 z) x))) (*.f64 -2/27 (*.f64 (/.f64 x z) x))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -5/27) (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (*.f64 z z))) -2/27)))) (*.f64 z (+.f64 x 5)))))","(*.f64 5 z)","(*.f64 z 5)","(*.f64 5 z)","(*.f64 z 5)"]],"stop":[["node limit",1]],"time":48.43603515625,"type":"simplify"},{"compiler":[[5978,3669]],"time":69.286865234375,"type":"eval"},{"alts":[["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","done",0.4037476562950724],["(fma.f64 x (+.f64 y z) (*.f64 z 5))","done",0.05078125]],"compiler":[[14,10],[11,7]],"count":[[214,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[212,0],"picked":[1,1]}],"min-error":[0],"time":55.06201171875,"type":"prune"},{"accuracy":[0.0078125],"baseline":[0.0078125],"branch":[["x",0.0078125,1],["y",0.0078125,1],["z",0.0078125,1],["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))",0.0078125,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[60,31]],"count":[[5,1]],"inputs":[["(fma.f64 5 z (pow.f64 (cbrt.f64 (*.f64 x (+.f64 z y))) 3))","(*.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) (pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) (*.f64 z 5))) 2))","(fma.f64 5 z (*.f64 x (+.f64 z y)))","(fma.f64 x (+.f64 y z) (*.f64 z 5))","(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))"]],"link":["."],"name":["Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, C"],"oracle":[0.8596804688852174],"outputs":[["(fma.f64 5 z (*.f64 x (+.f64 z y)))"]],"time":16.39306640625,"times":[["x",3.8369140625],["y",3.630126953125],["z",3.7041015625],["(+.f64 (*.f64 x (+.f64 y z)) (*.f64 z 5))",3.98095703125]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[1,10,11,3.1583e-5],[0,8,11,1.9417e-5]],"inputs":[["(fma.f64 5 z (*.f64 x (+.f64 z y)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 5 z (*.f64 x (+.f64 z y)))"]],"stop":[["done",1],["saturated",1]],"time":8.1298828125,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.131103515625,"type":"end"}]