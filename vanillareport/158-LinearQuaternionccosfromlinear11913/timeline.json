[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.46829234808683395,0.349268042948097,0.18243960896506906],[11,0.46829234808683395,0.3551216972991824,0.17658595461398363],[10,0.43707285821437836,0.44487773068249226,0.11804941110312939],[9,0.43707285821437836,0.45268260315060616,0.11024453863501549],[8,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[7,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[6,0.062438979744911194,0.9365846961736679,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":79.80712890625,"type":"analyze"},{"outcomes":[["body",512,"invalid",110.371337890625,1032],["body",2048,"invalid",0.343017578125,1],["body",256,"invalid",118.6357421875,2131],["body",1024,"invalid",339.9755859375,1930],["body",1024,"valid",389.19970703125,2097],["body",512,"valid",107.06396484375,1002],["body",2048,"valid",1.85888671875,4],["body",256,"valid",274.109619140625,5153]],"time":1355.40283203125,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.708e-6],[7,6744,22,0.028170833],[6,2566,22,0.017232041],[5,839,22,0.006140124],[4,329,22,0.002323958],[3,144,22,0.0010214579999999998],[2,63,22,0.00047020799999999995],[1,28,22,0.000212208],[0,11,22,7.8375e-5]],"inputs":[["0","1"],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","(*.f64 (sin.f64 y) (/.f64 (sinh.f64 x) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","(/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) y)","(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) y))","(/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))","(*.f64 (sin.f64 y) (/.f64 (sinh.f64 x) x))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":50.93408203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,5079,11,0.023058125],[6,1295,11,0.010932666],[5,428,11,0.0032677500000000003],[4,171,11,0.001271916],[3,77,11,0.000577291],[2,35,11,0.000278958],[1,16,11,0.000134958],[0,7,11,5.3083e-5]],"inputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","(/.f64 (sin.f64 x) (/.f64 y (sinh.f64 y)))","(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) y))"]],"stop":[["node limit",1]],"time":34.919921875,"type":"simplify"},{"compiler":[[16,8]],"time":0.326171875,"type":"eval"},{"alts":[["(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) y))","fresh",0.421875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","next",0.27181625976844204]],"compiler":[[9,6],[9,6],[9,6],[9,6]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.26953125],"time":1.196044921875,"type":"prune"},{"compiler":[[19,6]],"locations":[["(sin.f64 x)",0.01171875,true],["(/.f64 (sinh.f64 y) y)",0.015625,true],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))",0.23125896750900723,true]],"time":4.89892578125,"type":"localize"},{"count":[[3,40]],"series":[["(sin.f64 x)","x","-inf",0.132080078125],["(sin.f64 x)","x","inf",0.135986328125],["(sin.f64 x)","x","0",0.201171875],["(/.f64 (sinh.f64 y) y)","y","-inf",0.52587890625],["(/.f64 (sinh.f64 y) y)","y","inf",0.33203125],["(/.f64 (sinh.f64 y) y)","y","0",0.2138671875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","y","-inf",1.822998046875],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","y","inf",1.203125],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","y","0",0.89599609375],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","x","-inf",0.56494140625],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","x","inf",0.975830078125],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","x","0",0.90087890625]],"time":8.094970703125,"type":"series"},{"count":[[3,69]],"egraph":[[2,1998,20,0.018877124000000002],[1,148,20,0.0026020830000000003],[0,7,20,0.00016925]],"inputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","(/.f64 (sinh.f64 y) y)","(sin.f64 x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 x) (/.f64 y (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sinh.f64 y)) (sin.f64 x)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (neg.f64 (sinh.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sinh.f64 y) y)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 (/.f64 (sinh.f64 y) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 3) (pow.f64 (sin.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sinh.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sinh.f64 y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sinh.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sinh.f64 y) y)) (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) y)) 2) (cbrt.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sinh.f64 y) y)) (sqrt.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sinh.f64 y)) (*.f64 (sqrt.f64 (sinh.f64 y)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sinh.f64 y)) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (sinh.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) 1) (/.f64 (cbrt.f64 (sinh.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sinh.f64 y)) 1) (/.f64 (sqrt.f64 (sinh.f64 y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sinh.f64 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sinh.f64 y)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (sinh.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (sinh.f64 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (sinh.f64 y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (sinh.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sinh.f64 y) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sinh.f64 y) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sinh.f64 y) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (cbrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (sqrt.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 x)))))))"]],"rules":[["egg-rr",16],["egg-rr",31],["egg-rr",22]],"stop":[["node limit",1]],"time":40.697998046875,"type":"rewrite"},{"count":[[109,102]],"egraph":[[4,5865,724,0.025065125],[3,2165,752,0.012845875],[2,609,803,0.004518875],[1,216,845,0.001440583],[0,78,860,0.000390208]],"inputs":[["(*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 -1/10080 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(sin.f64 x)","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (+.f64 (*.f64 1/5040 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x)))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 y x))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 y x))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x))))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 -1/12 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 3))))","(fma.f64 -1/12 (*.f64 (pow.f64 x 3) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y)) (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 y x)))","(*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (*.f64 1/2 x) (*.f64 -1/12 (pow.f64 x 3))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x)))))","(fma.f64 -1/12 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 3)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 1/240 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 5)))))","(fma.f64 -1/12 (*.f64 (pow.f64 x 3) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y)) (fma.f64 1/240 (*.f64 (/.f64 (pow.f64 x 5) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 y x))))","(fma.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 x y)) (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (*.f64 -1/12 (pow.f64 x 3)) (*.f64 1/240 (pow.f64 x 5)))))","(*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -1/12 (pow.f64 x 3)) (*.f64 1/240 (pow.f64 x 5)))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 -1/10080 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 -1/10080 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 7))) (fma.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x))))))","(fma.f64 -1/12 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 3)) (fma.f64 -1/10080 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 7)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 1/240 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 5))))))","(fma.f64 -1/12 (*.f64 (pow.f64 x 3) (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y)) (fma.f64 1/240 (*.f64 (/.f64 (pow.f64 x 5) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 -1/10080 (*.f64 (/.f64 (pow.f64 x 7) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) (/.f64 y x)))))","(+.f64 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (*.f64 1/2 x) (*.f64 -1/12 (pow.f64 x 3)))) (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (*.f64 1/240 (pow.f64 x 5)) (*.f64 -1/10080 (pow.f64 x 7)))))","(*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (+.f64 (+.f64 (*.f64 1/240 (pow.f64 x 5)) (*.f64 -1/12 (pow.f64 x 3))) (+.f64 (*.f64 1/2 x) (*.f64 -1/10080 (pow.f64 x 7)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(sin.f64 x)","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y))))","(*.f64 (fma.f64 1/6 (*.f64 y y) 1) (sin.f64 x))","(*.f64 (sin.f64 x) (fma.f64 1/6 (*.f64 y y) 1))","(*.f64 (sin.f64 x) (fma.f64 y (*.f64 y 1/6) 1))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y)))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (*.f64 (fma.f64 1/6 (*.f64 y y) 1) (sin.f64 x)))","(*.f64 (sin.f64 x) (fma.f64 1/6 (*.f64 y y) (fma.f64 1/120 (pow.f64 y 4) 1)))","(*.f64 (sin.f64 x) (fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1)))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (+.f64 (sin.f64 x) (fma.f64 1/5040 (*.f64 (sin.f64 x) (pow.f64 y 6)) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y))))))","(+.f64 (*.f64 (sin.f64 x) (fma.f64 1/5040 (pow.f64 y 6) (*.f64 y (*.f64 y 1/6)))) (*.f64 (+.f64 (*.f64 1/120 (pow.f64 y 4)) 1) (sin.f64 x)))","(+.f64 (sin.f64 x) (*.f64 (sin.f64 x) (fma.f64 y (*.f64 y 1/6) (fma.f64 1/5040 (pow.f64 y 6) (*.f64 1/120 (pow.f64 y 4))))))","(*.f64 (sin.f64 x) (fma.f64 1/5040 (pow.f64 y 6) (fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (sin.f64 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (/.f64 (sin.f64 x) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))))","(*.f64 (/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y) (sin.f64 x))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (*.f64 1/6 (*.f64 y y)))","(fma.f64 1/6 (*.f64 y y) 1)","(fma.f64 y (*.f64 y 1/6) 1)","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (fma.f64 1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))))","(fma.f64 1/6 (*.f64 y y) (fma.f64 1/120 (pow.f64 y 4) 1))","(fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1))","(+.f64 1 (+.f64 (*.f64 1/5040 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(+.f64 1 (fma.f64 1/5040 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4)))))","(fma.f64 1/5040 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y y) (fma.f64 1/120 (pow.f64 y 4) 1)))","(fma.f64 1/5040 (pow.f64 y 6) (fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1)))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(/.f64 (*.f64 1/2 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 1/2 (exp.f64 y) (/.f64 -1/2 (exp.f64 y))) y)","x","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) x)","(fma.f64 -1/6 (pow.f64 x 3) x)","(fma.f64 (pow.f64 x 3) -1/6 x)","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 1/120 (pow.f64 x 5) x))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 (pow.f64 x 5) 1/120 x))","(+.f64 (*.f64 -1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/5040 (pow.f64 x 7)) (+.f64 (*.f64 1/120 (pow.f64 x 5)) x)))","(fma.f64 -1/6 (pow.f64 x 3) (fma.f64 -1/5040 (pow.f64 x 7) (fma.f64 1/120 (pow.f64 x 5) x)))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 (pow.f64 x 7) -1/5040 (fma.f64 (pow.f64 x 5) 1/120 x)))","(fma.f64 (pow.f64 x 3) -1/6 (fma.f64 (pow.f64 x 5) 1/120 (fma.f64 (pow.f64 x 7) -1/5040 x)))"]],"stop":[["node limit",1]],"time":45.4140625,"type":"simplify"},{"compiler":[[1346,622]],"time":14.391845703125,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","next",0.9495044543433179],["(*.f64 (pow.f64 (sqrt.f64 (sin.f64 x)) 2) (/.f64 (sinh.f64 y) y))","fresh",32.97103500976844],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","done",0.27181625976844204],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","fresh",16.61289475712965],["(*.f64 (sin.f64 x) (*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))))","fresh",1.1329270258304431]],"compiler":[[31,21],[12,9],[9,6],[11,8],[18,12],[31,21],[12,9],[11,8],[18,12]],"count":[[104,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[102,4],"picked":[1,1]}],"min-error":[0.24279232007700186],"time":21.64501953125,"type":"prune"},{"compiler":[[129,80]],"locations":[["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))",0.04296875,true],["(*.f64 (pow.f64 y 4) (sin.f64 x))",0.046875,true],["(*.f64 (pow.f64 y 2) (sin.f64 x))",0.10384750976844201,true],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))",0.12109375,true]],"time":27.5400390625,"type":"localize"},{"count":[[4,16]],"series":[["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","x","-inf",0.2841796875],["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","x","inf",0.7578125],["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","x","0",0.30908203125],["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","y","-inf",0.15478515625],["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","y","inf",0.235107421875],["(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))","y","0",0.267822265625],["(*.f64 (pow.f64 y 4) (sin.f64 x))","x","-inf",0.25],["(*.f64 (pow.f64 y 4) (sin.f64 x))","x","inf",0.448974609375],["(*.f64 (pow.f64 y 4) (sin.f64 x))","x","0",0.3310546875],["(*.f64 (pow.f64 y 4) (sin.f64 x))","y","-inf",0.178955078125],["(*.f64 (pow.f64 y 4) (sin.f64 x))","y","inf",0.302001953125],["(*.f64 (pow.f64 y 4) (sin.f64 x))","y","0",0.364013671875],["(*.f64 (pow.f64 y 2) (sin.f64 x))","x","-inf",0.143798828125],["(*.f64 (pow.f64 y 2) (sin.f64 x))","x","inf",0.2890625],["(*.f64 (pow.f64 y 2) (sin.f64 x))","x","0",0.22509765625],["(*.f64 (pow.f64 y 2) (sin.f64 x))","y","-inf",0.163818359375],["(*.f64 (pow.f64 y 2) (sin.f64 x))","y","inf",0.14697265625],["(*.f64 (pow.f64 y 2) (sin.f64 x))","y","0",0.14501953125],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","x","-inf",0.407958984375],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","x","inf",0.528076171875],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","x","0",0.445068359375],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","y","-inf",0.2080078125],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","y","inf",0.448974609375],["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","y","0",0.485107421875]],"time":7.7900390625,"type":"series"},{"count":[[4,90]],"egraph":[[2,3108,42,0.026429750000000002],[1,289,42,0.0046001670000000005],[0,14,42,0.000447]],"inputs":[["(*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))","(*.f64 (pow.f64 y 2) (sin.f64 x))","(*.f64 (pow.f64 y 4) (sin.f64 x))","(*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)) 1/6)) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)) 1/6))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 4) 1/36) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) (sqrt.f64 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 4) 1/36))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) (sqrt.f64 1/6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 1/6 (*.f64 (*.f64 y y) (sin.f64 x)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 y y) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 y y) (sin.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y y) (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 y y) (sin.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 y y) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 y y) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 y y) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 y y) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 y y) (sin.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (*.f64 y y) (sin.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 y (sqrt.f64 (sin.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (*.f64 y y) (sin.f64 x))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 x) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (sin.f64 x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (sin.f64 x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 x) (pow.f64 y 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 x) (pow.f64 y 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 8) (pow.f64 (sin.f64 x) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 12) (pow.f64 (sin.f64 x) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (pow.f64 y 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y y) (sqrt.f64 (sin.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 6) (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (cbrt.f64 (*.f64 (*.f64 y y) (sin.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 y (sqrt.f64 (sin.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 y (sqrt.f64 (sin.f64 x))) 6) (pow.f64 y 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 y y) (sin.f64 x))) (cbrt.f64 (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 y 8) (pow.f64 (sin.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 x) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 12) (pow.f64 (sin.f64 x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 x) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 x) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 4 (log.f64 y) (log.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 4 (log.f64 y) (log.f64 (sin.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (fma.f64 4 (log.f64 y) (log.f64 (sin.f64 x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 x) (pow.f64 y 4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 y y) (sqrt.f64 (sin.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (fma.f64 4 (log.f64 y) (log.f64 (sin.f64 x))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (*.f64 (sin.f64 x) 1/120))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (*.f64 (sin.f64 x) 1/120)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (*.f64 (sin.f64 x) 1/120)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (*.f64 (sin.f64 x) 1/120)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 y 8) (pow.f64 (sin.f64 x) 2)) 1/14400) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 (pow.f64 y 8) (pow.f64 (sin.f64 x) 2)) 1/14400))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 y 4)) (*.f64 (sin.f64 x) 1/120)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (*.f64 (pow.f64 y 4) 1/120))) 1) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",27],["egg-rr",21],["egg-rr",21]],"stop":[["node limit",1]],"time":50.5380859375,"type":"rewrite"},{"count":[[106,122]],"egraph":[[9,6452,352,0.07037637499999999],[8,6335,352,0.0587655],[7,6231,352,0.049116916999999996],[6,6138,352,0.040333042],[5,5655,352,0.031412125],[4,4725,352,0.021848],[3,2667,352,0.011558458],[2,603,392,0.004751166],[1,183,448,0.0012615410000000001],[0,62,448,0.000308041]],"inputs":[["(*.f64 1/6 (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 1/720 (*.f64 (pow.f64 y 2) (pow.f64 x 5)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/30240 (*.f64 (pow.f64 y 2) (pow.f64 x 7))) (*.f64 1/720 (*.f64 (pow.f64 y 2) (pow.f64 x 5))))))","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 2) (pow.f64 x 5))) (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 y 2) (pow.f64 x 7))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 2) (pow.f64 x 5))) (*.f64 (pow.f64 y 2) x))))","(*.f64 (pow.f64 y 4) x)","(+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 y 4) (pow.f64 x 7))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))))","(*.f64 1/120 (*.f64 (pow.f64 y 4) x))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (+.f64 (*.f64 1/14400 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/604800 (*.f64 (pow.f64 y 4) (pow.f64 x 7))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (+.f64 (*.f64 1/14400 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/6 (*.f64 (pow.f64 y 2) x))","(*.f64 (*.f64 1/6 (*.f64 y y)) x)","(*.f64 1/6 (*.f64 y (*.f64 y x)))","(*.f64 1/6 (*.f64 (*.f64 y y) x))","(*.f64 y (*.f64 (*.f64 y x) 1/6))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))))","(fma.f64 1/6 (*.f64 (*.f64 y y) x) (*.f64 (*.f64 -1/36 (*.f64 y y)) (pow.f64 x 3)))","(fma.f64 1/6 (*.f64 y (*.f64 y x)) (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 3) -1/36)))","(*.f64 (*.f64 y y) (+.f64 (*.f64 1/6 x) (*.f64 -1/36 (pow.f64 x 3))))","(*.f64 (*.f64 y (*.f64 y x)) (+.f64 1/6 (*.f64 -1/36 (*.f64 x x))))","(*.f64 (*.f64 (*.f64 y y) x) (+.f64 1/6 (*.f64 -1/36 (*.f64 x x))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 1/720 (*.f64 (pow.f64 y 2) (pow.f64 x 5)))))","(fma.f64 1/6 (*.f64 (*.f64 y y) x) (fma.f64 -1/36 (*.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 (*.f64 1/720 (*.f64 y y)) (pow.f64 x 5))))","(fma.f64 1/6 (*.f64 y (*.f64 y x)) (fma.f64 -1/36 (*.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 y y))))","(fma.f64 1/6 (*.f64 (*.f64 y y) x) (*.f64 (*.f64 y y) (+.f64 (*.f64 -1/36 (pow.f64 x 3)) (*.f64 1/720 (pow.f64 x 5)))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 1/6 x) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 -1/36 (pow.f64 x 3)))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (+.f64 (*.f64 1/6 x) (*.f64 -1/36 (pow.f64 x 3)))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 x (+.f64 1/6 (*.f64 -1/36 (*.f64 x x))))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/30240 (*.f64 (pow.f64 y 2) (pow.f64 x 7))) (*.f64 1/720 (*.f64 (pow.f64 y 2) (pow.f64 x 5))))))","(fma.f64 1/6 (*.f64 (*.f64 y y) x) (fma.f64 -1/36 (*.f64 (*.f64 y y) (pow.f64 x 3)) (fma.f64 -1/30240 (*.f64 (*.f64 y y) (pow.f64 x 7)) (*.f64 (*.f64 1/720 (*.f64 y y)) (pow.f64 x 5)))))","(fma.f64 1/6 (*.f64 y (*.f64 y x)) (fma.f64 -1/36 (*.f64 (*.f64 y y) (pow.f64 x 3)) (fma.f64 -1/30240 (*.f64 (*.f64 (pow.f64 x 7) y) y) (*.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 y y)))))","(+.f64 (*.f64 (*.f64 y y) (+.f64 (*.f64 1/6 x) (*.f64 -1/36 (pow.f64 x 3)))) (*.f64 (*.f64 y y) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 -1/30240 (pow.f64 x 7)))))","(*.f64 (*.f64 y y) (+.f64 (+.f64 (*.f64 1/6 x) (*.f64 -1/36 (pow.f64 x 3))) (+.f64 (*.f64 -1/30240 (pow.f64 x 7)) (*.f64 1/720 (pow.f64 x 5)))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 -1/30240 (pow.f64 x 7)) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (+.f64 (*.f64 1/6 x) (*.f64 -1/36 (pow.f64 x 3))))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 -1/30240 (pow.f64 x 7)) (+.f64 (*.f64 1/720 (pow.f64 x 5)) (*.f64 x (+.f64 1/6 (*.f64 -1/36 (*.f64 x x)))))))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (*.f64 (pow.f64 y 2) x))","(fma.f64 -1/6 (*.f64 (*.f64 y y) (pow.f64 x 3)) (*.f64 (*.f64 y y) x))","(fma.f64 (*.f64 y y) x (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 3) -1/6)))","(*.f64 (*.f64 y y) (+.f64 x (*.f64 (pow.f64 x 3) -1/6)))","(*.f64 y (*.f64 y (+.f64 x (*.f64 (pow.f64 x 3) -1/6))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 2) (pow.f64 x 5))) (*.f64 (pow.f64 y 2) x)))","(fma.f64 -1/6 (*.f64 (*.f64 y y) (pow.f64 x 3)) (fma.f64 1/120 (*.f64 (*.f64 y y) (pow.f64 x 5)) (*.f64 (*.f64 y y) x)))","(fma.f64 (*.f64 (*.f64 y y) (pow.f64 x 3)) -1/6 (fma.f64 (*.f64 y y) x (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 5) 1/120))))","(fma.f64 y (*.f64 y x) (*.f64 (*.f64 y y) (+.f64 (*.f64 (pow.f64 x 5) 1/120) (*.f64 (pow.f64 x 3) -1/6))))","(*.f64 (*.f64 y y) (+.f64 x (+.f64 (*.f64 (pow.f64 x 3) -1/6) (*.f64 (pow.f64 x 5) 1/120))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (+.f64 x (*.f64 (pow.f64 x 5) 1/120))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 y 2) (pow.f64 x 7))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 2) (pow.f64 x 5))) (*.f64 (pow.f64 y 2) x))))","(fma.f64 -1/5040 (*.f64 (*.f64 y y) (pow.f64 x 7)) (fma.f64 -1/6 (*.f64 (*.f64 y y) (pow.f64 x 3)) (fma.f64 1/120 (*.f64 (*.f64 y y) (pow.f64 x 5)) (*.f64 (*.f64 y y) x))))","(fma.f64 (*.f64 (*.f64 (pow.f64 x 7) y) y) -1/5040 (fma.f64 (*.f64 (*.f64 y y) (pow.f64 x 3)) -1/6 (fma.f64 (*.f64 y y) x (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 5) 1/120)))))","(+.f64 (*.f64 (*.f64 y y) (+.f64 x (*.f64 (pow.f64 x 5) 1/120))) (*.f64 (*.f64 y y) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (*.f64 (pow.f64 x 7) -1/5040))))","(*.f64 (*.f64 y y) (+.f64 (+.f64 x (*.f64 (pow.f64 x 5) 1/120)) (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (*.f64 (pow.f64 x 3) -1/6))))","(*.f64 (*.f64 y y) (+.f64 x (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (*.f64 (pow.f64 x 5) 1/120)))))","(*.f64 (*.f64 y y) (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (+.f64 x (*.f64 (pow.f64 x 5) 1/120)))))","(*.f64 (pow.f64 y 4) x)","(*.f64 x (pow.f64 y 4))","(+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 (pow.f64 y 4) x (*.f64 (*.f64 -1/6 (pow.f64 y 4)) (pow.f64 x 3)))","(fma.f64 x (pow.f64 y 4) (*.f64 (pow.f64 x 3) (*.f64 -1/6 (pow.f64 y 4))))","(*.f64 (pow.f64 y 4) (+.f64 x (*.f64 (pow.f64 x 3) -1/6)))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 1/120 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (fma.f64 (pow.f64 y 4) x (*.f64 (*.f64 -1/6 (pow.f64 y 4)) (pow.f64 x 3))))","(fma.f64 1/120 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (fma.f64 x (pow.f64 y 4) (*.f64 (pow.f64 x 3) (*.f64 -1/6 (pow.f64 y 4)))))","(fma.f64 x (pow.f64 y 4) (*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 5) 1/120) (*.f64 (pow.f64 x 3) -1/6))))","(*.f64 (pow.f64 y 4) (+.f64 x (+.f64 (*.f64 (pow.f64 x 3) -1/6) (*.f64 (pow.f64 x 5) 1/120))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (+.f64 x (*.f64 (pow.f64 x 5) 1/120))))","(+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 y 4) (pow.f64 x 7))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (+.f64 (*.f64 (pow.f64 y 4) x) (*.f64 -1/6 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))))","(fma.f64 -1/5040 (*.f64 (pow.f64 x 7) (pow.f64 y 4)) (fma.f64 1/120 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (fma.f64 (pow.f64 y 4) x (*.f64 (*.f64 -1/6 (pow.f64 y 4)) (pow.f64 x 3)))))","(fma.f64 -1/5040 (*.f64 (pow.f64 x 7) (pow.f64 y 4)) (fma.f64 1/120 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (fma.f64 x (pow.f64 y 4) (*.f64 (pow.f64 x 3) (*.f64 -1/6 (pow.f64 y 4))))))","(+.f64 (*.f64 (pow.f64 y 4) (+.f64 x (*.f64 (pow.f64 x 3) -1/6))) (*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 5) 1/120) (*.f64 (pow.f64 x 7) -1/5040))))","(*.f64 (pow.f64 y 4) (+.f64 (+.f64 x (*.f64 (pow.f64 x 3) -1/6)) (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (*.f64 (pow.f64 x 5) 1/120))))","(*.f64 (pow.f64 y 4) (+.f64 x (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (*.f64 (pow.f64 x 5) 1/120)))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 7) -1/5040) (+.f64 (*.f64 (pow.f64 x 3) -1/6) (+.f64 x (*.f64 (pow.f64 x 5) 1/120)))))","(*.f64 1/120 (*.f64 (pow.f64 y 4) x))","(*.f64 (*.f64 1/120 (pow.f64 y 4)) x)","(*.f64 (*.f64 1/120 x) (pow.f64 y 4))","(*.f64 (pow.f64 y 4) (*.f64 x 1/120))","(*.f64 1/120 (*.f64 x (pow.f64 y 4)))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (*.f64 (*.f64 -1/720 (pow.f64 y 4)) (pow.f64 x 3)))","(fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (*.f64 (pow.f64 x 3) (*.f64 (pow.f64 y 4) -1/720)))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 x 1/120) (*.f64 (pow.f64 x 3) -1/720)))","(*.f64 (*.f64 x (pow.f64 y 4)) (+.f64 (*.f64 -1/720 (*.f64 x x)) 1/120))","(*.f64 (*.f64 x (pow.f64 y 4)) (+.f64 1/120 (*.f64 -1/720 (*.f64 x x))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (+.f64 (*.f64 1/14400 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (fma.f64 1/14400 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (*.f64 (*.f64 -1/720 (pow.f64 y 4)) (pow.f64 x 3))))","(fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (fma.f64 (*.f64 (pow.f64 x 3) (pow.f64 y 4)) -1/720 (*.f64 (pow.f64 x 5) (*.f64 (pow.f64 y 4) 1/14400))))","(fma.f64 x (*.f64 1/120 (pow.f64 y 4)) (*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (*.f64 (pow.f64 x 5) 1/14400))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (+.f64 (*.f64 (pow.f64 x 5) 1/14400) (*.f64 x 1/120))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 5) 1/14400) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (*.f64 x 1/120))))","(+.f64 (*.f64 -1/604800 (*.f64 (pow.f64 y 4) (pow.f64 x 7))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) x)) (+.f64 (*.f64 1/14400 (*.f64 (pow.f64 y 4) (pow.f64 x 5))) (*.f64 -1/720 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))))","(fma.f64 -1/604800 (*.f64 (pow.f64 x 7) (pow.f64 y 4)) (fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (fma.f64 1/14400 (*.f64 (pow.f64 x 5) (pow.f64 y 4)) (*.f64 (*.f64 -1/720 (pow.f64 y 4)) (pow.f64 x 3)))))","(fma.f64 (*.f64 (pow.f64 x 7) (pow.f64 y 4)) -1/604800 (fma.f64 1/120 (*.f64 x (pow.f64 y 4)) (fma.f64 (*.f64 (pow.f64 x 3) (pow.f64 y 4)) -1/720 (*.f64 (pow.f64 x 5) (*.f64 (pow.f64 y 4) 1/14400)))))","(+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (*.f64 (pow.f64 x 5) 1/14400))) (*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 7) -1/604800) (*.f64 x 1/120))))","(*.f64 (pow.f64 y 4) (+.f64 (+.f64 (*.f64 (pow.f64 x 7) -1/604800) (*.f64 x 1/120)) (+.f64 (*.f64 (pow.f64 x 5) 1/14400) (*.f64 (pow.f64 x 3) -1/720))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 x 1/120) (+.f64 (*.f64 (pow.f64 x 5) 1/14400) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (*.f64 (pow.f64 x 7) -1/604800)))))","(*.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 x 3) -1/720) (+.f64 (*.f64 (pow.f64 x 5) 1/14400) (+.f64 (*.f64 (pow.f64 x 7) -1/604800) (*.f64 x 1/120)))))"]],"stop":[["node limit",1]],"time":89.4638671875,"type":"simplify"},{"compiler":[[4299,2694]],"time":41.825927734375,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","done",0.9495044543433179],["(*.f64 (pow.f64 (sqrt.f64 (sin.f64 x)) 2) (/.f64 (sinh.f64 y) y))","fresh",32.97103500976844],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","done",0.27181625976844204],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","fresh",16.61289475712965],["(*.f64 (sin.f64 x) (*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))))","next",1.1329270258304431]],"compiler":[[31,21],[12,9],[9,6],[11,8],[18,12],[12,9],[11,8],[18,12]],"count":[[127,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[122,0],"picked":[1,1]}],"min-error":[0.24279232007700186],"time":32.68017578125,"type":"prune"},{"compiler":[[57,27]],"locations":[["(*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))",0.31640625,true],["(*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))",0.35384750976844204,true],["(cbrt.f64 (sinh.f64 y))",0.36831639479388245,true],["(pow.f64 (cbrt.f64 (sinh.f64 y)) 2)",0.5114250488422101,true]],"time":12.140869140625,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))","y","-inf",0.372802734375],["(*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))","y","inf",0.363037109375],["(*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))","y","0",0.18798828125],["(*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))","y","-inf",1.3369140625],["(*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))","y","inf",1.218017578125],["(*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))","y","0",0.458984375],["(cbrt.f64 (sinh.f64 y))","y","-inf",0.1708984375],["(cbrt.f64 (sinh.f64 y))","y","inf",0.220947265625],["(cbrt.f64 (sinh.f64 y))","y","0",0.26708984375],["(pow.f64 (cbrt.f64 (sinh.f64 y)) 2)","y","-inf",3.298095703125],["(pow.f64 (cbrt.f64 (sinh.f64 y)) 2)","y","inf",1.607177734375],["(pow.f64 (cbrt.f64 (sinh.f64 y)) 2)","y","0",0.615966796875]],"time":10.298095703125,"type":"series"},{"count":[[4,82]],"egraph":[[2,2378,27,0.021032251],[1,207,27,0.003491418],[0,10,30,0.000294084]],"inputs":[["(pow.f64 (cbrt.f64 (sinh.f64 y)) 2)","(cbrt.f64 (sinh.f64 y))","(*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))","(*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sinh.f64 y)) (cbrt.f64 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sinh.f64 y)) (pow.f64 (sinh.f64 y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sinh.f64 y) 1/6) (*.f64 (pow.f64 (sinh.f64 y) 1/6) (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (sinh.f64 y)) (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2)) (cbrt.f64 (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sinh.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (sinh.f64 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (sinh.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2) (cbrt.f64 (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sinh.f64 y) 1/6) (pow.f64 (sinh.f64 y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sinh.f64 y) 1/6) (*.f64 (pow.f64 (sinh.f64 y) 1/6) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (sinh.f64 y)) 1/3) (pow.f64 (sqrt.f64 (sinh.f64 y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 2 (sinh.f64 y))) (cbrt.f64 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sinh.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sinh.f64 y) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (sinh.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (cbrt.f64 (sinh.f64 y)) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (sinh.f64 y)) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 y (cbrt.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (sinh.f64 y))) 2) (/.f64 y (cbrt.f64 (cbrt.f64 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (sinh.f64 y) 1/6) (/.f64 y (pow.f64 (sinh.f64 y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (sinh.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) (sqrt.f64 y)) (sqrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (cbrt.f64 (sinh.f64 y))) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sinh.f64 y)) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (sinh.f64 y) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (sinh.f64 y) (/.f64 (pow.f64 y -2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 (pow.f64 y -2) y) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sinh.f64 y) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sinh.f64 y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) 1) (*.f64 2 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) -1) (*.f64 2 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) (/.f64 1 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sinh.f64 y) -1) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sinh.f64 y) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sinh.f64 y) 3) (/.f64 (pow.f64 y -2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sinh.f64 y) 2) (pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 (sinh.f64 y)) y) 3) (pow.f64 (sinh.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sinh.f64 y) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sinh.f64 y) y)))))))"]],"rules":[["egg-rr",19],["egg-rr",24],["egg-rr",23],["egg-rr",16]],"stop":[["node limit",1]],"time":44.8720703125,"type":"rewrite"},{"count":[[118,97]],"egraph":[[4,3228,646,0.018321166],[3,755,646,0.006501125],[2,231,646,0.001912958],[1,97,658,0.000679542],[0,38,660,0.00021475]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (+.f64 (*.f64 1/5040 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) 2)) 1/3) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) 2)) (pow.f64 (cbrt.f64 1/2) 2))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (cbrt.f64 1/2))","(*.f64 (cbrt.f64 1/2) (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","(*.f64 (pow.f64 (*.f64 1 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) 1/3) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (cbrt.f64 1/2) y))","(*.f64 (cbrt.f64 1/2) (/.f64 (cbrt.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) y))","1","(+.f64 1 (*.f64 1/6 (pow.f64 y 2)))","(+.f64 1 (*.f64 1/6 (*.f64 y y)))","(fma.f64 1/6 (*.f64 y y) 1)","(fma.f64 y (*.f64 y 1/6) 1)","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4))))","(+.f64 1 (fma.f64 1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4))))","(fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1))","(+.f64 1 (+.f64 (*.f64 1/5040 (pow.f64 y 6)) (+.f64 (*.f64 1/6 (pow.f64 y 2)) (*.f64 1/120 (pow.f64 y 4)))))","(+.f64 1 (fma.f64 1/5040 (pow.f64 y 6) (fma.f64 1/6 (*.f64 y y) (*.f64 1/120 (pow.f64 y 4)))))","(fma.f64 1/5040 (pow.f64 y 6) (fma.f64 y (*.f64 y 1/6) (fma.f64 1/120 (pow.f64 y 4) 1)))","(fma.f64 (*.f64 y y) (fma.f64 y (*.f64 y 1/120) 1/6) (fma.f64 1/5040 (pow.f64 y 6) 1))","(fma.f64 y (fma.f64 1/5040 (pow.f64 y 5) (*.f64 y 1/6)) (fma.f64 1/120 (pow.f64 y 4) 1))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) y)"]],"stop":[["node limit",1]],"time":37.722900390625,"type":"simplify"},{"compiler":[[2207,1083]],"time":21.072998046875,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","done",0.9495044543433179],["(*.f64 (pow.f64 (sqrt.f64 (sin.f64 x)) 2) (/.f64 (sinh.f64 y) y))","fresh",32.97103500976844],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","done",0.27181625976844204],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","next",16.61289475712965],["(*.f64 (sin.f64 x) (*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))))","done",1.1329270258304431]],"compiler":[[31,21],[12,9],[9,6],[11,8],[18,12],[12,9],[11,8]],"count":[[127,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[122,0],"picked":[1,1]}],"min-error":[0.24279232007700186],"time":22.35205078125,"type":"prune"},{"compiler":[[30,9]],"locations":[["(sin.f64 x)",0.01171875,false],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))",0.24609375,true],["(*.f64 (sin.f64 x) (sinh.f64 y))",0.32327866423782115,true],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))",16.331551385526716,true]],"time":6.27587890625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","x","-inf",0.18701171875],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","x","inf",0.169921875],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","x","0",0.242919921875],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","y","-inf",0.174072265625],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","y","inf",0.191162109375],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","y","0",0.177978515625],["(*.f64 (sin.f64 x) (sinh.f64 y))","y","-inf",0.162841796875],["(*.f64 (sin.f64 x) (sinh.f64 y))","y","inf",0.296875],["(*.f64 (sin.f64 x) (sinh.f64 y))","y","0",0.25390625],["(*.f64 (sin.f64 x) (sinh.f64 y))","x","-inf",0.159912109375],["(*.f64 (sin.f64 x) (sinh.f64 y))","x","inf",0.16796875],["(*.f64 (sin.f64 x) (sinh.f64 y))","x","0",0.302978515625],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","x","-inf",0.49609375],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","x","inf",0.5],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","x","0",0.712158203125],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","y","-inf",0.767822265625],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","y","inf",0.51611328125],["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","y","0",0.447998046875]],"time":6.197998046875,"type":"series"},{"count":[[3,178]],"egraph":[[2,2536,30,0.024340542],[1,189,30,0.0033866250000000003],[0,9,33,0.00023825]],"inputs":[["(/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y)))","(*.f64 (sin.f64 x) (sinh.f64 y))","(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 2) (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) (sqrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (*.f64 (sin.f64 x) (neg.f64 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y))) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sin.f64 x)) (/.f64 1 (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (sin.f64 x)) (/.f64 (sqrt.f64 y) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sin.f64 x)) (/.f64 y (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sin.f64 x)) (/.f64 (cbrt.f64 y) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (sinh.f64 y)) (/.f64 (sqrt.f64 y) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sinh.f64 y)) (/.f64 y (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sinh.f64 y)) (/.f64 (cbrt.f64 y) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) -2) (/.f64 y (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2)) (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) -1/2) (/.f64 y (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) (/.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 y (sin.f64 x)) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 2)) (cbrt.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))) (sqrt.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (*.f64 (sin.f64 x) (neg.f64 (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 y) 1) (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 y) (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 y) 1) (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 y (sin.f64 x))) (*.f64 (log.f64 (sinh.f64 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (*.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 y) 1) (neg.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (neg.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) (*.f64 (log.f64 y) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (sinh.f64 y))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (sinh.f64 y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 x)) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (sinh.f64 y)) (sin.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (*.f64 2 (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (*.f64 (sin.f64 x) (sinh.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) 2)) (cbrt.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))) (sqrt.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 x)) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (neg.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sin.f64 x)) 1) (log.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (sin.f64 x)) (*.f64 (log.f64 (sinh.f64 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sin.f64 x)) 1) (*.f64 (log.f64 (sinh.f64 y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sinh.f64 y)) 1) (log.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (sinh.f64 y)) (*.f64 (log.f64 (sin.f64 x)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sinh.f64 y)) 1) (*.f64 (log.f64 (sin.f64 x)) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 2) (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) (sqrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (/.f64 (neg.f64 (/.f64 y (sin.f64 x))) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (*.f64 (sin.f64 x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) 1) (/.f64 (sinh.f64 y) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) 1) (/.f64 (sin.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2) 1) (/.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1) (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sinh.f64 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sin.f64 x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -2) (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) (sqrt.f64 y)) (/.f64 (sinh.f64 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sinh.f64 y) (sqrt.f64 y)) (/.f64 (sin.f64 x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/2) (/.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (sqrt.f64 y)) (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 y)) (*.f64 (sin.f64 x) (neg.f64 (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (/.f64 y (sin.f64 x))) (sinh.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -2) (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (sin.f64 x)) (sinh.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (sinh.f64 y)) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) 1) (*.f64 (sin.f64 x) (sinh.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 2)) (cbrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y)))) (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 -1) (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 (neg.f64 (/.f64 y (sin.f64 x))) (sinh.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (sqrt.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 2)) (cbrt.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))) (sqrt.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 x) (sinh.f64 y)) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (sinh.f64 y) (/.f64 y (sin.f64 x)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (sinh.f64 y)) 1) (log.f64 (/.f64 y (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) (*.f64 (log.f64 y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1) (*.f64 (log.f64 y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (*.f64 (log.f64 (/.f64 (/.f64 y (sin.f64 x)) (sinh.f64 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1) (neg.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (neg.f64 (log.f64 y)) (*.f64 (log.f64 (*.f64 (sin.f64 x) (sinh.f64 y))) 1)))))))"]],"rules":[["egg-rr",74],["egg-rr",36],["egg-rr",68]],"stop":[["node limit",1]],"time":53.35400390625,"type":"rewrite"},{"count":[[250,230]],"egraph":[[3,5032,1676,0.023708332999999998],[2,1249,1707,0.010109124],[1,387,1838,0.002710916],[0,129,1877,0.000652541]],"inputs":[["(/.f64 1 (sin.f64 x))","(+.f64 (/.f64 1 (sin.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (/.f64 1 (sin.f64 x)) (+.f64 (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x))) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x)))))","(+.f64 (/.f64 1 (sin.f64 x)) (+.f64 (*.f64 -31/15120 (/.f64 (pow.f64 y 6) (sin.f64 x))) (+.f64 (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x))) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))) (pow.f64 x 3))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 x 5) (+.f64 (*.f64 -1/2520 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 1/360 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 1/6 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))) (pow.f64 x 3))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7))) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 y (sin.f64 x))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (*.f64 y (sin.f64 x)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 5) (sin.f64 x))) (*.f64 y (sin.f64 x))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 5) (sin.f64 x))) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 7) (sin.f64 x))) (*.f64 y (sin.f64 x)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(sin.f64 x)","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 -1/10080 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (sin.f64 x))","(+.f64 (/.f64 1 (sin.f64 x)) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (/.f64 1 (sin.f64 x)) (*.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x))))","(fma.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x)) (/.f64 1 (sin.f64 x)))","(fma.f64 -1/6 (*.f64 (/.f64 y (sin.f64 x)) y) (/.f64 1 (sin.f64 x)))","(+.f64 (/.f64 1 (sin.f64 x)) (+.f64 (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x))) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x)))))","(+.f64 (/.f64 1 (sin.f64 x)) (fma.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x)) (*.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x)))))","(+.f64 (fma.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x)) (/.f64 1 (sin.f64 x))) (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x))))","(fma.f64 -1/6 (*.f64 (/.f64 y (sin.f64 x)) y) (fma.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x)) (/.f64 1 (sin.f64 x))))","(+.f64 (/.f64 1 (sin.f64 x)) (+.f64 (*.f64 -31/15120 (/.f64 (pow.f64 y 6) (sin.f64 x))) (+.f64 (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x))) (*.f64 -1/6 (/.f64 (pow.f64 y 2) (sin.f64 x))))))","(+.f64 (/.f64 1 (sin.f64 x)) (fma.f64 -31/15120 (/.f64 (pow.f64 y 6) (sin.f64 x)) (fma.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x)) (*.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x))))))","(+.f64 (fma.f64 -31/15120 (/.f64 (pow.f64 y 6) (sin.f64 x)) (*.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x)))) (fma.f64 -1/6 (/.f64 (*.f64 y y) (sin.f64 x)) (/.f64 1 (sin.f64 x))))","(fma.f64 -31/15120 (/.f64 (pow.f64 y 6) (sin.f64 x)) (fma.f64 -1/6 (*.f64 (/.f64 y (sin.f64 x)) y) (fma.f64 7/360 (/.f64 (pow.f64 y 4) (sin.f64 x)) (/.f64 1 (sin.f64 x)))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))","(/.f64 (*.f64 2 y) (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x))","(*.f64 2 (/.f64 y (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))","(fma.f64 1/3 (/.f64 y (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x)) (/.f64 (*.f64 2 y) (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(fma.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x) (/.f64 (*.f64 1/3 (*.f64 x y)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(fma.f64 (/.f64 2 x) (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 y (/.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x) 1/3)))","(fma.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 x 1/3)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))) (pow.f64 x 3))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))))","(fma.f64 1/3 (/.f64 y (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x)) (fma.f64 -1 (*.f64 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -7/180) (pow.f64 x 3)) (/.f64 (*.f64 2 y) (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))))","(fma.f64 1/3 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x) (-.f64 (*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 -7/180 (pow.f64 x 3)))))","(fma.f64 1/3 (*.f64 x (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (fma.f64 2 (/.f64 y (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (*.f64 (/.f64 (*.f64 (pow.f64 x 3) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 7/180)))","(fma.f64 1/3 (*.f64 x (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (-.f64 (/.f64 2 x) (*.f64 (pow.f64 x 3) -7/180))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 x 5) (+.f64 (*.f64 -1/2520 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 1/360 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 1/6 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))))))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 y x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/60 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))) (*.f64 -1/18 (/.f64 y (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))) (pow.f64 x 3))) (*.f64 2 (/.f64 y (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))))","(fma.f64 -1 (*.f64 (pow.f64 x 5) (fma.f64 -1/2520 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/360 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -7/180) 1/6)))) (fma.f64 1/3 (/.f64 y (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) x)) (fma.f64 -1 (*.f64 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -7/180) (pow.f64 x 3)) (/.f64 (*.f64 2 y) (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))))","(-.f64 (fma.f64 1/3 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x) (-.f64 (*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x)) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 -7/180 (pow.f64 x 3))))) (*.f64 (pow.f64 x 5) (+.f64 (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -7/1080) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/420))))","(-.f64 (fma.f64 1/3 (*.f64 x (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (fma.f64 2 (/.f64 y (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (*.f64 (/.f64 (*.f64 (pow.f64 x 3) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 7/180))) (*.f64 (pow.f64 x 5) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) -31/7560)))","(fma.f64 1/3 (*.f64 x (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))) (fma.f64 (pow.f64 x 5) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 31/7560) (*.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (-.f64 (/.f64 2 x) (*.f64 (pow.f64 x 3) -7/180)))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))))))","(*.f64 2 (/.f64 (/.f64 y (sin.f64 x)) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))))","(*.f64 2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (sin.f64 x)))","(*.f64 2 (/.f64 y (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))))))","(*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))","(*.f64 (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x 1/2))","(*.f64 x (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (*.f64 (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2))","(fma.f64 (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (pow.f64 x 3) -1/12)))","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 x 1/2) (*.f64 (pow.f64 x 3) -1/12)))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 5)) (*.f64 (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 5)) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x 1/2))))","(fma.f64 x (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 (pow.f64 x 3) -1/12) (*.f64 (pow.f64 x 5) 1/240))))","(fma.f64 (pow.f64 x 3) (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 x 1/2) (*.f64 (pow.f64 x 5) 1/240))))","(+.f64 (*.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3))) (+.f64 (*.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7))) (+.f64 (*.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5))) (*.f64 1/2 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x)))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (fma.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 7)) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 5)) (*.f64 (*.f64 x (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2))))","(fma.f64 -1/12 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 3)) (fma.f64 -1/10080 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 7)) (fma.f64 1/240 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 5)) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 x 1/2)))))","(+.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 (pow.f64 x 3) -1/12) (*.f64 (pow.f64 x 5) 1/240))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 x 1/2) (*.f64 -1/10080 (pow.f64 x 7)))))","(+.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 x 1/2) (*.f64 (pow.f64 x 3) -1/12))) (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 (pow.f64 x 5) 1/240) (*.f64 -1/10080 (pow.f64 x 7)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 y (sin.f64 x))","(*.f64 (sin.f64 x) y)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (*.f64 y (sin.f64 x)))","(fma.f64 1/6 (*.f64 (sin.f64 x) (pow.f64 y 3)) (*.f64 (sin.f64 x) y))","(*.f64 (sin.f64 x) (+.f64 y (*.f64 1/6 (pow.f64 y 3))))","(*.f64 (sin.f64 x) (fma.f64 1/6 (pow.f64 y 3) y))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 5) (sin.f64 x))) (*.f64 y (sin.f64 x))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (pow.f64 y 3)) (fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 5)) (*.f64 (sin.f64 x) y)))","(fma.f64 1/6 (*.f64 (sin.f64 x) (pow.f64 y 3)) (*.f64 (sin.f64 x) (+.f64 y (*.f64 1/120 (pow.f64 y 5)))))","(*.f64 (sin.f64 x) (+.f64 y (fma.f64 1/6 (pow.f64 y 3) (*.f64 1/120 (pow.f64 y 5)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 x))) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 5) (sin.f64 x))) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 7) (sin.f64 x))) (*.f64 y (sin.f64 x)))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (pow.f64 y 3)) (fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 5)) (fma.f64 1/5040 (*.f64 (sin.f64 x) (pow.f64 y 7)) (*.f64 (sin.f64 x) y))))","(+.f64 (*.f64 (sin.f64 x) (+.f64 (*.f64 1/120 (pow.f64 y 5)) (*.f64 1/5040 (pow.f64 y 7)))) (*.f64 (sin.f64 x) (+.f64 y (*.f64 1/6 (pow.f64 y 3)))))","(*.f64 (sin.f64 x) (+.f64 (fma.f64 1/5040 (pow.f64 y 7) y) (fma.f64 1/6 (pow.f64 y 3) (*.f64 1/120 (pow.f64 y 5)))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))))","(*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2)","(*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2))","(*.f64 (sin.f64 x) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(sin.f64 x)","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))","(+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y))))","(fma.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y)) (sin.f64 x))","(*.f64 (sin.f64 x) (fma.f64 (*.f64 y y) 1/6 1))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x)))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (+.f64 (sin.f64 x) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y)))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (fma.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y)) (sin.f64 x)))","(*.f64 (sin.f64 x) (+.f64 (*.f64 y (*.f64 y 1/6)) (fma.f64 (pow.f64 y 4) 1/120 1)))","(*.f64 (sin.f64 x) (+.f64 (fma.f64 (*.f64 y y) 1/6 1) (*.f64 (pow.f64 y 4) 1/120)))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","(fma.f64 1/120 (*.f64 (sin.f64 x) (pow.f64 y 4)) (+.f64 (sin.f64 x) (fma.f64 1/5040 (*.f64 (sin.f64 x) (pow.f64 y 6)) (*.f64 1/6 (*.f64 (sin.f64 x) (*.f64 y y))))))","(+.f64 (*.f64 (sin.f64 x) (+.f64 (*.f64 (*.f64 y y) 1/6) (*.f64 (pow.f64 y 6) 1/5040))) (*.f64 (+.f64 (*.f64 (pow.f64 y 4) 1/120) 1) (sin.f64 x)))","(fma.f64 (sin.f64 x) (fma.f64 (*.f64 y y) 1/6 (*.f64 (pow.f64 y 6) 1/5040)) (*.f64 (sin.f64 x) (fma.f64 (pow.f64 y 4) 1/120 1)))","(*.f64 (sin.f64 x) (+.f64 (fma.f64 (*.f64 y y) 1/6 (*.f64 (pow.f64 y 6) 1/5040)) (fma.f64 (pow.f64 y 4) 1/120 1)))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))","(*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x)))","(/.f64 1/2 (/.f64 (/.f64 y (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) x))","(/.f64 (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))) (/.f64 y x))","(/.f64 x (/.f64 y (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y)))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x))))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3)))))","(fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (/.f64 y (pow.f64 x 3))))","(fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (/.f64 (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) y) (pow.f64 x 3)))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x)))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5))))))","(fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/240 (*.f64 (/.f64 (pow.f64 x 5) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (fma.f64 (exp.f64 y) -1/12 (/.f64 1/12 (exp.f64 y))) (/.f64 y (pow.f64 x 3)))))","(fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (sqrt.f64 y)) (+.f64 (/.f64 (*.f64 (pow.f64 x 3) -1/12) (sqrt.f64 y)) (/.f64 (*.f64 (pow.f64 x 5) 1/240) (sqrt.f64 y)))))","(+.f64 (*.f64 -1/12 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 3)) y)) (+.f64 (*.f64 -1/10080 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 7)) y)) (+.f64 (*.f64 1/240 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) (pow.f64 x 5)) y)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y))) x) y)))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 -1/10080 (/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (pow.f64 x 7)) y) (fma.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5))) (*.f64 1/2 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y x))))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 -1/10080 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) (pow.f64 x 7)) (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) y) x) (*.f64 1/240 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 5)))))))","(fma.f64 -1/12 (/.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (/.f64 y (pow.f64 x 3))) (fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/240 (*.f64 (/.f64 (pow.f64 x 5) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (pow.f64 x 7) (/.f64 y (fma.f64 (exp.f64 y) -1/10080 (/.f64 1/10080 (exp.f64 y))))))))","(fma.f64 -1/12 (*.f64 (/.f64 (pow.f64 x 3) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/2 (*.f64 (/.f64 x y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (fma.f64 1/240 (*.f64 (/.f64 (pow.f64 x 5) y) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) (/.f64 (pow.f64 x 7) (/.f64 y (fma.f64 (exp.f64 y) -1/10080 (/.f64 1/10080 (exp.f64 y))))))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))","(*.f64 1/2 (/.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (/.f64 1 (exp.f64 y)))) y))","(/.f64 (*.f64 (*.f64 (sin.f64 x) (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y)))) 1/2) y)","(/.f64 (*.f64 (-.f64 (exp.f64 y) (exp.f64 (neg.f64 y))) (*.f64 (sin.f64 x) 1/2)) y)","(*.f64 (/.f64 (sin.f64 x) y) (fma.f64 (exp.f64 y) 1/2 (/.f64 -1/2 (exp.f64 y))))"]],"stop":[["node limit",1]],"time":55.68115234375,"type":"simplify"},{"compiler":[[4117,1848]],"time":37.723876953125,"type":"eval"},{"alts":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))","done",0.27181625976844204],["(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","done",16.61289475712965],["(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","done",0.9495044543433179],["(*.f64 (sin.f64 x) (*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))))","done",1.1329270258304431],["(/.f64 1 (*.f64 (/.f64 y (sin.f64 x)) (/.f64 1 (sinh.f64 y))))","fresh",0.6396675293053261]],"compiler":[[9,6],[11,8],[31,21],[18,12],[13,10]],"count":[[258,5]],"kept":[{"done":[3,3],"fresh":[1,0],"new":[253,1],"picked":[1,1]}],"min-error":[0.24279232007700186],"time":56.114990234375,"type":"prune"},{"accuracy":[0.27181625976844204],"baseline":[0.27181625976844204],"branch":[["x",0.27181625976844204,1],["y",0.27181625976844204,1],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))",0.27181625976844204,1],["(sin.f64 x)",0.27181625976844204,1],["(/.f64 (sinh.f64 y) y)",0.27181625976844204,1]],"compiler":[[3,2],[3,2],[9,6],[4,3],[6,4],[91,48]],"count":[[7,1]],"inputs":[["(/.f64 1 (*.f64 (/.f64 y (sin.f64 x)) (/.f64 1 (sinh.f64 y))))","(+.f64 (*.f64 1/120 (*.f64 (pow.f64 y 4) (sin.f64 x))) (+.f64 (sin.f64 x) (+.f64 (*.f64 1/5040 (*.f64 (pow.f64 y 6) (sin.f64 x))) (*.f64 1/6 (*.f64 (pow.f64 y 2) (sin.f64 x))))))","(*.f64 (pow.f64 (sqrt.f64 (sin.f64 x)) 2) (/.f64 (sinh.f64 y) y))","(/.f64 1 (/.f64 y (*.f64 (sin.f64 x) (sinh.f64 y))))","(*.f64 (sin.f64 x) (*.f64 (pow.f64 (cbrt.f64 (sinh.f64 y)) 2) (*.f64 (cbrt.f64 (sinh.f64 y)) (/.f64 1 y))))","(*.f64 (sinh.f64 y) (/.f64 (sin.f64 x) y))","(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))"]],"link":["."],"name":["Linear.Quaternion:$ccos from linear-1.19.1.3"],"oracle":[41.579346944520175],"outputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))"]],"time":19.300048828125,"times":[["x",3.955078125],["y",3.7890625],["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))",4.06689453125],["(sin.f64 x)",3.94189453125],["(/.f64 (sinh.f64 y) y)",1.682861328125]],"type":"regimes"},{"compiler":[[9,6]],"egraph":[[1,8,11,2.8667e-5],[0,7,11,1.7375e-5]],"inputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 x) (/.f64 (sinh.f64 y) y))"]],"stop":[["fuel",1],["saturated",1]],"time":8.35205078125,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[9,6]],"remove-preprocessing":[[]],"time":7.942138671875,"type":"end"}]