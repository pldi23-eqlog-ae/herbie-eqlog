[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":158.324951171875,"type":"analyze"},{"outcomes":[["body",256,"invalid",136.014404296875,2803],["body",256,"valid",406.105712890625,8256]],"time":552.344970703125,"type":"sample"},{"compiler":[[14,9]],"egraph":[[0,5,5,3.041e-6],[5,6107,121,0.031810167],[4,3020,121,0.017594041999999997],[3,926,133,0.005891542],[2,283,143,0.001649792],[1,112,143,0.00048054200000000004],[0,46,143,0.000148458]],"inputs":[["0","1","2","3","4"],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(-.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(-.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(-.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(-.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(-.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(-.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(-.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(-.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(-.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(-.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(-.f64 y (/.f64 x (/.f64 a (-.f64 z t))))","(-.f64 y (*.f64 (/.f64 x a) (-.f64 z t)))","(-.f64 y (*.f64 (-.f64 z t) (/.f64 x a)))","(fma.f64 (/.f64 x a) (-.f64 t z) y)","(-.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(-.f64 z (/.f64 y (/.f64 a (-.f64 x t))))","(-.f64 z (*.f64 (/.f64 y a) (-.f64 x t)))","(-.f64 z (*.f64 (-.f64 x t) (/.f64 y a)))","(fma.f64 (/.f64 (neg.f64 y) a) (-.f64 x t) z)","(fma.f64 (/.f64 y a) (-.f64 t x) z)","(-.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(-.f64 t (*.f64 (/.f64 y a) (-.f64 z x)))","(-.f64 t (*.f64 (-.f64 z x) (/.f64 y a)))","(fma.f64 (/.f64 (neg.f64 y) a) (-.f64 z x) t)","(fma.f64 (/.f64 y a) (-.f64 x z) t)","(-.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(-.f64 a (/.f64 y (/.f64 x (-.f64 z t))))","(-.f64 a (*.f64 (/.f64 y x) (-.f64 z t)))","(-.f64 a (*.f64 (-.f64 z t) (/.f64 y x)))","(fma.f64 (/.f64 y x) (-.f64 t z) a)","(-.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(-.f64 x (/.f64 z (/.f64 a (-.f64 y t))))","(-.f64 x (*.f64 (/.f64 z a) (-.f64 y t)))","(-.f64 x (*.f64 (/.f64 (-.f64 y t) a) z))","(-.f64 x (*.f64 z (/.f64 (-.f64 y t) a)))","(fma.f64 (/.f64 z a) (-.f64 t y) x)","(-.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(-.f64 x (/.f64 t (/.f64 a (-.f64 z y))))","(-.f64 x (*.f64 (/.f64 t a) (-.f64 z y)))","(-.f64 x (*.f64 (-.f64 z y) (/.f64 t a)))","(fma.f64 (/.f64 (neg.f64 t) a) (-.f64 z y) x)","(fma.f64 (/.f64 t a) (-.f64 y z) x)","(-.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(-.f64 x (/.f64 (*.f64 (-.f64 z t) a) y))","(-.f64 x (*.f64 (/.f64 a y) (-.f64 z t)))","(-.f64 x (*.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 (/.f64 a y) (-.f64 t z) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(-.f64 x (*.f64 (/.f64 y a) (-.f64 t z)))","(-.f64 x (*.f64 (-.f64 t z) (/.f64 y a)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(-.f64 x (/.f64 (-.f64 a t) (/.f64 z y)))","(-.f64 x (*.f64 (-.f64 a t) (/.f64 y z)))","(-.f64 x (*.f64 y (/.f64 (-.f64 a t) z)))","(fma.f64 (/.f64 y z) (-.f64 t a) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))","(-.f64 x (*.f64 (/.f64 y t) (-.f64 z a)))","(-.f64 x (*.f64 (-.f64 z a) (/.f64 y t)))","(-.f64 x (*.f64 y (/.f64 (-.f64 z a) t)))","(fma.f64 (/.f64 y t) (-.f64 a z) x)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":56.962890625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,4087,11,0.054942418],[11,4087,11,0.047769918],[10,4082,11,0.041715209],[9,4052,11,0.035604126],[8,3996,11,0.029201792],[7,3305,11,0.022801334],[6,1902,11,0.014957875],[5,879,11,0.006534],[4,327,11,0.002285125],[3,107,13,0.000753292],[2,39,13,0.00026487500000000003],[1,17,13,0.00010400000000000001],[0,10,13,4.0083e-5]],"inputs":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))","(-.f64 x (*.f64 y (/.f64 (-.f64 z t) a)))","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)"]],"stop":[["saturated",1]],"time":66.006103515625,"type":"simplify"},{"compiler":[[22,12]],"time":0.365966796875,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 (-.f64 t z) a) x)","fresh",6.890798902631758],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","next",4.38671875]],"compiler":[[13,8],[14,9],[13,8],[14,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.11328125],"time":1.240966796875,"type":"prune"},{"compiler":[[34,9]],"locations":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.0078125,true],["(/.f64 (*.f64 y (-.f64 z t)) a)",5.19918606625165,true]],"time":5.9130859375,"type":"localize"},{"count":[[2,84]],"series":[["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","-inf",0.18896484375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","inf",0.18798828125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","0",0.302978515625],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","-inf",0.295166015625],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","inf",0.17919921875],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","0",0.322021484375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","-inf",0.2080078125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","inf",0.18701171875],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","0",0.9951171875],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","-inf",0.204833984375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","inf",1.119140625],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","0",0.2919921875],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","-inf",0.212158203125],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","inf",0.239990234375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","0",0.364990234375],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","-inf",0.321044921875],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","inf",0.347900390625],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","0",0.427978515625],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","-inf",0.35791015625],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","inf",0.721923828125],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","0",0.375],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","-inf",0.462890625],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","inf",0.450927734375],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","0",0.55810546875],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","-inf",0.325927734375],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","inf",0.5029296875],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","0",0.615966796875]],"time":11.10595703125,"type":"series"},{"count":[[2,240]],"egraph":[[2,3454,23,0.027895958000000002],[1,226,23,0.004229916],[0,10,23,0.000224458]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (-.f64 z t) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (/.f64 1 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) 1) (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sqrt.f64 a)) (/.f64 (-.f64 z t) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (sqrt.f64 a)) (/.f64 y (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 a)) (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a (*.f64 y (-.f64 z t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 -1 (*.f64 (/.f64 y a) (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (/.f64 1 a) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (sqrt.f64 a))) (/.f64 y (sqrt.f64 a)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 a))) (/.f64 (-.f64 z t) (sqrt.f64 a)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y))) (fma.f64 (neg.f64 (/.f64 1 (/.f64 a (-.f64 z t)))) y (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y))) (fma.f64 (neg.f64 (/.f64 1 (/.f64 a (-.f64 z t)))) y (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y))) (fma.f64 (neg.f64 (/.f64 1 (/.f64 a (-.f64 z t)))) y (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y))) (fma.f64 (neg.f64 (/.f64 1 (/.f64 a (-.f64 z t)))) y (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y))) (fma.f64 (neg.f64 (/.f64 1 (/.f64 a (-.f64 z t)))) y (*.f64 (/.f64 1 (/.f64 a (-.f64 z t))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y))) (fma.f64 (neg.f64 (*.f64 (-.f64 z t) (/.f64 1 a))) y (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y))) (fma.f64 (neg.f64 (*.f64 (-.f64 z t) (/.f64 1 a))) y (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y))) (fma.f64 (neg.f64 (*.f64 (-.f64 z t) (/.f64 1 a))) y (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y))) (fma.f64 (neg.f64 (*.f64 (-.f64 z t) (/.f64 1 a))) y (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y))) (fma.f64 (neg.f64 (*.f64 (-.f64 z t) (/.f64 1 a))) y (*.f64 (*.f64 (-.f64 z t) (/.f64 1 a)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t)))) (fma.f64 (neg.f64 (*.f64 y (/.f64 1 a))) (-.f64 z t) (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t)))) (fma.f64 (neg.f64 (*.f64 y (/.f64 1 a))) (-.f64 z t) (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t)))) (fma.f64 (neg.f64 (*.f64 y (/.f64 1 a))) (-.f64 z t) (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t)))) (fma.f64 (neg.f64 (*.f64 y (/.f64 1 a))) (-.f64 z t) (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t)))) (fma.f64 (neg.f64 (*.f64 y (/.f64 1 a))) (-.f64 z t) (*.f64 (*.f64 y (/.f64 1 a)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a))) (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) (sqrt.f64 (*.f64 y (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y))))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 a))) (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y))))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 a))) (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y))))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 a))) (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y))))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 a))) (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y))))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 a))) (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (/.f64 1 (neg.f64 a)) (*.f64 (-.f64 z t) (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) a)) (/.f64 y 1) (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) a)) (/.f64 y 1) (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) a)) (/.f64 y 1) (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) a)) (/.f64 y 1) (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1)))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) a)) (/.f64 y 1) (*.f64 (/.f64 (-.f64 z t) a) (/.f64 y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1)))) (fma.f64 (neg.f64 (/.f64 y a)) (/.f64 (-.f64 z t) 1) (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1)))) (fma.f64 (neg.f64 (/.f64 y a)) (/.f64 (-.f64 z t) 1) (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1)))) (fma.f64 (neg.f64 (/.f64 y a)) (/.f64 (-.f64 z t) 1) (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1)))) (fma.f64 (neg.f64 (/.f64 y a)) (/.f64 (-.f64 z t) 1) (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1)))) (fma.f64 (neg.f64 (/.f64 y a)) (/.f64 (-.f64 z t) 1) (*.f64 (/.f64 y a) (/.f64 (-.f64 z t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 y (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 a))) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 a))) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 a))) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 a))) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 a))) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 y (cbrt.f64 a)) (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) (/.f64 1 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a))) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a))) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a))) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a))) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a))) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a))) (/.f64 1 (sqrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a))) (/.f64 1 (sqrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a))) (/.f64 1 (sqrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a))) (/.f64 1 (sqrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a))) (/.f64 1 (sqrt.f64 a)) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (/.f64 1 (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (*.f64 (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))) (cbrt.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x)) (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3))) (neg.f64 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))) (neg.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 3)) (fma.f64 x x (-.f64 (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) (*.f64 x (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))) (-.f64 x (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (/.f64 1 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (/.f64 1 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (-.f64 z t)) (neg.f64 (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1 (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1 (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) 1 (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) 2) (cbrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (neg.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) x) (*.f64 x x))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) (cbrt.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))))) (cbrt.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) (sqrt.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (/.f64 y a) (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 y (-.f64 z t)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) 1 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) x)))))"]],"rules":[["egg-rr",195],["egg-rr",45]],"stop":[["node limit",1]],"time":72.155029296875,"type":"rewrite"},{"count":[[324,267]],"egraph":[[10,3982,818,0.051772543],[9,3982,818,0.044517084],[8,3975,818,0.038426167],[7,3865,818,0.032274917],[6,3534,818,0.025558417],[5,2535,818,0.018538167],[4,1124,818,0.010161416999999999],[3,458,818,0.003619875],[2,206,908,0.001460542],[1,94,918,0.0006002080000000001],[0,37,1109,0.000229625]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (neg.f64 y) (/.f64 a t))","(*.f64 t (neg.f64 (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (neg.f64 y) (/.f64 a t))","(*.f64 t (neg.f64 (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (neg.f64 y) (/.f64 a t))","(*.f64 t (neg.f64 (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(/.f64 y (/.f64 a (-.f64 t z)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(neg.f64 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(/.f64 y (/.f64 a (-.f64 t z)))","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(/.f64 y (/.f64 a (-.f64 t z)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (neg.f64 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y t) a) x)","(fma.f64 (/.f64 y a) t x)","(fma.f64 y (/.f64 t a) x)","(fma.f64 t (/.f64 y a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 (*.f64 y z)) a)","(*.f64 (/.f64 y a) (neg.f64 z))","(*.f64 (/.f64 z a) (neg.f64 y))","(*.f64 y (/.f64 (neg.f64 z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 (*.f64 y z)) a)","(*.f64 (/.f64 y a) (neg.f64 z))","(*.f64 (/.f64 z a) (neg.f64 y))","(*.f64 y (/.f64 (neg.f64 z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 x (/.f64 y (/.f64 a z)))","(-.f64 x (*.f64 (/.f64 z a) y))","(fma.f64 (neg.f64 y) (/.f64 z a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(*.f64 y (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(*.f64 y (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(neg.f64 (/.f64 (*.f64 y (-.f64 z t)) a))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(/.f64 y (/.f64 a (-.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(-.f64 x (*.f64 (/.f64 (-.f64 z t) a) y))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)"]],"stop":[["saturated",1]],"time":85.89697265625,"type":"simplify"},{"compiler":[[8119,2176]],"time":44.56298828125,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))","next",2.0951832800125794],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","fresh",2.899065607250731],["(+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) x)","fresh",6.365376453789296],["(fma.f64 t (/.f64 y a) x)","fresh",18.681273514197326],["(-.f64 x (*.f64 y (/.f64 1 (/.f64 a (-.f64 z t)))))","fresh",6.882986402631758],["(-.f64 x (pow.f64 (/.f64 a (*.f64 y (-.f64 z t))) -1))","fresh",4.389003759768443],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875]],"compiler":[[20,13],[16,11],[15,10],[11,7],[16,11],[16,11],[14,9],[20,13],[16,11],[15,10],[11,7],[16,11],[16,11]],"count":[[269,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[267,6],"picked":[1,1]}],"min-error":[0],"time":93.402099609375,"type":"prune"},{"compiler":[[60,23]],"locations":[["(/.f64 y (pow.f64 (cbrt.f64 a) 2))",0.203125,true],["(/.f64 (-.f64 z t) (cbrt.f64 a))",0.20703125,true],["(pow.f64 (cbrt.f64 a) 2)",0.4753113281475362,true],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))",5.948014622879504,true]],"time":12.614013671875,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","-inf",0.474853515625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","inf",0.322021484375],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","0",0.337890625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","-inf",0.2861328125],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","inf",0.381103515625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","0",1.844970703125],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","-inf",0.466064453125],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","inf",0.35302734375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","0",0.355224609375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","-inf",0.22314453125],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","inf",0.26318359375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","0",0.59912109375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","-inf",1.934814453125],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","inf",0.259033203125],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","0",0.8330078125],["(pow.f64 (cbrt.f64 a) 2)","a","-inf",0.5380859375],["(pow.f64 (cbrt.f64 a) 2)","a","inf",0.37109375],["(pow.f64 (cbrt.f64 a) 2)","a","0",0.47802734375],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","t","-inf",0.280029296875],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","t","inf",0.260009765625],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","t","0",0.60693359375],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","z","-inf",0.285888671875],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","z","inf",0.294921875],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","z","0",0.578125],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","a","-inf",1.72705078125],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","a","inf",1.125],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","a","0",1.180908203125],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","y","-inf",0.243896484375],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","y","inf",0.447021484375],["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","y","0",1.579833984375]],"time":19.305908203125,"type":"series"},{"count":[[4,288]],"egraph":[[2,3964,34,0.030327126],[1,272,34,0.005299959],[0,12,34,0.0003175]],"inputs":[["(*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))","(pow.f64 (cbrt.f64 a) 2)","(/.f64 (-.f64 z t) (cbrt.f64 a))","(/.f64 y (pow.f64 (cbrt.f64 a) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a))) (cbrt.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 y (-.f64 z t)) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (pow.f64 (cbrt.f64 a) 2) (/.f64 (cbrt.f64 a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 (cbrt.f64 a) (-.f64 z t)) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 a (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (pow.f64 (cbrt.f64 a) 2) (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) (/.f64 (cbrt.f64 a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z t) (*.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z t) (*.f64 (cbrt.f64 a) (/.f64 (pow.f64 (cbrt.f64 a) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 a) 2) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) y) (/.f64 (cbrt.f64 a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (cbrt.f64 a) (-.f64 z t)) (/.f64 (pow.f64 (cbrt.f64 a) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 y (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 a) (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 z t)) (*.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) y) (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 (cbrt.f64 a) (-.f64 z t)) (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a))) (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (-.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a)))) (neg.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t)))) (neg.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2)) (/.f64 (cbrt.f64 a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (-.f64 z t)) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 (-.f64 z t))) (*.f64 (pow.f64 (cbrt.f64 a) 2) (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 (-.f64 z t))) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a) 2)) (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z t)) y) (*.f64 (neg.f64 (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z t)) 1) (*.f64 (neg.f64 (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 a) 2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (*.f64 (cbrt.f64 a) (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z t)) (neg.f64 y)) (*.f64 (neg.f64 (cbrt.f64 a)) (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a))) (cbrt.f64 a)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a))) 1) (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 (-.f64 z t) (cbrt.f64 a))) (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t))) 1) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (*.f64 (pow.f64 (cbrt.f64 a) -2) (-.f64 z t))) (pow.f64 a 1/6)) (pow.f64 a 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 (-.f64 z t) (cbrt.f64 a))) (neg.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (-.f64 z t)) (*.f64 y (pow.f64 (cbrt.f64 a) -2))) (neg.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) (neg.f64 (-.f64 z t))) (neg.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (neg.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3) (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3) (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) (cbrt.f64 (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) (*.f64 (cbrt.f64 (cbrt.f64 a)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (pow.f64 a 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 1/6) (*.f64 (pow.f64 a 1/6) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 a) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 t (cbrt.f64 a)))) (sqrt.f64 (/.f64 t (cbrt.f64 a))) (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (pow.f64 a 1/6))) (/.f64 (sqrt.f64 t) (pow.f64 a 1/6)) (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 1 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 2) (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (*.f64 (cbrt.f64 (-.f64 z t)) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z t)) (*.f64 (sqrt.f64 (-.f64 z t)) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z t)) (/.f64 1 (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 a)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) 1) (/.f64 (cbrt.f64 (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z t)) 1) (/.f64 (sqrt.f64 (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (-.f64 z t) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z t)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 (-.f64 z t) (pow.f64 a 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 (-.f64 z t)) (pow.f64 a 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 a) (-.f64 z t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z t) (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 z t) 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) (pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 2) (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 a)) (/.f64 (sqrt.f64 y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 a)) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 a)) (/.f64 (cbrt.f64 y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (/.f64 y (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (*.f64 y y) (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 y) (*.f64 2/3 (log.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 y) (*.f64 2/3 (log.f64 a))) 1))))))"]],"rules":[["egg-rr",36],["egg-rr",172],["egg-rr",21],["egg-rr",59]],"stop":[["node limit",1]],"time":82.3701171875,"type":"rewrite"},{"count":[[372,303]],"egraph":[[5,3752,888,0.021241542000000002],[4,1064,888,0.008550708],[3,359,888,0.0028080830000000003],[2,144,888,0.001186833],[1,70,1032,0.00053],[0,30,1050,0.000209375]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 (-.f64 z t) y) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 y (/.f64 a t)))","(/.f64 (*.f64 (neg.f64 t) y) a)","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 z a) y)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 y (/.f64 a t)))","(/.f64 (*.f64 (neg.f64 t) y) a)","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 y (/.f64 a t)))","(/.f64 (*.f64 (neg.f64 t) y) a)","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 y (/.f64 a (-.f64 z t)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))"]],"stop":[["node limit",1]],"time":50.3837890625,"type":"simplify"},{"compiler":[[10728,4410]],"time":78.84814453125,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))","done",2.0951832800125794],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","next",2.899065607250731],["(-.f64 x (/.f64 1 (/.f64 a (*.f64 y (-.f64 z t)))))","fresh",4.389003759768443],["(fma.f64 t (/.f64 y a) x)","fresh",18.681273514197326],["(-.f64 x (*.f64 y (/.f64 1 (/.f64 a (-.f64 z t)))))","fresh",6.882986402631758],["(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","fresh",6.365376453789296],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875]],"compiler":[[20,13],[16,11],[16,11],[11,7],[16,11],[14,9],[14,9],[16,11],[16,11],[11,7],[16,11],[14,9]],"count":[[310,7]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[303,2],"picked":[1,1]}],"min-error":[0],"time":116.0,"type":"prune"},{"compiler":[[42,21]],"locations":[["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))",0.0078125,true],["(*.f64 y (/.f64 1 a))",0.203125,true],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))",8.053956013341862,true]],"time":9.115966796875,"type":"localize"},{"count":[[3,132]],"series":[["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","a","-inf",0.19482421875],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","a","inf",0.1630859375],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","a","0",0.18310546875],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","y","-inf",0.171875],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","y","inf",0.33203125],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","y","0",0.150146484375],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","t","-inf",0.184814453125],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","t","inf",0.160888671875],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","t","0",0.16015625],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","z","-inf",0.194091796875],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","z","inf",0.167236328125],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","z","0",0.193115234375],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","x","-inf",0.156005859375],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","x","inf",0.154052734375],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","x","0",0.18701171875],["(*.f64 y (/.f64 1 a))","a","-inf",0.2548828125],["(*.f64 y (/.f64 1 a))","a","inf",0.283935546875],["(*.f64 y (/.f64 1 a))","a","0",0.2958984375],["(*.f64 y (/.f64 1 a))","y","-inf",0.2978515625],["(*.f64 y (/.f64 1 a))","y","inf",0.275146484375],["(*.f64 y (/.f64 1 a))","y","0",0.301025390625],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","a","-inf",0.265869140625],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","a","inf",0.4150390625],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","a","0",0.177001953125],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","y","-inf",0.2509765625],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","y","inf",0.1630859375],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","y","0",0.169921875],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","t","-inf",0.18896484375],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","t","inf",0.195068359375],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","t","0",0.159912109375],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","z","-inf",0.171875],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","z","inf",0.194091796875],["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","z","0",0.218994140625]],"time":7.39990234375,"type":"series"},{"count":[[3,178]],"egraph":[[2,3786,27,0.029129000000000002],[1,265,27,0.00486125],[0,12,27,0.0002865]],"inputs":[["(*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))","(*.f64 y (/.f64 1 a))","(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 z t) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (/.f64 y a)) (*.f64 (neg.f64 t) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y a) z) (*.f64 (/.f64 y a) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 z t) y) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) (pow.f64 t 3)) y) (*.f64 (fma.f64 z z (*.f64 t (+.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 z z) (*.f64 t t)) y) (*.f64 (+.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (*.f64 a (fma.f64 z z (*.f64 t (+.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 (*.f64 z z) (*.f64 t t))) (*.f64 a (+.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) (pow.f64 t 3)) (/.f64 y a)) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 z z) (*.f64 t t)) (/.f64 y a)) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y a) (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y a) (-.f64 (*.f64 z z) (*.f64 t t))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 z t) y) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 z t) y) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 y a) (*.f64 (neg.f64 t) (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) z (*.f64 (/.f64 y a) (neg.f64 t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y a))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y a)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 y y)) (/.f64 a (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 y) (/.f64 a (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 y) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y a) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 a 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 3) (/.f64 (pow.f64 a -2) a)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (pow.f64 a -2) a) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (/.f64 (pow.f64 a -2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 (pow.f64 a -2) a) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (/.f64 1 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (/.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x)) (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (fma.f64 (-.f64 z t) (/.f64 y a) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3))) (neg.f64 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2))) (neg.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 3)) (fma.f64 x x (-.f64 (pow.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 2) (*.f64 x (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 2)) (-.f64 x (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x)) (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (-.f64 z t) (/.f64 y a) x) (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (-.f64 z t) (/.f64 y a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 z t) (/.f64 y a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (/.f64 1 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (/.f64 1 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (neg.f64 (/.f64 y a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (neg.f64 (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1 (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1 (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a))) 1 (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) 2) (cbrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (-.f64 x (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) (neg.f64 (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 z t) (/.f64 y a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (/.f64 1 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (/.f64 1 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (/.f64 1 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 3)) (/.f64 1 (fma.f64 (*.f64 (-.f64 z t) (/.f64 y a)) (fma.f64 (-.f64 z t) (/.f64 y a) x) (*.f64 x x))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (/.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (/.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (/.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (-.f64 z t) (/.f64 y a)) 2)) (/.f64 1 (fma.f64 (-.f64 z t) (/.f64 y a) x)) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) y) (neg.f64 (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) 2) (cbrt.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) (sqrt.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (*.f64 (-.f64 z t) (neg.f64 (/.f64 y a))) 1 (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (-.f64 z t)) (/.f64 y a) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 (-.f64 z t) (/.f64 y a)))) (fma.f64 (neg.f64 (/.f64 1 a)) (*.f64 (-.f64 z t) y) (*.f64 (-.f64 z t) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) 2)) (cbrt.f64 (*.f64 (-.f64 z t) (/.f64 y a))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 (-.f64 z t) y)) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 z t)) y) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 z t)) 1) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 z t)) (/.f64 1 a)) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 z t)) (pow.f64 (cbrt.f64 (/.f64 y a)) 2)) (cbrt.f64 (/.f64 y a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 z t)) (sqrt.f64 (/.f64 y a))) (sqrt.f64 (/.f64 y a)) x)))))"]],"rules":[["egg-rr",112],["egg-rr",34],["egg-rr",32]],"stop":[["node limit",1]],"time":59.953125,"type":"rewrite"},{"count":[[310,206]],"egraph":[[10,3978,1154,0.052563416],[9,3978,1154,0.045154416],[8,3971,1154,0.038979166],[7,3861,1154,0.032729541],[6,3530,1154,0.025943208000000002],[5,2532,1154,0.018741291],[4,1124,1154,0.010283166],[3,458,1154,0.003696041],[2,206,1244,0.001508124],[1,95,1254,0.000638416],[0,38,1637,0.000245708]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 (*.f64 y (-.f64 z t)) a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(/.f64 (*.f64 y t) a)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 t (/.f64 a y)))","(*.f64 (/.f64 (neg.f64 y) a) t)","(*.f64 y (neg.f64 (/.f64 t a)))","(*.f64 y (/.f64 (neg.f64 t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 t (/.f64 a y)))","(*.f64 (/.f64 (neg.f64 y) a) t)","(*.f64 y (neg.f64 (/.f64 t a)))","(*.f64 y (/.f64 (neg.f64 t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 t (/.f64 a y)))","(*.f64 (/.f64 (neg.f64 y) a) t)","(*.f64 y (neg.f64 (/.f64 t a)))","(*.f64 y (/.f64 (neg.f64 t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 y (/.f64 (-.f64 z t) a))","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(/.f64 y a)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 y (/.f64 a (-.f64 z t))))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(*.f64 y (/.f64 (-.f64 t z) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (*.f64 -1 (/.f64 (*.f64 y t) a)))","(-.f64 x (neg.f64 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 t (/.f64 a y)) x)","(fma.f64 (/.f64 y a) t x)","(fma.f64 y (/.f64 t a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 (*.f64 y z)) a)","(/.f64 (neg.f64 z) (/.f64 a y))","(/.f64 z (/.f64 a (neg.f64 y)))","(*.f64 y (/.f64 (neg.f64 z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 (*.f64 y z)) a)","(/.f64 (neg.f64 z) (/.f64 a y))","(/.f64 z (/.f64 a (neg.f64 y)))","(*.f64 y (/.f64 (neg.f64 z) a))","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (/.f64 (*.f64 y z) a))","(-.f64 x (/.f64 y (/.f64 a z)))","(-.f64 x (*.f64 (/.f64 y a) z))","(-.f64 x (*.f64 z (/.f64 y a)))","(-.f64 x (*.f64 y (/.f64 z a)))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(/.f64 t (/.f64 a y))","(*.f64 y (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(/.f64 (*.f64 y t) a)","(/.f64 t (/.f64 a y))","(*.f64 y (/.f64 t a))","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 (+.f64 (/.f64 (*.f64 y t) a) x) (/.f64 (*.f64 y z) a))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y)","(neg.f64 (/.f64 y (/.f64 a (-.f64 z t))))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(*.f64 y (/.f64 (-.f64 t z) a))","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 t a) (/.f64 z a)) y) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 y (/.f64 a (-.f64 z t))))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(*.f64 y (/.f64 (-.f64 t z) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(neg.f64 (/.f64 y (/.f64 a (-.f64 z t))))","(/.f64 (neg.f64 (*.f64 y (-.f64 z t))) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(*.f64 y (/.f64 (-.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a (-.f64 z t))) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(+.f64 (*.f64 (/.f64 y a) (-.f64 t z)) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)"]],"stop":[["saturated",1]],"time":92.099853515625,"type":"simplify"},{"compiler":[[3849,884]],"time":25.085205078125,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (-.f64 z t) (/.f64 1 (/.f64 a y))))","fresh",3.1434203675791954],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","next",2.856096857250731],["(-.f64 x (*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))","done",2.0951832800125794],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","done",2.899065607250731],["(-.f64 x (/.f64 1 (/.f64 a (*.f64 y (-.f64 z t)))))","fresh",4.389003759768443],["(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","fresh",6.365376453789296],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875]],"compiler":[[16,11],[14,9],[20,13],[16,11],[16,11],[14,9],[14,9],[16,11],[14,9],[16,11],[14,9]],"count":[[213,7]],"kept":[{"done":[2,2],"fresh":[4,2],"new":[206,2],"picked":[1,1]}],"min-error":[0],"time":61.135009765625,"type":"prune"},{"compiler":[[29,9]],"locations":[["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)",2.7084470044127515,true]],"time":5.997802734375,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","x","-inf",0.248046875],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","x","inf",0.18212890625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","x","0",0.315185546875],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","t","-inf",0.256103515625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","t","inf",0.26904296875],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","t","0",0.318115234375],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","z","-inf",0.301025390625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","z","inf",0.289794921875],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","z","0",3.583984375],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","a","-inf",0.274169921875],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","a","inf",0.254150390625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","a","0",0.245849609375],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","y","-inf",0.291015625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","y","inf",0.343994140625],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","y","0",0.320068359375]],"time":7.68701171875,"type":"series"},{"count":[[1,30]],"egraph":[[2,3061,11,0.024331292],[1,218,11,0.003883125],[0,10,13,0.0002255]],"inputs":[["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y a) (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2) (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 (/.f64 y a) (-.f64 z t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (*.f64 x x)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 1))))))"]],"rules":[["egg-rr",30]],"stop":[["node limit",1]],"time":41.739990234375,"type":"rewrite"},{"count":[[90,50]],"egraph":[[11,3838,590,0.053923834],[10,3838,590,0.046614459],[9,3833,590,0.040488333999999994],[8,3791,590,0.034324708999999995],[7,3589,590,0.027749166999999998],[6,2815,590,0.021180667],[5,1634,590,0.013237042000000001],[4,866,590,0.005905125000000001],[3,400,590,0.002669208],[2,161,680,0.001143],[1,74,690,0.00046225],[0,33,736,0.000183375]],"inputs":[["x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (/.f64 (*.f64 y t) a) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(*.f64 -1 (/.f64 (*.f64 y z) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(/.f64 (*.f64 y t) a)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (neg.f64 y) (-.f64 z t)) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a))))","(neg.f64 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (neg.f64 y) (-.f64 z t)) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (*.f64 y (-.f64 (/.f64 z a) (/.f64 t a)))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a))","(neg.f64 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (neg.f64 y) (-.f64 z t)) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 x (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) x)","(+.f64 x (/.f64 y (/.f64 a t)))","(+.f64 x (*.f64 (/.f64 y a) t))","(fma.f64 (/.f64 y a) t x)","(fma.f64 y (/.f64 t a) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 y) (/.f64 a z))","(*.f64 z (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (/.f64 (*.f64 y z) a))","(neg.f64 (/.f64 y (/.f64 a z)))","(/.f64 (neg.f64 y) (/.f64 a z))","(*.f64 z (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y z) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a z)) x)","(-.f64 x (*.f64 (/.f64 y a) z))","(-.f64 x (*.f64 z (/.f64 y a)))","(fma.f64 (/.f64 (neg.f64 y) a) z x)","(fma.f64 z (/.f64 (neg.f64 y) a) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(/.f64 (*.f64 y t) a)","(/.f64 y (/.f64 a t))","(*.f64 (/.f64 y a) t)","(/.f64 t (/.f64 a y))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(/.f64 (*.f64 y t) a)","(/.f64 y (/.f64 a t))","(*.f64 (/.f64 y a) t)","(/.f64 t (/.f64 a y))","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (/.f64 (*.f64 y t) a) (+.f64 x (*.f64 -1 (/.f64 (*.f64 y z) a))))","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a))","(neg.f64 (/.f64 (*.f64 (-.f64 z t) y) a))","(/.f64 (*.f64 (neg.f64 y) (-.f64 z t)) a)","(*.f64 (/.f64 y a) (-.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","x","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 -1 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(-.f64 x (/.f64 (-.f64 z t) (/.f64 a y)))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(fma.f64 (/.f64 y a) (-.f64 t z) x)"]],"stop":[["saturated",1]],"time":79.301025390625,"type":"simplify"},{"compiler":[[600,160]],"time":5.011962890625,"type":"eval"},{"alts":[["(-.f64 x (*.f64 (-.f64 z t) (/.f64 1 (/.f64 a y))))","fresh",3.1434203675791954],["(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","done",2.856096857250731],["(-.f64 x (*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))","done",2.0951832800125794],["(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","done",2.899065607250731],["(-.f64 x (/.f64 1 (/.f64 a (*.f64 y (-.f64 z t)))))","fresh",4.389003759768443],["(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","fresh",6.365376453789296],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.38671875]],"compiler":[[16,11],[14,9],[20,13],[16,11],[16,11],[14,9],[14,9]],"count":[[57,7]],"kept":[{"done":[3,3],"fresh":[3,3],"new":[50,0],"picked":[1,1]}],"min-error":[0],"time":8.875,"type":"prune"},{"accuracy":[0.12890625],"baseline":[2.0951832800125794],"branch":[["x",2.09518328001258,1],["y",0.17320253907376804,3],["z",2.0951832800125794,1],["t",2.095183280012579,1],["a",0.142910009768442,3],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.150722509768442,3],["(/.f64 (*.f64 y (-.f64 z t)) a)",0.15072250976844204,3],["(*.f64 y (-.f64 z t))",0.12890625,3],["(*.f64 y (-.f64 z t))",0.12890625,3],["(-.f64 z t)",0.608381867019173,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[10,7],[10,7],[8,6],[126,50]],"count":[[12,3]],"inputs":[["(-.f64 x (*.f64 (-.f64 z t) (/.f64 1 (/.f64 a y))))","(fma.f64 (neg.f64 (/.f64 y a)) (-.f64 z t) x)","(-.f64 x (/.f64 1 (/.f64 a (*.f64 y (-.f64 z t)))))","(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","(-.f64 x (*.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))","(-.f64 x (*.f64 (-.f64 z t) (*.f64 y (/.f64 1 a))))","(+.f64 (/.f64 (neg.f64 y) (/.f64 a (-.f64 z t))) x)","(fma.f64 t (/.f64 y a) x)","(-.f64 x (*.f64 y (/.f64 1 (/.f64 a (-.f64 z t)))))","(-.f64 x (pow.f64 (/.f64 a (*.f64 y (-.f64 z t))) -1))","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"link":["."],"name":["Optimisation.CirclePacking:place from circle-packing-0.1.0.4, F"],"oracle":[24.403262696333613],"outputs":[["(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))"]],"time":114.357177734375,"times":[["x",5.0869140625],["y",14.171875],["z",5.0830078125],["t",5.2080078125],["a",14.484130859375],["(-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",13.44677734375],["(/.f64 (*.f64 y (-.f64 z t)) a)",12.52197265625],["(*.f64 y (-.f64 z t))",13.213134765625],["(*.f64 y (-.f64 z t))",13.3369140625],["(-.f64 z t)",14.671142578125]],"type":"regimes"},{"bstep":[[3.342688283743084e+110,8.435834510446666e+115,0.031005859375],[-1.42555743861018e+255,-4.325996171475348e+249,0.100830078125]],"compiler":[[12,9],[10,7]],"method":["left-value","left-value"],"time":0.239990234375,"type":"bsearch"},{"compiler":[[48,20]],"egraph":[[7,105,63,0.000805334],[6,104,63,0.000664959],[5,91,63,0.000518709],[4,70,63,0.00035745899999999997],[3,57,63,0.000234792],[2,42,63,0.000148417],[1,27,63,8.1209e-5],[0,20,63,3.2167e-5]],"inputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -999999999999999988452569694641453289891412847766833896677368465428848130901034909295879619908945316559292587569958465674654992927728624557883489163749540246356891129106733591931304833693638565628182306078113383272782784390994049606075766012189756664840192) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t)))) (if (<=.f64 (*.f64 y (-.f64 z t)) 499999999999999978409886320820907879202552238629189140897698107811441303810555744076971465473716161022374445056) (-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -999999999999999988452569694641453289891412847766833896677368465428848130901034909295879619908945316559292587569958465674654992927728624557883489163749540246356891129106733591931304833693638565628182306078113383272782784390994049606075766012189756664840192) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t)))) (if (<=.f64 (*.f64 y (-.f64 z t)) 499999999999999978409886320820907879202552238629189140897698107811441303810555744076971465473716161022374445056) (-.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))))","(if (<=.f64 (*.f64 y (-.f64 z t)) -999999999999999988452569694641453289891412847766833896677368465428848130901034909295879619908945316559292587569958465674654992927728624557883489163749540246356891129106733591931304833693638565628182306078113383272782784390994049606075766012189756664840192) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t)))) (if (<=.f64 (*.f64 y (-.f64 z t)) 499999999999999978409886320820907879202552238629189140897698107811441303810555744076971465473716161022374445056) (+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a)) (-.f64 x (/.f64 y (/.f64 a (-.f64 z t))))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.208984375,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[48,20]],"remove-preprocessing":[[]],"time":11.358154296875,"type":"end"}]