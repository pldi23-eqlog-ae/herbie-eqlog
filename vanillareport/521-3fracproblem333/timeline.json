[{"compiler":[[17,14]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.499755859375,0.499755859375,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":3.054931640625,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.119140625,3],["body",512,"valid",119.93212890625,1553],["body",1024,"valid",159.4482421875,1393],["body",256,"valid",220.872314453125,5310]],"time":508.06005859375,"type":"sample"},{"compiler":[[16,13]],"egraph":[[0,1,1,1.208e-6],[9,642,22,0.008762166],[8,622,22,0.0071462489999999995],[7,516,22,0.005449666],[6,395,22,0.003634541],[5,236,22,0.002074916],[4,122,22,0.001021833],[3,64,22,0.0004922489999999999],[2,38,22,0.000247291],[1,22,22,0.00013379100000000002],[0,11,22,6.3583e-5]],"inputs":[["0"],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(+.f64 (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (/.f64 1 (+.f64 x -1)))","(+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))","(+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":32.075927734375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[9,642,22,0.008785666],[8,622,22,0.007133125],[7,516,22,0.005425042],[6,395,22,0.003614584],[5,236,22,0.002059375],[4,122,22,0.001016709],[3,64,22,0.0004904169999999999],[2,38,22,0.00024787599999999996],[1,22,22,0.00013412599999999998],[0,11,22,6.2667e-5]],"inputs":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(+.f64 (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (/.f64 1 (+.f64 x -1)))","(+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))","(+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))"]],"stop":[["saturated",1]],"time":19.916015625,"type":"simplify"},{"compiler":[[31,25]],"time":0.4970703125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","next",12.036934610869558]],"compiler":[[16,13],[16,13]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[12.036934610869558],"time":0.97705078125,"type":"prune"},{"compiler":[[47,36]],"locations":[["(/.f64 1 (+.f64 x 1))",0.0078125,true],["(/.f64 1 (-.f64 x 1))",0.01171875,true],["(-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x))",0.03515625,true],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",2.878951725791181,true]],"time":11.2548828125,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 1 (+.f64 x 1))","x","-inf",0.151123046875],["(/.f64 1 (+.f64 x 1))","x","inf",0.16796875],["(/.f64 1 (+.f64 x 1))","x","0",0.180908203125],["(/.f64 1 (-.f64 x 1))","x","-inf",0.176025390625],["(/.f64 1 (-.f64 x 1))","x","inf",0.220947265625],["(/.f64 1 (-.f64 x 1))","x","0",0.23486328125],["(-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x))","x","-inf",0.23095703125],["(-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x))","x","inf",0.251953125],["(-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x))","x","0",0.223876953125],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","-inf",0.347900390625],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","inf",0.52490234375],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","0",0.468994140625]],"time":3.3681640625,"type":"series"},{"count":[[4,273]],"egraph":[[2,4401,49,0.032371292],[1,272,49,0.0058685000000000005],[0,11,49,0.000353166]],"inputs":[["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x))","(/.f64 1 (-.f64 x 1))","(/.f64 1 (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) (/.f64 (pow.f64 (+.f64 x -1) -2) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (pow.f64 (+.f64 x -1) -1/2)) (hypot.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (pow.f64 (+.f64 x -1) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (/.f64 1 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1))) (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3))) (neg.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2))) (neg.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (+.f64 x -1) (*.f64 (*.f64 x (+.f64 1 x)) 1)) (*.f64 (*.f64 x (+.f64 1 x)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (+.f64 x -1) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) 1)) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (+.f64 x -1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) 1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (fma.f64 -1 x 1) (*.f64 (*.f64 x (+.f64 1 x)) -1)) (*.f64 (*.f64 x (+.f64 1 x)) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (fma.f64 -1 x 1) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) -1)) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (fma.f64 -1 x 1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) -1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (+.f64 1 x) (*.f64 (+.f64 x -1) (-.f64 x (*.f64 (+.f64 1 x) 2)))) (*.f64 (+.f64 x -1) (*.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (*.f64 x (+.f64 1 x)) (*.f64 (fma.f64 -1 x 1) (-.f64 x (*.f64 (+.f64 1 x) 2)))) (*.f64 (fma.f64 -1 x 1) (*.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (*.f64 (+.f64 x -1) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))))) (*.f64 (+.f64 x -1) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (*.f64 (fma.f64 -1 x 1) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))))) (*.f64 (fma.f64 -1 x 1) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (*.f64 (+.f64 x -1) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))))) (*.f64 (+.f64 x -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (*.f64 (fma.f64 -1 x 1) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))))) (*.f64 (fma.f64 -1 x 1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (pow.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) 3)) (+.f64 (pow.f64 (+.f64 1 x) -2) (fma.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (*.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (*.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))))) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2)) (-.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (pow.f64 (+.f64 x -1) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (exp.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (/.f64 (exp.f64 (/.f64 2 x)) (exp.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 (exp.f64 (/.f64 2 x)) (exp.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (exp.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 x -1))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x -1)) 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x 1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 x -1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 x -1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) -1)) (fma.f64 x x (+.f64 1 x)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (+.f64 1 x)) (-.f64 x (*.f64 (+.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (*.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 x (*.f64 (+.f64 1 x) 2))) (neg.f64 (*.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3)))) (neg.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x)))) (neg.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 1/2 (fma.f64 -1 x -1)) (*.f64 (+.f64 1 x) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (*.f64 x 1/2)) (*.f64 (fma.f64 -1 x -1) 1)) (*.f64 (fma.f64 -1 x -1) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (*.f64 (fma.f64 -1 x -1) 2)) (*.f64 (fma.f64 -1 x -1) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (*.f64 (+.f64 1 x) -2)) (*.f64 (+.f64 1 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (neg.f64 x)) (*.f64 (fma.f64 -1 x -1) -2)) (*.f64 (fma.f64 -1 x -1) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (pow.f64 (/.f64 -2 x) 3)) (+.f64 (pow.f64 (+.f64 1 x) -2) (-.f64 (*.f64 (/.f64 -2 x) (/.f64 -2 x)) (*.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (*.f64 (/.f64 -2 x) (/.f64 -2 x))) (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (+.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (exp.f64 (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (exp.f64 (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (/.f64 1 (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 1 (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -2 x)) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 2 x))) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -2 x)) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 2 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (neg.f64 (pow.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (neg.f64 (cbrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 2 x)) (neg.f64 (sqrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (pow.f64 x -1) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (/.f64 1 (*.f64 x (+.f64 1 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (/.f64 -2 x))) (cbrt.f64 (/.f64 -2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -2 x)) (sqrt.f64 (/.f64 -2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 2 x))) (sqrt.f64 (/.f64 2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (pow.f64 x -1)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 2 x)) 2)) (cbrt.f64 (/.f64 2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 x -1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 x -1) (*.f64 (/.f64 -2 x) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 x -1)))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 x -1)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 x -1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 x 3) -1)) (fma.f64 x x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x -1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (+.f64 x -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x x (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",28],["egg-rr",124],["egg-rr",93]],"stop":[["node limit",1]],"time":71.81884765625,"type":"rewrite"},{"count":[[321,327]],"egraph":[[4,5413,713,0.026941291],[3,1927,716,0.013917790999999999],[2,644,719,0.0047448329999999995],[1,233,730,0.0015205],[0,74,756,0.000396125]],"inputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 -2 x)","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 x) (/.f64 2 x))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 (+.f64 x (pow.f64 x 3))) (/.f64 2 x))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (fma.f64 -2 x (*.f64 -2 (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) (/.f64 2 x))","(fma.f64 -2 x (fma.f64 -2 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) (/.f64 -2 x)))","(fma.f64 -2 (+.f64 (pow.f64 x 3) (+.f64 x (pow.f64 x 5))) (/.f64 -2 x))","(fma.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (pow.f64 x 5))) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9))))","(/.f64 -2 x)","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 1 (/.f64 2 x))","(+.f64 1 (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (neg.f64 x) (/.f64 2 x)))","(+.f64 (-.f64 1 x) (/.f64 -2 x))","(-.f64 1 (-.f64 x (/.f64 -2 x)))","(+.f64 1 (-.f64 (/.f64 -2 x) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (fma.f64 -1 x (*.f64 x x)) (/.f64 2 x)))","(+.f64 1 (+.f64 (-.f64 (*.f64 x x) x) (/.f64 -2 x)))","(+.f64 1 (fma.f64 x (+.f64 x -1) (/.f64 -2 x)))","(+.f64 1 (-.f64 (fma.f64 x x (/.f64 -2 x)) x))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)) (/.f64 -1 (pow.f64 x 4))))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)) (/.f64 -1 (pow.f64 x 4))))","-1","(-.f64 (*.f64 -1 x) 1)","(fma.f64 -1 x -1)","(fma.f64 x -1 -1)","(-.f64 -1 x)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(+.f64 (neg.f64 (*.f64 x x)) (fma.f64 -1 x -1))","(fma.f64 -1 (fma.f64 x x x) -1)","(-.f64 -1 (fma.f64 x x x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(+.f64 (fma.f64 -1 (pow.f64 x 3) (*.f64 -1 (+.f64 (*.f64 x x) x))) -1)","(fma.f64 (pow.f64 x 3) -1 (fma.f64 -1 (fma.f64 x x x) -1))","(-.f64 (-.f64 -1 (fma.f64 x x x)) (pow.f64 x 3))","(*.f64 (fma.f64 x x 1) (-.f64 -1 x))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (neg.f64 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 1 (fma.f64 -1 x (*.f64 x x)))","(+.f64 1 (-.f64 (*.f64 x x) x))","(fma.f64 x (+.f64 x -1) 1)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(fma.f64 -1 (pow.f64 x 3) (+.f64 1 (fma.f64 -1 x (*.f64 x x))))","(-.f64 (+.f64 1 (-.f64 (*.f64 x x) x)) (pow.f64 x 3))","(-.f64 (fma.f64 x (+.f64 x -1) 1) (pow.f64 x 3))","(+.f64 1 (*.f64 x (-.f64 x (fma.f64 x x 1))))","(*.f64 (-.f64 1 x) (fma.f64 x x 1))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))) (/.f64 -1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 -1 (pow.f64 x 4)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))) (/.f64 -1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 -1 (pow.f64 x 4)))))"]],"stop":[["node limit",1]],"time":51.049072265625,"type":"simplify"},{"compiler":[[7835,6299]],"time":97.825927734375,"type":"eval"},{"alts":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","next",12.030743351101115],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","fresh",32.45516567350836],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","fresh",12.031052053492756]],"compiler":[[18,15],[18,15],[16,13],[18,15],[18,15],[16,13]],"count":[[328,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[327,3],"picked":[1,0]}],"min-error":[0.2949393467279656],"time":107.861083984375,"type":"prune"},{"compiler":[[64,51]],"locations":[["(log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))",0.01171875,true],["(expm1.f64 (/.f64 1 (+.f64 1 x)))",0.01171875,true],["(-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))",0.03515625,true],["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",2.878951725791181,true]],"time":17.9541015625,"type":"localize"},{"count":[[4,48]],"series":[["(log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))","x","-inf",0.153076171875],["(log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))","x","inf",0.170166015625],["(log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))","x","0",0.14501953125],["(expm1.f64 (/.f64 1 (+.f64 1 x)))","x","-inf",0.2099609375],["(expm1.f64 (/.f64 1 (+.f64 1 x)))","x","inf",0.275146484375],["(expm1.f64 (/.f64 1 (+.f64 1 x)))","x","0",0.326171875],["(-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))","x","-inf",0.155029296875],["(-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))","x","inf",0.156982421875],["(-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))","x","0",0.16796875],["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","-inf",0.198974609375],["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","inf",0.221923828125],["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","x","0",0.27197265625]],"time":2.620849609375,"type":"series"},{"count":[[4,255]],"egraph":[[2,4488,51,0.033136416],[1,293,51,0.006186083],[0,13,51,0.000385]],"inputs":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))","(expm1.f64 (/.f64 1 (+.f64 1 x)))","(log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) (/.f64 (pow.f64 (+.f64 x -1) -2) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 (+.f64 x -1) -1/2) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x)))) (hypot.f64 (pow.f64 (+.f64 x -1) -1/2) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (/.f64 1 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1))) (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3)) (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) (pow.f64 (+.f64 x -1) -3))) (neg.f64 (-.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2)) (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2) (pow.f64 (+.f64 x -1) -2))) (neg.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (+.f64 x -1) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) 1)) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (+.f64 x -1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) 1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (fma.f64 -1 x 1) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) -1)) (*.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (fma.f64 -1 x 1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) -1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (fma.f64 -1 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (*.f64 (+.f64 x -1) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))))) (*.f64 (+.f64 x -1) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (*.f64 (fma.f64 -1 x 1) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))))) (*.f64 (fma.f64 -1 x 1) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (*.f64 (+.f64 x -1) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))))) (*.f64 (+.f64 x -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (*.f64 (fma.f64 -1 x 1) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))))) (*.f64 (fma.f64 -1 x 1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (pow.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) 3)) (+.f64 (pow.f64 (+.f64 1 x) -2) (fma.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (*.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (*.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1))))) (+.f64 (/.f64 1 (+.f64 1 x)) (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2)) (-.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 (+.f64 x -1) -1/2) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (/.f64 (exp.f64 (/.f64 2 x)) (exp.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (exp.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 x -1))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x -1)) 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (/.f64 1 (cbrt.f64 (+.f64 x -1))) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x 1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) 2)) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 (pow.f64 x 3) -1)) (+.f64 (fma.f64 x x 1) x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (neg.f64 (-.f64 (/.f64 2 x) (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (+.f64 (/.f64 -2 x) (/.f64 1 (+.f64 x -1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)) (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3)))) (neg.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x)))) (neg.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x 1/2 (fma.f64 -1 x -1)) (*.f64 (+.f64 1 x) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (*.f64 x 1/2) (neg.f64 (*.f64 (fma.f64 -1 x -1) 1))) (*.f64 (fma.f64 -1 x -1) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (*.f64 (+.f64 1 x) 2)) (*.f64 (+.f64 1 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (*.f64 (fma.f64 -1 x -1) 2)) (*.f64 (fma.f64 -1 x -1) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (*.f64 (+.f64 1 x) -2)) (*.f64 (+.f64 1 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (neg.f64 x)) (*.f64 (fma.f64 -1 x -1) -2)) (*.f64 (fma.f64 -1 x -1) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 x) -3) (pow.f64 (/.f64 -2 x) 3)) (+.f64 (pow.f64 (+.f64 1 x) -2) (-.f64 (*.f64 (/.f64 -2 x) (/.f64 -2 x)) (*.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (*.f64 (/.f64 -2 x) (/.f64 -2 x))) (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (/.f64 1 (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -2 x)) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 2 x))) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (neg.f64 (/.f64 1 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1 (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (neg.f64 (cbrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 2 x)) (neg.f64 (sqrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 2 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 -1 x -1)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (pow.f64 (+.f64 1 x) -2))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (/.f64 -2 x))) (cbrt.f64 (/.f64 -2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -2 x)) (sqrt.f64 (/.f64 -2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 2 x))) (sqrt.f64 (/.f64 2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (pow.f64 (cbrt.f64 (/.f64 2 x)) 2) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 2 x)) 2)) (cbrt.f64 (/.f64 2 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (*.f64 (/.f64 -2 x) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))) (cbrt.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (log.f64 (cbrt.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))) (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) 2) (cbrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (sqrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) 3) 1) (fma.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 1 (+.f64 1 x))) (+.f64 1 (*.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 1 (+.f64 1 x))) -1) (+.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 (/.f64 1 (+.f64 1 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 2) (expm1.f64 (/.f64 1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))) 2))) (log.f64 (-.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (neg.f64 (fma.f64 -1 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (fma.f64 -1 x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (cbrt.f64 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",33],["egg-rr",26],["egg-rr",110],["egg-rr",86]],"stop":[["node limit",1]],"time":72.093017578125,"type":"rewrite"},{"count":[[303,310]],"egraph":[[4,6647,748,0.030472041],[3,2402,748,0.016673375],[2,808,758,0.005858333],[1,297,769,0.001885125],[0,96,798,0.000502917]],"inputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 -2 x)","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(-.f64 (E.f64) 1)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (E.f64)) 1)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (+.f64 (E.f64) (*.f64 3/2 (*.f64 (E.f64) (pow.f64 x 2))))) 1)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (+.f64 (E.f64) (+.f64 (*.f64 -13/6 (*.f64 (E.f64) (pow.f64 x 3))) (*.f64 3/2 (*.f64 (E.f64) (pow.f64 x 2)))))) 1)","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 x) (/.f64 2 x))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 (+.f64 x (pow.f64 x 3))) (/.f64 2 x))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (fma.f64 -2 x (*.f64 -2 (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) (/.f64 2 x))","(fma.f64 -2 x (fma.f64 -2 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) (/.f64 -2 x)))","(fma.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (pow.f64 x 5))) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 3)))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 3)))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(/.f64 -2 x)","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 1 (/.f64 2 x))","(+.f64 1 (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (neg.f64 x) (/.f64 2 x)))","(+.f64 (-.f64 1 x) (/.f64 -2 x))","(+.f64 1 (-.f64 (/.f64 -2 x) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (fma.f64 -1 x (*.f64 x x)) (/.f64 2 x)))","(+.f64 1 (+.f64 (-.f64 (*.f64 x x) x) (/.f64 -2 x)))","(+.f64 1 (fma.f64 x (+.f64 x -1) (/.f64 -2 x)))","(+.f64 (fma.f64 x (+.f64 x -1) 1) (/.f64 -2 x))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))","(-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 x))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)) (/.f64 -1 (pow.f64 x 4))))","(/.f64 -1 x)","(neg.f64 (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(neg.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x))","(-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 x)))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))))","(-.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))) (/.f64 1 (pow.f64 x 4))))","(+.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (-.f64 (/.f64 -1 x) (/.f64 1 (*.f64 x x))) (/.f64 -1 (pow.f64 x 4))))","(+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 x))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 x)) (/.f64 -1 (pow.f64 x 4))))","(-.f64 (E.f64) 1)","(+.f64 (E.f64) -1)","(expm1.f64 1)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (E.f64)) 1)","(+.f64 (fma.f64 -1 (*.f64 x (E.f64)) (E.f64)) -1)","(fma.f64 (neg.f64 (E.f64)) x (expm1.f64 1))","(-.f64 (expm1.f64 1) (*.f64 x (E.f64)))","(fma.f64 (-.f64 1 x) (E.f64) -1)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (+.f64 (E.f64) (*.f64 3/2 (*.f64 (E.f64) (pow.f64 x 2))))) 1)","(+.f64 (+.f64 (fma.f64 -1 (*.f64 x (E.f64)) (E.f64)) (*.f64 3/2 (*.f64 (*.f64 x x) (E.f64)))) -1)","(+.f64 -1 (-.f64 (fma.f64 3/2 (*.f64 x (*.f64 x (E.f64))) (E.f64)) (*.f64 x (E.f64))))","(-.f64 (fma.f64 (*.f64 x x) (*.f64 (E.f64) 3/2) (expm1.f64 1)) (*.f64 x (E.f64)))","(+.f64 (E.f64) (fma.f64 x (*.f64 (E.f64) (+.f64 -1 (*.f64 x 3/2))) -1))","(+.f64 (E.f64) (fma.f64 (E.f64) (-.f64 (*.f64 (*.f64 x x) 3/2) x) -1))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (E.f64) x)) (+.f64 (E.f64) (+.f64 (*.f64 -13/6 (*.f64 (E.f64) (pow.f64 x 3))) (*.f64 3/2 (*.f64 (E.f64) (pow.f64 x 2)))))) 1)","(+.f64 (+.f64 (fma.f64 -1 (*.f64 x (E.f64)) (E.f64)) (fma.f64 -13/6 (*.f64 (pow.f64 x 3) (E.f64)) (*.f64 3/2 (*.f64 (*.f64 x x) (E.f64))))) -1)","(fma.f64 (neg.f64 (E.f64)) x (+.f64 (fma.f64 3/2 (*.f64 x (*.f64 x (E.f64))) (*.f64 (pow.f64 x 3) (*.f64 (E.f64) -13/6))) (expm1.f64 1)))","(+.f64 (expm1.f64 1) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 x (*.f64 x 3/2)) (*.f64 (pow.f64 x 3) -13/6))) (*.f64 x (E.f64))))","(-.f64 (expm1.f64 1) (*.f64 (E.f64) (-.f64 x (*.f64 (*.f64 x x) (+.f64 (*.f64 x -13/6) 3/2)))))","(-.f64 (expm1.f64 1) (*.f64 (E.f64) (-.f64 x (*.f64 (*.f64 x x) (+.f64 3/2 (*.f64 x -13/6))))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/2 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 -1/2 (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1/24 (pow.f64 x 4)) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/2 (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 1/6 (pow.f64 x 3))) (-.f64 (/.f64 1/24 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x))))","(+.f64 (/.f64 1 x) (-.f64 (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/24 (pow.f64 x 4))) (/.f64 (/.f64 1/2 x) x)))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x))) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/24 (pow.f64 x 4))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (+.f64 (/.f64 1/24 (pow.f64 x 4)) (/.f64 -1/2 (*.f64 x x)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(-.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 x) (-.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/2 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 -1/2 (*.f64 x x))))","(-.f64 (+.f64 (*.f64 1/24 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 x) (*.f64 1/6 (/.f64 1 (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1/24 (pow.f64 x 4)) (+.f64 (/.f64 1 x) (-.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/2 (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 1/6 (pow.f64 x 3))) (-.f64 (/.f64 1/24 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x))))","(+.f64 (/.f64 1 x) (-.f64 (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/24 (pow.f64 x 4))) (/.f64 (/.f64 1/2 x) x)))","(+.f64 (+.f64 (/.f64 1 x) (/.f64 -1/2 (*.f64 x x))) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (/.f64 1/24 (pow.f64 x 4))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1/6 (pow.f64 x 3)) (+.f64 (/.f64 1/24 (pow.f64 x 4)) (/.f64 -1/2 (*.f64 x x)))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (neg.f64 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 1 (fma.f64 -1 x (*.f64 x x)))","(+.f64 1 (-.f64 (*.f64 x x) x))","(fma.f64 x (+.f64 x -1) 1)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(fma.f64 -1 (pow.f64 x 3) (+.f64 1 (fma.f64 -1 x (*.f64 x x))))","(-.f64 (+.f64 1 (-.f64 (*.f64 x x) x)) (pow.f64 x 3))","(-.f64 (fma.f64 x (+.f64 x -1) 1) (pow.f64 x 3))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 4))) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 (*.f64 x x)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 4))) (/.f64 1 (*.f64 x x))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))) (/.f64 -1 (pow.f64 x 4)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 -1 (*.f64 x x)) (-.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))"]],"stop":[["node limit",1]],"time":54.089111328125,"type":"simplify"},{"compiler":[[7616,6156]],"time":96.0419921875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","done",12.030743351101115],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","next",12.031052053492756],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","fresh",32.45516567350836]],"compiler":[[18,15],[16,13],[18,15],[16,13],[18,15]],"count":[[313,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[310,1],"picked":[1,1]}],"min-error":[0.2949393467279656],"time":103.387939453125,"type":"prune"},{"compiler":[[50,39]],"locations":[["(/.f64 1 (+.f64 1 x))",0.0078125,true],["(/.f64 1 (+.f64 x -1))",0.01171875,true],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))",2.4374960612955143,true],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))",2.6656323828028605,true]],"time":11.404052734375,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 1 (+.f64 1 x))","x","-inf",0.1669921875],["(/.f64 1 (+.f64 1 x))","x","inf",0.151123046875],["(/.f64 1 (+.f64 1 x))","x","0",0.158935546875],["(/.f64 1 (+.f64 x -1))","x","-inf",0.152099609375],["(/.f64 1 (+.f64 x -1))","x","inf",0.151123046875],["(/.f64 1 (+.f64 x -1))","x","0",0.16015625],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","x","-inf",0.175048828125],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","x","inf",0.192138671875],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","x","0",0.164794921875],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","-inf",0.18994140625],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","inf",0.218994140625],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","x","0",0.376953125]],"time":2.413818359375,"type":"series"},{"count":[[4,275]],"egraph":[[2,4661,52,0.032206999],[1,290,52,0.005852499000000001],[0,12,52,0.000397208]],"inputs":[["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))","(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","(/.f64 1 (+.f64 x -1))","(/.f64 1 (+.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (/.f64 (pow.f64 (+.f64 1 x) -2) (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (/.f64 1 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x -1) (+.f64 (+.f64 1 x) (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (fma.f64 x x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (+.f64 (pow.f64 (+.f64 1 x) -2) (-.f64 (pow.f64 (+.f64 x -1) -2) (/.f64 1 (fma.f64 x x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (+.f64 1 x) (+.f64 x -1))) (neg.f64 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3))) (neg.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2))) (neg.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 x -1 -1) (*.f64 (-.f64 1 x) 1)) (*.f64 (-.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 x -1 -1) (*.f64 (+.f64 x -1) -1)) (*.f64 (+.f64 x -1) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (fma.f64 x -1 -1) (*.f64 (-.f64 1 x) -1)) (*.f64 (-.f64 1 x) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 x) (*.f64 (fma.f64 x -1 -1) 1)) (*.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 x) (*.f64 (+.f64 1 x) -1)) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (-.f64 1 x) (*.f64 (fma.f64 x -1 -1) -1)) (*.f64 (fma.f64 x -1 -1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 x) -2) (pow.f64 (+.f64 x -1) -2)) (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (+.f64 x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (exp.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 x -1))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (exp.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 (+.f64 x (+.f64 x -1))) (log.f64 (fma.f64 x x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 (+.f64 x (+.f64 x -1))) (log.f64 (fma.f64 x x -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 x -1 -1)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x -1)) 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)) (/.f64 1 (+.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 x -1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (-.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3)))) (neg.f64 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x)))) (neg.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (*.f64 x 1/2)) (*.f64 (fma.f64 x x -1) 1)) (*.f64 (fma.f64 x x -1) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (*.f64 x 1/2)) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) 1)) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (*.f64 x 1/2)) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1)) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) x) (*.f64 (fma.f64 x x -1) 2)) (*.f64 (fma.f64 x x -1) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) x) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) 2)) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) x) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2)) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (neg.f64 x)) (*.f64 (fma.f64 x x -1) -2)) (*.f64 (fma.f64 x x -1) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (neg.f64 x)) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) -2)) (*.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1)))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (neg.f64 x)) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) -2)) (*.f64 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 3)) (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (*.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (pow.f64 (/.f64 -2 x) 3)) (+.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (-.f64 (*.f64 (/.f64 -2 x) (/.f64 -2 x)) (*.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (-.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (*.f64 (/.f64 -2 x) (/.f64 -2 x))) (-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))) (exp.f64 (/.f64 2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))) (+.f64 1 (expm1.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 x -1))) (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))) (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))) (exp.f64 (/.f64 -2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (/.f64 1 (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))) (/.f64 1 (exp.f64 (/.f64 2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -2 x)) (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 2 x))) (exp.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -2 x)) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 2 x))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (exp.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 2 x))) (exp.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (exp.f64 (/.f64 1 (+.f64 1 x))) (exp.f64 (/.f64 2 x))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 x -1)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 x -1 -1)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x -1)) 1 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x -1)) 1 (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) 1 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1 (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 1 (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (neg.f64 (/.f64 1 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1 (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1 (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) 1 (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 4 (*.f64 x x))) (neg.f64 (cbrt.f64 (/.f64 2 x))) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 2 x)) (neg.f64 (sqrt.f64 (/.f64 2 x))) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (/.f64 1 (fma.f64 x x -1)) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (+.f64 1 x) (+.f64 x -1)) (/.f64 1 (fma.f64 x x -1)) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 3) (/.f64 8 (pow.f64 x 3))) (/.f64 1 (fma.f64 (/.f64 2 x) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x))) (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1))))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (+.f64 1 x) -3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (+.f64 1 x) -2) (/.f64 1 (fma.f64 x x -1))))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) 2) (/.f64 4 (*.f64 x x))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (/.f64 -2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (-.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x)))) (*.f64 (/.f64 -2 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -2 x)) (cbrt.f64 (/.f64 -2 x))) (cbrt.f64 (/.f64 -2 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))) (cbrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -2 x)) (sqrt.f64 (/.f64 -2 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (sqrt.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 2 x))) (sqrt.f64 (/.f64 2 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (-.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (fma.f64 (/.f64 -2 x) 1 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (-.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (/.f64 1 x)) 2 (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (-.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 2 x))) (cbrt.f64 (/.f64 4 (*.f64 x x))) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (-.f64 (hypot.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 x -1) -1/2)) (sqrt.f64 (/.f64 2 x))) (+.f64 (/.f64 -2 x) (/.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (-.f64 (pow.f64 (+.f64 1 x) -1/2) (sqrt.f64 (/.f64 2 x))) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (/.f64 4 (*.f64 x x)))) (cbrt.f64 (/.f64 2 x)) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x) (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)) (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)) (*.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 x -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -1) (pow.f64 (sqrt.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 x -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1 (+.f64 x -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x -1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (+.f64 x -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 1 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 x) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) (pow.f64 (+.f64 1 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 1 x)) -1) (pow.f64 (sqrt.f64 (+.f64 1 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",25],["egg-rr",25],["egg-rr",159],["egg-rr",66]],"stop":[["node limit",1]],"time":72.105224609375,"type":"rewrite"},{"count":[[323,330]],"egraph":[[4,5086,730,0.027269167],[3,2024,733,0.013982084],[2,677,736,0.005237709],[1,237,746,0.0018508749999999999],[0,76,767,0.000409916]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3))))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 7)))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3)))","(*.f64 -2 (+.f64 x (pow.f64 x 3)))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3))))","(fma.f64 -2 x (*.f64 -2 (+.f64 (pow.f64 x 5) (pow.f64 x 3))))","(*.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (pow.f64 x 5))))","(*.f64 -2 (+.f64 (pow.f64 x 3) (+.f64 x (pow.f64 x 5))))","(+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 -2 (pow.f64 x 7)))))","(fma.f64 -2 x (fma.f64 -2 (pow.f64 x 5) (*.f64 -2 (+.f64 (pow.f64 x 3) (pow.f64 x 7)))))","(fma.f64 -2 x (*.f64 -2 (+.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) (pow.f64 x 7))))","(*.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (+.f64 (pow.f64 x 7) (pow.f64 x 5)))))","(*.f64 -2 (+.f64 (pow.f64 x 3) (+.f64 (pow.f64 x 5) (+.f64 x (pow.f64 x 7)))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 7)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5)))) (/.f64 2 (pow.f64 x 7)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5)))))","(/.f64 2 x)","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 x)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 7)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7)))))","(+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5)))) (/.f64 2 (pow.f64 x 7)))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 5)))))","(/.f64 -2 x)","(-.f64 (*.f64 -2 x) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 x) (/.f64 2 x))","(fma.f64 -2 x (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 -2 (+.f64 x (pow.f64 x 3))) (/.f64 2 x))","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) (/.f64 -2 x))","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (fma.f64 -2 x (*.f64 -2 (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) (/.f64 2 x))","(fma.f64 -2 x (fma.f64 -2 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) (/.f64 -2 x)))","(fma.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (pow.f64 x 5))) (/.f64 -2 x))","(fma.f64 -2 (+.f64 (pow.f64 x 3) (+.f64 x (pow.f64 x 5))) (/.f64 -2 x))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 5))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 5)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 5))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 9))))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))) (/.f64 2 (pow.f64 x 9))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 9)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 9)))))","-1","(-.f64 (*.f64 -1 x) 1)","(fma.f64 -1 x -1)","(fma.f64 x -1 -1)","(-.f64 -1 x)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(+.f64 (neg.f64 (*.f64 x x)) (fma.f64 -1 x -1))","(fma.f64 -1 (fma.f64 x x x) -1)","(-.f64 -1 (fma.f64 x x x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(+.f64 (fma.f64 -1 (pow.f64 x 3) (fma.f64 -1 (*.f64 x x) (neg.f64 x))) -1)","(fma.f64 (pow.f64 x 3) -1 (fma.f64 -1 (fma.f64 x x x) -1))","(-.f64 (-.f64 -1 (fma.f64 x x x)) (pow.f64 x 3))","(*.f64 (fma.f64 x x 1) (-.f64 -1 x))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4)))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (*.f64 x x))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 4))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 (pow.f64 x 4)))))","1","(+.f64 1 (*.f64 -1 x))","(+.f64 1 (neg.f64 x))","(-.f64 1 x)","(+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2)))","(+.f64 1 (fma.f64 -1 x (*.f64 x x)))","(+.f64 1 (*.f64 x (+.f64 x -1)))","(fma.f64 x x (-.f64 1 x))","(-.f64 (fma.f64 x x 1) x)","(+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 -1 x) (pow.f64 x 2))))","(fma.f64 -1 (pow.f64 x 3) (+.f64 1 (fma.f64 -1 x (*.f64 x x))))","(-.f64 (+.f64 1 (*.f64 x (+.f64 x -1))) (pow.f64 x 3))","(-.f64 (fma.f64 x x (-.f64 1 x)) (pow.f64 x 3))","(+.f64 1 (*.f64 x (-.f64 x (fma.f64 x x 1))))","(*.f64 (-.f64 1 x) (fma.f64 x x 1))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 (/.f64 -1 x) x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 -1 x) x) (/.f64 -1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (-.f64 (/.f64 -1 (pow.f64 x 4)) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))","(/.f64 1 x)","(-.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 2)))","(-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 -1 x) x))","(+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (/.f64 1 (pow.f64 x 2)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 (/.f64 -1 x) x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (/.f64 -1 (*.f64 x x))))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 -1 (*.f64 x x))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (-.f64 (/.f64 1 x) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 -1 x) x) (/.f64 -1 (pow.f64 x 4)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (-.f64 (/.f64 -1 (pow.f64 x 4)) (/.f64 1 (*.f64 x x)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (+.f64 (/.f64 1 x) (+.f64 (/.f64 -1 (*.f64 x x)) (/.f64 -1 (pow.f64 x 4)))))"]],"stop":[["node limit",1]],"time":50.841796875,"type":"simplify"},{"compiler":[[7958,6392]],"time":99.337158203125,"type":"eval"},{"alts":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","done",12.030743351101115],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","done",12.031052053492756],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","next",32.45516567350836]],"compiler":[[18,15],[16,13],[18,15],[18,15]],"count":[[333,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[330,0],"picked":[1,1]}],"min-error":[0.2949393467279656],"time":120.533935546875,"type":"prune"},{"compiler":[[58,46]],"locations":[["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))",0.00390625,true],["(/.f64 2 (pow.f64 x 7))",0.16254159812084049,true],["(/.f64 2 (pow.f64 x 5))",0.18511803986303468,true],["(/.f64 2 (pow.f64 x 3))",0.3418143467279656,true]],"time":16.465087890625,"type":"localize"},{"count":[[4,12]],"series":[["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","x","-inf",0.208984375],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","x","inf",0.18310546875],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","x","0",0.342041015625],["(/.f64 2 (pow.f64 x 7))","x","-inf",0.198974609375],["(/.f64 2 (pow.f64 x 7))","x","inf",0.23095703125],["(/.f64 2 (pow.f64 x 7))","x","0",0.52587890625],["(/.f64 2 (pow.f64 x 5))","x","-inf",0.22802734375],["(/.f64 2 (pow.f64 x 5))","x","inf",0.202880859375],["(/.f64 2 (pow.f64 x 5))","x","0",0.487060546875],["(/.f64 2 (pow.f64 x 3))","x","-inf",0.259033203125],["(/.f64 2 (pow.f64 x 3))","x","inf",0.428955078125],["(/.f64 2 (pow.f64 x 3))","x","0",0.599853515625]],"time":4.033935546875,"type":"series"},{"count":[[4,167]],"egraph":[[2,4925,41,0.035045042],[1,344,41,0.006946542],[0,14,46,0.000493459]],"inputs":[["(/.f64 2 (pow.f64 x 3))","(/.f64 2 (pow.f64 x 5))","(/.f64 2 (pow.f64 x 7))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (pow.f64 x -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (pow.f64 x -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 2) x) (pow.f64 (/.f64 (cbrt.f64 2) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 2) x) 2) (/.f64 (cbrt.f64 2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (pow.f64 x -3))) (sqrt.f64 (*.f64 2 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -3) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 2) x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (pow.f64 x -3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (pow.f64 x -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 4 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2) (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (pow.f64 x -3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2 (pow.f64 x -3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (pow.f64 x -5)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (pow.f64 x -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 x -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -5))) (cbrt.f64 (/.f64 4 (pow.f64 x 10))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (pow.f64 x 10))) (cbrt.f64 (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 5/2)) (/.f64 (sqrt.f64 2) (pow.f64 x 5/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -5) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (pow.f64 x -5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 5/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (pow.f64 x -5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 5) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 4 (pow.f64 x 10)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -5)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (pow.f64 x -5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2 (pow.f64 x -5))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (pow.f64 x -7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (pow.f64 x -7))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (pow.f64 x -7)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -7))) (cbrt.f64 (/.f64 4 (pow.f64 x 14))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (pow.f64 x 14))) (cbrt.f64 (*.f64 2 (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 7/2)) (/.f64 (sqrt.f64 2) (pow.f64 x 7/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -7) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (pow.f64 x -7)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -7))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 7/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 8 (pow.f64 (pow.f64 x -7) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 7) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 4 (pow.f64 x 14)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2) (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -7)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 8 (pow.f64 (pow.f64 x -7) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2 (pow.f64 x -7))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 4 (pow.f64 x 10)) (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))) (/.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2) (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) (pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) 2) (cbrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) (sqrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 8 (pow.f64 (pow.f64 x -5) 3) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 3)) (/.f64 1 (fma.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) (fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (neg.f64 (*.f64 2 (pow.f64 x -5)))) (/.f64 4 (pow.f64 x 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 4 (pow.f64 x 10)) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2)) (/.f64 1 (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) (fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (neg.f64 (*.f64 2 (pow.f64 x -5)))) (/.f64 4 (pow.f64 x 10))) (fma.f64 8 (pow.f64 (pow.f64 x -5) 3) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (-.f64 (/.f64 4 (pow.f64 x 10)) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 8 (pow.f64 (pow.f64 x -5) 3) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 3)) (fma.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) (fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (neg.f64 (*.f64 2 (pow.f64 x -5)))) (/.f64 4 (pow.f64 x 10))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 8 (pow.f64 (pow.f64 x -5) 3) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 3)) (+.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2) (-.f64 (/.f64 4 (pow.f64 x 10)) (*.f64 2 (*.f64 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 4 (pow.f64 x 10)) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2)) (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 8 (pow.f64 (pow.f64 x -5) 3) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 3))) (neg.f64 (fma.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) (fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (neg.f64 (*.f64 2 (pow.f64 x -5)))) (/.f64 4 (pow.f64 x 10)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 4 (pow.f64 x 10)) (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2))) (neg.f64 (-.f64 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (pow.f64 x 10) (*.f64 (pow.f64 x 5) (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))))) (pow.f64 (pow.f64 x 5) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 10) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))))) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (pow.f64 x 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -2 (pow.f64 x 10) (*.f64 (neg.f64 (pow.f64 x 5)) (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))))) (*.f64 (neg.f64 (pow.f64 x 5)) (pow.f64 x 10)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (*.f64 (pow.f64 x 5) (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)))) (*.f64 (pow.f64 x 5) (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)))) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -2 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (*.f64 (neg.f64 (pow.f64 x 5)) (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)))) (*.f64 (neg.f64 (pow.f64 x 5)) (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) (*.f64 (pow.f64 x 5) (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))))) (*.f64 (pow.f64 x 5) (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7)) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))))) (*.f64 (*.f64 (pow.f64 x 5) 1/2) (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -2 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) (*.f64 (neg.f64 (pow.f64 x 5)) (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))))) (*.f64 (neg.f64 (pow.f64 x 5)) (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))) (pow.f64 x 5) (*.f64 (pow.f64 x 10) 2)) (pow.f64 (pow.f64 x 5) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)) (pow.f64 x 5) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) 2)) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))) (pow.f64 x 5) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) 2)) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))) (*.f64 (pow.f64 x 5) 1/2) (*.f64 (pow.f64 x 10) 1)) (*.f64 (pow.f64 x 10) (*.f64 (pow.f64 x 5) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)) (*.f64 (pow.f64 x 5) 1/2) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) 1)) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (*.f64 (pow.f64 x 5) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))) (*.f64 (pow.f64 x 5) 1/2) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) 1)) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) (*.f64 (pow.f64 x 5) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))) (neg.f64 (pow.f64 x 5)) (*.f64 (pow.f64 x 10) -2)) (*.f64 (pow.f64 x 10) (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)) (neg.f64 (pow.f64 x 5)) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) -2)) (*.f64 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10)))) (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))) (neg.f64 (pow.f64 x 5)) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) -2)) (*.f64 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7))) (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) 3) (*.f64 8 (pow.f64 (pow.f64 x -7) 3))) (fma.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (-.f64 (/.f64 4 (pow.f64 x 14)) (*.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (*.f64 2 (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2) (/.f64 4 (pow.f64 x 10))) (fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (neg.f64 (*.f64 2 (pow.f64 x -5)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (/.f64 4 (pow.f64 x 14))) (-.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (*.f64 2 (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -5)))) (exp.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)) (+.f64 1 (expm1.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -5)))) (+.f64 1 (expm1.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -7)) (exp.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -7)))) (exp.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -7)) (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)) (pow.f64 (exp.f64 2) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -7)))) (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)) (pow.f64 (exp.f64 2) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))) (pow.f64 (exp.f64 2) (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -5))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))) (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -5))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)) (pow.f64 (exp.f64 2) (pow.f64 x -3))) (pow.f64 (exp.f64 2) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 2) (pow.f64 x -5)) (pow.f64 (exp.f64 2) (pow.f64 x -3))) (+.f64 1 (expm1.f64 (*.f64 2 (pow.f64 x -7))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (pow.f64 x -5) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (pow.f64 x -3) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (pow.f64 x -7) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)) (*.f64 2 (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (+.f64 (pow.f64 x -7) (pow.f64 x -3)) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 x -3)) 1 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 x -5)) 1 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (pow.f64 x -7)) 1 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 1 (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (pow.f64 x -3)) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (pow.f64 x -5)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (pow.f64 x -7)) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) (*.f64 2 (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -7))) (cbrt.f64 (/.f64 4 (pow.f64 x 14))) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 4 (pow.f64 x 14))) (cbrt.f64 (*.f64 2 (pow.f64 x -7))) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2 (pow.f64 x -5))) (cbrt.f64 (/.f64 4 (pow.f64 x 10))) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 4 (pow.f64 x 10))) (cbrt.f64 (*.f64 2 (pow.f64 x -5))) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 2) x) (pow.f64 (/.f64 (cbrt.f64 2) x) 2) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 (cbrt.f64 2) x) 2) (/.f64 (cbrt.f64 2) x) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (cbrt.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2)) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))) 2)) (cbrt.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 7/2)) (/.f64 (sqrt.f64 2) (pow.f64 x 7/2)) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 2) (pow.f64 x 5/2)) (/.f64 (sqrt.f64 2) (pow.f64 x 5/2)) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2 (pow.f64 x -3))) (sqrt.f64 (*.f64 2 (pow.f64 x -3))) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (sqrt.f64 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7)))) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 5))) (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 7))) (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (/.f64 1 (neg.f64 (pow.f64 x 3))) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 2 (pow.f64 x 3) (*.f64 2 (pow.f64 x 7))) (/.f64 1 (pow.f64 x 10)) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 8 (pow.f64 (pow.f64 x -7) 3) (pow.f64 (*.f64 2 (pow.f64 x -3)) 3)) (/.f64 1 (+.f64 (/.f64 4 (pow.f64 x 6)) (-.f64 (/.f64 4 (pow.f64 x 14)) (/.f64 4 (pow.f64 x 10))))) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -5) 2 (*.f64 2 (+.f64 (pow.f64 x -3) (pow.f64 x -7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -3) 2 (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 4 (pow.f64 x 6)) (/.f64 4 (pow.f64 x 14))) (/.f64 1 (*.f64 2 (-.f64 (pow.f64 x -3) (pow.f64 x -7)))) (*.f64 2 (pow.f64 x -5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))) 1 (*.f64 2 (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (cbrt.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))) (cbrt.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (*.f64 2 (pow.f64 x -7)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (sqrt.f64 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (*.f64 2 (pow.f64 x -7)))))))"]],"rules":[["egg-rr",101],["egg-rr",22],["egg-rr",22],["egg-rr",22]],"stop":[["node limit",1]],"time":67.626953125,"type":"rewrite"},{"count":[[179,176]],"egraph":[[9,7856,219,0.045940875],[8,6968,219,0.035442166],[7,5700,219,0.025025541],[6,4733,219,0.016718999999999998],[5,1338,219,0.009268041],[4,438,219,0.003353625],[3,223,219,0.0015620830000000001],[2,136,219,0.0008673330000000001],[1,65,219,0.000451792],[0,24,219,0.000154167]],"inputs":[["(/.f64 2 (pow.f64 x 7))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 7))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 7)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 7)))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 2 (pow.f64 x 7))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 7))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 7)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 7)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 (pow.f64 x 7)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))","(/.f64 2 (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 7))) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 7)) (/.f64 2 (pow.f64 x 3))))","(+.f64 (/.f64 2 (pow.f64 x 7)) (+.f64 (/.f64 2 (pow.f64 x 5)) (/.f64 2 (pow.f64 x 3))))"]],"stop":[["node limit",1]],"time":63.203125,"type":"simplify"},{"compiler":[[4199,3482]],"time":54.994873046875,"type":"eval"},{"alts":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","done",12.030743351101115],["(fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))","fresh",32.168038826780396],["(fma.f64 (pow.f64 (/.f64 (cbrt.f64 2) x) 2) (/.f64 (cbrt.f64 2) x) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))","fresh",32.28493262562261],["(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","done",12.031052053492756],["(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","done",32.45516567350836]],"compiler":[[18,15],[15,12],[22,18],[16,13],[18,15]],"count":[[179,5]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[176,2],"picked":[1,1]}],"min-error":[0],"time":35.89697265625,"type":"prune"},{"accuracy":[0.0078125],"baseline":[12.030743351101115],"branch":[["x",0.01171875,3],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",0.0078125,3]],"compiler":[[2,1],[16,13],[115,93]],"count":[[7,3]],"inputs":[["(fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))","(fma.f64 (pow.f64 (/.f64 (cbrt.f64 2) x) 2) (/.f64 (cbrt.f64 2) x) (fma.f64 2 (pow.f64 x -7) (*.f64 2 (pow.f64 x -5))))","(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 2 (pow.f64 x 7))))","(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))","(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))"]],"link":["."],"name":["3frac (problem 3.3.3)"],"oracle":[44.18737213027315],"outputs":[["(+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))","(fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3))))","(-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))"]],"time":21.4140625,"times":[["x",10.93603515625],["(+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1)))",8.202880859375]],"type":"regimes"},{"bstep":[[1.9852334701272664e-23,380778794453.01935,0.032958984375],[-1.520403678622229,-2.4763215150311324e-9,0.087890625]],"compiler":[[4,3],[16,13]],"method":["left-value","left-value"],"time":0.22802734375,"type":"bsearch"},{"compiler":[[83,68]],"egraph":[[4,65,122,0.000325084],[3,64,122,0.000264584],[2,62,122,0.000203501],[1,54,122,0.000141876],[0,37,122,6.7334e-5]],"inputs":[["(if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) -1) (+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) (if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) 6805647338418769/340282366920938463463374607431768211456) (fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) -1) (+.f64 (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) (if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 x 1)) (/.f64 2 x)) (/.f64 1 (-.f64 x 1))) 6805647338418769/340282366920938463463374607431768211456) (fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))","(if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (/.f64 1 (+.f64 x -1))) -1) (+.f64 (/.f64 1 (+.f64 x -1)) (-.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 2 x))) (if (<=.f64 (+.f64 (-.f64 (/.f64 1 (+.f64 1 x)) (/.f64 2 x)) (/.f64 1 (+.f64 x -1))) 6805647338418769/340282366920938463463374607431768211456) (fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (-.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 2 x))))","(if (<=.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1))) -1) (+.f64 (/.f64 1 (+.f64 x -1)) (+.f64 (log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 x)))) (/.f64 -2 x))) (if (<=.f64 (+.f64 (+.f64 (/.f64 1 (+.f64 1 x)) (/.f64 -2 x)) (/.f64 1 (+.f64 x -1))) 6805647338418769/340282366920938463463374607431768211456) (fma.f64 (pow.f64 x -7) 2 (*.f64 2 (+.f64 (pow.f64 x -5) (pow.f64 x -3)))) (+.f64 (+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 1 x))) (/.f64 -2 x))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.60205078125,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[83,68]],"remove-preprocessing":[[]],"time":28.81201171875,"type":"end"}]