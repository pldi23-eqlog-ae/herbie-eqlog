[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":156.572021484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",136.288818359375,2803],["body",256,"valid",406.083984375,8256]],"time":552.40380859375,"type":"sample"},{"compiler":[[14,9]],"egraph":[[0,5,5,2.834e-6],[6,5701,121,0.035194709000000005],[5,3359,121,0.019525709000000002],[4,1246,121,0.008165709],[3,504,121,0.0028598340000000003],[2,207,121,0.0010717090000000001],[1,101,143,0.00040537600000000004],[0,46,143,0.000148417]],"inputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 y (/.f64 (*.f64 x (-.f64 z t)) a))","(+.f64 y (/.f64 x (/.f64 a (-.f64 z t))))","(+.f64 y (*.f64 (/.f64 x a) (-.f64 z t)))","(fma.f64 (/.f64 x a) (-.f64 z t) y)","(fma.f64 (-.f64 z t) (/.f64 x a) y)","(fma.f64 x (/.f64 (-.f64 z t) a) y)","(+.f64 z (/.f64 (*.f64 y (-.f64 x t)) a))","(+.f64 z (*.f64 (/.f64 y a) (-.f64 x t)))","(fma.f64 (/.f64 y a) (-.f64 x t) z)","(fma.f64 (-.f64 x t) (/.f64 y a) z)","(fma.f64 y (/.f64 (-.f64 x t) a) z)","(+.f64 t (/.f64 (*.f64 y (-.f64 z x)) a))","(+.f64 t (/.f64 y (/.f64 a (-.f64 z x))))","(+.f64 t (*.f64 (/.f64 y a) (-.f64 z x)))","(fma.f64 (/.f64 y a) (-.f64 z x) t)","(fma.f64 (-.f64 z x) (/.f64 y a) t)","(fma.f64 y (/.f64 (-.f64 z x) a) t)","(+.f64 a (/.f64 (*.f64 y (-.f64 z t)) x))","(+.f64 a (*.f64 (/.f64 y x) (-.f64 z t)))","(fma.f64 (/.f64 y x) (-.f64 z t) a)","(fma.f64 (-.f64 z t) (/.f64 y x) a)","(fma.f64 y (/.f64 (-.f64 z t) x) a)","(+.f64 x (/.f64 (*.f64 z (-.f64 y t)) a))","(+.f64 x (*.f64 (/.f64 z a) (-.f64 y t)))","(fma.f64 (/.f64 z a) (-.f64 y t) x)","(fma.f64 (-.f64 y t) (/.f64 z a) x)","(fma.f64 z (/.f64 (-.f64 y t) a) x)","(+.f64 x (/.f64 (*.f64 t (-.f64 z y)) a))","(+.f64 x (*.f64 (/.f64 t a) (-.f64 z y)))","(fma.f64 (/.f64 t a) (-.f64 z y) x)","(fma.f64 (-.f64 z y) (/.f64 t a) x)","(+.f64 x (/.f64 (*.f64 a (-.f64 z t)) y))","(+.f64 x (/.f64 (*.f64 (-.f64 z t) a) y))","(+.f64 x (*.f64 (/.f64 a y) (-.f64 z t)))","(fma.f64 (/.f64 a y) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 a y) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 t z)) a))","(+.f64 x (*.f64 (/.f64 y a) (-.f64 t z)))","(fma.f64 (/.f64 y a) (-.f64 t z) x)","(fma.f64 (-.f64 t z) (/.f64 y a) x)","(fma.f64 y (/.f64 (-.f64 t z) a) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 a t)) z))","(+.f64 x (/.f64 (-.f64 a t) (/.f64 z y)))","(fma.f64 (/.f64 y z) (-.f64 a t) x)","(fma.f64 (-.f64 a t) (/.f64 y z) x)","(fma.f64 y (/.f64 (-.f64 a t) z) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z a)) t))","(+.f64 x (/.f64 y (/.f64 t (-.f64 z a))))","(+.f64 x (*.f64 (/.f64 y t) (-.f64 z a)))","(fma.f64 (/.f64 y t) (-.f64 z a) x)","(fma.f64 (-.f64 z a) (/.f64 y t) x)","(fma.f64 y (/.f64 (-.f64 z a) t) x)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":60.6611328125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,3813,11,0.055424124],[13,3813,11,0.048199123999999996],[12,3768,11,0.04211454],[11,3723,11,0.035739915],[10,3547,11,0.029324831999999995],[9,2724,11,0.022666081999999997],[8,1844,11,0.014382665999999999],[7,979,11,0.008012666],[6,541,11,0.003906332],[5,310,11,0.0019835820000000002],[4,151,11,0.001013374],[3,65,11,0.000449124],[2,31,11,0.000202374],[1,16,13,9.5416e-5],[0,10,13,4.0416e-5]],"inputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 x (/.f64 y (/.f64 a (-.f64 z t))))","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)"]],"stop":[["saturated",1]],"time":66.52197265625,"type":"simplify"},{"compiler":[[22,11]],"time":0.31396484375,"type":"eval"},{"alts":[["(fma.f64 y (/.f64 (-.f64 z t) a) x)","fresh",6.881414549645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","next",4.3828125]],"compiler":[[13,8],[14,9],[13,8],[14,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.10546875],"time":1.23095703125,"type":"prune"},{"compiler":[[34,9]],"locations":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.0078125,true],["(/.f64 (*.f64 y (-.f64 z t)) a)",5.19918606625165,true]],"time":6.178955078125,"type":"localize"},{"count":[[2,84]],"series":[["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","-inf",0.158935546875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","inf",0.197998046875],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","a","0",0.282958984375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","-inf",0.298095703125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","inf",0.18017578125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","t","0",0.95703125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","-inf",0.2021484375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","inf",0.177001953125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","z","0",0.3359375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","-inf",0.1708984375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","inf",0.4970703125],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","y","0",0.284912109375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","-inf",0.220947265625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","inf",0.21484375],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","x","0",0.362060546875],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","-inf",0.33203125],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","inf",0.333984375],["(/.f64 (*.f64 y (-.f64 z t)) a)","a","0",0.43798828125],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","-inf",0.35888671875],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","inf",0.7548828125],["(/.f64 (*.f64 y (-.f64 z t)) a)","t","0",0.385009765625],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","-inf",0.474853515625],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","inf",0.451904296875],["(/.f64 (*.f64 y (-.f64 z t)) a)","z","0",0.56494140625],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","-inf",0.3330078125],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","inf",0.510986328125],["(/.f64 (*.f64 y (-.f64 z t)) a)","y","0",0.619140625]],"time":10.43798828125,"type":"series"},{"count":[[2,117]],"egraph":[[2,3440,21,0.028685333],[1,225,23,0.004394958],[0,10,23,0.000227083]],"inputs":[["(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (/.f64 a (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (-.f64 z t) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (/.f64 1 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 (-.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) 1) (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y a) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sqrt.f64 a)) (/.f64 (-.f64 z t) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (sqrt.f64 a)) (/.f64 y (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/2) (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 a (-.f64 z t)) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y (-.f64 z t)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y a) (-.f64 z t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))) (/.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2) (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3)) (/.f64 1 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (/.f64 1 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) (*.f64 x x)) (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3)) (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3)) (+.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (-.f64 (*.f64 x x) (/.f64 x (/.f64 (/.f64 a (-.f64 z t)) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3))) (neg.f64 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))) (neg.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (*.f64 x x)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)) (*.f64 x x)) (+.f64 (pow.f64 x 3) (pow.f64 (/.f64 (/.f64 a (-.f64 z t)) y) -3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (*.f64 (/.f64 y a) (-.f64 z t))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 y a) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 (-.f64 z t) (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (-.f64 z t)) (/.f64 1 a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 y a) (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (*.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) (sqrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (*.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (/.f64 1 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 z t) (neg.f64 y)) (/.f64 1 (neg.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y 1) (/.f64 (-.f64 z t) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z t) 1) (/.f64 y a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) (-.f64 z t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) 1) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) 1) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z t) (pow.f64 (cbrt.f64 a) 2)) (/.f64 y (cbrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (*.f64 y (-.f64 z t)) (cbrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (pow.f64 (cbrt.f64 a) 2)) (/.f64 (sqrt.f64 (*.f64 y (-.f64 z t))) (cbrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (sqrt.f64 a)) (/.f64 (-.f64 z t) (sqrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z t) (sqrt.f64 a)) (/.f64 y (sqrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 a -1/2) (/.f64 (*.f64 y (-.f64 z t)) (sqrt.f64 a)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) 2) (sqrt.f64 a)) (/.f64 (cbrt.f64 (*.f64 y (-.f64 z t))) (sqrt.f64 a)) x)))))"]],"rules":[["egg-rr",70],["egg-rr",47]],"stop":[["node limit",1]],"time":53.236083984375,"type":"rewrite"},{"count":[[201,135]],"egraph":[[13,3478,818,0.055907583000000004],[12,3474,818,0.048516624],[11,3469,818,0.042628708],[10,3455,818,0.036757],[9,3360,818,0.030538458],[8,2634,818,0.024145208],[7,1682,818,0.015691875],[6,1066,818,0.009285083],[5,611,818,0.005123583],[4,379,818,0.0028136660000000003],[3,202,818,0.001564583],[2,107,818,0.000829624],[1,57,910,0.00041129100000000004],[0,28,1087,0.000177125]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (*.f64 (neg.f64 t) y) a)","(/.f64 (*.f64 y (neg.f64 t)) a)","(/.f64 t (/.f64 a (neg.f64 y)))","(/.f64 (*.f64 t (neg.f64 y)) a)","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (*.f64 (neg.f64 t) y) a)","(/.f64 (*.f64 y (neg.f64 t)) a)","(/.f64 t (/.f64 a (neg.f64 y)))","(/.f64 (*.f64 t (neg.f64 y)) a)","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (*.f64 (neg.f64 t) y) a)","(/.f64 (*.f64 y (neg.f64 t)) a)","(/.f64 t (/.f64 a (neg.f64 y)))","(/.f64 (*.f64 t (neg.f64 y)) a)","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (*.f64 -1 (/.f64 (*.f64 y t) a)))","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(fma.f64 -1 (/.f64 (*.f64 y t) a) x)","(-.f64 x (/.f64 (*.f64 y t) a))","(-.f64 x (*.f64 t (/.f64 y a)))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 y (/.f64 z a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 y (/.f64 a z)) x)","(+.f64 (*.f64 (/.f64 y a) z) x)","(fma.f64 (/.f64 y a) z x)","(fma.f64 y (/.f64 z a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (*.f64 (neg.f64 t) y) a)","(/.f64 (*.f64 y (neg.f64 t)) a)","(/.f64 t (/.f64 a (neg.f64 y)))","(/.f64 (*.f64 t (neg.f64 y)) a)","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 (*.f64 y t) a))","(/.f64 (*.f64 (neg.f64 t) y) a)","(/.f64 (*.f64 y (neg.f64 t)) a)","(/.f64 t (/.f64 a (neg.f64 y)))","(/.f64 (*.f64 t (neg.f64 y)) a)","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (neg.f64 (/.f64 (*.f64 y t) a)) (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 (-.f64 z t) a) y)","(*.f64 y (/.f64 (-.f64 z t) a))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (*.f64 (/.f64 (-.f64 z t) a) y) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)"]],"stop":[["saturated",1]],"time":90.637939453125,"type":"simplify"},{"compiler":[[2004,534]],"time":15.1181640625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","fresh",2.9131310677492825],["(fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)","fresh",4.40234375],["(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)","fresh",6.865789549645704],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","next",2.1058414866725106],["(+.f64 x (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))","fresh",17.778828304135413],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","fresh",2.8779748177492825]],"compiler":[[15,10],[15,10],[15,10],[14,9],[19,12],[26,14],[13,8],[15,10],[15,10],[15,10],[19,12],[26,14],[13,8]],"count":[[137,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[135,6],"picked":[1,1]}],"min-error":[0],"time":33.614013671875,"type":"prune"},{"compiler":[[46,18]],"locations":[["(/.f64 y (pow.f64 (cbrt.f64 a) 2))",0.203125,true],["(/.f64 (-.f64 z t) (cbrt.f64 a))",0.20703125,true],["(pow.f64 (cbrt.f64 a) 2)",0.4753113281475362,true],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)",1.8199123532253005,true]],"time":10.346923828125,"type":"localize"},{"count":[[4,87]],"series":[["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","-inf",0.362060546875],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","inf",0.263916015625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","a","0",0.2548828125],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","-inf",0.213134765625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","inf",0.291015625],["(/.f64 y (pow.f64 (cbrt.f64 a) 2))","y","0",1.12109375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","-inf",0.366943359375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","inf",0.282958984375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","a","0",0.27490234375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","-inf",0.16796875],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","inf",0.179931640625],["(/.f64 (-.f64 z t) (cbrt.f64 a))","t","0",0.1708984375],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","-inf",0.185791015625],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","inf",0.1669921875],["(/.f64 (-.f64 z t) (cbrt.f64 a))","z","0",0.176025390625],["(pow.f64 (cbrt.f64 a) 2)","a","-inf",0.489013671875],["(pow.f64 (cbrt.f64 a) 2)","a","inf",0.349853515625],["(pow.f64 (cbrt.f64 a) 2)","a","0",0.359130859375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","x","-inf",0.255126953125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","x","inf",0.19580078125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","x","0",1.115234375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","t","-inf",1.7490234375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","t","inf",0.39599609375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","t","0",2.56591796875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","z","-inf",0.60205078125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","z","inf",0.380859375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","z","0",1.317138671875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","a","-inf",1.02099609375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","a","inf",0.486083984375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","a","0",0.796142578125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","y","-inf",0.372802734375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","y","inf",0.364990234375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","y","0",1.9990234375]],"time":19.744873046875,"type":"series"},{"count":[[4,258]],"egraph":[[2,3915,37,0.03017175],[1,285,37,0.005415125000000001],[0,13,45,0.000321667]],"inputs":[["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","(pow.f64 (cbrt.f64 a) 2)","(/.f64 (-.f64 z t) (cbrt.f64 a))","(/.f64 y (pow.f64 (cbrt.f64 a) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))) (cbrt.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) (pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) 2) (cbrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) (sqrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (*.f64 y (-.f64 z t)) a) 3) (pow.f64 x 3)) (fma.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (/.f64 (*.f64 y (-.f64 z t)) a) (-.f64 (*.f64 x x) (*.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (*.f64 y (-.f64 z t)) a) (/.f64 (*.f64 y (-.f64 z t)) a) (neg.f64 (*.f64 x x))) (-.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (*.f64 y (-.f64 z t)) a)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) (cbrt.f64 (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) (*.f64 (cbrt.f64 (cbrt.f64 a)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (cbrt.f64 a))) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (pow.f64 a 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a 1/6) (*.f64 (pow.f64 a 1/6) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 a) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 a (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 t (cbrt.f64 a)))) (sqrt.f64 (/.f64 t (cbrt.f64 a))) (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (pow.f64 a 1/6))) (/.f64 (sqrt.f64 t) (pow.f64 a 1/6)) (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) t))) (fma.f64 (neg.f64 (/.f64 1 (cbrt.f64 a))) t (*.f64 (/.f64 1 (cbrt.f64 a)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 a)) 1))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 a))) 1 (*.f64 (/.f64 t (cbrt.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (*.f64 (cbrt.f64 (/.f64 t (cbrt.f64 a))) (cbrt.f64 (/.f64 t (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a)))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 t (cbrt.f64 (cbrt.f64 a))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 t (pow.f64 a 1/6))) (/.f64 1 (pow.f64 a 1/6)) (*.f64 (/.f64 t (pow.f64 a 1/6)) (/.f64 1 (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 a)) (/.f64 (pow.f64 (cbrt.f64 t) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a))) (/.f64 (sqrt.f64 t) 1) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 a)) (/.f64 (sqrt.f64 t) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (cbrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a)))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (*.f64 (/.f64 (sqrt.f64 t) (cbrt.f64 (cbrt.f64 a))) (/.f64 (sqrt.f64 t) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6))) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)) (*.f64 (/.f64 (cbrt.f64 t) (pow.f64 a 1/6)) (/.f64 (pow.f64 (cbrt.f64 t) 2) (pow.f64 a 1/6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z t) (/.f64 1 (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 2)) (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (*.f64 (cbrt.f64 (-.f64 z t)) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z t)) (*.f64 (sqrt.f64 (-.f64 z t)) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z t)) (/.f64 1 (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 a)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) 1) (/.f64 (cbrt.f64 (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z t)) 1) (/.f64 (sqrt.f64 (-.f64 z t)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (-.f64 z t) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z t)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 (-.f64 z t)) (cbrt.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 (-.f64 z t) (pow.f64 a 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 (-.f64 z t)) (pow.f64 a 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 a) (-.f64 z t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z t) (neg.f64 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 z t) 3) a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 z (cbrt.f64 a))) (cbrt.f64 (/.f64 z (cbrt.f64 a)))) (cbrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z (cbrt.f64 a))) (sqrt.f64 (/.f64 z (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 z (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 a 1/6)) (/.f64 z (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) (cbrt.f64 a)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 (cbrt.f64 a))) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 a 1/6)) (/.f64 (cbrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (/.f64 (sqrt.f64 z) (pow.f64 a 1/6)) (neg.f64 (/.f64 t (cbrt.f64 a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2))) (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) (pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 2) (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 a)) (/.f64 (sqrt.f64 y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 a)) (/.f64 y (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 a)) (/.f64 (cbrt.f64 y) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (/.f64 y (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (*.f64 a (cbrt.f64 a)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (*.f64 y y) (*.f64 a (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (pow.f64 (cbrt.f64 a) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (pow.f64 (cbrt.f64 a) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 y) (*.f64 2/3 (log.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 y) (*.f64 2/3 (log.f64 a))) 1))))))"]],"rules":[["egg-rr",36],["egg-rr",172],["egg-rr",21],["egg-rr",29]],"stop":[["node limit",1]],"time":81.2001953125,"type":"rewrite"},{"count":[[345,282]],"egraph":[[5,5856,902,0.025201125],[4,1806,902,0.01381125],[3,591,902,0.0046062080000000005],[2,244,902,0.0018040410000000002],[1,110,1120,0.00076825],[0,40,1195,0.000278125]],"inputs":[["x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","x","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","x","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) x)","(+.f64 x (*.f64 -1 (/.f64 y (/.f64 a t))))","(-.f64 x (*.f64 (/.f64 y a) t))","(-.f64 x (*.f64 (/.f64 t a) y))","(-.f64 x (*.f64 t (/.f64 y a)))","(fma.f64 t (/.f64 (neg.f64 y) a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(*.f64 1 (/.f64 y (/.f64 a z)))","(/.f64 z (/.f64 a y))","(*.f64 z (/.f64 y a))","(/.f64 y (/.f64 a z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(*.f64 1 (/.f64 y (/.f64 a z)))","(/.f64 z (/.f64 a y))","(*.f64 z (/.f64 y a))","(/.f64 y (/.f64 a z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x)","(fma.f64 1 (/.f64 y (/.f64 a z)) x)","(+.f64 x (/.f64 z (/.f64 a y)))","(fma.f64 (/.f64 y a) z x)","(fma.f64 z (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 y (/.f64 a t)))","(neg.f64 (*.f64 (/.f64 y a) t))","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 (neg.f64 t) (/.f64 y a))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 y (/.f64 a t)))","(neg.f64 (*.f64 (/.f64 y a) t))","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 (neg.f64 t) (/.f64 y a))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 a 2)) 1/3) y)","(*.f64 y (cbrt.f64 (/.f64 1 (*.f64 a a))))","(*.f64 y (cbrt.f64 (/.f64 (/.f64 1 a) a)))"]],"stop":[["node limit",1]],"time":54.281005859375,"type":"simplify"},{"compiler":[[10116,3984]],"time":76.166015625,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","fresh",2.9131310677492825],["(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)","fresh",6.865789549645704],["(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","fresh",4.390625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","next",2.065451447598742],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","fresh",2.8779748177492825]],"compiler":[[15,10],[15,10],[28,21],[14,9],[21,15],[13,8],[15,10],[15,10],[28,21],[21,15],[13,8]],"count":[[289,6]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[282,2],"picked":[1,0]}],"min-error":[0],"time":95.4609375,"type":"prune"},{"compiler":[[58,31]],"locations":[["(/.f64 y (pow.f64 (cbrt.f64 a) 2))",0.203125,false],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))",0.25,true],["(pow.f64 (cbrt.f64 a) 2)",0.4753113281475362,false],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)",1.8199123532253005,true]],"time":14.655029296875,"type":"localize"},{"count":[[2,75]],"series":[["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","a","-inf",0.367919921875],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","a","inf",0.221923828125],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","a","0",0.19189453125],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","t","-inf",0.18603515625],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","t","inf",0.159912109375],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","t","0",0.159912109375],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","z","-inf",0.18896484375],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","z","inf",0.1611328125],["(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","z","0",0.190185546875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","x","-inf",0.173095703125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","x","inf",0.173828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","x","0",0.59814453125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","t","-inf",0.27880859375],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","t","inf",0.30712890625],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","t","0",0.595947265625],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","z","-inf",0.346923828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","z","inf",0.317138671875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","z","0",0.615966796875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","a","-inf",0.780029296875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","a","inf",0.283935546875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","a","0",0.262939453125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","y","-inf",0.22998046875],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","y","inf",0.256103515625],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","y","0",0.698974609375]],"time":8.06591796875,"type":"series"},{"count":[[2,60]],"egraph":[[2,4157,30,0.030705041],[1,333,30,0.005836416],[0,16,36,0.000393083]],"inputs":[["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))) (cbrt.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) (sqrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) 3) (pow.f64 x 3)) (fma.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) (-.f64 (*.f64 x x) (*.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))) (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))) (*.f64 x x)) (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 y (*.f64 (cbrt.f64 (pow.f64 a -2)) (/.f64 (-.f64 z t) (cbrt.f64 a))) x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (/.f64 1 (cbrt.f64 a))) (*.f64 (neg.f64 t) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) z) (*.f64 (/.f64 1 (cbrt.f64 a)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 z t) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 3) (pow.f64 t 3)) (*.f64 (cbrt.f64 a) (fma.f64 z z (*.f64 t (+.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 z z (neg.f64 (*.f64 t t))) (*.f64 (cbrt.f64 a) (+.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) (pow.f64 t 3)) 1) (*.f64 (fma.f64 z z (*.f64 t (+.f64 z t))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z z (neg.f64 (*.f64 t t))) 1) (*.f64 (+.f64 z t) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) (pow.f64 t 3)) (/.f64 1 (cbrt.f64 a))) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 z z (neg.f64 (*.f64 t t))) (/.f64 1 (cbrt.f64 a))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (cbrt.f64 a)) (fma.f64 z z (neg.f64 (*.f64 t t)))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z t) (cbrt.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 z t) 3) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 1 a) (pow.f64 (-.f64 z t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z t) (cbrt.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 (cbrt.f64 a)) (*.f64 (neg.f64 t) (/.f64 1 (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 a)) z (*.f64 (/.f64 1 (cbrt.f64 a)) (neg.f64 t)))))))"]],"rules":[["egg-rr",31],["egg-rr",29]],"stop":[["node limit",1]],"time":52.77197265625,"type":"rewrite"},{"count":[[135,82]],"egraph":[[10,7582,758,0.077632043],[9,7253,758,0.06590312599999999],[8,6676,758,0.053576166999999994],[7,5324,758,0.040101082999999996],[6,3922,758,0.026321166],[5,2300,758,0.014897041],[4,1101,758,0.007701458],[3,458,758,0.0034388329999999996],[2,219,758,0.0015175409999999999],[1,97,976,0.000659874],[0,35,1051,0.000249416]],"inputs":[["x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","x","x","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 (-.f64 z t) y) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","x","x","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) x)","(+.f64 x (*.f64 -1 (/.f64 y (/.f64 a t))))","(-.f64 x (*.f64 (/.f64 y a) t))","(-.f64 x (/.f64 (*.f64 t y) a))","(fma.f64 (/.f64 y a) (neg.f64 t) x)","(fma.f64 (neg.f64 t) (/.f64 y a) x)","(fma.f64 t (/.f64 (neg.f64 y) a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(*.f64 1 (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(*.f64 y (/.f64 z a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a))","(*.f64 1 (/.f64 y (/.f64 a z)))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(*.f64 y (/.f64 z a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x)","(fma.f64 1 (/.f64 y (/.f64 a z)) x)","(+.f64 x (*.f64 (/.f64 y a) z))","(fma.f64 (/.f64 y a) z x)","(fma.f64 z (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 y (/.f64 a t)))","(/.f64 (neg.f64 (*.f64 t y)) a)","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 (/.f64 t a) (neg.f64 y))","(*.f64 (neg.f64 y) (/.f64 t a))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a)))","(*.f64 -1 (/.f64 y (/.f64 a t)))","(/.f64 (neg.f64 (*.f64 t y)) a)","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 (/.f64 t a) (neg.f64 y))","(*.f64 (neg.f64 y) (/.f64 t a))","(*.f64 t (/.f64 (neg.f64 y) a))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a))","(*.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)))","(*.f64 (/.f64 y a) (-.f64 z t))","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y (-.f64 z t)) a)) x)","(fma.f64 1 (/.f64 (-.f64 z t) (/.f64 a y)) x)","(+.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 (pow.f64 (/.f64 1 a) 1/3) z)","(*.f64 z (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t))","(neg.f64 (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 t (neg.f64 (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (/.f64 1 a) 1/3) t)) (*.f64 (pow.f64 (/.f64 1 a) 1/3) z))","(fma.f64 -1 (*.f64 t (cbrt.f64 (/.f64 1 a))) (*.f64 z (cbrt.f64 (/.f64 1 a))))","(-.f64 (*.f64 z (cbrt.f64 (/.f64 1 a))) (*.f64 t (cbrt.f64 (/.f64 1 a))))","(*.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 z t))","(*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a)))"]],"stop":[["node limit",1]],"time":108.81396484375,"type":"simplify"},{"compiler":[[2797,1355]],"time":27.820068359375,"type":"eval"},{"alts":[["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","fresh",2.9131310677492825],["(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)","fresh",6.865789549645704],["(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","fresh",4.390625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","done",2.065451447598742],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","next",2.8779748177492825]],"compiler":[[15,10],[15,10],[28,21],[14,9],[21,15],[13,8],[15,10],[15,10],[28,21],[13,8]],"count":[[147,6]],"kept":[{"done":[1,1],"fresh":[4,3],"new":[141,1],"picked":[1,1]}],"min-error":[0],"time":34.39599609375,"type":"prune"},{"compiler":[[24,8]],"locations":[["(fma.f64 (/.f64 y a) (-.f64 z t) x)",2.712372679472843,true]],"time":5.220947265625,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 (/.f64 y a) (-.f64 z t) x)","x","-inf",0.158935546875],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","x","inf",0.17919921875],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","x","0",0.27001953125],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","t","-inf",0.25],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","t","inf",0.240966796875],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","t","0",0.308837890625],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","z","-inf",0.27197265625],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","z","inf",0.22998046875],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","z","0",0.359130859375],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","a","-inf",0.32080078125],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","a","inf",0.26904296875],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","a","0",0.31396484375],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","y","-inf",0.347900390625],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","y","inf",0.2958984375],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","y","0",0.378173828125]],"time":4.3740234375,"type":"series"},{"count":[[1,34]],"egraph":[[2,2710,11,0.024063374],[1,194,11,0.003317458],[0,9,11,0.000196375]],"inputs":[["(fma.f64 (/.f64 y a) (-.f64 z t) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (/.f64 y a) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y a) (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 y a) (-.f64 z t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2) (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 (/.f64 y a) (-.f64 z t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2) (*.f64 x x)) (fma.f64 (/.f64 y a) (-.f64 z t) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 z t)) (/.f64 y a)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (/.f64 y a) (-.f64 z t) x)) 1) 1))))))"]],"rules":[["egg-rr",34]],"stop":[["node limit",1]],"time":41.406005859375,"type":"rewrite"},{"count":[[94,52]],"egraph":[[13,3470,590,0.055334415000000005],[12,3466,590,0.047957915000000004],[11,3461,590,0.042105749000000005],[10,3447,590,0.036260707],[9,3352,590,0.030098124],[8,2630,590,0.023874207],[7,1676,590,0.015447332000000001],[6,1065,590,0.009090665000000001],[5,616,590,0.004960749],[4,381,590,0.0027156660000000003],[3,204,590,0.001494749],[2,106,590,0.000766833],[1,56,739,0.00037199900000000003],[0,27,740,0.000149791]],"inputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 y z) a)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(*.f64 -1 (/.f64 (*.f64 y t) a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(/.f64 (*.f64 (-.f64 z t) y) a)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(/.f64 (*.f64 y (-.f64 z t)) a)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 (-.f64 z t) y) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x)","(fma.f64 -1 (/.f64 y (/.f64 a t)) x)","(-.f64 x (*.f64 (/.f64 y a) t))","(-.f64 x (*.f64 t (/.f64 y a)))","(fma.f64 t (/.f64 (neg.f64 y) a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(/.f64 (*.f64 y z) a)","(/.f64 y (/.f64 a z))","(*.f64 (/.f64 y a) z)","(*.f64 z (/.f64 y a))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) x)","(+.f64 x (/.f64 y (/.f64 a z)))","(+.f64 x (*.f64 (/.f64 y a) z))","(fma.f64 (/.f64 y a) z x)","(fma.f64 z (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 y (/.f64 a t)))","(neg.f64 (*.f64 (/.f64 y a) t))","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 t (/.f64 (neg.f64 y) a))","(*.f64 (neg.f64 t) (/.f64 y a))","(/.f64 (neg.f64 t) (/.f64 a y))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(*.f64 -1 (/.f64 (*.f64 y t) a))","(neg.f64 (/.f64 y (/.f64 a t)))","(neg.f64 (*.f64 (/.f64 y a) t))","(*.f64 (/.f64 y a) (neg.f64 t))","(*.f64 t (/.f64 (neg.f64 y) a))","(*.f64 (neg.f64 t) (/.f64 y a))","(/.f64 (neg.f64 t) (/.f64 a y))","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(/.f64 (*.f64 (-.f64 z t) y) a)","(*.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y)","(*.f64 (-.f64 z t) (/.f64 y a))","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","x","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)","(+.f64 (/.f64 (*.f64 y (-.f64 z t)) a) x)","(fma.f64 (-.f64 (/.f64 z a) (/.f64 t a)) y x)","(fma.f64 (/.f64 (-.f64 z t) a) y x)","(fma.f64 (-.f64 z t) (/.f64 y a) x)"]],"stop":[["saturated",1]],"time":82.2119140625,"type":"simplify"},{"compiler":[[616,160]],"time":4.92919921875,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","fresh",4.390625],["(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)","fresh",6.865789549645704],["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","fresh",2.9131310677492825],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","done",4.3828125],["(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","done",2.065451447598742],["(fma.f64 (/.f64 y a) (-.f64 z t) x)","done",2.8779748177492825]],"compiler":[[20,13],[15,10],[15,10],[14,9],[21,15],[13,8]],"count":[[58,6]],"kept":[{"done":[2,2],"fresh":[3,2],"new":[52,1],"picked":[1,1]}],"min-error":[0],"time":9.747802734375,"type":"prune"},{"accuracy":[0.12890625],"baseline":[2.065451447598742],"branch":[["x",2.065451447598743,1],["y",0.15529252930532605,3],["z",2.065451447598742,1],["t",2.0654514475987424,1],["a",0.139003759768442,3],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",0.14453125,3],["(/.f64 (*.f64 y (-.f64 z t)) a)",0.14453125,3],["(*.f64 y (-.f64 z t))",0.12890625,3],["(*.f64 y (-.f64 z t))",0.12890625,3],["(-.f64 z t)",0.6279748177492827,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[10,7],[10,7],[8,6],[172,77]],"count":[[12,3]],"inputs":[["(+.f64 (/.f64 (*.f64 y z) a) (+.f64 (*.f64 -1 (/.f64 (*.f64 y t) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y t) a))) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 (*.f64 y z) a)) x))","(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (*.f64 (-.f64 z t) (cbrt.f64 (/.f64 1 a))) x)","(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","(fma.f64 (/.f64 1 a) (*.f64 y (-.f64 z t)) x)","(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)","(fma.f64 (/.f64 y (pow.f64 (cbrt.f64 a) 2)) (/.f64 (-.f64 z t) (cbrt.f64 a)) x)","(+.f64 x (*.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 y a) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (/.f64 y a) (-.f64 z t)))))","(fma.f64 (/.f64 y a) (-.f64 z t) x)","(fma.f64 y (/.f64 (-.f64 z t) a) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))"]],"link":["."],"name":["Optimisation.CirclePacking:place from circle-packing-0.1.0.4, E"],"oracle":[20.400955892051392],"outputs":[["(fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x)","(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))","(fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)"]],"time":113.675048828125,"times":[["x",5.286865234375],["y",14.219970703125],["z",5.06591796875],["t",5.150146484375],["a",14.13916015625],["(+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a))",13.85888671875],["(/.f64 (*.f64 y (-.f64 z t)) a)",12.203125],["(*.f64 y (-.f64 z t))",13.163818359375],["(*.f64 y (-.f64 z t))",13.01513671875],["(-.f64 z t)",14.27392578125]],"type":"regimes"},{"bstep":[[7.28722485706171e+81,6.445373200129657e+90,0.06005859375],[{"type":"real","value":"-inf"},-6.869939027593383e+306,0.036865234375]],"compiler":[[12,9],[10,7]],"method":["left-value","left-value"],"time":0.238037109375,"type":"bsearch"},{"compiler":[[50,23]],"egraph":[[4,38,65,0.00020083400000000002],[3,37,65,0.00016187500000000002],[2,35,65,0.00012275],[1,31,65,8.3667e-5],[0,24,65,4.3167e-5]],"inputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -inf.0) (fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x) (if (<=.f64 (*.f64 y (-.f64 z t)) 9999999999999999634067965630886574211027143225273567793680363843427086501542887424) (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 y (-.f64 z t)) -inf.0) (fma.f64 (-.f64 z t) (*.f64 y (/.f64 1 a)) x) (if (<=.f64 (*.f64 y (-.f64 z t)) 9999999999999999634067965630886574211027143225273567793680363843427086501542887424) (+.f64 x (/.f64 (*.f64 y (-.f64 z t)) a)) (fma.f64 y (/.f64 1 (/.f64 a (-.f64 z t))) x)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.299072265625,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[50,23]],"remove-preprocessing":[[]],"time":13.523193359375,"type":"end"}]