[{"compiler":[[12,9]],"method":["search"],"sampling":[[1,0.49623046875,0.0,0.50376953125],[0,0.0,0.49623046875,0.50376953125]],"time":0.185791015625,"type":"analyze"},{"outcomes":[["body",1024,"valid",289.266845703125,2111],["body",512,"valid",85.73876953125,1043],["body",256,"valid",31.90234375,752],["body",2048,"valid",1311.39306640625,4350]],"time":1726.693115234375,"type":"sample"},{"compiler":[[5,4]],"egraph":[[0,1,1,1.083e-6],[8,62,6,0.00091575],[7,59,6,0.000768667],[6,47,6,0.000598],[5,36,6,0.000440375],[4,26,6,0.000305292],[3,19,6,0.000211125],[2,13,6,0.000136083],[1,9,6,8.320800000000001e-5],[0,5,6,4.5e-5]],"inputs":[["0"],["(-.f64 1 (cos.f64 x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 1 (cos.f64 x))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.8740234375,"type":"preprocess"},{"count":[[1,1]],"egraph":[[8,62,6,0.000908666],[7,59,6,0.000761416],[6,47,6,0.000592916],[5,36,6,0.00043937399999999997],[4,26,6,0.000305458],[3,19,6,0.00020495799999999998],[2,13,6,0.000129083],[1,9,6,7.6833e-5],[0,5,6,3.9458e-5]],"inputs":[["(-.f64 1 (cos.f64 x))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (cos.f64 x))"]],"stop":[["saturated",1]],"time":11.160888671875,"type":"simplify"},{"compiler":[[5,4]],"time":0.214111328125,"type":"eval"},{"alts":[["(-.f64 1 (cos.f64 x))","next",29.82562376746964]],"compiler":[[5,4],[5,4]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[29.82562376746964],"time":0.64501953125,"type":"prune"},{"compiler":[[9,5]],"locations":[["(-.f64 1 (cos.f64 x))",2.5353186822039313,true]],"time":2.218017578125,"type":"localize"},{"count":[[1,4]],"series":[["(-.f64 1 (cos.f64 x))","x","-inf",0.180908203125],["(-.f64 1 (cos.f64 x))","x","inf",0.221923828125],["(-.f64 1 (cos.f64 x))","x","0",0.35498046875]],"time":0.796875,"type":"series"},{"count":[[1,28]],"egraph":[[2,1250,6,0.014143958],[1,102,6,0.001702125],[0,5,6,0.000161792]],"inputs":[["(-.f64 1 (cos.f64 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cos.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (cos.f64 x))) (pow.f64 (cbrt.f64 (-.f64 1 (cos.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (cos.f64 x))) 2) (cbrt.f64 (-.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (cos.f64 x))) (sqrt.f64 (-.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (cos.f64 x) 3)) (/.f64 1 (+.f64 1 (*.f64 (cos.f64 x) (+.f64 1 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 x) (sin.f64 x)) (/.f64 1 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (*.f64 (cos.f64 x) (+.f64 1 (cos.f64 x)))) (-.f64 1 (pow.f64 (cos.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (cos.f64 x)) (*.f64 (sin.f64 x) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (cos.f64 x) 3)) (+.f64 1 (*.f64 (cos.f64 x) (+.f64 1 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 x) (sin.f64 x)) (+.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (cos.f64 x) 3))) (neg.f64 (+.f64 1 (*.f64 (cos.f64 x) (+.f64 1 (cos.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 x) (sin.f64 x))) (neg.f64 (+.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (cos.f64 x)) 3)) (+.f64 1 (-.f64 (*.f64 (neg.f64 (cos.f64 x)) (neg.f64 (cos.f64 x))) (neg.f64 (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 (neg.f64 (cos.f64 x)) (neg.f64 (cos.f64 x)))) (-.f64 1 (neg.f64 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (cos.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (cos.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (cos.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (cos.f64 x))))))))"]],"rules":[["egg-rr",28]],"stop":[["node limit",1]],"time":31.60107421875,"type":"rewrite"},{"count":[[32,36]],"egraph":[[10,7661,70,0.066769086],[9,7222,70,0.054977961],[8,6238,70,0.043680961],[7,5248,70,0.032214211],[6,4742,70,0.023160752],[5,4365,70,0.015994876999999998],[4,1979,70,0.008845585],[3,424,70,0.003438793],[2,128,70,0.001014752],[1,56,70,0.000403418],[0,24,70,0.000119209]],"inputs":[["(*.f64 1/2 (pow.f64 x 2))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 -1/40320 (pow.f64 x 8)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (pow.f64 x 2))","(*.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(*.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2))","(*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 1/720 (pow.f64 x 6) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))","(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 -1/40320 (pow.f64 x 8)))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (fma.f64 1/720 (pow.f64 x 6) (*.f64 -1/40320 (pow.f64 x 8)))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 1/720 (pow.f64 x 6) (fma.f64 -1/40320 (pow.f64 x 8) (*.f64 -1/24 (pow.f64 x 4)))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1/40320 -1/24) (fma.f64 1/720 (pow.f64 x 6) (*.f64 1/2 (*.f64 x x))))"]],"stop":[["node limit",1]],"time":79.47705078125,"type":"simplify"},{"compiler":[[390,244]],"time":5.2509765625,"type":"eval"},{"alts":[["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","next",0.015625],["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","fresh",0.11687981307064318]],"compiler":[[16,10],[11,7],[16,10],[11,7]],"count":[[37,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[36,2],"picked":[1,0]}],"min-error":[0.00390625],"time":6.06103515625,"type":"prune"},{"compiler":[[38,23]],"locations":[["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))",0.015625,true],["(*.f64 1/720 (pow.f64 x 6))",0.06640625,true]],"time":8.496826171875,"type":"localize"},{"count":[[2,12]],"series":[["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","x","-inf",0.22802734375],["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","x","inf",0.43212890625],["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","x","0",0.27587890625],["(*.f64 1/720 (pow.f64 x 6))","x","-inf",0.201904296875],["(*.f64 1/720 (pow.f64 x 6))","x","inf",0.3779296875],["(*.f64 1/720 (pow.f64 x 6))","x","0",0.55712890625]],"time":2.1591796875,"type":"series"},{"count":[[2,32]],"egraph":[[2,2504,28,0.021725749000000003],[1,230,28,0.0039033740000000003],[0,11,28,0.000427166]],"inputs":[["(*.f64 1/720 (pow.f64 x 6))","(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 1/720 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/720 (pow.f64 x 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/720 (pow.f64 x 6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) (cbrt.f64 1/720)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 12) 1/518400))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/720) (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/720 (pow.f64 x 6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/720 (pow.f64 x 6))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) 1) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2) (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) 3) (pow.f64 (*.f64 1/720 (pow.f64 x 6)) 3)) (+.f64 (*.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))) (-.f64 (*.f64 (pow.f64 x 12) 1/518400) (*.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))) (*.f64 (pow.f64 x 12) 1/518400)) (-.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))"]],"rules":[["egg-rr",21],["egg-rr",11]],"stop":[["node limit",1]],"time":42.62890625,"type":"rewrite"},{"count":[[44,41]],"egraph":[[19,7999,189,0.13055812600000002],[18,7735,189,0.11928100100000001],[17,7463,189,0.10839150100000002],[16,7197,189,0.09752458500000001],[15,6947,189,0.08742962600000001],[14,6691,189,0.077860251],[13,6088,189,0.068114959],[12,5598,189,0.057856376],[11,4866,189,0.049210751000000004],[10,4449,189,0.040993251],[9,4134,189,0.033422959],[8,3883,189,0.026672209000000002],[7,3688,189,0.020711209],[6,3458,189,0.015141083999999999],[5,2428,189,0.009832042],[4,936,189,0.00498675],[3,231,189,0.0019099590000000001],[2,79,189,0.000685959],[1,38,189,0.000303334],[0,17,189,0.0001075]],"inputs":[["(*.f64 1/2 (pow.f64 x 2))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 1/720 (pow.f64 x 6))","(+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 1/720 (pow.f64 x 6))","(+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (pow.f64 x 2))","(*.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(*.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))","(*.f64 1/720 (pow.f64 x 6))","(+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6)))","(*.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))","(*.f64 1/720 (pow.f64 x 6))","(+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6)))","(*.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 1/720 (pow.f64 x 6))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/720 (pow.f64 x 6))))","(*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 1/720 (fma.f64 x (*.f64 x -1/24) 1/2)))","(fma.f64 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/720) -1/24) (*.f64 1/2 (*.f64 x x)))"]],"stop":[["node limit",1]],"time":148.6220703125,"type":"simplify"},{"compiler":[[774,481]],"time":9.90087890625,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))","next",0.00390625],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","fresh",0.2578125]],"compiler":[[17,12],[19,13],[17,12],[19,13]],"count":[[43,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[41,2],"picked":[1,0]}],"min-error":[0],"time":7.533935546875,"type":"prune"},{"compiler":[[57,34]],"locations":[["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))",0.00390625,true],["(*.f64 1/720 (pow.f64 x 6))",0.06640625,false]],"time":12.301025390625,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","x","-inf",0.19287109375],["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","x","inf",0.383056640625],["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","x","0",0.34912109375]],"time":0.97314453125,"type":"series"},{"count":[[1,16]],"egraph":[[2,1855,14,0.018294749],[1,163,14,0.002863458],[0,8,14,0.00027375]],"inputs":[["(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x x) -1/24) (*.f64 x x)) (*.f64 1/2 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) -1/24)) (*.f64 (*.f64 x x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 (fma.f64 (*.f64 x x) -1/24 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 4) (pow.f64 (fma.f64 (*.f64 x x) -1/24 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) x) (fma.f64 (*.f64 x x) -1/24 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x x) 3) (pow.f64 (fma.f64 (*.f64 x x) -1/24 1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))))))))"]],"rules":[["egg-rr",16]],"stop":[["node limit",1]],"time":35.60400390625,"type":"rewrite"},{"count":[[28,21]],"egraph":[[20,7267,147,0.124032541],[19,7243,147,0.11078766599999999],[18,7187,147,0.099954458],[17,6985,147,0.09084495799999999],[16,6759,147,0.08159291599999999],[15,6451,147,0.07285524999999998],[14,5698,147,0.06350466599999999],[13,5068,147,0.053284415999999994],[12,4539,147,0.044767749999999995],[11,4088,147,0.037247540999999995],[10,3731,147,0.030355665999999996],[9,3460,147,0.024166874999999997],[8,3261,147,0.019011833],[7,3092,147,0.014321832999999999],[6,2630,147,0.010145333],[5,1401,147,0.006016375],[4,352,147,0.002773125],[3,109,147,0.000946083],[2,44,147,0.00041325],[1,22,147,0.000203042],[0,11,147,7.975e-5]],"inputs":[["(*.f64 1/2 (pow.f64 x 2))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(*.f64 -1/24 (pow.f64 x 4))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(*.f64 -1/24 (pow.f64 x 4))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (pow.f64 x 2))","(*.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(*.f64 -1/24 (pow.f64 x 4))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(*.f64 -1/24 (pow.f64 x 4))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 1/2 (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(*.f64 x (fma.f64 -1/24 (pow.f64 x 3) (*.f64 1/2 x)))","(*.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2))","(*.f64 x (fma.f64 1/2 x (*.f64 -1/24 (pow.f64 x 3))))"]],"stop":[["node limit",1]],"time":141.4658203125,"type":"simplify"},{"compiler":[[580,395]],"time":7.7041015625,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))","done",0.00390625],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","next",0.2578125]],"compiler":[[17,12],[19,13],[19,13]],"count":[[34,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[32,0],"picked":[1,1]}],"min-error":[0],"time":5.35693359375,"type":"prune"},{"compiler":[[73,44]],"locations":[["(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))",0.015625,false],["(*.f64 1/720 (pow.f64 x 6))",0.06640625,false],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)",0.24609375,true],["(sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))",29.19362671815523,true]],"time":15.400146484375,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","x","-inf",0.245849609375],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","x","inf",0.611083984375],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","x","0",0.5390625],["(sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))","x","-inf",0.558837890625],["(sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))","x","inf",0.5068359375],["(sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))","x","0",0.73095703125]],"time":3.337890625,"type":"series"},{"count":[[2,100]],"egraph":[[2,2887,44,0.02513225],[1,293,44,0.004533625],[0,14,44,0.000524]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6))))","(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/6) (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4) (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/2) (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))) 2)) (cbrt.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))) (sqrt.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 x (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 x (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) 1) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2) (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4) (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3/4) (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 5/6) (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) 3) (pow.f64 (*.f64 1/720 (pow.f64 x 6)) 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) 2) (-.f64 (*.f64 (pow.f64 x 12) 1/518400) (*.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) 2) (*.f64 (pow.f64 x 12) 1/518400)) (-.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 1/720 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 1/720 (pow.f64 x 6)))) (pow.f64 (exp.f64 x) (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) (+.f64 1 (expm1.f64 (*.f64 1/720 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2) (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1) (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2) (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1) (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))) 1/2) (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1) (*.f64 (log.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2)) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x (*.f64 x -1/24) 1/2) (*.f64 x x) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/720 (pow.f64 x 6) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 6) 1/720 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/720 (pow.f64 x 6)) 1 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 1/720) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) (*.f64 (*.f64 x x) 1/720) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 x) x) (*.f64 (pow.f64 (cbrt.f64 x) 2) (fma.f64 x (*.f64 x -1/24) 1/2)) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) (cbrt.f64 1/720)) (cbrt.f64 (*.f64 (pow.f64 x 12) 1/518400)) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 12) 1/518400)) (*.f64 (*.f64 x x) (cbrt.f64 1/720)) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))) 1 (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2)))) 2) (cbrt.f64 (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2)))) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 x (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 x (cbrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))) 2) (cbrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2)) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2))) (sqrt.f64 (fma.f64 x (*.f64 x -1/24) 1/2)) (*.f64 1/720 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/720 (pow.f64 x 4)) (*.f64 x x) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/720 (pow.f64 x 3)) (pow.f64 x 3) (*.f64 x (*.f64 x (fma.f64 x (*.f64 x -1/24) 1/2))))))))"]],"rules":[["egg-rr",62],["egg-rr",38]],"stop":[["node limit",1]],"time":51.090087890625,"type":"rewrite"},{"count":[[124,136]],"egraph":[[3,5716,485,0.022004166999999998],[2,1147,485,0.010607334],[1,323,679,0.002574917],[0,105,809,0.000527792]],"inputs":[["(*.f64 (sqrt.f64 1/2) x)","(+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 5)) (sqrt.f64 1/2))) (+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 5)) (sqrt.f64 1/2))) (+.f64 (*.f64 1/96 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 7)) (pow.f64 (sqrt.f64 1/2) 3))) (+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))))","(*.f64 (sqrt.f64 1/720) (pow.f64 x 3))","(+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (+.f64 (*.f64 1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 (sqrt.f64 1/720) 3) (pow.f64 x 3)))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))))","(*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720))))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720)))))","(+.f64 (*.f64 -1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 (sqrt.f64 1/720) 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720))))))","(*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 2))) 1/720) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6)) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 2))) 1/720) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2))) (*.f64 1/48 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (pow.f64 x 8)) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))))","(*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))","(+.f64 (*.f64 1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))))","(*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (*.f64 -1/24 (pow.f64 x 4)))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))","(+.f64 (*.f64 1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 1/2) x)","(+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))","(fma.f64 (sqrt.f64 1/2) x (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))","(fma.f64 (sqrt.f64 1/2) x (/.f64 (*.f64 -1/48 (pow.f64 x 3)) (sqrt.f64 1/2)))","(fma.f64 (sqrt.f64 1/2) x (*.f64 (/.f64 -1/48 (sqrt.f64 1/2)) (pow.f64 x 3)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 5)) (sqrt.f64 1/2))) (+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2)))))","(fma.f64 1/2 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (/.f64 (sqrt.f64 1/2) (pow.f64 x 5))) (fma.f64 (sqrt.f64 1/2) x (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2)))))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (sqrt.f64 1/2)) (pow.f64 x 5)) (fma.f64 (sqrt.f64 1/2) x (/.f64 (*.f64 -1/48 (pow.f64 x 3)) (sqrt.f64 1/2))))","(fma.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2)) (fma.f64 (sqrt.f64 1/2) x (*.f64 (/.f64 1/3840 (sqrt.f64 1/2)) (pow.f64 x 5))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 5)) (sqrt.f64 1/2))) (+.f64 (*.f64 1/96 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 7)) (pow.f64 (sqrt.f64 1/2) 3))) (+.f64 (*.f64 (sqrt.f64 1/2) x) (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))))","(fma.f64 1/2 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (/.f64 (sqrt.f64 1/2) (pow.f64 x 5))) (fma.f64 1/96 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (/.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 7))) (fma.f64 (sqrt.f64 1/2) x (*.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (sqrt.f64 1/2)) (pow.f64 x 5)) (fma.f64 (sqrt.f64 1/2) x (/.f64 (*.f64 -1/48 (pow.f64 x 3)) (sqrt.f64 1/2)))) (*.f64 1/48 (/.f64 (*.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 7)) (sqrt.f64 1/2))))","(+.f64 (*.f64 (/.f64 1/3840 (sqrt.f64 1/2)) (pow.f64 x 5)) (fma.f64 (sqrt.f64 1/2) x (fma.f64 -1/48 (/.f64 (pow.f64 x 3) (sqrt.f64 1/2)) (*.f64 1/92160 (/.f64 (pow.f64 x 7) (sqrt.f64 1/2))))))","(*.f64 (sqrt.f64 1/720) (pow.f64 x 3))","(*.f64 (pow.f64 x 3) (sqrt.f64 1/720))","(+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))","(fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))","(fma.f64 (pow.f64 x 3) (sqrt.f64 1/720) (*.f64 (/.f64 -1/48 (sqrt.f64 1/720)) x))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))))","(fma.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) (fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720))))","(fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (fma.f64 (pow.f64 x 3) (sqrt.f64 1/720) (/.f64 3/32 (*.f64 x (sqrt.f64 1/720)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1/48 (/.f64 x (sqrt.f64 1/720))) (+.f64 (*.f64 1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 (sqrt.f64 1/720) 3) (pow.f64 x 3)))) (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))))","(fma.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) (fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (fma.f64 1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/720) 3))) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))))","(fma.f64 1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) (fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (fma.f64 (pow.f64 x 3) (sqrt.f64 1/720) (/.f64 1/96 (/.f64 (*.f64 (pow.f64 x 3) (*.f64 (sqrt.f64 1/720) 1/720)) (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)))))))","(+.f64 (/.f64 3/32 (*.f64 x (sqrt.f64 1/720))) (fma.f64 (pow.f64 x 3) (sqrt.f64 1/720) (fma.f64 -1/48 (/.f64 x (sqrt.f64 1/720)) (/.f64 (/.f64 45/32 (sqrt.f64 1/720)) (pow.f64 x 3)))))","(*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3)))","(neg.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))","(*.f64 (pow.f64 x 3) (neg.f64 (sqrt.f64 1/720)))","(+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720))))","(fma.f64 -1 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48))","(-.f64 (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))","(fma.f64 (pow.f64 x 3) (neg.f64 (sqrt.f64 1/720)) (/.f64 x (/.f64 (sqrt.f64 1/720) 1/48)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720)))))","(fma.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) (fma.f64 -1 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48)))","(fma.f64 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) -1/2 (-.f64 (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720))))","(-.f64 (fma.f64 (/.f64 x (sqrt.f64 1/720)) 1/48 (/.f64 -3/32 (*.f64 x (sqrt.f64 1/720)))) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))","(-.f64 (/.f64 x (/.f64 (sqrt.f64 1/720) 1/48)) (fma.f64 (pow.f64 x 3) (sqrt.f64 1/720) (/.f64 3/32 (*.f64 x (sqrt.f64 1/720)))))","(+.f64 (*.f64 -1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 (sqrt.f64 1/720) 3) (pow.f64 x 3)))) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (sqrt.f64 1/720) x))) (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 1/720) (pow.f64 x 3))) (*.f64 1/48 (/.f64 x (sqrt.f64 1/720))))))","(fma.f64 -1/96 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/720) 3))) (fma.f64 -1/2 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) (fma.f64 -1 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48))))","(fma.f64 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 (pow.f64 x 3) (*.f64 (sqrt.f64 1/720) 1/720))) -1/96 (fma.f64 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (*.f64 x (sqrt.f64 1/720))) -1/2 (-.f64 (*.f64 (/.f64 x (sqrt.f64 1/720)) 1/48) (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)))))","(-.f64 (/.f64 -3/32 (*.f64 x (sqrt.f64 1/720))) (-.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 1/720)) (fma.f64 (/.f64 x (sqrt.f64 1/720)) 1/48 (/.f64 (/.f64 -45/32 (sqrt.f64 1/720)) (pow.f64 x 3)))))","(*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2))","(*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x))","(*.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 2))) 1/720) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6)) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 2))) 1/720) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6)) (+.f64 (*.f64 (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2))) (*.f64 1/48 (/.f64 (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (pow.f64 x 8)) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 x 2)) (*.f64 -1/24 (pow.f64 x 4)))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))","(*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6))","(*.f64 (pow.f64 x 6) (pow.f64 (sqrt.f64 1/720) 2))","(*.f64 (pow.f64 x 6) 1/720)","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))","(+.f64 (*.f64 1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))","(*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6))","(*.f64 (pow.f64 x 6) (pow.f64 (sqrt.f64 1/720) 2))","(*.f64 (pow.f64 x 6) 1/720)","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6) (*.f64 -1/24 (pow.f64 x 4)))","(fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720))","(+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))","(+.f64 (*.f64 1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (+.f64 (*.f64 (pow.f64 (sqrt.f64 1/720) 2) (pow.f64 x 6)) (+.f64 (*.f64 -1/24 (pow.f64 x 4)) (+.f64 (*.f64 -1/48 (/.f64 (-.f64 1/2 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 (sqrt.f64 1/720) 2))) (*.f64 (-.f64 (+.f64 (*.f64 1/2304 (/.f64 1 (pow.f64 (sqrt.f64 1/720) 2))) 1/2) (pow.f64 (/.f64 -1/48 (sqrt.f64 1/720)) 2)) (pow.f64 x 2))))))","(fma.f64 (+.f64 (/.f64 1/2304 (pow.f64 (sqrt.f64 1/2) 2)) (-.f64 1/720 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2))) (pow.f64 x 6) (fma.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 x x) (*.f64 -1/24 (pow.f64 x 4))))","(fma.f64 (-.f64 13/5760 (pow.f64 (/.f64 -1/48 (sqrt.f64 1/2)) 2)) (pow.f64 x 6) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 1/2 (*.f64 x x))))","(fma.f64 1/2 (*.f64 x x) (fma.f64 -1/24 (pow.f64 x 4) (*.f64 (pow.f64 x 6) 1/720)))"]],"stop":[["node limit",1]],"time":40.64306640625,"type":"simplify"},{"compiler":[[4181,3044]],"time":55.685791015625,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))","done",0.00390625],["(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","done",0.2578125]],"compiler":[[17,12],[19,13]],"count":[[179,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[177,0],"picked":[1,1]}],"min-error":[0],"time":46.588134765625,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["x",0.00390625,1],["(-.f64 1 (cos.f64 x))",0.00390625,1],["(cos.f64 x)",0.00390625,1]],"compiler":[[2,1],[5,4],[3,2],[64,39]],"count":[[5,1]],"inputs":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))","(pow.f64 (sqrt.f64 (fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))) 2)","(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -1/24 1/2) (*.f64 1/720 (pow.f64 x 6)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2)))","(-.f64 1 (cos.f64 x))"]],"link":["."],"name":["ENA, Section 1.4, Mentioned, A"],"oracle":[29.842930034776895],"outputs":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))"]],"time":8.248046875,"times":[["x",3.553955078125],["(-.f64 1 (cos.f64 x))",1.68115234375],["(cos.f64 x)",1.719970703125]],"type":"regimes"},{"compiler":[[17,12]],"egraph":[[1,17,23,4.65e-5],[0,13,23,2.7416e-5]],"inputs":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 1/720 (pow.f64 x 6)) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -1/24 1/2))))"]],"stop":[["done",1],["saturated",1]],"time":8.56298828125,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[17,12]],"remove-preprocessing":[[]],"time":10.077880859375,"type":"end"}]