[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.18713405719610066,0.7680293597423298,0.04483658306156957],[11,0.12475603813073377,0.8343060049992821,0.04093795686998414],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":124.72705078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",88.653564453125,2126],["body",256,"valid",339.33642578125,8256]],"time":437.489990234375,"type":"sample"},{"compiler":[[11,7]],"egraph":[[1,4,4,9.542e-6],[0,4,4,8.459e-6],[10,1302,70,0.01870175],[9,1301,70,0.016022709],[8,1293,70,0.013331167],[7,1238,70,0.01061475],[6,869,70,0.007703458],[5,554,70,0.0043605],[4,291,70,0.002333208],[3,193,70,0.001164874],[2,124,70,0.000658416],[1,65,70,0.000327583],[0,22,70,0.000105583]],"inputs":[["0","1","2","3"],["(-.f64 (*.f64 x y) (*.f64 z t))","(-.f64 (*.f64 y x) (*.f64 z t))","(-.f64 (*.f64 z y) (*.f64 x t))","(-.f64 (*.f64 t y) (*.f64 z x))","(-.f64 (*.f64 x z) (*.f64 y t))","(-.f64 (*.f64 x t) (*.f64 z y))","(-.f64 (*.f64 x y) (*.f64 t z))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3","2"],["(-.f64 (*.f64 x y) (*.f64 z t))","(-.f64 (*.f64 y x) (*.f64 z t))","(-.f64 (*.f64 x y) (*.f64 z t))","(-.f64 (*.f64 z y) (*.f64 x t))","(-.f64 (*.f64 y z) (*.f64 x t))","(fma.f64 y z (*.f64 t (neg.f64 x)))","(-.f64 (*.f64 t y) (*.f64 z x))","(-.f64 (*.f64 y t) (*.f64 x z))","(fma.f64 y t (*.f64 z (neg.f64 x)))","(fma.f64 x (neg.f64 z) (*.f64 y t))","(-.f64 (*.f64 x z) (*.f64 y t))","(-.f64 (*.f64 x t) (*.f64 z y))","(-.f64 (*.f64 x t) (*.f64 y z))","(-.f64 (*.f64 x y) (*.f64 t z))","(-.f64 (*.f64 x y) (*.f64 z t))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort x y)","(sort z t)"]],"time":43.15087890625,"type":"preprocess"},{"count":[[1,1]],"egraph":[[11,587,10,0.008123666],[10,581,10,0.0068965],[9,523,10,0.00562625],[8,407,10,0.004308],[7,304,10,0.0030090840000000004],[6,204,10,0.0018232090000000001],[5,123,10,0.001061459],[4,75,10,0.000628167],[3,48,10,0.000362583],[2,31,10,0.000207375],[1,16,10,0.000111917],[0,8,10,4e-5]],"inputs":[["(-.f64 (*.f64 x y) (*.f64 z t))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 x y) (*.f64 z t))"]],"stop":[["saturated",1]],"time":18.470947265625,"type":"simplify"},{"compiler":[[11,7]],"time":0.198974609375,"type":"eval"},{"alts":[["(-.f64 (*.f64 x y) (*.f64 z t))","next",0.00390625]],"compiler":[[11,7],[11,7]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.00390625],"time":0.708984375,"type":"prune"},{"compiler":[[21,7]],"locations":[["(-.f64 (*.f64 x y) (*.f64 z t))",0.00390625,true]],"time":4.63623046875,"type":"localize"},{"count":[[1,48]],"series":[["(-.f64 (*.f64 x y) (*.f64 z t))","t","-inf",0.260986328125],["(-.f64 (*.f64 x y) (*.f64 z t))","t","inf",0.254150390625],["(-.f64 (*.f64 x y) (*.f64 z t))","t","0",0.280029296875],["(-.f64 (*.f64 x y) (*.f64 z t))","z","-inf",0.257080078125],["(-.f64 (*.f64 x y) (*.f64 z t))","z","inf",0.280029296875],["(-.f64 (*.f64 x y) (*.f64 z t))","z","0",0.402099609375],["(-.f64 (*.f64 x y) (*.f64 z t))","y","-inf",0.22998046875],["(-.f64 (*.f64 x y) (*.f64 z t))","y","inf",0.28515625],["(-.f64 (*.f64 x y) (*.f64 z t))","y","0",0.299072265625],["(-.f64 (*.f64 x y) (*.f64 z t))","x","-inf",0.2978515625],["(-.f64 (*.f64 x y) (*.f64 z t))","x","inf",0.301025390625],["(-.f64 (*.f64 x y) (*.f64 z t))","x","0",0.4091796875]],"time":3.697998046875,"type":"series"},{"count":[[1,49]],"egraph":[[2,2434,10,0.020803541000000002],[1,179,10,0.003093833],[0,8,10,0.000181666]],"inputs":[["(-.f64 (*.f64 x y) (*.f64 z t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 (*.f64 t (neg.f64 z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (+.f64 (*.f64 t (neg.f64 z)) (fma.f64 (neg.f64 t) z (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (*.f64 t (neg.f64 z)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 z t))) (sqrt.f64 (*.f64 z t)) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (*.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (+.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) (-.f64 (*.f64 x y) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (neg.f64 z)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 x y) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) 2) (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) (sqrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 (*.f64 z t) 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 z t) (fma.f64 x y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x y) 2) (pow.f64 (*.f64 z t) 2)) (/.f64 1 (fma.f64 x y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x y)) (sqrt.f64 (*.f64 z t))) (-.f64 (sqrt.f64 (*.f64 x y)) (sqrt.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 z t) (fma.f64 x y (*.f64 z t)))) (-.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 (*.f64 z t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x y (*.f64 z t)) (-.f64 (pow.f64 (*.f64 x y) 2) (pow.f64 (*.f64 z t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 (*.f64 z t) 3)) (+.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 z t) (fma.f64 x y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x y) 2) (pow.f64 (*.f64 z t) 2)) (fma.f64 x y (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 (*.f64 z t) 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 z t) (fma.f64 x y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x y) 2) (pow.f64 (*.f64 z t) 2))) (neg.f64 (fma.f64 x y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 (*.f64 t (neg.f64 z)) 3)) (+.f64 (pow.f64 (*.f64 x y) 2) (-.f64 (*.f64 (*.f64 t (neg.f64 z)) (*.f64 t (neg.f64 z))) (*.f64 (*.f64 x y) (*.f64 t (neg.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 3) (pow.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) 3)) (+.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 2) (-.f64 (*.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t))) (*.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x y) 2) (*.f64 (*.f64 t (neg.f64 z)) (*.f64 t (neg.f64 z)))) (-.f64 (*.f64 x y) (*.f64 t (neg.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 2) (*.f64 (fma.f64 (neg.f64 t) z (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t)))) (-.f64 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 x y) (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 x y) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x y) (*.f64 z t)) (fma.f64 (neg.f64 t) z (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) 2) (cbrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) (fma.f64 (neg.f64 t) z (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x y)) 2) (cbrt.f64 (*.f64 x y)) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) (sqrt.f64 (-.f64 (*.f64 x y) (*.f64 z t))) (fma.f64 (neg.f64 t) z (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x y)) (sqrt.f64 (*.f64 x y)) (*.f64 t (neg.f64 z)))))))"]],"rules":[["egg-rr",49]],"stop":[["node limit",1]],"time":39.77783203125,"type":"rewrite"},{"count":[[97,54]],"egraph":[[11,586,420,0.00847875],[10,580,420,0.007205042],[9,522,420,0.005888125],[8,394,420,0.004545375],[7,297,420,0.003159209],[6,200,420,0.00199925],[5,114,420,0.001233375],[4,69,420,0.000764334],[3,49,420,0.000497334],[2,36,420,0.00032974999999999997],[1,18,420,0.000191416],[0,10,456,8.6333e-5]],"inputs":[["(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 -1 (*.f64 t z) (*.f64 y x))","(-.f64 (*.f64 y x) (*.f64 t z))"]],"stop":[["saturated",1]],"time":28.968994140625,"type":"simplify"},{"compiler":[[895,216]],"time":8.3349609375,"type":"eval"},{"alts":[["(fma.f64 y x (*.f64 t (neg.f64 z)))","next",0]],"compiler":[[11,7],[11,7]],"count":[[55,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[54,1],"picked":[1,0]}],"min-error":[0],"time":9.401123046875,"type":"prune"},{"compiler":[[21,7]],"time":4.680908203125,"type":"localize"},{"compiler":[[4,4]],"time":0.093017578125,"type":"eval"},{"alts":[["(fma.f64 y x (*.f64 t (neg.f64 z)))","done",0]],"compiler":[[11,7]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.47509765625,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["y",0,1],["z",0,1],["t",0,1],["(-.f64 (*.f64 x y) (*.f64 z t))",0,1],["(*.f64 x y)",0,1],["(*.f64 z t)",0,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[7,5],[7,5],[18,10]],"count":[[2,1]],"inputs":[["(fma.f64 y x (*.f64 t (neg.f64 z)))","(-.f64 (*.f64 x y) (*.f64 z t))"]],"link":["."],"name":["Linear.V3:cross from linear-1.19.1.3"],"oracle":[0.00390625],"outputs":[["(fma.f64 y x (*.f64 t (neg.f64 z)))"]],"time":16.864990234375,"times":[["x",2.43798828125],["y",2.552978515625],["z",2.23486328125],["t",2.239013671875],["(-.f64 (*.f64 x y) (*.f64 z t))",2.35986328125],["(*.f64 x y)",2.179931640625],["(*.f64 z t)",2.2041015625]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[5,33,10,0.00021704200000000003],[4,32,10,0.00017637500000000002],[3,29,10,0.000134875],[2,23,10,9.3542e-5],[1,15,10,5.4959e-5],[0,8,10,2.6167e-5]],"inputs":[["(fma.f64 y x (*.f64 t (neg.f64 z)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 y x (*.f64 t (neg.f64 z)))"]],"stop":[["done",1],["saturated",1]],"time":8.260986328125,"type":"simplify"},{"time":0.0048828125,"type":"soundness"},{"compiler":[[11,7],[11,7],[11,7],[11,7],[11,7]],"remove-preprocessing":[["(sort z t)","(sort x y)"]],"time":10.008056640625,"type":"end"}]