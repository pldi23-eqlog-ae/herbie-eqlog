[{"compiler":[[9,6]],"method":["search"],"sampling":[[12,0.7297555757686496,0.042926798574626446,0.22731762565672398],[11,0.7258531395345926,0.054634107276797295,0.21951275318861008],[10,0.7102433945983648,0.08585359714925289,0.20390300825238228],[9,0.7024385221302509,0.10926821455359459,0.18829326331615448],[8,0.6712190322577953,0.17170719429850578,0.15707377344369888],[7,0.6556092873215675,0.21853642910718918,0.1258542835712433],[6,0.6243897974491119,0.31219489872455597,0.06341530382633209],[5,0.6243897974491119,0.37463387846946716,0.0009763240814208984],[4,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[3,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":11.4580078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",8.03173828125,246],["body",256,"valid",271.9833984375,8256]],"time":287.966064453125,"type":"sample"},{"compiler":[[8,5]],"egraph":[[0,2,2,1.792e-6],[10,6746,18,0.041567167],[9,5224,18,0.029414792],[8,4449,18,0.019663542],[7,2860,18,0.012933041999999999],[6,893,18,0.00633275],[5,324,18,0.00228175],[4,138,18,0.000983125],[3,68,18,0.0005042919999999999],[2,39,18,0.000280583],[1,22,18,0.000147917],[0,9,18,6.0833e-5]],"inputs":[["0","1"],["(exp.f64 (*.f64 (*.f64 x y) y))","(exp.f64 (*.f64 (*.f64 y x) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(exp.f64 (*.f64 (*.f64 x y) y))","(pow.f64 (exp.f64 (*.f64 x y)) y)","(pow.f64 (exp.f64 x) (*.f64 y y))","(pow.f64 (pow.f64 (exp.f64 x) y) y)","(pow.f64 (exp.f64 y) (*.f64 x y))","(exp.f64 (*.f64 (*.f64 y x) x))","(pow.f64 (exp.f64 (*.f64 x y)) x)","(pow.f64 (exp.f64 x) (*.f64 x y))","(pow.f64 (pow.f64 (exp.f64 x) y) x)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":64.430908203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,6210,9,0.037604335],[9,5270,9,0.025349376],[8,4788,9,0.017465417],[7,1734,9,0.010832251000000001],[6,564,9,0.003991792],[5,204,9,0.0015027920000000002],[4,85,9,0.0006775010000000001],[3,41,9,0.000346959],[2,23,9,0.00019491700000000002],[1,12,9,0.000104042],[0,6,9,4.2542e-5]],"inputs":[["(exp.f64 (*.f64 (*.f64 x y) y))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 (*.f64 x y) y))","(exp.f64 (*.f64 y (*.f64 x y)))","(pow.f64 (exp.f64 x) (*.f64 y y))","(pow.f64 (pow.f64 (exp.f64 y) x) y)","(pow.f64 (exp.f64 y) (*.f64 x y))"]],"stop":[["node limit",1]],"time":48.62109375,"type":"simplify"},{"compiler":[[14,7]],"time":0.9638671875,"type":"eval"},{"alts":[["(exp.f64 (*.f64 (*.f64 x y) y))","next",0]],"compiler":[[8,5],[8,5]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0],"time":0.751953125,"type":"prune"},{"compiler":[[18,5]],"locations":[["(*.f64 (*.f64 x y) y)",0.1015625,true]],"time":3.585205078125,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (*.f64 x y) y)","y","-inf",0.18896484375],["(*.f64 (*.f64 x y) y)","y","inf",0.493896484375],["(*.f64 (*.f64 x y) y)","y","0",0.4130859375],["(*.f64 (*.f64 x y) y)","x","-inf",0.302978515625],["(*.f64 (*.f64 x y) y)","x","inf",0.383056640625],["(*.f64 (*.f64 x y) y)","x","0",0.587158203125]],"time":2.44580078125,"type":"series"},{"count":[[1,11]],"egraph":[[2,1193,7,0.013495042],[1,99,7,0.0016033339999999999],[0,5,7,0.000120917]],"inputs":[["(*.f64 (*.f64 x y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 y y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 x) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 y y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 y y))))))))"]],"rules":[["egg-rr",11]],"stop":[["node limit",1]],"time":29.592041015625,"type":"rewrite"},{"count":[[35,13]],"egraph":[[22,7960,168,0.11985879199999998],[21,7019,168,0.10811158399999998],[20,6983,168,0.09453949999999998],[19,6905,168,0.08449458399999998],[18,6629,168,0.07615362499999999],[17,6335,168,0.068001417],[16,5941,168,0.06032833399999999],[15,5104,168,0.05207933399999999],[14,4416,168,0.043118041999999995],[13,3850,168,0.035890751],[12,3367,168,0.029704584],[11,2974,168,0.023980251],[10,2676,168,0.019208667000000002],[9,2468,168,0.015269000000000001],[8,2284,168,0.011726917000000002],[7,2120,168,0.008691250000000001],[6,1245,168,0.005487042],[5,332,168,0.002709792],[4,105,168,0.000941001],[3,44,168,0.00042279199999999996],[2,23,168,0.00023145799999999998],[1,12,168,0.000128458],[0,6,168,5.3708e-5]],"inputs":[["(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (pow.f64 y 2) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))"]],"stop":[["node limit",1]],"time":138.3310546875,"type":"simplify"},{"compiler":[[108,55]],"time":1.5791015625,"type":"eval"},{"alts":[["(exp.f64 (*.f64 (*.f64 x y) y))","done",0]],"compiler":[[8,5],[8,5]],"count":[[14,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[13,0],"picked":[1,1]}],"min-error":[0],"time":2.0458984375,"type":"prune"},{"compiler":[[8,5]],"egraph":[[1,8,9,2.6959e-5],[0,6,9,1.5542e-5]],"inputs":[["(exp.f64 (*.f64 (*.f64 x y) y))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 (*.f64 x y) y))","(exp.f64 (*.f64 y (*.f64 x y)))"]],"stop":[["done",1],["saturated",1]],"time":7.8740234375,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[8,5]],"remove-preprocessing":[[]],"time":7.328125,"type":"end"}]