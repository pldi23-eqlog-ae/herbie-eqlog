[{"compiler":[[20,14]],"method":["search"],"sampling":[[12,0.2476836433634162,0.0019502649083733559,0.7503660917282104],[11,0.24573337845504284,0.0039005298167467117,0.7503660917282104],[10,0.24573337845504284,0.0039005298167467117,0.7503660917282104],[9,0.24183284863829613,0.0078010596334934235,0.7503660917282104],[8,0.24183284863829613,0.0078010596334934235,0.7503660917282104],[7,0.2340317890048027,0.015602119266986847,0.7503660917282104],[6,0.2340317890048027,0.015602119266986847,0.7503660917282104],[5,0.21842966973781586,0.031204238533973694,0.7503660917282104],[4,0.18722543120384216,0.06240847706794739,0.7503660917282104],[3,0.12481695413589478,0.12481695413589478,0.7503660917282104],[2,0.12481695413589478,0.12481695413589478,0.7503660917282104],[1,0.0,0.24963390827178955,0.7503660917282104],[0,0.0,0.24963390827178955,0.7503660917282104]],"time":6.826904296875,"type":"analyze"},{"outcomes":[["body",512,"valid",154.61181640625,979],["body",1024,"valid",583.070068359375,2146],["body",2048,"valid",6.614013671875,10],["body",256,"valid",383.247314453125,5121]],"time":1136.090087890625,"type":"sample"},{"compiler":[[13,9]],"egraph":[[0,2,2,1.333e-6],[4,48,30,0.000525292],[3,46,30,0.000407167],[2,40,30,0.000286625],[1,28,30,0.000175],[0,16,34,8.3583e-5]],"inputs":[["0","1"],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 v (sin.f64 e)) (+.f64 1 (*.f64 v (cos.f64 e))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 e (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v)))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(*.f64 (sin.f64 v) (/.f64 e (fma.f64 e (cos.f64 v) 1)))","(/.f64 (*.f64 v (sin.f64 e)) (+.f64 1 (*.f64 v (cos.f64 e))))","(*.f64 (/.f64 v (fma.f64 v (cos.f64 e) 1)) (sin.f64 e))","(*.f64 (sin.f64 e) (/.f64 v (fma.f64 v (cos.f64 e) 1)))","(/.f64 (sin.f64 e) (/.f64 (fma.f64 v (cos.f64 e) 1) v))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.201904296875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,27,15,0.00032054100000000003],[3,26,15,0.000250833],[2,23,15,0.00018049899999999998],[1,17,15,0.000113458],[0,10,17,5.6958e-5]],"inputs":[["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 e (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v)))","(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))"]],"stop":[["saturated",1]],"time":10.45703125,"type":"simplify"},{"compiler":[[23,13]],"time":0.3740234375,"type":"eval"},{"alts":[["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","fresh",0.15234375],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","next",0.140625]],"compiler":[[13,9],[12,8],[13,9],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.13671875],"time":1.31103515625,"type":"prune"},{"compiler":[[32,14]],"locations":[["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))",0.01171875,true],["(sin.f64 v)",0.0234375,true],["(cos.f64 v)",0.0234375,true],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))",0.1171875,true]],"time":8.98583984375,"type":"localize"},{"count":[[4,56]],"series":[["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","e","-inf",0.2470703125],["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","e","inf",0.33203125],["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","e","0",0.275146484375],["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","v","-inf",0.4228515625],["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","v","inf",0.44189453125],["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","v","0",0.907958984375],["(sin.f64 v)","v","-inf",0.14697265625],["(sin.f64 v)","v","inf",0.132080078125],["(sin.f64 v)","v","0",0.197998046875],["(cos.f64 v)","v","-inf",0.132080078125],["(cos.f64 v)","v","inf",0.135009765625],["(cos.f64 v)","v","0",0.236083984375],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","v","-inf",0.7958984375],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","v","inf",0.97021484375],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","v","0",1.1611328125],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","e","-inf",0.455078125],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","e","inf",0.52685546875],["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","e","0",0.6171875]],"time":8.427001953125,"type":"series"},{"count":[[4,85]],"egraph":[[2,2236,33,0.021054583],[1,178,33,0.002990708],[0,9,33,0.000233333]],"inputs":[["(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","(cos.f64 v)","(sin.f64 v)","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 e (sin.f64 v))) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) 1) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) e) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (neg.f64 (sin.f64 v))) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 e 3) (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3) (pow.f64 e 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 v)) (pow.f64 (cbrt.f64 (cos.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 v)) 2) (cbrt.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 v)) (sqrt.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 v) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 v)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 v)) (sqrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 v) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 v)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 1 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2) (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (*.f64 (cbrt.f64 (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 v)) (*.f64 (sqrt.f64 (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 v)) (/.f64 1 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 v)) 1) (/.f64 (sqrt.f64 (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 v)) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (/.f64 (sqrt.f64 (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (cbrt.f64 (sin.f64 v)) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 v) (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))"]],"rules":[["egg-rr",31],["egg-rr",16],["egg-rr",16],["egg-rr",22]],"stop":[["node limit",1]],"time":47.2431640625,"type":"rewrite"},{"count":[[141,148]],"egraph":[[3,7278,1863,0.031102209],[2,1859,1894,0.014786958999999999],[1,536,1918,0.003868084],[0,175,2004,0.000863042]],"inputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 v 2)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (*.f64 -1/2 (pow.f64 v 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (+.f64 (*.f64 -1/2 (pow.f64 v 2)) (*.f64 -1/720 (pow.f64 v 6)))))","v","(+.f64 v (*.f64 -1/6 (pow.f64 v 3)))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (*.f64 1/120 (pow.f64 v 5))))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (+.f64 (*.f64 -1/5040 (pow.f64 v 7)) (*.f64 1/120 (pow.f64 v 5)))))","(/.f64 v (+.f64 1 e))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/5040 (/.f64 1 (+.f64 1 e)))))))) (/.f64 v (+.f64 1 e)))))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) e))","(-.f64 (*.f64 (sin.f64 v) e) (*.f64 (cos.f64 v) (*.f64 (*.f64 e e) (sin.f64 v))))","(*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))) (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) (neg.f64 (*.f64 e e))))","(*.f64 (sin.f64 v) (-.f64 (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))) (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 e (*.f64 e (cos.f64 v))) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(-.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (sin.f64 v) (+.f64 (*.f64 e (*.f64 e (cos.f64 v))) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(+.f64 (*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v))))) (*.f64 (sin.f64 v) (-.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (+.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (+.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(/.f64 (*.f64 v e) (+.f64 e 1))","(*.f64 (/.f64 v (+.f64 e 1)) e)","(*.f64 e (/.f64 v (+.f64 e 1)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (*.f64 v e) (+.f64 e 1)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (*.f64 e (/.f64 v (+.f64 e 1))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (*.f64 v e) (+.f64 e 1))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 e 1/120) (+.f64 e 1)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (*.f64 (/.f64 v (+.f64 e 1)) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (fma.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))))))) (*.f64 e (/.f64 v (+.f64 e 1)))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (fma.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2)) (*.f64 e (/.f64 v (+.f64 e 1)))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (*.f64 v e) (+.f64 e 1))) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e))))) (/.f64 (+.f64 e 1) e)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e)) (fma.f64 (pow.f64 v 7) (-.f64 (/.f64 (*.f64 e -1/5040) (+.f64 e 1)) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (/.f64 (*.f64 e 1/120) (+.f64 e 1)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (+.f64 e 1)) e) (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 e 1/120) (+.f64 e 1)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (*.f64 e (/.f64 v (+.f64 e 1)))) (fma.f64 (pow.f64 v 7) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) -1/5040 (*.f64 (*.f64 e (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (+.f64 e 1))) -1/24)) (fma.f64 -1/2 (*.f64 e (/.f64 (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))))))) (+.f64 e 1))) (*.f64 (/.f64 -1/720 (pow.f64 (+.f64 e 1) 2)) (*.f64 e e)))) (*.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 1/2 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e)))) (*.f64 e (/.f64 v (+.f64 e 1)))) (fma.f64 (pow.f64 v 7) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) -1/5040 (*.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) -1/24)) (fma.f64 -1/2 (*.f64 e (/.f64 (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2)) (+.f64 e 1))) (*.f64 (/.f64 -1/720 (pow.f64 (+.f64 e 1) 2)) (*.f64 e e)))) (*.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (/.f64 (*.f64 -1/24 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2)))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 v 2)))","(+.f64 1 (*.f64 -1/2 (*.f64 v v)))","(fma.f64 -1/2 (*.f64 v v) 1)","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (*.f64 -1/2 (pow.f64 v 2))))","(+.f64 1 (fma.f64 1/24 (pow.f64 v 4) (*.f64 -1/2 (*.f64 v v))))","(+.f64 (fma.f64 -1/2 (*.f64 v v) 1) (*.f64 1/24 (pow.f64 v 4)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (+.f64 (*.f64 -1/2 (pow.f64 v 2)) (*.f64 -1/720 (pow.f64 v 6)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 v 4) (fma.f64 -1/2 (*.f64 v v) (*.f64 -1/720 (pow.f64 v 6)))))","v","(+.f64 v (*.f64 -1/6 (pow.f64 v 3)))","(+.f64 v (*.f64 (pow.f64 v 3) -1/6))","(fma.f64 (pow.f64 v 3) -1/6 v)","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (*.f64 1/120 (pow.f64 v 5))))","(+.f64 v (fma.f64 -1/6 (pow.f64 v 3) (*.f64 (pow.f64 v 5) 1/120)))","(+.f64 v (fma.f64 (pow.f64 v 5) 1/120 (*.f64 (pow.f64 v 3) -1/6)))","(+.f64 (fma.f64 (pow.f64 v 3) -1/6 v) (*.f64 (pow.f64 v 5) 1/120))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (+.f64 (*.f64 -1/5040 (pow.f64 v 7)) (*.f64 1/120 (pow.f64 v 5)))))","(+.f64 v (fma.f64 -1/6 (pow.f64 v 3) (fma.f64 -1/5040 (pow.f64 v 7) (*.f64 (pow.f64 v 5) 1/120))))","(+.f64 (fma.f64 (pow.f64 v 3) -1/6 v) (fma.f64 (pow.f64 v 5) 1/120 (*.f64 (pow.f64 v 7) -1/5040)))","(/.f64 v (+.f64 1 e))","(/.f64 v (+.f64 e 1))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e)))","(fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (/.f64 v (+.f64 e 1)))","(-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (/.f64 v (+.f64 e 1))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 1/2 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1)) e)))) (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (+.f64 e 1)) e))) (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/5040 (/.f64 1 (+.f64 1 e)))))))) (/.f64 v (+.f64 1 e)))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (fma.f64 -1 (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/24 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (/.f64 1/5040 (+.f64 e 1)))))) (/.f64 v (+.f64 e 1)))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 1/2 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1)) e)))) (-.f64 (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 1/2 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1)) e)))) (/.f64 (+.f64 e 1) e)) (fma.f64 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1)) e) -1/24 (/.f64 1/5040 (+.f64 e 1))))))) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(-.f64 (fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (+.f64 e 1)) e))) (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))))) (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (*.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (+.f64 e 1)) e)))) (fma.f64 (*.f64 e (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1))) -1/24 (/.f64 1/5040 (+.f64 e 1)))))))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (neg.f64 (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))","(-.f64 (sin.f64 v) (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (fma.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)) (neg.f64 (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v))))))","(-.f64 (*.f64 (+.f64 (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2))) 1) (sin.f64 v)) (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v))))","(*.f64 (sin.f64 v) (-.f64 (+.f64 1 (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)))) (*.f64 e (cos.f64 v))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))","(+.f64 (sin.f64 v) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (fma.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)) (neg.f64 (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))))","(+.f64 (sin.f64 v) (-.f64 (-.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (*.f64 (*.f64 e e) (sin.f64 v))) (*.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 (pow.f64 e 3) (sin.f64 v)))))","(-.f64 (*.f64 (sin.f64 v) (-.f64 (+.f64 1 (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)))) (*.f64 e (cos.f64 v)))) (*.f64 (pow.f64 e 3) (*.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))))","(-.f64 (*.f64 (sin.f64 v) (-.f64 (+.f64 1 (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)))) (*.f64 e (cos.f64 v)))) (*.f64 (sin.f64 v) (pow.f64 (*.f64 e (cos.f64 v)) 3)))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (neg.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2))))))","(-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))","(-.f64 (/.f64 (sin.f64 v) (pow.f64 (*.f64 e (cos.f64 v)) 3)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2))))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (sin.f64 v) (pow.f64 (*.f64 e (cos.f64 v)) 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4)))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (neg.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2))))))","(-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))","(-.f64 (/.f64 (sin.f64 v) (pow.f64 (*.f64 e (cos.f64 v)) 3)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2))))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (sin.f64 v) (pow.f64 (*.f64 e (cos.f64 v)) 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 4)))))"]],"stop":[["node limit",1]],"time":59.5810546875,"type":"simplify"},{"compiler":[[3358,1956]],"time":35.225830078125,"type":"eval"},{"alts":[["(*.f64 e (*.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (*.f64 (cbrt.f64 (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1)))))","fresh",0.5610314942110507],["(pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)","fresh",0.5902965453685884],["(+.f64 (*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v))))) (*.f64 (sin.f64 v) (-.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","fresh",0.35199299377060056],["(*.f64 e (/.f64 (-.f64 (+.f64 1 (sin.f64 v)) 1) (fma.f64 e (cos.f64 v) 1)))","fresh",17.193499372319177],["(/.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v))))","fresh",0.3945730820195228],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","next",0.26953125]],"compiler":[[21,14],[15,11],[34,21],[16,12],[14,10],[12,8],[21,14],[15,11],[34,21],[16,12],[14,10],[12,8]],"count":[[150,6]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[148,6],"picked":[1,0]}],"min-error":[0.0234375],"time":35.0,"type":"prune"},{"compiler":[[32,14]],"locations":[["(sin.f64 v)",0.0234375,false],["(cos.f64 v)",0.0234375,false],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))",0.11328125,true],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))",0.24609375,true]],"time":8.615966796875,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","v","-inf",0.39208984375],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","v","inf",0.39501953125],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","v","0",0.510986328125],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","e","-inf",0.4140625],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","e","inf",1.112060546875],["(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","e","0",0.60595703125],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","v","-inf",0.186767578125],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","v","inf",0.174072265625],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","v","0",0.35302734375],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","e","-inf",0.213134765625],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","e","inf",0.23583984375],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","e","0",0.253173828125]],"time":5.044189453125,"type":"series"},{"count":[[2,116]],"egraph":[[2,2479,27,0.023658793],[1,184,27,0.003210959],[0,9,27,0.000236875]],"inputs":[["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 e (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 e) 2) (*.f64 (cbrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2) (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 e) (*.f64 (sqrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 e) (/.f64 1 (neg.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 e) 2) 1) (/.f64 (cbrt.f64 e) (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 e) 1) (/.f64 (sqrt.f64 e) (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 e (cos.f64 v) 1)) (/.f64 e (/.f64 1 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 e) 2) (fma.f64 e (cos.f64 v) 1)) (/.f64 (cbrt.f64 e) (/.f64 1 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 e) (fma.f64 e (cos.f64 v) 1)) (/.f64 (sqrt.f64 e) (/.f64 1 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) -2) (/.f64 e (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 e) 2) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 2)) (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 e) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 2)) (/.f64 (sqrt.f64 e) (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) -1/2) (/.f64 e (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 e) 2) (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) (/.f64 (cbrt.f64 e) (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e 1) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (neg.f64 (fma.f64 e (cos.f64 v) 1))) (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) 1) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sqrt.f64 (sin.f64 v))) (sqrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 e 3) (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 2)) (cbrt.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (sqrt.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 e (neg.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 e 3) (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 e) 1) (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 e) (*.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 e) 1) (*.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 e) 1) (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (sin.f64 v)) 1) (log.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) (*.f64 (log.f64 e) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1))) (*.f64 (log.f64 (sin.f64 v)) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 e (cos.f64 v) 1) (/.f64 1 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 2) (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 1 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (*.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 1 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 1 (neg.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) 1) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) -2) (/.f64 (fma.f64 e (cos.f64 v) 1) (cbrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (cbrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 v) -1/2) (/.f64 (fma.f64 e (cos.f64 v) 1) (sqrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2) (sqrt.f64 (sin.f64 v))) (/.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) (sqrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 3) (pow.f64 (sin.f64 v) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 2)) (cbrt.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))) (sqrt.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (neg.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 3) (pow.f64 (sin.f64 v) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 e (cos.f64 v))) 1) (log.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log1p.f64 (*.f64 e (cos.f64 v))) (*.f64 (log.f64 (sin.f64 v)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 e (cos.f64 v))) 1) (*.f64 (log.f64 (sin.f64 v)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log1p.f64 (*.f64 e (cos.f64 v))) 1) (neg.f64 (log.f64 (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (neg.f64 (log.f64 (sin.f64 v))) (*.f64 (log1p.f64 (*.f64 e (cos.f64 v))) 1)))))))"]],"rules":[["egg-rr",52],["egg-rr",64]],"stop":[["node limit",1]],"time":48.251953125,"type":"rewrite"},{"count":[[164,155]],"egraph":[[3,5830,1363,0.026072249999999998],[2,1231,1385,0.010999625],[1,386,1447,0.002767416],[0,126,1526,0.000687041]],"inputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 1 (sin.f64 v))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(/.f64 (+.f64 1 e) v)","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (/.f64 1 v)))","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (+.f64 (/.f64 1 v) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e))))))))","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (+.f64 (/.f64 1 v) (+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 -1/720 e) (+.f64 (*.f64 -1/5040 (+.f64 1 e)) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e))))) (*.f64 1/120 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))))))) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e)))))))))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) e))","(-.f64 (*.f64 (sin.f64 v) e) (*.f64 (cos.f64 v) (*.f64 (*.f64 e e) (sin.f64 v))))","(*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))) (*.f64 (sin.f64 v) (neg.f64 (*.f64 e (*.f64 e (cos.f64 v))))))","(*.f64 (sin.f64 v) (-.f64 (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e) (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 e (*.f64 e (cos.f64 v))) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(-.f64 (*.f64 (sin.f64 v) (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e)) (*.f64 (sin.f64 v) (fma.f64 e (*.f64 e (cos.f64 v)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) (*.f64 e e)) (pow.f64 (cos.f64 v) 3)) (+.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(/.f64 v (/.f64 (+.f64 e 1) e))","(*.f64 (/.f64 v (+.f64 e 1)) e)","(*.f64 (/.f64 e (+.f64 e 1)) v)","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)) (*.f64 (/.f64 e (+.f64 e 1)) v))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 -1/2 (*.f64 e (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))))) (+.f64 e 1))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 -1/2 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (*.f64 (/.f64 v (+.f64 e 1)) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)) (fma.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 (*.f64 1/2 e) (/.f64 (+.f64 e 1) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2))))) (*.f64 (/.f64 e (+.f64 e 1)) v)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)) (fma.f64 (pow.f64 v 5) (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (fma.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24))) (*.f64 (/.f64 e (+.f64 e 1)) v)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e))) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 -1/2 (*.f64 e (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))))) (+.f64 e 1)))) (/.f64 (+.f64 e 1) e)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 -1/2 (*.f64 e (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))))) (+.f64 e 1)))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e)) (fma.f64 (pow.f64 v 7) (-.f64 (/.f64 (*.f64 e -1/5040) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 -1/2 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 -1/2 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))))))","(fma.f64 (/.f64 v (+.f64 e 1)) e (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 (*.f64 1/2 e) (/.f64 (+.f64 e 1) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)))))) (fma.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/720 (*.f64 1/24 (*.f64 (/.f64 e (+.f64 e 1)) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2))))))) (*.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 (*.f64 1/2 e) (/.f64 (+.f64 e 1) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)))))))))","(fma.f64 (/.f64 v (+.f64 e 1)) e (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) 1/2)) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (fma.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)))) (fma.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/720 (*.f64 1/24 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))))))) (*.f64 (pow.f64 v 5) (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (fma.f64 (-.f64 (/.f64 -1/6 (/.f64 (pow.f64 (+.f64 e 1) 2) (*.f64 e e))) (/.f64 -1/2 (pow.f64 (/.f64 (+.f64 e 1) e) 3))) 1/2 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 1 (sin.f64 v))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)) (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v))","(/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e))","(*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e)","(/.f64 e (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v))","(/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e))","(*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e)","(/.f64 e (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (*.f64 (cos.f64 v) e) (sin.f64 v)))","(+.f64 (/.f64 1 (sin.f64 v)) (/.f64 (cos.f64 v) (/.f64 (sin.f64 v) e)))","(+.f64 (/.f64 1 (sin.f64 v)) (*.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e))","(fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v)))","(/.f64 (+.f64 1 e) v)","(/.f64 (+.f64 e 1) v)","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (/.f64 1 v)))","(fma.f64 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) v (+.f64 (/.f64 e v) (/.f64 1 v)))","(+.f64 (/.f64 1 v) (fma.f64 v (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6))) (/.f64 e v)))","(+.f64 (/.f64 1 v) (fma.f64 v (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) (/.f64 e v)))","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (+.f64 (/.f64 1 v) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e))))))))","(fma.f64 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) v (+.f64 (+.f64 (/.f64 e v) (/.f64 1 v)) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 e 1/24) (fma.f64 -1/6 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) (+.f64 1/120 (*.f64 e 1/120)))))))","(+.f64 (fma.f64 (pow.f64 v 3) (-.f64 (*.f64 e 1/24) (fma.f64 (+.f64 e 1) 1/120 (*.f64 -1/6 (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6)))))) (/.f64 1 v)) (fma.f64 v (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6))) (/.f64 e v)))","(+.f64 (/.f64 e v) (fma.f64 v (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) (fma.f64 (pow.f64 v 3) (fma.f64 e 1/24 (-.f64 (*.f64 (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) 1/6) (fma.f64 e 1/120 1/120))) (/.f64 1 v))))","(+.f64 (*.f64 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e))) v) (+.f64 (/.f64 e v) (+.f64 (/.f64 1 v) (+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 -1/720 e) (+.f64 (*.f64 -1/5040 (+.f64 1 e)) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e))))) (*.f64 1/120 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))))))) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 1/24 e) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/2 e) (*.f64 -1/6 (+.f64 1 e)))) (*.f64 1/120 (+.f64 1 e)))))))))","(fma.f64 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) v (+.f64 (+.f64 (/.f64 e v) (/.f64 1 v)) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 e -1/720) (fma.f64 -1/5040 (+.f64 e 1) (fma.f64 -1/6 (-.f64 (*.f64 e 1/24) (fma.f64 -1/6 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) (+.f64 1/120 (*.f64 e 1/120)))) (*.f64 1/120 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))))))) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 e 1/24) (fma.f64 -1/6 (+.f64 (*.f64 e -1/2) (*.f64 1/6 (+.f64 e 1))) (+.f64 1/120 (*.f64 e 1/120))))))))","(+.f64 (+.f64 (/.f64 1 v) (fma.f64 v (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6))) (/.f64 e v))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 e -1/720) (fma.f64 (+.f64 e 1) -1/5040 (fma.f64 -1/6 (-.f64 (*.f64 e 1/24) (fma.f64 (+.f64 e 1) 1/120 (*.f64 -1/6 (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6)))))) (*.f64 1/120 (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6))))))) (*.f64 (pow.f64 v 3) (-.f64 (*.f64 e 1/24) (fma.f64 (+.f64 e 1) 1/120 (*.f64 -1/6 (fma.f64 e -1/2 (+.f64 1/6 (*.f64 e 1/6)))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 e 1/24 (-.f64 (*.f64 (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) 1/6) (fma.f64 e 1/120 1/120))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 e -1/720) (fma.f64 -1/6 (fma.f64 e 1/24 (-.f64 (*.f64 (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) 1/6) (fma.f64 e 1/120 1/120))) (fma.f64 1/120 (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) (fma.f64 e -1/5040 -1/5040)))) (/.f64 1 v))) (fma.f64 v (fma.f64 e -1/2 (fma.f64 e 1/6 1/6)) (/.f64 e v)))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (sin.f64 v))","(/.f64 (+.f64 1 (*.f64 e (cos.f64 v))) (sin.f64 v))","(/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v))"]],"stop":[["node limit",1]],"time":50.990966796875,"type":"simplify"},{"compiler":[[3895,2200]],"time":42.93896484375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","next",0.140625],["(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sqrt.f64 (sin.f64 v))) (sqrt.f64 (sin.f64 v)))","fresh",31.471698779305328],["(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (sin.f64 v)))","fresh",0.6023790039794927],["(*.f64 (sqrt.f64 e) (*.f64 (sqrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.46882636722130433],["(*.f64 (pow.f64 (cbrt.f64 e) 2) (*.f64 (cbrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.5350152832848186],["(/.f64 e (fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v))))","fresh",0.26953125]],"compiler":[[12,8],[17,10],[19,12],[16,10],[18,12],[15,9],[12,8],[17,10],[19,12],[16,10],[18,12],[15,9]],"count":[[207,6]],"kept":[{"done":[0,0],"fresh":[5,0],"new":[201,6],"picked":[1,0]}],"min-error":[0],"time":53.5,"type":"prune"},{"compiler":[[32,14]],"locations":[["(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))",0.01171875,false],["(sin.f64 v)",0.0234375,false],["(cos.f64 v)",0.0234375,false],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)",0.1171875,true]],"time":8.821044921875,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","e","-inf",0.221923828125],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","e","inf",0.20703125],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","e","0",0.214111328125],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","v","-inf",0.171875],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","v","inf",0.195068359375],["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","v","0",0.39794921875]],"time":1.52099609375,"type":"series"},{"count":[[1,23]],"egraph":[[2,2239,15,0.021239293],[1,178,15,0.003016126],[0,9,15,0.000234209]],"inputs":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 (sin.f64 v) e)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 v) e)) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) e) 1) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) e) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) e) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) e) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (neg.f64 (sin.f64 v))) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 e 3) (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3) (pow.f64 e 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))))"]],"rules":[["egg-rr",23]],"stop":[["node limit",1]],"time":39.05908203125,"type":"rewrite"},{"count":[[47,48]],"egraph":[[3,4246,860,0.021733998999999997],[2,885,922,0.007887248999999999],[1,276,942,0.001974541],[0,91,989,0.000481333]],"inputs":[["(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 v e) (+.f64 1 e))","(/.f64 v (/.f64 (+.f64 e 1) e))","(*.f64 (/.f64 e (+.f64 e 1)) v)","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (pow.f64 v 3) (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 v (/.f64 (+.f64 e 1) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) (/.f64 v (/.f64 (+.f64 e 1) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (/.f64 v (/.f64 (+.f64 e 1) e)))","(fma.f64 (pow.f64 v 3) (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (*.f64 (/.f64 e (+.f64 e 1)) v))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 v (/.f64 (+.f64 e 1) e))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/24 (/.f64 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) -1/2) (/.f64 (+.f64 e 1) e)))) (/.f64 v (/.f64 (+.f64 e 1) e))))","(fma.f64 (pow.f64 v 3) (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (fma.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/24)) (*.f64 (*.f64 e (/.f64 (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (+.f64 e 1))) 1/2)) (/.f64 v (/.f64 (+.f64 e 1) e))))","(fma.f64 (pow.f64 v 3) (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 1/120 (*.f64 1/24 (/.f64 e (+.f64 e 1))))) (/.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (/.f64 (/.f64 (+.f64 e 1) e) -1/2))) (*.f64 (/.f64 e (+.f64 e 1)) v)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 v (/.f64 (+.f64 e 1) e))) (fma.f64 (pow.f64 v 7) (-.f64 (/.f64 (*.f64 -1/5040 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e))))) (/.f64 (+.f64 e 1) e)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 e 1)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 (*.f64 -1/6 e) (+.f64 e 1)) (/.f64 (*.f64 -1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (/.f64 (+.f64 e 1) e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) (/.f64 v (/.f64 (+.f64 e 1) e))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/24 (/.f64 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) -1/2) (/.f64 (+.f64 e 1) e)))) (*.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) (+.f64 e 1)) e) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/24 (/.f64 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) 1/2)) -1/2) (/.f64 (+.f64 e 1) e)))) (+.f64 e 1)) e) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))))))","(fma.f64 (pow.f64 v 3) (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (fma.f64 (pow.f64 v 5) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/24)) (*.f64 (*.f64 e (/.f64 (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (+.f64 e 1))) 1/2)) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (+.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/24)) (*.f64 (*.f64 e (/.f64 (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (+.f64 e 1))) 1/2))) (fma.f64 1/24 (*.f64 e (/.f64 (fma.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) 1/2 (*.f64 -1/6 (/.f64 e (+.f64 e 1)))) (+.f64 e 1))) (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/720)))) (/.f64 v (/.f64 (+.f64 e 1) e)))))","(fma.f64 (pow.f64 v 3) (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (fma.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 1/120 (*.f64 1/24 (/.f64 e (+.f64 e 1))))) (/.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (/.f64 (/.f64 (+.f64 e 1) e) -1/2))) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/5040 (/.f64 (*.f64 e -1/720) (+.f64 e 1)))) (*.f64 e (+.f64 (/.f64 (*.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) 1/24) (+.f64 e 1)) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 1/120 (*.f64 1/24 (/.f64 e (+.f64 e 1))))) (/.f64 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 -1/6 (/.f64 (*.f64 e -1/2) (+.f64 e 1)))) (/.f64 (/.f64 (+.f64 e 1) e) -1/2))) (+.f64 e 1)))))) (*.f64 (/.f64 e (+.f64 e 1)) v))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))","(*.f64 (sin.f64 v) e)","(*.f64 e (sin.f64 v))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (*.f64 e e) (cos.f64 v))) (*.f64 e (sin.f64 v)))","(-.f64 (*.f64 e (sin.f64 v)) (*.f64 (sin.f64 v) (*.f64 e (*.f64 e (cos.f64 v)))))","(*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (*.f64 e e) (cos.f64 v))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(-.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (sin.f64 v) (*.f64 e (*.f64 e (cos.f64 v)))))","(*.f64 (sin.f64 v) (-.f64 (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e) (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (*.f64 e e) (cos.f64 v))) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 e (*.f64 e (cos.f64 v))) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(-.f64 (*.f64 (sin.f64 v) (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e)) (*.f64 (sin.f64 v) (fma.f64 e (*.f64 e (cos.f64 v)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(*.f64 (sin.f64 v) (-.f64 (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e) (fma.f64 e (*.f64 e (cos.f64 v)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 e e)))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 e e)) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (-.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 3))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 e e)))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 e e)) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2))) (-.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (*.f64 e (pow.f64 (cos.f64 v) 3)))) (-.f64 (*.f64 (+.f64 (/.f64 -1 (*.f64 e (cos.f64 v))) 1) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (pow.f64 e 3))))"]],"stop":[["node limit",1]],"time":41.327880859375,"type":"simplify"},{"compiler":[[3340,1955]],"time":36.39697265625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","next",0.1484375],["(/.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 (sin.f64 v) e)))","fresh",0.3945730820195228],["(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (sin.f64 v)))","fresh",0.6023790039794927],["(*.f64 (sqrt.f64 e) (*.f64 (sqrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.46882636722130433],["(*.f64 (pow.f64 (cbrt.f64 e) 2) (*.f64 (cbrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.5350152832848186],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","fresh",0.26953125],["(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","fresh",0.265625]],"compiler":[[22,15],[14,10],[19,12],[16,10],[18,12],[12,8],[12,8],[22,15],[14,10],[19,12],[16,10],[18,12],[12,8],[12,8]],"count":[[156,7]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[150,4],"picked":[1,0]}],"min-error":[0],"time":35.34814453125,"type":"prune"},{"compiler":[[75,40]],"locations":[["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))",0.01953125,true],["(sin.f64 v)",0.0234375,false],["(cos.f64 v)",0.0234375,false],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)",0.1171875,true]],"time":17.893798828125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","v","-inf",0.156005859375],["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","v","inf",0.174072265625],["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","v","0",0.320068359375],["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","e","-inf",0.225830078125],["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","e","inf",0.20703125],["(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))","e","0",0.205078125],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","v","-inf",0.18994140625],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","v","inf",0.208984375],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","v","0",0.34814453125],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","e","-inf",0.2490234375],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","e","inf",0.239990234375],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","e","0",0.2958984375]],"time":3.093017578125,"type":"series"},{"count":[[2,77]],"egraph":[[2,3188,27,0.027376209],[1,246,27,0.004309667],[0,12,27,0.000304334]],"inputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","(*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) e)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) e))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) e))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) e))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 e (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) e) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 e (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)))) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) e))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/2) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (/.f64 (fma.f64 e (cos.f64 v) 1) (cbrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 2) (fma.f64 e (cos.f64 v) 1))) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (cbrt.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (sin.f64 v)) (/.f64 (fma.f64 e (cos.f64 v) 1) (sqrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sqrt.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 v)) (neg.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 v)) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 v)) (*.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (sin.f64 v))) (pow.f64 (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) 1) (*.f64 (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) -1) (*.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) -1) (pow.f64 (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) 1) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 1/4)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) 2)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) 1) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/2)) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/2) (neg.f64 (sin.f64 v))) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) -1) (neg.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (sin.f64 v) 3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)) -3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)) (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (sqrt.f64 (fma.f64 e (cos.f64 v) 1)) (sin.f64 v)) -3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))) 1))))))"]],"rules":[["egg-rr",56],["egg-rr",21]],"stop":[["node limit",1]],"time":49.6171875,"type":"rewrite"},{"count":[[125,125]],"egraph":[[2,1685,1780,0.015488583],[1,476,1818,0.0035234999999999997],[0,153,1900,0.000790333]],"inputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(/.f64 v (+.f64 1 e))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/5040 (/.f64 1 (+.f64 1 e)))))))) (/.f64 v (+.f64 1 e)))))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) e))","(-.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 e (*.f64 e (cos.f64 v)))))","(*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(-.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (sin.f64 v) (*.f64 e (*.f64 e (cos.f64 v)))))","(*.f64 (sin.f64 v) (-.f64 (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e) (*.f64 e (*.f64 e (cos.f64 v)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (*.f64 e e))) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 e (*.f64 e (cos.f64 v))) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(-.f64 (*.f64 (sin.f64 v) (fma.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3) e)) (*.f64 (sin.f64 v) (fma.f64 e (*.f64 e (cos.f64 v)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (/.f64 (sin.f64 v) e) (*.f64 e (pow.f64 (cos.f64 v) 3))) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (*.f64 e (pow.f64 (cos.f64 v) 3))) (+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))))","(-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (/.f64 (sin.f64 v) e) (*.f64 e (pow.f64 (cos.f64 v) 3))) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (/.f64 (sin.f64 v) (*.f64 e (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 3))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4)))))","(+.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (-.f64 (/.f64 (/.f64 (sin.f64 v) e) (*.f64 e (pow.f64 (cos.f64 v) 3))) (+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 4))) (/.f64 (/.f64 (sin.f64 v) e) (pow.f64 (cos.f64 v) 2)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(/.f64 v (/.f64 (+.f64 e 1) e))","(*.f64 (/.f64 v (+.f64 e 1)) e)","(*.f64 (/.f64 e (+.f64 e 1)) v)","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 e (+.f64 e 1)) v))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (*.f64 (/.f64 v (+.f64 e 1)) e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 -1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2)))))) (*.f64 (/.f64 e (+.f64 e 1)) v)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 v (/.f64 (+.f64 e 1) e))) (fma.f64 (pow.f64 v 7) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) -1/5040) (fma.f64 1/24 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e))))) (/.f64 (+.f64 e 1) e)) (*.f64 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 (/.f64 e (+.f64 e 1)) 1/120) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1/6 (/.f64 e (+.f64 e 1))) (*.f64 1/2 (/.f64 (*.f64 e e) (pow.f64 (+.f64 e 1) 2)))) (/.f64 (+.f64 e 1) e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (*.f64 (/.f64 v (+.f64 e 1)) e)) (fma.f64 (pow.f64 v 7) (-.f64 (/.f64 -1/5040 (/.f64 (+.f64 e 1) e)) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (/.f64 1/120 (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))) (+.f64 e 1)) e) (*.f64 (/.f64 e (/.f64 (pow.f64 (+.f64 e 1) 2) e)) -1/720)))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (/.f64 (+.f64 e 1) e)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 e 1) 2))) (+.f64 e 1)) e) (/.f64 (*.f64 (*.f64 e e) 1/24) (pow.f64 (+.f64 e 1) 2)))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 -1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2)))))) (fma.f64 (pow.f64 v 7) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) -1/5040 (/.f64 (*.f64 -1/24 e) (/.f64 (+.f64 e 1) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2)))))) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 (fma.f64 (/.f64 e (+.f64 e 1)) 1/120 (*.f64 (*.f64 (/.f64 e (pow.f64 (+.f64 e 1) 2)) e) -1/24)) (/.f64 -1/2 (/.f64 (/.f64 (+.f64 e 1) e) (fma.f64 -1/6 (/.f64 e (+.f64 e 1)) (/.f64 (*.f64 (*.f64 e e) 1/2) (pow.f64 (+.f64 e 1) 2))))))) (/.f64 (*.f64 e (*.f64 e -1/720)) (pow.f64 (+.f64 e 1) 2)))) (*.f64 (/.f64 e (+.f64 e 1)) v))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (neg.f64 (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) e)))","(-.f64 (sin.f64 v) (*.f64 (*.f64 (sin.f64 v) e) (cos.f64 v)))","(fma.f64 (sin.f64 v) (neg.f64 (*.f64 e (cos.f64 v))) (sin.f64 v))","(+.f64 (sin.f64 v) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (fma.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)) (neg.f64 (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) e))))","(-.f64 (*.f64 (+.f64 (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)) 1) (sin.f64 v)) (*.f64 (*.f64 (sin.f64 v) e) (cos.f64 v)))","(*.f64 (sin.f64 v) (-.f64 (fma.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)) 1) (*.f64 e (cos.f64 v))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2))) (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))","(+.f64 (sin.f64 v) (fma.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))) (fma.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)) (neg.f64 (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) e)))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 v)) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3)) (*.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))) (-.f64 (sin.f64 v) (*.f64 (*.f64 (sin.f64 v) e) (cos.f64 v))))","(-.f64 (*.f64 (sin.f64 v) (-.f64 (fma.f64 e (*.f64 e (pow.f64 (cos.f64 v) 2)) 1) (*.f64 e (cos.f64 v)))) (*.f64 (pow.f64 e 3) (*.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (neg.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4)))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 e 4)) (pow.f64 (cos.f64 v) 4))))","(/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))","(/.f64 (sin.f64 v) (*.f64 e (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (neg.f64 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 4)))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2))) (fma.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4))) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 3) (pow.f64 (cos.f64 v) 3))))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (-.f64 (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 e 4) (pow.f64 (cos.f64 v) 4)))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))))","(+.f64 (-.f64 (/.f64 (sin.f64 v) (*.f64 e (cos.f64 v))) (/.f64 (sin.f64 v) (*.f64 (*.f64 e e) (pow.f64 (cos.f64 v) 2)))) (-.f64 (/.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (pow.f64 e 3)) (/.f64 (/.f64 (sin.f64 v) (pow.f64 e 4)) (pow.f64 (cos.f64 v) 4))))","(/.f64 v (+.f64 1 e))","(/.f64 v (+.f64 e 1))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e)))","(fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (/.f64 v (+.f64 e 1)))","(-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (/.f64 v (+.f64 1 e))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (/.f64 v (+.f64 e 1))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (/.f64 (+.f64 e 1) e)))) (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (/.f64 (+.f64 e 1) e) 1/2)))) (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(+.f64 (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 1 (+.f64 1 e))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/24 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 1/6 (/.f64 1 (+.f64 1 e)))) e) (+.f64 1 e))) (*.f64 1/5040 (/.f64 1 (+.f64 1 e)))))))) (/.f64 v (+.f64 1 e)))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (fma.f64 -1 (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) (fma.f64 -1 (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2))))) (/.f64 (+.f64 e 1) e)) (fma.f64 -1/24 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (+.f64 e 1) e)) (/.f64 1/5040 (+.f64 e 1)))))) (/.f64 v (+.f64 e 1)))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (/.f64 (+.f64 e 1) e)))) (-.f64 (-.f64 (/.f64 v (+.f64 e 1)) (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) 1/2) (/.f64 (+.f64 e 1) e)))) (/.f64 (+.f64 e 1) e)) (fma.f64 (*.f64 (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (+.f64 e 1)) e) -1/24 (/.f64 1/5040 (+.f64 e 1))))))) (*.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))))))","(fma.f64 (pow.f64 v 5) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (/.f64 (+.f64 e 1) e) 1/2)))) (-.f64 (/.f64 v (+.f64 e 1)) (fma.f64 (pow.f64 v 3) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (*.f64 (pow.f64 v 7) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (fma.f64 -1/2 (*.f64 (/.f64 e (+.f64 e 1)) (-.f64 (/.f64 1/120 (+.f64 e 1)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1))) (/.f64 (/.f64 (+.f64 e 1) e) 1/2))))) (fma.f64 (*.f64 (/.f64 e (+.f64 e 1)) (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 e 1) 2)) (/.f64 1/6 (+.f64 e 1)))) -1/24 (/.f64 1/5040 (+.f64 e 1)))))))))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (sin.f64 v) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))"]],"stop":[["node limit",1]],"time":40.52099609375,"type":"simplify"},{"compiler":[[4917,2937]],"time":51.93701171875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","done",0.1484375],["(/.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 (sin.f64 v) e)))","fresh",0.3945730820195228],["(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","fresh",0.265625],["(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (sin.f64 v)))","fresh",0.6023790039794927],["(*.f64 (sqrt.f64 e) (*.f64 (sqrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.46882636722130433],["(*.f64 (pow.f64 (cbrt.f64 e) 2) (*.f64 (cbrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","fresh",0.5350152832848186],["(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","fresh",0.26953125]],"compiler":[[22,15],[14,10],[12,8],[19,12],[16,10],[18,12],[12,8]],"count":[[201,7]],"kept":[{"done":[0,0],"fresh":[6,5],"new":[194,1],"picked":[1,1]}],"min-error":[0],"time":53.27294921875,"type":"prune"},{"accuracy":[0.140625],"baseline":[0.140625],"branch":[["e",0.140625,1],["v",0.140625,1],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))",0.140625,1]],"compiler":[[3,2],[3,2],[13,9],[270,128]],"count":[[19,1]],"inputs":[["(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (sqrt.f64 (fma.f64 e (cos.f64 v) 1)))) e)","(/.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 (sin.f64 v) e)))","(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","(/.f64 (sin.f64 v) (/.f64 (fma.f64 e (cos.f64 v) 1) e))","(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sqrt.f64 (sin.f64 v))) (sqrt.f64 (sin.f64 v)))","(*.f64 (*.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (pow.f64 (cbrt.f64 (sin.f64 v)) 2)) (cbrt.f64 (sin.f64 v)))","(*.f64 (sqrt.f64 e) (*.f64 (sqrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","(*.f64 (pow.f64 (cbrt.f64 e) 2) (*.f64 (cbrt.f64 e) (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))","(/.f64 e (fma.f64 (/.f64 (cos.f64 v) (sin.f64 v)) e (/.f64 1 (sin.f64 v))))","(*.f64 e (*.f64 (pow.f64 (cbrt.f64 (sin.f64 v)) 2) (*.f64 (cbrt.f64 (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1)))))","(pow.f64 (cbrt.f64 (*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))) 3)","(+.f64 (*.f64 (sin.f64 v) (-.f64 e (*.f64 e (*.f64 e (cos.f64 v))))) (*.f64 (sin.f64 v) (-.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))))","(*.f64 e (/.f64 (-.f64 (+.f64 1 (sin.f64 v)) 1) (fma.f64 e (cos.f64 v) 1)))","(/.f64 1 (/.f64 (fma.f64 e (cos.f64 v) 1) (*.f64 e (sin.f64 v))))","(/.f64 e (/.f64 (fma.f64 e (cos.f64 v) 1) (sin.f64 v)))","(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))"]],"link":["."],"name":["Trigonometry A"],"oracle":[39.65862701329743],"outputs":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)"]],"time":23.175048828125,"times":[["e",6.411865234375],["v",6.55810546875],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))",6.0498046875]],"type":"regimes"},{"compiler":[[12,8]],"egraph":[[1,12,15,4.2417e-5],[0,9,15,2.5792e-5]],"inputs":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)","(*.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.367919921875,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[12,8]],"remove-preprocessing":[[]],"time":8.821044921875,"type":"end"}]