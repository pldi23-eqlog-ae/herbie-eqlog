[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.4317728507180864,0.5662754543277838,0.0019516949541297235],[11,0.38986261915854303,0.6081856858873271,0.0019516949541298345],[10,0.3118900953268344,0.6861582097190357,0.0019516949541298345],[9,0.18713405719610066,0.8109142478497695,0.0019516949541298345],[8,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[7,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":102.090087890625,"type":"analyze"},{"outcomes":[["body",256,"invalid",16.246826171875,381],["body",256,"valid",358.47021484375,8256]],"time":385.889892578125,"type":"sample"},{"compiler":[[11,7]],"egraph":[[1,4,4,1.0375e-5],[0,4,4,9.167e-6],[15,7456,70,0.113212125],[14,6676,70,0.10215375],[13,6668,70,0.082996584],[12,6632,70,0.071593667],[11,6588,70,0.061887709],[10,6448,70,0.052564584],[9,5330,70,0.040213459],[8,2752,70,0.026135791999999998],[7,1266,70,0.014264500999999999],[6,812,70,0.006866667],[5,489,70,0.004321959],[4,274,70,0.002158834],[3,184,70,0.001087501],[2,104,70,0.0005806260000000001],[1,59,70,0.00026970900000000003],[0,25,70,9.9834e-5]],"inputs":[["0","1","2","3"],["(/.f64 x (-.f64 y (*.f64 z t)))","(/.f64 y (-.f64 x (*.f64 z t)))","(/.f64 z (-.f64 y (*.f64 x t)))","(/.f64 t (-.f64 y (*.f64 z x)))","(/.f64 x (-.f64 z (*.f64 y t)))","(/.f64 x (-.f64 t (*.f64 z y)))","(/.f64 x (-.f64 y (*.f64 t z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","2"],["(/.f64 x (-.f64 y (*.f64 z t)))","(/.f64 y (-.f64 x (*.f64 z t)))","(/.f64 y (fma.f64 z (neg.f64 t) x))","(/.f64 z (-.f64 y (*.f64 x t)))","(/.f64 z (fma.f64 t (neg.f64 x) y))","(/.f64 t (-.f64 y (*.f64 z x)))","(/.f64 t (-.f64 y (*.f64 x z)))","(/.f64 t (fma.f64 x (neg.f64 z) y))","(/.f64 x (-.f64 z (*.f64 y t)))","(/.f64 x (fma.f64 t (neg.f64 y) z))","(/.f64 x (fma.f64 y (neg.f64 t) z))","(/.f64 x (-.f64 t (*.f64 z y)))","(/.f64 x (-.f64 t (*.f64 y z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 z t)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort z t)"]],"time":141.835205078125,"type":"preprocess"},{"count":[[1,1]],"egraph":[[11,412,10,0.006050416],[10,406,10,0.005140375],[9,356,10,0.004204541],[8,272,10,0.003146791],[7,207,10,0.002207624],[6,154,10,0.001524666],[5,97,10,0.000975499],[4,63,10,0.000607874],[3,43,10,0.00035108299999999997],[2,26,10,0.000189291],[1,14,10,0.00010145799999999999],[0,8,10,4.2541e-5]],"inputs":[["(/.f64 x (-.f64 y (*.f64 z t)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (-.f64 y (*.f64 z t)))"]],"stop":[["saturated",1]],"time":18.15087890625,"type":"simplify"},{"compiler":[[11,7]],"time":0.22998046875,"type":"eval"},{"alts":[["(/.f64 x (-.f64 y (*.f64 z t)))","next",2.6779638379326975]],"compiler":[[11,7],[11,7]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[2.6779638379326975],"time":0.658935546875,"type":"prune"},{"compiler":[[23,7]],"locations":[["(-.f64 y (*.f64 z t))",0.00390625,true],["(/.f64 x (-.f64 y (*.f64 z t)))",2.6740575879326975,true]],"time":4.403076171875,"type":"localize"},{"count":[[2,84]],"series":[["(-.f64 y (*.f64 z t))","t","-inf",0.2109375],["(-.f64 y (*.f64 z t))","t","inf",0.222900390625],["(-.f64 y (*.f64 z t))","t","0",0.219970703125],["(-.f64 y (*.f64 z t))","z","-inf",0.2060546875],["(-.f64 y (*.f64 z t))","z","inf",0.238037109375],["(-.f64 y (*.f64 z t))","z","0",0.196044921875],["(-.f64 y (*.f64 z t))","y","-inf",0.171875],["(-.f64 y (*.f64 z t))","y","inf",0.222900390625],["(-.f64 y (*.f64 z t))","y","0",0.205078125],["(/.f64 x (-.f64 y (*.f64 z t)))","t","-inf",0.3740234375],["(/.f64 x (-.f64 y (*.f64 z t)))","t","inf",0.68310546875],["(/.f64 x (-.f64 y (*.f64 z t)))","t","0",0.376953125],["(/.f64 x (-.f64 y (*.f64 z t)))","z","-inf",0.36181640625],["(/.f64 x (-.f64 y (*.f64 z t)))","z","inf",0.403076171875],["(/.f64 x (-.f64 y (*.f64 z t)))","z","0",0.350830078125],["(/.f64 x (-.f64 y (*.f64 z t)))","y","-inf",0.39599609375],["(/.f64 x (-.f64 y (*.f64 z t)))","y","inf",0.467041015625],["(/.f64 x (-.f64 y (*.f64 z t)))","y","0",0.784912109375],["(/.f64 x (-.f64 y (*.f64 z t)))","x","-inf",0.427001953125],["(/.f64 x (-.f64 y (*.f64 z t)))","x","inf",0.64794921875],["(/.f64 x (-.f64 y (*.f64 z t)))","x","0",0.656982421875]],"time":8.10302734375,"type":"series"},{"count":[[2,186]],"egraph":[[2,2558,17,0.024335625],[1,177,17,0.0033413749999999997],[0,8,17,0.00018375]],"inputs":[["(/.f64 x (-.f64 y (*.f64 z t)))","(-.f64 y (*.f64 z t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y (*.f64 z t))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y (*.f64 z t)) -1/2) (/.f64 x (sqrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 y (*.f64 z t)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) (fma.f64 z t y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y (*.f64 z t)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 y (*.f64 z t)) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y (*.f64 z t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 y (*.f64 z t)) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 y (*.f64 z t)) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 y (*.f64 z t)) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 y (*.f64 z t)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 y (*.f64 z t)) (fma.f64 -1 (*.f64 z t) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 y (*.f64 z t)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 z t)) 2)) (cbrt.f64 (*.f64 z t)) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (neg.f64 t)) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 y (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) z)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) z)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) z)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) z)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) z)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) z) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 z) t)) (pow.f64 (cbrt.f64 z) 2) (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 z) t)) (pow.f64 (cbrt.f64 z) 2) (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 z) t)) (pow.f64 (cbrt.f64 z) 2) (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 z) t)) (pow.f64 (cbrt.f64 z) 2) (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 z) t)) (pow.f64 (cbrt.f64 z) 2) (*.f64 (*.f64 (cbrt.f64 z) t) (pow.f64 (cbrt.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) z)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) z)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) z)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) z)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) z)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) z) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 z) t)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 z) t)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 z) t)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 z) t)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 z) t)) (sqrt.f64 z) (*.f64 (*.f64 (sqrt.f64 z) t) (sqrt.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 z (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 z (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 z (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 z (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 z (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 z (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 z (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 z (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 z (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 z (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 z (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 z (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2))))) (fma.f64 (neg.f64 (cbrt.f64 z)) (*.f64 t (pow.f64 (cbrt.f64 z) 2)) (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2))))) (fma.f64 (neg.f64 (cbrt.f64 z)) (*.f64 t (pow.f64 (cbrt.f64 z) 2)) (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2))))) (fma.f64 (neg.f64 (cbrt.f64 z)) (*.f64 t (pow.f64 (cbrt.f64 z) 2)) (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2))))) (fma.f64 (neg.f64 (cbrt.f64 z)) (*.f64 t (pow.f64 (cbrt.f64 z) 2)) (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2))))) (fma.f64 (neg.f64 (cbrt.f64 z)) (*.f64 t (pow.f64 (cbrt.f64 z) 2)) (*.f64 (cbrt.f64 z) (*.f64 t (pow.f64 (cbrt.f64 z) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y 1 (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 z)) (*.f64 t (sqrt.f64 z)) (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 y (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 z)) (*.f64 t (sqrt.f64 z)) (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 z)) (*.f64 t (sqrt.f64 z)) (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 z)) (*.f64 t (sqrt.f64 z)) (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 y) (sqrt.f64 y) (neg.f64 (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z))))) (fma.f64 (neg.f64 (sqrt.f64 z)) (*.f64 t (sqrt.f64 z)) (*.f64 (sqrt.f64 z) (*.f64 t (sqrt.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 y (*.f64 z t)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 y (*.f64 z t))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y (*.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 y (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (cbrt.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 y (*.f64 z t))) (sqrt.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3)) (/.f64 1 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2)) (/.f64 1 (fma.f64 z t y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (-.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y))) (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 z t y) (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3)) (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2)) (fma.f64 z t y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) (neg.f64 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) (neg.f64 (fma.f64 z t y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 y 3) (pow.f64 (*.f64 z (neg.f64 t)) 3)) (fma.f64 y y (-.f64 (pow.f64 (*.f64 z (neg.f64 t)) 2) (*.f64 y (*.f64 z (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z (neg.f64 t)) 2)) (-.f64 y (*.f64 z (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 y (*.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 y (*.f64 z t)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 y (*.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 y (*.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y))) (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 z t y) (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 y (*.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 y)) (pow.f64 (exp.f64 t) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 y) (+.f64 1 (expm1.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 y)) (+.f64 1 (expm1.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 y)) (pow.f64 (exp.f64 t) (neg.f64 z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 t) (neg.f64 z)) (+.f64 1 (expm1.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 y (*.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 y (*.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 y (*.f64 z t)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (-.f64 y (*.f64 z t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (-.f64 y (*.f64 z t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 y (*.f64 z t))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 1 (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 1 (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 t) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (neg.f64 z) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y (*.f64 z t)) 1 (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y (*.f64 z t)) 1 (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y (*.f64 z t)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 y (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 y (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 y (*.f64 z t)) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 y (*.f64 z t)) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 y (*.f64 z t)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (neg.f64 t)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (neg.f64 (cbrt.f64 (*.f64 z t))) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (cbrt.f64 y) (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (cbrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (cbrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2) (cbrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z t)) (neg.f64 (sqrt.f64 (*.f64 z t))) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (sqrt.f64 y) (*.f64 z (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (sqrt.f64 y) (*.f64 (*.f64 z (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y (*.f64 z t))) (sqrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y (*.f64 z t))) (sqrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y (*.f64 z t))) (sqrt.f64 (-.f64 y (*.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3)) (/.f64 1 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y)))) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3)) (/.f64 1 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y)))) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3)) (/.f64 1 (fma.f64 y y (*.f64 (*.f64 z t) (fma.f64 z t y)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2)) (/.f64 1 (fma.f64 z t y)) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2)) (/.f64 1 (fma.f64 z t y)) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2)) (/.f64 1 (fma.f64 z t y)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) t y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z (neg.f64 t))) 2) (cbrt.f64 (*.f64 z (neg.f64 t))) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (neg.f64 t))) (sqrt.f64 (*.f64 z (neg.f64 t))) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) z y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 z t))) (sqrt.f64 (*.f64 z t)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z t) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (-.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (fma.f64 (neg.f64 z) t (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (-.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (fma.f64 (*.f64 z (neg.f64 t)) 1 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (-.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 z t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (*.f64 z t)) 2) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 z t)) 2)) (cbrt.f64 (*.f64 z t)) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) 1) t y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t) y)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (sqrt.f64 t)) (sqrt.f64 t) y)))))"]],"rules":[["egg-rr",140],["egg-rr",46]],"stop":[["node limit",1]],"time":55.239990234375,"type":"rewrite"},{"count":[[270,207]],"egraph":[[4,7397,1442,0.030835291999999997],[3,4405,1452,0.018392291999999998],[2,794,1489,0.006905042],[1,191,1574,0.001522792],[0,57,1634,0.000344542]],"inputs":[["(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (pow.f64 y 3)) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y (*.f64 t t)) (*.f64 z z)) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t)) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)))","(*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y)))","(*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z))))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y)) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z)))))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)))","(*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y)))","(*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z))))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y)) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z)))))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)))","(*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y)))","(*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z))))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y)) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z)))))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (pow.f64 y 3)) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y (*.f64 t t)) (*.f64 z z)) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t)) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (pow.f64 y 3)) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y (*.f64 t t)) (*.f64 z z)) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t)) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)))","(*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y)))","(*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z))))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 t y) (/.f64 (*.f64 x z) y)) (/.f64 (*.f64 (*.f64 (*.f64 x (*.f64 z z)) t) t) (pow.f64 y 3))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 t (/.f64 y z)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 t (/.f64 y z))) (/.f64 x y)) (*.f64 (*.f64 x (*.f64 z z)) (+.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (*.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 y z)) (+.f64 1 (/.f64 (*.f64 t z) (/.f64 (*.f64 y y) (*.f64 t z)))))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (pow.f64 y 3)) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y (*.f64 t t)) (*.f64 z z)) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t)) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (*.f64 x y) (*.f64 (*.f64 t t) (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (pow.f64 y 3)) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 (/.f64 x z) z)))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y (*.f64 t t)) (*.f64 z z)) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (*.f64 (/.f64 y (*.f64 t t)) (+.f64 (/.f64 x (*.f64 z z)) (*.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y t)))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 (/.f64 y z) z) (*.f64 t t)) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))))))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","y","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(*.f64 t (neg.f64 z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) y)","(-.f64 y (*.f64 t z))"]],"stop":[["node limit",1]],"time":60.35107421875,"type":"simplify"},{"compiler":[[4035,1304]],"time":29.9609375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))","fresh",3.1846779005228436],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","next",3.1243865430699813],["(/.f64 x y)","fresh",28.91767102889914],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","fresh",3.1322754102912853],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","fresh",3.5163971384639354],["(/.f64 x (-.f64 y (*.f64 z t)))","done",2.6779638379326975]],"compiler":[[26,16],[21,11],[7,5],[19,13],[13,9],[11,7],[26,16],[21,11],[7,5],[19,13],[13,9]],"count":[[208,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[207,5],"picked":[1,1]}],"min-error":[2.5827239855858934],"time":63.51611328125,"type":"prune"},{"compiler":[[56,14]],"locations":[["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))",0.2421875,true],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)",0.5238075683790943,true],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))",0.9398853427382287,true],["(cbrt.f64 (-.f64 y (*.f64 z t)))",6.756380356647546,true]],"time":8.890869140625,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","t","-inf",0.68212890625],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","t","inf",2.07421875],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","t","0",1.126220703125],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","z","-inf",0.67822265625],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","z","inf",2.02490234375],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","z","0",1.2099609375],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","y","-inf",0.865966796875],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","y","inf",1.0361328125],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","y","0",2.18896484375],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","x","-inf",0.328857421875],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","x","inf",0.4150390625],["(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))","x","0",2.919921875],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","t","-inf",0.322021484375],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","t","inf",0.342041015625],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","t","0",1.06298828125],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","z","-inf",0.2958984375],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","z","inf",0.34814453125],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","z","0",1.20703125],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","y","-inf",1.13916015625],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","y","inf",0.5478515625],["(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","y","0",2.177001953125],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","x","-inf",0.29296875],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","x","inf",0.266845703125],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","x","0",1.274169921875],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","t","-inf",0.31396484375],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","t","inf",0.307861328125],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","t","0",0.293212890625],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","z","-inf",0.2861328125],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","z","inf",0.330078125],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","z","0",0.299072265625],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","y","-inf",0.371826171875],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","y","inf",0.27197265625],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","y","0",0.376220703125],["(cbrt.f64 (-.f64 y (*.f64 z t)))","t","-inf",0.24609375],["(cbrt.f64 (-.f64 y (*.f64 z t)))","t","inf",0.280029296875],["(cbrt.f64 (-.f64 y (*.f64 z t)))","t","0",1.471923828125],["(cbrt.f64 (-.f64 y (*.f64 z t)))","z","-inf",0.27197265625],["(cbrt.f64 (-.f64 y (*.f64 z t)))","z","inf",0.248779296875],["(cbrt.f64 (-.f64 y (*.f64 z t)))","z","0",0.89501953125],["(cbrt.f64 (-.f64 y (*.f64 z t)))","y","-inf",0.425048828125],["(cbrt.f64 (-.f64 y (*.f64 z t)))","y","inf",0.350830078125],["(cbrt.f64 (-.f64 y (*.f64 z t)))","y","0",1.376953125]],"time":33.97412109375,"type":"series"},{"count":[[4,111]],"egraph":[[2,3550,59,0.028503292],[1,264,59,0.0049775],[0,12,59,0.000322416]],"inputs":[["(cbrt.f64 (-.f64 y (*.f64 z t)))","(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","(pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2)","(/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6) (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) (cbrt.f64 (fma.f64 (*.f64 z t) (fma.f64 z t y) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) (cbrt.f64 (fma.f64 z t y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (neg.f64 t) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (neg.f64 t) y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x)) (neg.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) 1) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6)) (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (neg.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) (neg.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (*.f64 -2/3 (log.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (*.f64 -2/3 (log.f64 (fma.f64 z (neg.f64 t) y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -4)) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2) -2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6) -2) (pow.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -2/3 (log.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -2/3 (log.f64 (fma.f64 z (neg.f64 t) y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 2) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (sqrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2)) (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6)) (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6)) (/.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (fma.f64 z (neg.f64 t) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",19],["egg-rr",30],["egg-rr",24]],"stop":[["node limit",1]],"time":58.27392578125,"type":"rewrite"},{"count":[[207,187]],"egraph":[[2,5711,4651,0.028205167],[1,1296,4765,0.010834125],[0,382,5170,0.00219375]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))","(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (pow.f64 z 3)))))))","(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3))))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 4)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))))) (cbrt.f64 -1)))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 t 3)))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))))))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 z 3)))))))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 t (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 z 3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 z (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))))))))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18))) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/18)) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18))) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))))","(fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7)) 1/18) y) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7)) 1/18) y))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))))) (*.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)))) 1/27))))) (fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/18)) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18))) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27))) (fma.f64 (cbrt.f64 (*.f64 t z)) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18) (pow.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7)) 1/18) y) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7)) 1/18) y)))))))","(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)))))","(fma.f64 -1/3 (*.f64 (*.f64 (*.f64 t z) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 y))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(fma.f64 -1/9 (*.f64 (*.f64 (*.f64 t t) (*.f64 z z)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18))) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 t z) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 y)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (pow.f64 z 3)))))))","(fma.f64 -1/9 (*.f64 (*.f64 (*.f64 t t) (*.f64 z z)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18))) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (+.f64 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) -1/27)) (pow.f64 z 3)))))))","(fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (fma.f64 -1/3 (fma.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) 5/27) (pow.f64 z 3)))) (cbrt.f64 y)))","(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)))))","(fma.f64 -1/3 (*.f64 (*.f64 (*.f64 t z) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 y))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(fma.f64 -1/9 (*.f64 (*.f64 (*.f64 t t) (*.f64 z z)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18))) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 t z) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 y)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) (fma.f64 -1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) (*.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3))))) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 t t) (*.f64 z z)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18))) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) 5/27)) (fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 t z) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 y))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x)))))","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x))))) (/.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) x) (pow.f64 y 4)))","(+.f64 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))) (*.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) x)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x)))))","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x))))) (/.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) x) (pow.f64 y 4)))","(+.f64 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))) (*.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) x)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x)))))","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x))))) (/.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) x) (pow.f64 y 4)))","(+.f64 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))) (*.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) x)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x)))))","(+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 z z) x))))) (/.f64 (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) x) (pow.f64 y 4)))","(+.f64 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 t y) (/.f64 (*.f64 z x) y))) (*.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x (*.f64 y y)) (+.f64 (*.f64 t z) (/.f64 (*.f64 t (*.f64 t (*.f64 z z))) y))) (*.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) x)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 (/.f64 y (/.f64 (pow.f64 t 3) y)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z))) (*.f64 x (+.f64 (/.f64 y (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (*.f64 y y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))))","(/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))","(fma.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11))))))","(fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11))))) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3))))))","(fma.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)))) 5/9) (*.f64 y y) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)))))))","(+.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11))))) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y (*.f64 y (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16))) 5/9)))))","(+.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 y (+.f64 (*.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16))) 5/9)) y))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 4)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))))) (cbrt.f64 -1)))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))))","(fma.f64 (pow.f64 y 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (/.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4))) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))))) (*.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z)))) 1/27)) (pow.f64 (cbrt.f64 -1) 4))) (*.f64 (/.f64 1 (*.f64 (*.f64 (*.f64 t t) (*.f64 z z)) (pow.f64 (cbrt.f64 -1) 6))) 1/9)) (cbrt.f64 -1))) (*.f64 -4/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))))))) (fma.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)))) 5/9) (*.f64 y y) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) y) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11))))))))","(fma.f64 (pow.f64 y 3) (fma.f64 -2 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 t) z)) (/.f64 (cbrt.f64 -1) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4)))) (/.f64 (*.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27) (*.f64 -1 (cbrt.f64 -1))) (/.f64 1/9 (*.f64 t (*.f64 t (*.f64 z z))))))) (*.f64 -4/27 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7))) (pow.f64 (cbrt.f64 -1) 7)))) (+.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18)) (*.f64 y (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11))))) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y (*.f64 y (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16))) 5/9))))))","(+.f64 (*.f64 y (+.f64 (*.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16))) 5/9)) y))) (fma.f64 (pow.f64 y 3) (fma.f64 -2 (*.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 t) z)) (cbrt.f64 -1)) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4))) (neg.f64 (cbrt.f64 -1))) (*.f64 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2)) -5/27)) (/.f64 1/9 (*.f64 t (*.f64 t (*.f64 z z)))))) (*.f64 -4/27 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 7)) (pow.f64 z 7))) (pow.f64 (cbrt.f64 -1) 7)))) (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (*.f64 t t)) (*.f64 z z))) (pow.f64 (cbrt.f64 -1) 2))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(cbrt.f64 (/.f64 1 (*.f64 y y)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))))","(fma.f64 2/3 (*.f64 z (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (cbrt.f64 (/.f64 1 (*.f64 y y))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 (*.f64 (*.f64 (*.f64 t t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) 5/9) (*.f64 z z) (*.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18))))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 (*.f64 z z) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 t t) 5/9)) (*.f64 (*.f64 t z) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18))))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 z (+.f64 (*.f64 2/3 (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) 5/9)) z))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 t 3)))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 (+.f64 (*.f64 4/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7))))) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 y))) (+.f64 (*.f64 -1/27 (/.f64 (pow.f64 t 3) (*.f64 y y))) (fma.f64 -1/3 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) -1/27)) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) (*.f64 -2/27 (/.f64 (pow.f64 t 3) (*.f64 y y))))))) (pow.f64 z 3) (fma.f64 (*.f64 (*.f64 (*.f64 t t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) 5/9) (*.f64 z z) (*.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 (pow.f64 z 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/27 (/.f64 (pow.f64 t 3) (*.f64 y y)) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) 5/27) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 y y)) -2/27)))) (*.f64 4/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7)))))) (fma.f64 (*.f64 z z) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 t t) 5/9)) (*.f64 (*.f64 t z) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 (pow.f64 z 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 t 3)) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) 5/27)) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 y y)) -1/9))) (*.f64 4/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7)))))) (*.f64 z (+.f64 (*.f64 2/3 (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) 5/9)) z)))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(cbrt.f64 (/.f64 1 (*.f64 y y)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))))","(fma.f64 2/3 (*.f64 z (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (cbrt.f64 (/.f64 1 (*.f64 y y))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(fma.f64 (*.f64 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) 5/9) (*.f64 t t) (+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18))))))","(fma.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) 5/9)) (fma.f64 2/3 (*.f64 z (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (cbrt.f64 (/.f64 1 (*.f64 y y)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))))))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 z 3)))))))))","(fma.f64 (*.f64 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) 5/9) (*.f64 t t) (+.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (fma.f64 2/3 (*.f64 (*.f64 t z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18))) (*.f64 (pow.f64 t 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (*.f64 (fma.f64 -1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) (*.f64 2/9 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)))) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) (*.f64 (/.f64 (*.f64 1 (pow.f64 z 3)) (*.f64 y y)) -1/9))) (*.f64 4/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7))))))))))","(+.f64 (fma.f64 (pow.f64 t 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) 5/27) (*.f64 -1/9 (/.f64 (pow.f64 z 3) (*.f64 y y))))) (*.f64 4/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7)))))) (*.f64 (*.f64 t z) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18))))) (fma.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) 5/9)) (cbrt.f64 (/.f64 1 (*.f64 y y)))))","(+.f64 (fma.f64 2/3 (*.f64 z (*.f64 t (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/18)))) (cbrt.f64 (/.f64 1 (*.f64 y y)))) (*.f64 (*.f64 t t) (+.f64 (*.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 z 3)) (cbrt.f64 (/.f64 1 (pow.f64 y 4)))) 5/27) (*.f64 -1/9 (/.f64 (pow.f64 z 3) (*.f64 y y))))) (*.f64 4/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 7)))))) t) (*.f64 (*.f64 z z) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) 5/9)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 y (*.f64 t z))) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 y (*.f64 t z)))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 (cbrt.f64 -1) x))","(*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 (cbrt.f64 -1) x)))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 y x) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)))) (*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y x))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (*.f64 t t) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x (+.f64 (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 (cbrt.f64 -1) x))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 y x) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)))) (fma.f64 -1/3 (/.f64 (cbrt.f64 (*.f64 t (*.f64 t (*.f64 z z)))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3))))))) (*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 y x) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 (*.f64 t (*.f64 t (*.f64 z z)))) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 x (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)))))) (*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 y x))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (*.f64 t t) (*.f64 z z))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x (+.f64 (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 (*.f64 t t) (*.f64 z z))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x (+.f64 (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4)) (fma.f64 4/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 13)) (pow.f64 z 13)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 13)) (pow.f64 z 13)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 13)) (pow.f64 z 13)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 13)) (pow.f64 z 13)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))))) (*.f64 -1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)))))))))))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 (cbrt.f64 -1) x)))))","(+.f64 (*.f64 (*.f64 -1/3 (cbrt.f64 (*.f64 t (*.f64 t (*.f64 z z))))) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 x (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3))))) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 x (+.f64 (*.f64 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))))) 2/3) (+.f64 (*.f64 -1/27 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4)))))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 y x) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)))) (*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z))))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 y x) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16)) 1/18)))) (*.f64 (cbrt.f64 (*.f64 t (*.f64 t (*.f64 z z)))) (*.f64 (/.f64 x (cbrt.f64 -1)) (+.f64 (/.f64 (*.f64 (*.f64 y y) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3)))) (cbrt.f64 -1)) (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/18) (cbrt.f64 (/.f64 1 (cbrt.f64 -1))))) (/.f64 (/.f64 1 (pow.f64 t 3)) (pow.f64 z 3))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/18)) 2/3)) (+.f64 (*.f64 -1/27 (/.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 t 16)) (pow.f64 z 16))) (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (/.f64 1 (pow.f64 t 4)) (pow.f64 z 4))))) (cbrt.f64 -1))))))) (*.f64 (cbrt.f64 -1) (*.f64 x (cbrt.f64 (/.f64 (/.f64 1 t) z)))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)))))","(fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3)))","(*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (*.f64 x (fma.f64 1/3 (*.f64 (*.f64 t t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)))))) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 x (*.f64 z (*.f64 z (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 t t) 1/3)) (/.f64 t (/.f64 (pow.f64 y 3) t))))))) (fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 x (*.f64 z (*.f64 z (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 t t) 1/3) (/.f64 (neg.f64 t) (/.f64 (pow.f64 y 3) t))))))) (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 t (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (pow.f64 z 3) x) (fma.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)) t) (fma.f64 1/3 (*.f64 (*.f64 t t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3))))) (fma.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 1/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16))))))))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (*.f64 x (fma.f64 1/3 (*.f64 (*.f64 t t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)))))) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)))))))","(+.f64 (fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3))) (*.f64 (*.f64 -1/3 (cbrt.f64 (*.f64 y y))) (+.f64 (*.f64 (pow.f64 z 3) (*.f64 x (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)) (+.f64 (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 y 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (pow.f64 t 3)))) (fma.f64 1/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16)))) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 y 4)))))) (*.f64 x (*.f64 z (*.f64 z (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 t t) 1/3)) (/.f64 t (/.f64 (pow.f64 y 3) t)))))))))","(+.f64 (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z)))) (*.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 x (+.f64 (*.f64 (pow.f64 z 3) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)) (+.f64 (/.f64 (pow.f64 (neg.f64 t) 3) (pow.f64 y 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (pow.f64 t 3)))) (fma.f64 1/27 (*.f64 (pow.f64 t 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16)))) (/.f64 (pow.f64 (neg.f64 t) 3) (pow.f64 y 4))))) (*.f64 z (*.f64 z (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 t t) 1/3) (/.f64 (neg.f64 t) (/.f64 (pow.f64 y 3) t))))))))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)))))","(fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3)))","(*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (*.f64 t t) (fma.f64 1/3 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3))))) x)) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 x (*.f64 (*.f64 t t) (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 z z) 1/3)) (/.f64 z (/.f64 (pow.f64 y 3) z)))))) (fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 x (*.f64 (*.f64 t t) (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 z z) 1/3) (/.f64 (neg.f64 z) (/.f64 (pow.f64 y 3) z)))))) (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 z 3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 z (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))))))))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (*.f64 (*.f64 t t) (fma.f64 1/3 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3))))) x)) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 t 3)) (*.f64 x (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (fma.f64 1/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16)))) (*.f64 -2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)) z) (fma.f64 1/3 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)))))))))) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (*.f64 t (*.f64 z x)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)))))))","(+.f64 (fma.f64 x (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18)) (*.f64 (*.f64 z (*.f64 t x)) 1/3))) (*.f64 (*.f64 -1/3 (cbrt.f64 (*.f64 y y))) (+.f64 (*.f64 x (*.f64 (*.f64 t t) (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 z z) 1/3)) (/.f64 z (/.f64 (pow.f64 y 3) z))))) (*.f64 (-.f64 (fma.f64 1/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16)))) (*.f64 (*.f64 -2/3 (+.f64 (/.f64 (neg.f64 (pow.f64 z 3)) (pow.f64 y 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (pow.f64 z 3)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (*.f64 x (pow.f64 t 3))))))","(+.f64 (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/18))) (*.f64 t z)))) (*.f64 -1/3 (*.f64 (*.f64 x (cbrt.f64 (*.f64 y y))) (+.f64 (*.f64 (*.f64 t t) (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18)) (*.f64 (*.f64 z z) 1/3) (/.f64 (neg.f64 z) (/.f64 (pow.f64 y 3) z)))) (*.f64 (pow.f64 t 3) (-.f64 (fma.f64 1/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 y 16)))) (*.f64 (*.f64 -2/3 (+.f64 (/.f64 (neg.f64 (pow.f64 z 3)) (pow.f64 y 3)) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/18))) (pow.f64 z 3)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/18)))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))))))"]],"stop":[["node limit",1]],"time":73.705078125,"type":"simplify"},{"compiler":[[9325,5272]],"time":90.94580078125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))","fresh",3.1846779005228436],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","done",3.1243865430699813],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","next",3.1322754102912853],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","fresh",3.5163971384639354],["(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","fresh",43.014196664798504],["(/.f64 x (-.f64 y (*.f64 z t)))","done",2.6779638379326975]],"compiler":[[26,16],[21,11],[19,13],[13,9],[21,12],[11,7],[26,16],[19,13],[13,9],[21,12]],"count":[[235,6]],"kept":[{"done":[1,1],"fresh":[4,3],"new":[229,1],"picked":[1,1]}],"min-error":[0.0078125],"time":54.236083984375,"type":"prune"},{"compiler":[[53,21]],"locations":[["(cbrt.f64 x)",0.078125,true],["(pow.f64 (cbrt.f64 x) 2)",0.5286712890737681,true],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))",1.4457673544833964,true],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))",1.6080333401691718,true]],"time":10.89697265625,"type":"localize"},{"count":[[4,84]],"series":[["(cbrt.f64 x)","x","-inf",0.299072265625],["(cbrt.f64 x)","x","inf",0.22216796875],["(cbrt.f64 x)","x","0",0.22119140625],["(pow.f64 (cbrt.f64 x) 2)","x","-inf",0.4658203125],["(pow.f64 (cbrt.f64 x) 2)","x","inf",0.297119140625],["(pow.f64 (cbrt.f64 x) 2)","x","0",0.376953125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","t","-inf",0.251953125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","t","inf",0.224853515625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","t","0",0.238037109375],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","z","-inf",0.223876953125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","z","inf",0.255126953125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","z","0",0.210205078125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","y","-inf",0.281982421875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","y","inf",0.2119140625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","y","0",0.265869140625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","x","-inf",1.421142578125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","x","inf",0.279052734375],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","x","0",1.06494140625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","t","-inf",0.3759765625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","t","inf",0.4189453125],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","t","0",0.322021484375],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","z","-inf",0.35009765625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","z","inf",0.407958984375],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","z","0",0.368896484375],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","y","-inf",0.340087890625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","y","inf",0.418212890625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","y","0",0.587158203125],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","x","-inf",0.551025390625],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","x","inf",0.4169921875],["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","x","0",0.594970703125]],"time":12.43701171875,"type":"series"},{"count":[[4,153]],"egraph":[[2,3709,31,0.029205417],[1,306,31,0.005181417],[0,14,31,0.000368083]],"inputs":[["(/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","(pow.f64 (cbrt.f64 x) 2)","(cbrt.f64 x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))) (cbrt.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 1 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 (cbrt.f64 x)) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 (cbrt.f64 x)) (/.f64 1 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) (pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) 2) (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) (sqrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 1/6) (*.f64 (pow.f64 x 1/6) (/.f64 1 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (/.f64 1 (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y (*.f64 z t))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 y (*.f64 z t)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 1/6) 1) (/.f64 (pow.f64 x 1/6) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 1/6) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (/.f64 (pow.f64 x 1/6) (cbrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (sqrt.f64 (-.f64 y (*.f64 z t)))) (/.f64 (cbrt.f64 (cbrt.f64 x)) (sqrt.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) (fma.f64 (*.f64 z t) (fma.f64 z t y) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) (fma.f64 z t y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 x) (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (pow.f64 (-.f64 y (*.f64 z t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t))))) (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 y (*.f64 z t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 y (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (*.f64 (-.f64 y (*.f64 z t)) (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (*.f64 (pow.f64 (cbrt.f64 x) -2) (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 y (*.f64 z t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 2) (/.f64 1 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) (/.f64 1 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (-.f64 y (*.f64 z t)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 -1 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 y (*.f64 z t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) 2)) (neg.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (-.f64 y (*.f64 z t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 x)) 1) (*.f64 (neg.f64 (-.f64 y (*.f64 z t))) (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (neg.f64 (pow.f64 (cbrt.f64 x) 2))) (*.f64 (-.f64 y (*.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (neg.f64 (pow.f64 (cbrt.f64 x) 2))) (*.f64 (neg.f64 (-.f64 y (*.f64 z t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x)) (neg.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 x) 2) (neg.f64 (cbrt.f64 x))) (neg.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (neg.f64 (cbrt.f64 x))) (*.f64 -1 (neg.f64 (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (-.f64 y (*.f64 z t)))) (sqrt.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (-.f64 y (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) (neg.f64 (pow.f64 (cbrt.f64 x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (-.f64 y (*.f64 z t)) (cbrt.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (/.f64 x (-.f64 y (*.f64 z t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 y (*.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 y (*.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y (*.f64 z t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 3) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 x x) (pow.f64 (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 y (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 y (*.f64 z t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (*.f64 x (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (pow.f64 x 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 1/6) (*.f64 (pow.f64 x 1/6) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (cbrt.f64 x) 2))) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (/.f64 1 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 x (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cbrt.f64 x))) (cbrt.f64 (exp.f64 (cbrt.f64 x))))) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 1/6) (pow.f64 x 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x)))) (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 x) 1/3) (pow.f64 (sqrt.f64 x) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (pow.f64 (cbrt.f64 x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2))) (sqrt.f64 -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (cbrt.f64 x) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 x) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 x)) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",30],["egg-rr",54],["egg-rr",39]],"stop":[["node limit",1]],"time":58.64111328125,"type":"rewrite"},{"count":[[237,185]],"egraph":[[3,6310,2443,0.024160958000000003],[2,1474,2443,0.011392125000000001],[1,298,2660,0.002579875],[0,86,2906,0.000538958]],"inputs":[["(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))","(/.f64 (neg.f64 (cbrt.f64 x)) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z))))","(*.f64 (cbrt.f64 x) (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))) (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))))","(+.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z)))) (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(*.f64 (cbrt.f64 x) (/.f64 1 y))","(/.f64 (cbrt.f64 x) y)","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 t z) (*.f64 y y)) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (*.f64 (/.f64 t y) (/.f64 z y))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z))))))","(*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3)))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z)))))))","(fma.f64 (cbrt.f64 x) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3))))))","(*.f64 (cbrt.f64 x) (+.f64 (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y)) (fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3) (*.f64 (/.f64 t y) (/.f64 z y)))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(*.f64 (cbrt.f64 x) (/.f64 1 y))","(/.f64 (cbrt.f64 x) y)","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 t z) (*.f64 y y)) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (*.f64 (/.f64 t y) (/.f64 z y))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z))))))","(*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3)))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z)))))))","(fma.f64 (cbrt.f64 x) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3))))))","(*.f64 (cbrt.f64 x) (+.f64 (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y)) (fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3) (*.f64 (/.f64 t y) (/.f64 z y)))))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(*.f64 (cbrt.f64 x) (/.f64 1 y))","(/.f64 (cbrt.f64 x) y)","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 t z) (*.f64 y y)) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (*.f64 (/.f64 t y) (/.f64 z y))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z))))))","(*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3)))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z)))))))","(fma.f64 (cbrt.f64 x) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3))))))","(*.f64 (cbrt.f64 x) (+.f64 (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y)) (fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3) (*.f64 (/.f64 t y) (/.f64 z y)))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))","(/.f64 (neg.f64 (cbrt.f64 x)) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z))))","(*.f64 (cbrt.f64 x) (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))) (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))))","(+.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z)))) (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))","(/.f64 (neg.f64 (cbrt.f64 x)) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z))))","(*.f64 (cbrt.f64 x) (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))) (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))))","(+.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z)))) (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y))","(*.f64 (cbrt.f64 x) (/.f64 1 y))","(/.f64 (cbrt.f64 x) y)","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 (*.f64 t z) (*.f64 y y)) (/.f64 1 y)))","(*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (*.f64 (/.f64 t y) (/.f64 z y))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (/.f64 1 y)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))))","(fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z))))))","(*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3)))))","(*.f64 (cbrt.f64 x) (fma.f64 (/.f64 t y) (/.f64 z y) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 y)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))))))","(fma.f64 (cbrt.f64 x) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (fma.f64 (cbrt.f64 x) (/.f64 (*.f64 t z) (*.f64 y y)) (*.f64 (cbrt.f64 x) (+.f64 (/.f64 1 y) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 z z)))))))","(fma.f64 (cbrt.f64 x) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (/.f64 t y) (/.f64 z y)) (+.f64 (/.f64 1 y) (/.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (pow.f64 y 3))))))","(*.f64 (cbrt.f64 x) (+.f64 (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z z) (/.f64 1 y)) (fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (pow.f64 z 3) (*.f64 (/.f64 t y) (/.f64 z y)))))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))","(/.f64 (neg.f64 (cbrt.f64 x)) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z))))","(*.f64 (cbrt.f64 x) (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))) (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))))","(+.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z)))) (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))","(neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))","(/.f64 (neg.f64 (cbrt.f64 x)) (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z))))","(*.f64 (cbrt.f64 x) (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))) (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))) (/.f64 1 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (*.f64 -1 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (/.f64 1 (*.f64 t z)))))))","(fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (fma.f64 -1 (*.f64 (cbrt.f64 x) (/.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (pow.f64 z 3))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (cbrt.f64 x) y) (*.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (cbrt.f64 x) (/.f64 1 (*.f64 t z)))))))","(+.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 y (*.f64 (*.f64 t z) (*.f64 t z))) (/.f64 1 (*.f64 t z)))) (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3))))))","(-.f64 (*.f64 (neg.f64 (cbrt.f64 x)) (+.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z)))))) (/.f64 (cbrt.f64 x) (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(/.f64 (neg.f64 (/.f64 x t)) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))) x (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (/.f64 x t)) z) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 t 4) (pow.f64 z 4)) x)) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) x (/.f64 x (*.f64 t z)))) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))))","(fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))))","(fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))))","(fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(/.f64 (neg.f64 (/.f64 x t)) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))) x (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (/.f64 x t)) z) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 t 4) (pow.f64 z 4)) x)) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) x (/.f64 x (*.f64 t z)))) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(/.f64 (neg.f64 (/.f64 x t)) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))) x (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (/.f64 x t)) z) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 t 4) (pow.f64 z 4)) x)) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) x (/.f64 x (*.f64 t z)))) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))))","(fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y)))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 x z))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z)))))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)))) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 x (*.f64 z z)) (*.f64 (+.f64 (/.f64 (*.f64 t z) y) 1) (/.f64 x y))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(/.f64 (neg.f64 (/.f64 x t)) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))) x (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (/.f64 x t)) z) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 t 4) (pow.f64 z 4)) x)) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) x (/.f64 x (*.f64 t z)))) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (neg.f64 x) (*.f64 t z))","(/.f64 (neg.f64 (/.f64 x t)) z)","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (neg.f64 (/.f64 (/.f64 x t) z)))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))) x (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (/.f64 (/.f64 x t) z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (/.f64 x t)) z) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (/.f64 (/.f64 (*.f64 x y) (*.f64 t t)) (*.f64 z z)) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 t 4) (pow.f64 z 4)) x)) (neg.f64 (/.f64 (/.f64 x t) z)))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))) x (/.f64 x (*.f64 t z)))) (*.f64 x (fma.f64 (/.f64 y (pow.f64 t 3)) (/.f64 y (pow.f64 z 3)) (/.f64 (/.f64 y t) (*.f64 t (*.f64 z z))))))"]],"stop":[["node limit",1]],"time":60.27099609375,"type":"simplify"},{"compiler":[[4271,1874]],"time":38.010009765625,"type":"eval"},{"alts":[["(/.f64 (neg.f64 (/.f64 x t)) z)","fresh",34.940328245071875],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","done",3.1243865430699813],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","done",3.1322754102912853],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","next",3.5163971384639354],["(/.f64 x (-.f64 y (*.f64 z t)))","done",2.6779638379326975]],"compiler":[[10,7],[21,11],[19,13],[13,9],[11,7],[10,7],[13,9]],"count":[[221,5]],"kept":[{"done":[2,2],"fresh":[3,1],"new":[215,1],"picked":[1,1]}],"min-error":[0.0078125],"time":58.157958984375,"type":"prune"},{"compiler":[[33,10]],"locations":[["(-.f64 y (*.f64 z t))",0.00390625,false],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)",0.9071245602996801,true],["(/.f64 (-.f64 y (*.f64 z t)) x)",2.683774069789863,true]],"time":6.036865234375,"type":"localize"},{"count":[[2,96]],"series":[["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","x","-inf",0.41796875],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","x","inf",0.2958984375],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","x","0",0.302978515625],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","t","-inf",0.25390625],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","t","inf",0.27294921875],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","t","0",0.217041015625],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","z","-inf",0.27490234375],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","z","inf",0.264892578125],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","z","0",0.248046875],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","y","-inf",0.258056640625],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","y","inf",0.23779296875],["(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","y","0",0.300048828125],["(/.f64 (-.f64 y (*.f64 z t)) x)","x","-inf",0.2958984375],["(/.f64 (-.f64 y (*.f64 z t)) x)","x","inf",0.16796875],["(/.f64 (-.f64 y (*.f64 z t)) x)","x","0",0.2939453125],["(/.f64 (-.f64 y (*.f64 z t)) x)","t","-inf",0.266845703125],["(/.f64 (-.f64 y (*.f64 z t)) x)","t","inf",0.260986328125],["(/.f64 (-.f64 y (*.f64 z t)) x)","t","0",0.2578125],["(/.f64 (-.f64 y (*.f64 z t)) x)","z","-inf",0.27001953125],["(/.f64 (-.f64 y (*.f64 z t)) x)","z","inf",0.27197265625],["(/.f64 (-.f64 y (*.f64 z t)) x)","z","0",3.387939453125],["(/.f64 (-.f64 y (*.f64 z t)) x)","y","-inf",0.364013671875],["(/.f64 (-.f64 y (*.f64 z t)) x)","y","inf",0.300048828125],["(/.f64 (-.f64 y (*.f64 z t)) x)","y","0",0.379150390625]],"time":10.192138671875,"type":"series"},{"count":[[2,270]],"egraph":[[2,3168,20,0.025822999],[1,222,20,0.004306791],[0,10,23,0.000263791]],"inputs":[["(/.f64 (-.f64 y (*.f64 z t)) x)","(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 z (/.f64 x t)))) (sqrt.f64 (/.f64 z (/.f64 x t))) (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) (fma.f64 (neg.f64 (/.f64 t (sqrt.f64 x))) (/.f64 z (sqrt.f64 x)) (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) (fma.f64 (neg.f64 (/.f64 z (sqrt.f64 x))) (/.f64 t (sqrt.f64 x)) (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y x) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 t (neg.f64 z) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) (*.f64 z t)))) (fma.f64 (neg.f64 (/.f64 1 x)) (*.f64 z t) (*.f64 (/.f64 1 x) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (/.f64 x t)) 1))) (fma.f64 (neg.f64 (/.f64 z (/.f64 x t))) 1 (*.f64 (/.f64 z (/.f64 x t)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 z (/.f64 x t)))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2) (*.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) (pow.f64 (cbrt.f64 (/.f64 z (/.f64 x t))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (*.f64 z t) (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 (*.f64 z t) (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t x) (/.f64 z 1)))) (fma.f64 (neg.f64 (/.f64 t x)) (/.f64 z 1) (*.f64 (/.f64 t x) (/.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z x) (/.f64 t 1)))) (fma.f64 (neg.f64 (/.f64 z x)) (/.f64 t 1) (*.f64 (/.f64 z x) (/.f64 t 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) x) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x)) (/.f64 (sqrt.f64 (*.f64 z t)) 1) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) x) (/.f64 (sqrt.f64 (*.f64 z t)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 t (cbrt.f64 x))) (/.f64 z (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 t (cbrt.f64 x)) (/.f64 z (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 z (cbrt.f64 x))) (/.f64 t (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 z (cbrt.f64 x)) (/.f64 t (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 (*.f64 z t)) (cbrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 z t)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 y (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 (*.f64 z t)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y x) (/.f64 z (/.f64 x t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (neg.f64 z) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 t (neg.f64 z) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 2)) (cbrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2)) (*.f64 (cbrt.f64 (fma.f64 t (neg.f64 z) y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)) (sqrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) (*.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 t (neg.f64 z) y)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (fma.f64 t (neg.f64 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (fma.f64 t (neg.f64 z) y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (fma.f64 t (neg.f64 z) y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2)) 1) (/.f64 (cbrt.f64 (fma.f64 t (neg.f64 z) y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) 1) (/.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (fma.f64 t (neg.f64 z) y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (fma.f64 t (neg.f64 z) y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 t (neg.f64 z) y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 x) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y x) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (/.f64 y x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y x)) (sqrt.f64 (/.f64 y x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) x) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) x) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 x)) (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (neg.f64 (/.f64 z (/.f64 x t))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) 2) (cbrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) (sqrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2))) (/.f64 x (cbrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2))) (/.f64 (cbrt.f64 x) (cbrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2))) (/.f64 (sqrt.f64 x) (cbrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 t (neg.f64 z) y))) (/.f64 x (sqrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (fma.f64 t (neg.f64 z) y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (fma.f64 t (neg.f64 z) y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t (neg.f64 z) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t (neg.f64 z) y)) (pow.f64 (/.f64 1 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 y 3) (pow.f64 (*.f64 z t) 3))) (fma.f64 (*.f64 z t) (fma.f64 z t y) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 y y) (pow.f64 (*.f64 z t) 2))) (fma.f64 z t y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (fma.f64 t (neg.f64 z) y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 2))) (cbrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (fma.f64 t (neg.f64 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 t (neg.f64 z) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (fma.f64 t (neg.f64 z) y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (fma.f64 t (neg.f64 z) y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) (sqrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (fma.f64 t (neg.f64 z) y))) (sqrt.f64 (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x 1) (fma.f64 t (neg.f64 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 t (neg.f64 z) y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 t (neg.f64 z) y) 2))) (cbrt.f64 (fma.f64 t (neg.f64 z) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) 2))) (cbrt.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 t (neg.f64 z) y) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 t (neg.f64 z) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (fma.f64 t (neg.f64 z) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (fma.f64 t (neg.f64 z) y))) 1))))))"]],"rules":[["egg-rr",46],["egg-rr",224]],"stop":[["node limit",1]],"time":77.991943359375,"type":"rewrite"},{"count":[[366,292]],"egraph":[[4,7511,1670,0.031617456999999995],[3,4486,1680,0.018965748999999997],[2,806,1717,0.0071107489999999995],[1,197,1802,0.001580999],[0,60,2057,0.000383291]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 t z) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(*.f64 -1 (/.f64 (*.f64 t z) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(*.f64 -1 (/.f64 (*.f64 t z) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(*.f64 -1 (/.f64 (*.f64 t z) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(*.f64 -1 (/.f64 (*.f64 t z) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 t z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 t z) x))","(neg.f64 (/.f64 (*.f64 t z) x))","(/.f64 (*.f64 t (neg.f64 z)) x)","(*.f64 (/.f64 t x) (neg.f64 z))","(*.f64 z (/.f64 (neg.f64 t) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(*.f64 -1 (/.f64 (*.f64 t z) x))","(neg.f64 (/.f64 (*.f64 t z) x))","(/.f64 (*.f64 t (neg.f64 z)) x)","(*.f64 (/.f64 t x) (neg.f64 z))","(*.f64 z (/.f64 (neg.f64 t) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(*.f64 -1 (/.f64 (*.f64 t z) x))","(neg.f64 (/.f64 (*.f64 t z) x))","(/.f64 (*.f64 t (neg.f64 z)) x)","(*.f64 (/.f64 t x) (neg.f64 z))","(*.f64 z (/.f64 (neg.f64 t) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 y x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(*.f64 -1 (/.f64 (*.f64 t z) x))","(neg.f64 (/.f64 (*.f64 t z) x))","(/.f64 (*.f64 t (neg.f64 z)) x)","(*.f64 (/.f64 t x) (neg.f64 z))","(*.f64 z (/.f64 (neg.f64 t) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(*.f64 -1 (/.f64 (*.f64 t z) x))","(neg.f64 (/.f64 (*.f64 t z) x))","(/.f64 (*.f64 t (neg.f64 z)) x)","(*.f64 (/.f64 t x) (neg.f64 z))","(*.f64 z (/.f64 (neg.f64 t) x))","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(+.f64 (/.f64 y x) (*.f64 -1 (/.f64 (*.f64 t z) x)))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (-.f64 y (*.f64 t z)) x)","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(/.f64 (-.f64 y (*.f64 t z)) x)","(+.f64 (neg.f64 (/.f64 (*.f64 t z) x)) (/.f64 y x))","(/.f64 (fma.f64 t (neg.f64 z) y) x)","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 x (*.f64 t t)) (/.f64 (/.f64 y z) z) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (/.f64 (/.f64 x t) z))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (pow.f64 z 4))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y)))","(+.f64 (/.f64 x y) (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))) (/.f64 x y)) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y)) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y)))","(+.f64 (/.f64 x y) (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))) (/.f64 x y)) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y)) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y)))","(+.f64 (/.f64 x y) (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))) (/.f64 x y)) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y)) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 x (*.f64 t t)) (/.f64 (/.f64 y z) z) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (/.f64 (/.f64 x t) z))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 x (*.f64 t t)) (/.f64 (/.f64 y z) z) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (/.f64 (/.f64 x t) z))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (pow.f64 z 4))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))))","(+.f64 (/.f64 x y) (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))","(*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))))","(fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y)))","(+.f64 (/.f64 x y) (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 y 4) (*.f64 x (pow.f64 z 3)))) (/.f64 x y)) (+.f64 (/.f64 t (/.f64 (*.f64 y y) (*.f64 z x))) (/.f64 (*.f64 t t) (/.f64 (pow.f64 y 3) (*.f64 x (*.f64 z z))))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 t z) y) (/.f64 x y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 z (*.f64 z x)))) (/.f64 (pow.f64 t 3) (/.f64 (/.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) (*.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (/.f64 (pow.f64 y 3) t)) (*.f64 z (*.f64 z x)) (*.f64 (+.f64 (/.f64 z (/.f64 y t)) 1) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 1 (/.f64 z (/.f64 y t))) (/.f64 x y)) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 y 4)) z))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (*.f64 z x) (+.f64 (/.f64 (/.f64 t y) y) (*.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)) z))) (/.f64 (pow.f64 (*.f64 t z) 3) (/.f64 (pow.f64 y 4) x))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 x (*.f64 t t)) (/.f64 (/.f64 y z) z) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (/.f64 (/.f64 x t) z))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(/.f64 (neg.f64 x) (*.f64 t z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (neg.f64 (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 t z))))","(neg.f64 (fma.f64 (/.f64 x (*.f64 t t)) (/.f64 (/.f64 y z) z) (/.f64 x (*.f64 t z))))","(*.f64 x (-.f64 (/.f64 -1 (*.f64 t z)) (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(neg.f64 (fma.f64 (/.f64 (/.f64 y t) t) (/.f64 x (*.f64 z z)) (fma.f64 (*.f64 (/.f64 y (pow.f64 t 3)) y) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 t z)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (/.f64 (/.f64 x t) z))","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (fma.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) x (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(fma.f64 -1 (*.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3))) (*.f64 -1 (+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4))) (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 t 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 (/.f64 x (*.f64 t t)) (/.f64 y (*.f64 z z))))","(-.f64 (neg.f64 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 x (*.f64 t z)))) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (/.f64 y (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) y)))))","(-.f64 (*.f64 (/.f64 y (*.f64 t t)) (-.f64 (/.f64 (neg.f64 x) (*.f64 z z)) (*.f64 (/.f64 y t) (/.f64 x (pow.f64 z 3))))) (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x t) z)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 t z)) (*.f64 x (+.f64 (/.f64 (/.f64 y z) (*.f64 t (*.f64 t z))) (+.f64 (/.f64 y (/.f64 (pow.f64 (*.f64 t z) 3) y)) (/.f64 (/.f64 (pow.f64 y 3) (pow.f64 t 4)) (pow.f64 z 4))))))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (fma.f64 t (neg.f64 z) y))"]],"stop":[["node limit",1]],"time":67.280029296875,"type":"simplify"},{"compiler":[[14010,5086]],"time":104.616943359375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","done",3.1322754102912853],["(pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)","fresh",6.598651692164722],["(/.f64 (neg.f64 (/.f64 x t)) z)","fresh",34.940328245071875],["(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","done",3.1243865430699813],["(/.f64 x (-.f64 y (*.f64 z t)))","done",2.6779638379326975]],"compiler":[[19,13],[15,10],[10,7],[21,11],[11,7]],"count":[[442,5]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[437,1],"picked":[1,0]}],"min-error":[0.00390625],"time":192.73193359375,"type":"prune"},{"accuracy":[0.08984375],"baseline":[2.6779638379326975],"branch":[["x",1.0687454256402236,2],["y",2.6779638379326975,1],["z",2.677963837932697,1],["t",2.677963837932697,1],["(/.f64 x (-.f64 y (*.f64 z t)))",2.6779638379326975,1],["(-.f64 y (*.f64 z t))",0.08984375,3],["(-.f64 y (*.f64 z t))",0.08984375,3],["(*.f64 z t)",0.08984375,3],["(*.f64 z t)",0.08984375,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[9,6],[9,6],[7,5],[7,5],[111,45]],"count":[[9,3]],"inputs":[["(pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)","(/.f64 (neg.f64 (/.f64 x t)) z)","(neg.f64 (fma.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x t) z)))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) 2)) (cbrt.f64 (/.f64 x (-.f64 y (*.f64 z t)))))","(*.f64 (pow.f64 (cbrt.f64 (-.f64 y (*.f64 z t))) -2) (/.f64 x (cbrt.f64 (-.f64 y (*.f64 z t)))))","(/.f64 x y)","(*.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 y (*.f64 z t))))","(pow.f64 (/.f64 (-.f64 y (*.f64 z t)) x) -1)","(/.f64 x (-.f64 y (*.f64 z t)))"]],"link":["."],"name":["Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, B"],"oracle":[62.98454977699731],"outputs":[["(/.f64 (neg.f64 (/.f64 x t)) z)","(/.f64 x (-.f64 y (*.f64 z t)))","(pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)"]],"time":85.24609375,"times":[["x",9.344970703125],["y",4.93505859375],["z",4.943115234375],["t",5.364013671875],["(/.f64 x (-.f64 y (*.f64 z t)))",7.882080078125],["(-.f64 y (*.f64 z t))",13.047119140625],["(-.f64 y (*.f64 z t))",13.0830078125],["(*.f64 z t)",11.9609375],["(*.f64 z t)",11.989013671875]],"type":"regimes"},{"bstep":[[9.973624104380526e+303,{"type":"real","value":"+inf"},0.066162109375],[{"type":"real","value":"-inf"},-9.67408662168811e+306,0.049072265625]],"compiler":[[11,8],[7,5]],"method":["left-value","left-value"],"time":0.22607421875,"type":"bsearch"},{"compiler":[[40,22]],"egraph":[[5,79,53,0.00055525],[4,78,53,0.000435041],[3,71,53,0.000333125],[2,58,53,0.000228667],[1,38,53,0.00013541699999999998],[0,23,53,6.1875e-5]],"inputs":[["(if (<=.f64 (*.f64 z t) -inf.0) (/.f64 (neg.f64 (/.f64 x t)) z) (if (<=.f64 (*.f64 z t) 9999999999999999392535525055364621860040287220117324953190771571323204563013233902843309257440507748436856118056162172578717193742636030530235798840866882774987301441682011041067710253162440905843719802548551599076639682550821832659549112269607949805346034918662572406407604380845959862074904348138143744) (/.f64 x (-.f64 y (*.f64 z t))) (pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 z t) -inf.0) (/.f64 (neg.f64 (/.f64 x t)) z) (if (<=.f64 (*.f64 z t) 9999999999999999392535525055364621860040287220117324953190771571323204563013233902843309257440507748436856118056162172578717193742636030530235798840866882774987301441682011041067710253162440905843719802548551599076639682550821832659549112269607949805346034918662572406407604380845959862074904348138143744) (/.f64 x (-.f64 y (*.f64 z t))) (pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)))","(if (<=.f64 (*.f64 z t) -inf.0) (/.f64 (/.f64 (neg.f64 x) t) z) (if (<=.f64 (*.f64 z t) 9999999999999999392535525055364621860040287220117324953190771571323204563013233902843309257440507748436856118056162172578717193742636030530235798840866882774987301441682011041067710253162440905843719802548551599076639682550821832659549112269607949805346034918662572406407604380845959862074904348138143744) (/.f64 x (-.f64 y (*.f64 z t))) (pow.f64 (-.f64 (/.f64 y x) (/.f64 z (/.f64 x t))) -1)))"]],"stop":[["fuel",1],["saturated",1]],"time":10.822021484375,"type":"simplify"},{"time":0.02978515625,"type":"soundness"},{"compiler":[[40,22],[40,22],[40,22]],"remove-preprocessing":[["(sort z t)"]],"time":15.421142578125,"type":"end"}]