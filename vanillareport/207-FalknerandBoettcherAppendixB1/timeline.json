[{"compiler":[[16,11]],"method":["search"],"sampling":[[12,0.0,0.99951171875,0.00048828125],[11,0.0,0.99951171875,0.00048828125],[10,0.0,0.99951171875,0.00048828125],[9,0.0,0.99951171875,0.00048828125],[8,0.0,0.99951171875,0.00048828125],[7,0.0,0.99951171875,0.00048828125],[6,0.0,0.99951171875,0.00048828125],[5,0.0,0.99951171875,0.00048828125],[4,0.0,0.99951171875,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":181.9140625,"type":"analyze"},{"outcomes":[["body",256,"invalid",309.286865234375,8236],["body",4096,"valid",0.64208984375,2],["body",1024,"valid",280.885009765625,2041],["body",512,"valid",93.70068359375,1036],["body",2048,"valid",852.79150390625,4161],["body",256,"valid",52.2099609375,1016]],"time":1604.868896484375,"type":"sample"},{"compiler":[[15,10]],"egraph":[[0,1,1,1.708e-6],[7,6939,17,0.034649458],[6,4420,17,0.023524792],[5,1818,17,0.012780125],[4,638,17,0.004428792],[3,215,17,0.001470542],[2,76,17,0.000541625],[1,31,19,0.00021275],[0,10,19,8.65e-5]],"inputs":[["0"],["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))","(acos.f64 (/.f64 (+.f64 1 (*.f64 -5 (*.f64 v v))) (fma.f64 v v -1)))","(acos.f64 (/.f64 (+.f64 1 (*.f64 (*.f64 v v) -5)) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 (*.f64 v v) -5 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":58.906982421875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[7,6939,17,0.034198875000000004],[6,4420,17,0.023271],[5,1818,17,0.012758583],[4,638,17,0.004409875],[3,215,17,0.00145425],[2,76,17,0.000537916],[1,31,19,0.000208958],[0,10,19,8.3125e-5]],"inputs":[["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))"]],"method":["egg-herbie"],"outputs":[["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))","(acos.f64 (/.f64 (+.f64 1 (*.f64 -5 (*.f64 v v))) (fma.f64 v v -1)))","(acos.f64 (/.f64 (+.f64 1 (*.f64 (*.f64 v v) -5)) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 (*.f64 v v) -5 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))"]],"stop":[["node limit",1]],"time":45.277099609375,"type":"simplify"},{"compiler":[[27,18]],"time":0.467041015625,"type":"eval"},{"alts":[["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","next",0.32700994032127806]],"compiler":[[13,9],[13,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.32700994032127806],"time":0.927001953125,"type":"prune"},{"compiler":[[41,27]],"locations":[["(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))",0.0078125,true],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))",0.3226264948526374,true]],"time":10.719970703125,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))","v","-inf",0.405029296875],["(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))","v","inf",0.39599609375],["(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))","v","0",0.414794921875],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","v","-inf",0.225830078125],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","v","inf",0.235107421875],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","v","0",0.239013671875]],"time":2.012939453125,"type":"series"},{"count":[[2,51]],"egraph":[[2,2331,32,0.021953375],[1,199,32,0.0033158750000000002],[0,10,32,0.0003055]],"inputs":[["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (+.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 v (*.f64 v -5) 1) (/.f64 1 (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 2)) (cbrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 v (*.f64 v -5) 1) 2)) (*.f64 (cbrt.f64 (fma.f64 v (*.f64 v -5) 1)) (/.f64 1 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (sqrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) (*.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) (/.f64 1 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 v (*.f64 v -5) 1)) (/.f64 1 (neg.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 v v -1)) (fma.f64 v (*.f64 v -5) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 v (*.f64 v -5) 1) 2)) 1) (/.f64 (cbrt.f64 (fma.f64 v (*.f64 v -5) 1)) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) 1) (/.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 v v -1)) 2)) (/.f64 (fma.f64 v (*.f64 v -5) 1) (cbrt.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 v (*.f64 v -5) 1) 2)) (pow.f64 (cbrt.f64 (fma.f64 v v -1)) 2)) (cbrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) (pow.f64 (cbrt.f64 (fma.f64 v v -1)) 2)) (/.f64 (sqrt.f64 (fma.f64 v (*.f64 v -5) 1)) (cbrt.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 v v -1))) (/.f64 (fma.f64 v (*.f64 v -5) 1) (sqrt.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 v (*.f64 v -5) 1) 2)) (sqrt.f64 (fma.f64 v v -1))) (/.f64 (cbrt.f64 (fma.f64 v (*.f64 v -5) 1)) (sqrt.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 v v -1) (fma.f64 v (*.f64 v -5) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (neg.f64 (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 v (*.f64 v -5) 1) 3) (pow.f64 (fma.f64 v v -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))"]],"rules":[["egg-rr",31],["egg-rr",20]],"stop":[["node limit",1]],"time":43.777099609375,"type":"rewrite"},{"count":[[75,67]],"egraph":[[4,3369,359,0.019511001],[3,1004,359,0.007959626000000001],[2,325,359,0.002534334],[1,114,361,0.000843584],[0,40,380,0.000230917]],"inputs":[["(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","-1","(-.f64 (*.f64 4 (pow.f64 v 2)) 1)","(-.f64 (+.f64 (*.f64 4 (pow.f64 v 2)) (*.f64 4 (pow.f64 v 4))) 1)","(-.f64 (+.f64 (*.f64 4 (pow.f64 v 2)) (+.f64 (*.f64 4 (pow.f64 v 4)) (*.f64 4 (pow.f64 v 6)))) 1)","-5","(neg.f64 (+.f64 5 (*.f64 4 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4))))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 6))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4)))))))","-5","(neg.f64 (+.f64 5 (*.f64 4 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4))))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 6))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4)))))))"]],"method":["egg-herbie"],"outputs":[["(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","-1","(-.f64 (*.f64 4 (pow.f64 v 2)) 1)","(fma.f64 4 (*.f64 v v) -1)","(fma.f64 v (*.f64 v 4) -1)","(-.f64 (+.f64 (*.f64 4 (pow.f64 v 2)) (*.f64 4 (pow.f64 v 4))) 1)","(+.f64 (*.f64 4 (+.f64 (*.f64 v v) (pow.f64 v 4))) -1)","(fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1)","(-.f64 (+.f64 (*.f64 4 (pow.f64 v 2)) (+.f64 (*.f64 4 (pow.f64 v 4)) (*.f64 4 (pow.f64 v 6)))) 1)","(+.f64 (fma.f64 4 (*.f64 v v) (*.f64 4 (+.f64 (pow.f64 v 4) (pow.f64 v 6)))) -1)","(+.f64 -1 (*.f64 4 (+.f64 (fma.f64 v v (pow.f64 v 4)) (pow.f64 v 6))))","(fma.f64 4 (+.f64 (pow.f64 v 6) (fma.f64 v v (pow.f64 v 4))) -1)","(fma.f64 4 (+.f64 (pow.f64 v 4) (fma.f64 v v (pow.f64 v 6))) -1)","-5","(neg.f64 (+.f64 5 (*.f64 4 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 5 (/.f64 4 (*.f64 v v))))","(+.f64 -5 (/.f64 -4 (*.f64 v v)))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4))))))","(+.f64 -5 (neg.f64 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4)))))","(-.f64 -5 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))))","(+.f64 -5 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 4))))","(+.f64 -5 (-.f64 (/.f64 -4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 6))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4)))))))","(neg.f64 (+.f64 5 (+.f64 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))) (/.f64 4 (pow.f64 v 6)))))","(-.f64 -5 (+.f64 (/.f64 4 (*.f64 v v)) (+.f64 (/.f64 4 (pow.f64 v 4)) (/.f64 4 (pow.f64 v 6)))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 6))) (-.f64 (/.f64 -4 (pow.f64 v 4)) 5))","(+.f64 -5 (+.f64 (/.f64 -4 (*.f64 v v)) (-.f64 (/.f64 -4 (pow.f64 v 6)) (/.f64 4 (pow.f64 v 4)))))","(+.f64 -5 (+.f64 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 4))) (/.f64 -4 (pow.f64 v 6))))","-5","(neg.f64 (+.f64 5 (*.f64 4 (/.f64 1 (pow.f64 v 2)))))","(neg.f64 (+.f64 5 (/.f64 4 (*.f64 v v))))","(+.f64 -5 (/.f64 -4 (*.f64 v v)))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4))))))","(+.f64 -5 (neg.f64 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4)))))","(-.f64 -5 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))))","(+.f64 -5 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 4))))","(+.f64 -5 (-.f64 (/.f64 -4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))))","(neg.f64 (+.f64 5 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 6))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (*.f64 4 (/.f64 1 (pow.f64 v 4)))))))","(neg.f64 (+.f64 5 (+.f64 (+.f64 (/.f64 4 (*.f64 v v)) (/.f64 4 (pow.f64 v 4))) (/.f64 4 (pow.f64 v 6)))))","(-.f64 -5 (+.f64 (/.f64 4 (*.f64 v v)) (+.f64 (/.f64 4 (pow.f64 v 4)) (/.f64 4 (pow.f64 v 6)))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 6))) (-.f64 (/.f64 -4 (pow.f64 v 4)) 5))","(+.f64 -5 (+.f64 (/.f64 -4 (*.f64 v v)) (-.f64 (/.f64 -4 (pow.f64 v 6)) (/.f64 4 (pow.f64 v 4)))))","(+.f64 -5 (+.f64 (+.f64 (/.f64 -4 (*.f64 v v)) (/.f64 -4 (pow.f64 v 4))) (/.f64 -4 (pow.f64 v 6))))"]],"stop":[["node limit",1]],"time":34.98291015625,"type":"simplify"},{"compiler":[[1222,902]],"time":17.382080078125,"type":"eval"},{"alts":[["(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)","next",0.32306127723449507],["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (+.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","fresh",0.32919936284829143],["(acos.f64 (fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1))","fresh",0.45074660683079476],["(pow.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)","fresh",1.2873188342394537]],"compiler":[[17,13],[72,53],[11,8],[16,12],[17,13],[72,53],[11,8],[16,12]],"count":[[68,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[67,4],"picked":[1,0]}],"min-error":[0.31409030426683665],"time":12.868896484375,"type":"prune"},{"compiler":[[73,51]],"locations":[["(/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))",0.0078125,false],["(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)",0.0234375,true],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))",0.3226264948526374,false],["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)",0.9974212890737681,true]],"time":20.212158203125,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)","v","-inf",1.091064453125],["(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)","v","inf",1.089111328125],["(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)","v","0",1.22802734375],["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","-inf",0.9130859375],["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","inf",0.591064453125],["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","0",0.62890625]],"time":5.64697265625,"type":"series"},{"count":[[2,71]],"egraph":[[2,3047,37,0.027382833000000002],[1,296,37,0.004721833],[0,14,37,0.000488333]],"inputs":[["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 5/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3/2) (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 5/2) (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) 1) (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 9)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3/2) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (neg.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (neg.f64 (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)) (fma.f64 (PI.f64) 1/2 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/2 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))"]],"rules":[["egg-rr",43],["egg-rr",28]],"stop":[["node limit",1]],"time":52.155029296875,"type":"rewrite"},{"count":[[95,74]],"egraph":[[11,7681,444,0.04795104],[10,6037,444,0.037360998],[9,3956,444,0.024358457],[8,2014,444,0.014138207],[7,1552,444,0.007431374000000001],[6,693,444,0.004160165],[5,226,444,0.002128082],[4,96,444,0.0011274570000000001],[3,57,444,0.0006614570000000001],[2,39,444,0.000434332],[1,27,444,0.000252916],[0,12,444,0.000112208]],"inputs":[["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))"]],"stop":[["node limit",1]],"time":69.885009765625,"type":"simplify"},{"compiler":[[3559,2713]],"time":51.73486328125,"type":"eval"},{"alts":[["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","fresh",0.3230081030798494],["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))","next",0.322911968045111],["(acos.f64 (fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1))","fresh",0.45074660683079476],["(pow.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 9)) 1/3)) 1/3)","fresh",1.8398853454443864]],"compiler":[[59,45],[19,15],[11,8],[21,17],[59,45],[19,15],[11,8],[21,17]],"count":[[145,4]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[141,3],"picked":[1,0]}],"min-error":[0.3062176337140915],"time":41.756103515625,"type":"prune"},{"compiler":[[106,76]],"locations":[["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))",0.0234375,true],["(*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6)",0.02734375,true],["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))",0.03515625,true],["(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))",0.3226264948526374,false]],"time":30.260986328125,"type":"localize"},{"count":[[3,36]],"series":[["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))","v","-inf",0.181884765625],["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))","v","inf",0.18310546875],["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))","v","0",0.206787109375],["(*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6)","v","-inf",0.2060546875],["(*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6)","v","inf",0.2099609375],["(*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6)","v","0",0.2021484375],["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","-inf",11.72509765625],["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","inf",14.365966796875],["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","0",18.303955078125]],"time":45.788818359375,"type":"series"},{"count":[[3,132]],"egraph":[[2,3654,58,0.027919792],[1,317,58,0.005340375],[0,16,74,0.000510584]],"inputs":[["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6)","(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (*.f64 3 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4)) (*.f64 2 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (log.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (*.f64 2 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (log.f64 (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))) (log.f64 (fma.f64 (PI.f64) 1/2 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (neg.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (PI.f64) 1/2 (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (log.f64 (sqrt.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (PI.f64) (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (neg.f64 (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (log.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (pow.f64 (E.f64) (log.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (*.f64 2 (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (pow.f64 (E.f64) (log.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)) (fma.f64 (PI.f64) 1/2 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (exp.f64 (log1p.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (E.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 1/6) (exp.f64 (log1p.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))) (exp.f64 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/6) (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 6) (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 6) (*.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (*.f64 (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2)) (*.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (*.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 12) 1/12)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) 6) (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2)) (*.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (*.f64 (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 6) 1/6) (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 6) (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (*.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 6) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) 1/6) (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (*.f64 1/6 (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2))) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (*.f64 1/6 (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) 6) (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (*.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2)) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (*.f64 6 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 1/6) (*.f64 6 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 6) (pow.f64 (cbrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)) 2)) (cbrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 6) (sqrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6))) (sqrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 1) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (cbrt.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 1/6)) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 6)) (sqrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (sqrt.f64 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (sqrt.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))) (sqrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) 1) (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 1/6)) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 6)) (cbrt.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (cbrt.f64 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (cbrt.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))) (cbrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2)) (sqrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (sqrt.f64 (cbrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/2 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))"]],"rules":[["egg-rr",94],["egg-rr",21],["egg-rr",17]],"stop":[["node limit",1]],"time":206.2900390625,"type":"rewrite"},{"count":[[168,136]],"egraph":[[11,6967,696,0.05133525],[10,4778,696,0.035724667],[9,2634,696,0.020784833000000003],[8,794,696,0.008876333],[7,390,696,0.0035636670000000004],[6,178,696,0.001947167],[5,96,696,0.001242417],[4,55,696,0.0008360420000000001],[3,37,696,0.0005722920000000001],[2,28,696,0.00040570900000000003],[1,21,696,0.000257834],[0,13,696,0.000132792]],"inputs":[["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))))","(*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))))","(log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))"]],"stop":[["node limit",1]],"time":81.458984375,"type":"simplify"},{"compiler":[[4539,3440]],"time":66.281005859375,"type":"eval"},{"alts":[["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","next",0.3230081030798494],["(pow.f64 (pow.f64 (exp.f64 1/6) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6))","fresh",1.848544062945306],["(pow.f64 (pow.f64 (exp.f64 1/6) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2))","fresh",3.228647094233609],["(acos.f64 (fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1))","fresh",0.45074660683079476]],"compiler":[[59,45],[35,27],[39,31],[11,8],[59,45],[35,27],[39,31],[11,8]],"count":[[162,4]],"kept":[{"done":[0,0],"fresh":[3,2],"new":[158,2],"picked":[1,0]}],"min-error":[0.30595549459445454],"time":39.989990234375,"type":"prune"},{"compiler":[[248,179]],"locations":[["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))",0.96484375,true],["(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)",0.990566259768442,true],["(pow.f64 (*.f64 (PI.f64) 1/2) 3)",1.0,true],["(+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))",1.7468640697201232,true]],"time":66.7490234375,"type":"localize"},{"count":[[4,36]],"series":[["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","v","-inf",1.0400390625],["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","v","inf",1.0400390625],["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","v","0",1.5400390625],["(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","-inf",0.490966796875],["(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","inf",0.49609375],["(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","v","0",0.488037109375],["(+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","-inf",0.848876953125],["(+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","inf",0.969970703125],["(+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","v","0",0.89501953125]],"time":8.193115234375,"type":"series"},{"count":[[4,148]],"egraph":[[2,7433,88,0.046998959],[1,548,88,0.011013334],[0,24,162,0.000791959]],"inputs":[["(+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(pow.f64 (*.f64 (PI.f64) 1/2) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))) (/.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (pow.f64 (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 2) (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 3)) (/.f64 1 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (-.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (*.f64 (PI.f64) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2)) (/.f64 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (-.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (*.f64 (PI.f64) 1/2)))) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))) (-.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 3)) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (-.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (*.f64 (PI.f64) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 3)) (+.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (-.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (*.f64 (PI.f64) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2)) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 3))) (neg.f64 (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (-.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (*.f64 (PI.f64) 1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2))) (neg.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (-.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4)) (-.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1/2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4)) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))) 2) (cbrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 (PI.f64) 1/2))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/8 (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 1/2 (*.f64 1/4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 (PI.f64) (*.f64 1/4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (*.f64 1/4 (pow.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (*.f64 (PI.f64) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/8 (pow.f64 (PI.f64) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (*.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) (*.f64 1/4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 4)) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (*.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (*.f64 1/4 (pow.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 2) (*.f64 1/4 (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 3) 1/8)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3/2) (pow.f64 (*.f64 (PI.f64) 1/2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) 3) (pow.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/2) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 4))) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (PI.f64) 1/2) (pow.f64 (PI.f64) 2)) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (PI.f64)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) 1/2) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2)) (cbrt.f64 (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (sqrt.f64 (*.f64 (PI.f64) 1/2))) (sqrt.f64 (*.f64 (PI.f64) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) 3)) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (*.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4)) (*.f64 (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3/2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3) (pow.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (cbrt.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 4))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)) (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (*.f64 -1 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)) (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) 1/2) (*.f64 (neg.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (neg.f64 (/.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (neg.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (pow.f64 (cbrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (neg.f64 (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (/.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (/.f64 1 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (/.f64 1 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 2) (*.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (/.f64 1 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (*.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (/.f64 1 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (/.f64 1 (neg.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 1) (/.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 2) 1) (/.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 1) (/.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) 2)) (/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) 2)) (/.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 2) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) 2)) (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))) 2)) (/.f64 (sqrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (cbrt.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (/.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) 2) (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (/.f64 (cbrt.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))) (hypot.f64 (*.f64 (PI.f64) 1/2) (sqrt.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (-.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 6) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 3))) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 4) (*.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (-.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 4) (pow.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 2))) (-.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (neg.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 1/2) (PI.f64)) (exp.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) 3) (pow.f64 (fma.f64 (pow.f64 (PI.f64) 2) 1/4 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (PI.f64) 1/2) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) 1/2 (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (PI.f64) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 1/2)) 2) (cbrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (PI.f64) 1/2)) (sqrt.f64 (*.f64 (PI.f64) 1/2)) (neg.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))))"]],"rules":[["egg-rr",58],["egg-rr",21],["egg-rr",29],["egg-rr",40]],"stop":[["node limit",1]],"time":88.260986328125,"type":"rewrite"},{"count":[[184,154]],"egraph":[[6,7805,1704,0.034185209],[5,4158,1704,0.021137626],[4,1454,1704,0.010016501],[3,423,1704,0.003633667],[2,164,1752,0.0014377510000000001],[1,75,1776,0.000653459],[0,29,1776,0.000231959]],"inputs":[["(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))","(fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))","(*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)","(pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) (PI.f64))) (+.f64 (*.f64 1/4 (pow.f64 (PI.f64) 2)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 -5 v) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/2 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (PI.f64)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 1/4 (pow.f64 (PI.f64) 2) (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (+.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (*.f64 1/2 (PI.f64))))))","(/.f64 (-.f64 (*.f64 1/8 (pow.f64 (PI.f64) 3)) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (fma.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (fma.f64 1/2 (PI.f64) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 1/4 (pow.f64 (PI.f64) 2))))"]],"stop":[["node limit",1]],"time":70.08203125,"type":"simplify"},{"compiler":[[9330,6900]],"time":108.416015625,"type":"eval"},{"alts":[["(pow.f64 (pow.f64 (exp.f64 1/6) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6))","fresh",1.848544062945306],["(pow.f64 (pow.f64 (exp.f64 1/6) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2))","fresh",3.228647094233609],["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (log1p.f64 (expm1.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","fresh",1.8580603477916335],["(acos.f64 (fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1))","fresh",0.45074660683079476]],"compiler":[[35,27],[39,31],[61,47],[11,8]],"count":[[158,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[154,1],"picked":[1,0]}],"min-error":[0.3059553676238341],"time":40.513916015625,"type":"prune"},{"accuracy":[0.32291196804511096],"baseline":[0.322911968045111],"branch":[["v",0.32291196804511096,1],["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))",0.322911968045111,1],["(/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1))",0.32291196804511096,1],["(*.f64 v v)",0.32291196804511096,1]],"compiler":[[2,1],[15,10],[14,9],[4,2],[367,274]],"count":[[12,1]],"inputs":[["(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (log1p.f64 (expm1.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)))) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","(pow.f64 (pow.f64 (exp.f64 1/6) (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))) (*.f64 (sqrt.f64 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 6))","(pow.f64 (pow.f64 (exp.f64 1/6) (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6)))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 6))) 2))","(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 2) (+.f64 (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 2) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))","(pow.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 9)) 1/3)) 1/3)","(pow.f64 (pow.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3) 1/3)","(/.f64 (-.f64 (pow.f64 (*.f64 (PI.f64) 1/2) 3) (pow.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) 3)) (+.f64 (*.f64 (*.f64 (PI.f64) 1/2) (*.f64 (PI.f64) 1/2)) (+.f64 (*.f64 (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) (*.f64 (*.f64 (PI.f64) 1/2) (asin.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))))))","(acos.f64 (fma.f64 4 (fma.f64 v v (pow.f64 v 4)) -1))","(pow.f64 (sqrt.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))) 2)","(acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1)))","(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))"]],"link":["."],"name":["Falkner and Boettcher, Appendix B, 1"],"oracle":[3.3575613544994383],"outputs":[["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))"]],"time":18.095947265625,"times":[["v",4.93994140625],["(acos.f64 (/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1)))",2.098876953125],["(/.f64 (-.f64 1 (*.f64 5 (*.f64 v v))) (-.f64 (*.f64 v v) 1))",2.141845703125],["(*.f64 v v)",2.552978515625]],"type":"regimes"},{"compiler":[[19,15]],"egraph":[[1,21,27,6.591600000000001e-5],[0,16,27,3.8708e-5]],"inputs":[["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 (*.f64 6 (log.f64 (acos.f64 (/.f64 (fma.f64 v (*.f64 v -5) 1) (fma.f64 v v -1))))) 1/6))"]],"stop":[["fuel",1],["saturated",1]],"time":8.732177734375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[19,15]],"remove-preprocessing":[[]],"time":11.804931640625,"type":"end"}]