[{"compiler":[[22,16]],"method":["search"],"sampling":[[12,0.013638528979303621,0.26984803766193594,0.7165134333587604],[11,0.011690167696545961,0.298099276261922,0.690210556041532],[10,0.0,0.37018864372395544,0.6298113562760446],[9,0.0,0.5611280494342061,0.43887195056579387],[8,0.0,0.7637576228410028,0.2362423771589972],[7,0.0,0.8416920741513092,0.1583079258486908],[6,0.0,0.9663871962477995,0.03361280375220055],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":101.97607421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",774.912841796875,10729],["body",256,"valid",705.256103515625,8256]],"time":1497.2158203125,"type":"sample"},{"compiler":[[21,15]],"egraph":[[1,5,5,8.167e-6],[0,5,5,6.75e-6],[5,7940,253,0.032065459000000004],[4,4614,253,0.021360375],[3,1611,253,0.009423334],[2,518,253,0.0029373750000000003],[1,169,253,0.000810209],[0,73,275,0.000240167]],"inputs":[["0","1","2","3","4"],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 z y)) (log.f64 x)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 t y)) (log.f64 z)) x) (*.f64 (-.f64 a 1/2) (log.f64 x)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 a y)) (log.f64 z)) t) (*.f64 (-.f64 x 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x z)) (log.f64 y)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x t)) (log.f64 z)) y) (*.f64 (-.f64 a 1/2) (log.f64 y)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x a)) (log.f64 z)) t) (*.f64 (-.f64 y 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 t)) z) (*.f64 (-.f64 a 1/2) (log.f64 z)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 a)) t) (*.f64 (-.f64 z 1/2) (log.f64 t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) a) (*.f64 (-.f64 t 1/2) (log.f64 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3","4"],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)))","(+.f64 (-.f64 (log.f64 z) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)))","(+.f64 (-.f64 (log.f64 z) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 z y)) (log.f64 x)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 y z)) (-.f64 (log.f64 x) t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 y z)) (-.f64 (log.f64 x) t)))","(+.f64 (-.f64 (log.f64 x) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 y z))))","(+.f64 (log.f64 (+.f64 y z)) (-.f64 (log.f64 x) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 t y)) (log.f64 z)) x) (*.f64 (-.f64 a 1/2) (log.f64 x)))","(+.f64 (+.f64 (log.f64 (+.f64 y t)) (-.f64 (log.f64 z) x)) (*.f64 (+.f64 a -1/2) (log.f64 x)))","(fma.f64 (+.f64 a -1/2) (log.f64 x) (+.f64 (log.f64 (+.f64 y t)) (-.f64 (log.f64 z) x)))","(fma.f64 (+.f64 a -1/2) (log.f64 x) (+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y t)) x)))","(-.f64 (log.f64 (+.f64 y t)) (-.f64 (fma.f64 (log.f64 x) (-.f64 1/2 a) x) (log.f64 z)))","(-.f64 (log.f64 (+.f64 y t)) (-.f64 x (fma.f64 (+.f64 a -1/2) (log.f64 x) (log.f64 z))))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 a y)) (log.f64 z)) t) (*.f64 (-.f64 x 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y a)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (+.f64 x -1/2)))","(fma.f64 (log.f64 t) (+.f64 x -1/2) (+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y a)) t)))","(+.f64 (-.f64 (log.f64 z) t) (fma.f64 (log.f64 t) (+.f64 x -1/2) (log.f64 (+.f64 y a))))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x z)) (log.f64 y)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (*.f64 (+.f64 a -1/2) (log.f64 t)) (+.f64 (log.f64 (+.f64 x z)) (-.f64 (log.f64 y) t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 x z)) (-.f64 (log.f64 y) t)))","(+.f64 (-.f64 (log.f64 y) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 x z))))","(+.f64 (log.f64 (+.f64 x z)) (-.f64 (log.f64 y) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x t)) (log.f64 z)) y) (*.f64 (-.f64 a 1/2) (log.f64 y)))","(+.f64 (+.f64 (log.f64 (+.f64 x t)) (-.f64 (log.f64 z) y)) (*.f64 (+.f64 a -1/2) (log.f64 y)))","(fma.f64 (+.f64 a -1/2) (log.f64 y) (-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 x t))) y))","(+.f64 (-.f64 (log.f64 z) y) (fma.f64 (+.f64 a -1/2) (log.f64 y) (log.f64 (+.f64 x t))))","(+.f64 (log.f64 (+.f64 x t)) (-.f64 (log.f64 z) (fma.f64 (log.f64 y) (-.f64 1/2 a) y)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x a)) (log.f64 z)) t) (*.f64 (-.f64 y 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 x a)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 y 1/2)))","(fma.f64 (log.f64 t) (+.f64 y -1/2) (+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 x a)) t)))","(+.f64 (-.f64 (log.f64 z) t) (fma.f64 (log.f64 t) (+.f64 y -1/2) (log.f64 (+.f64 x a))))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 t)) z) (*.f64 (-.f64 a 1/2) (log.f64 z)))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 t) z)) (*.f64 (log.f64 z) (+.f64 a -1/2)))","(fma.f64 (log.f64 z) (+.f64 a -1/2) (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 t)) z))","(fma.f64 (log.f64 z) (+.f64 a -1/2) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 t) z)))","(+.f64 (log.f64 t) (-.f64 (log.f64 (+.f64 x y)) (fma.f64 (log.f64 z) (-.f64 1/2 a) z)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 a)) t) (*.f64 (-.f64 z 1/2) (log.f64 t)))","(-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 a)) (-.f64 t (*.f64 (log.f64 t) (+.f64 z -1/2))))","(fma.f64 (log.f64 t) (+.f64 z -1/2) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 a) t)))","(+.f64 (-.f64 (log.f64 a) t) (fma.f64 (log.f64 t) (-.f64 z 1/2) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (log.f64 t) (+.f64 z -1/2) (-.f64 (log.f64 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) a) (*.f64 (-.f64 t 1/2) (log.f64 a)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) a) (*.f64 (log.f64 a) (-.f64 t 1/2)))","(fma.f64 (log.f64 a) (-.f64 t 1/2) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) a)))","(+.f64 (-.f64 (log.f64 z) a) (fma.f64 (log.f64 a) (-.f64 t 1/2) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 a) (-.f64 1/2 t) a)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort x y)"]],"time":59.22802734375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[19,6678,23,0.13525295899999998],[18,6161,23,0.11941362599999998],[17,6161,23,0.10923729199999999],[16,6155,23,0.10264270899999998],[15,6143,23,0.09605412499999999],[14,5877,23,0.088648542],[13,4761,23,0.07910487499999999],[12,4533,23,0.06834908399999999],[11,4492,23,0.05904645899999999],[10,4438,23,0.04855820899999999],[9,4423,23,0.040097500999999994],[8,4387,23,0.033104500999999995],[7,3994,23,0.025646125999999998],[6,3217,23,0.017973376],[5,1617,23,0.010877376000000001],[4,537,23,0.004091209],[3,195,23,0.001235084],[2,72,23,0.000442959],[1,29,23,0.000161543],[0,16,25,6.1209e-5]],"inputs":[["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)) (*.f64 (+.f64 a -1/2) (log.f64 t)))","(fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) t)))","(-.f64 (fma.f64 (+.f64 a -1/2) (log.f64 t) (+.f64 (log.f64 (+.f64 x y)) (log.f64 z))) t)","(+.f64 (-.f64 (log.f64 z) t) (fma.f64 (+.f64 a -1/2) (log.f64 t) (log.f64 (+.f64 x y))))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))"]],"stop":[["node limit",1]],"time":147.822998046875,"type":"simplify"},{"compiler":[[36,20]],"time":0.486083984375,"type":"eval"},{"alts":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","next",0.28470379109026733],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))","fresh",0.3008414650483855]],"compiler":[[20,14],[21,15],[20,14],[21,15]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.24659876178494128],"time":1.572021484375,"type":"prune"},{"compiler":[[57,24]],"locations":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))",0.10309498993272954,true],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)",0.14453125,true],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))",0.16692252900649762,true]],"time":14.223876953125,"type":"localize"},{"count":[[3,120]],"series":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","a","-inf",0.19091796875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","a","inf",0.197998046875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","a","0",1.052978515625],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","t","-inf",0.260009765625],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","t","inf",0.22412109375],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","t","0",1.077880859375],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","z","-inf",0.281005859375],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","z","inf",0.281982421875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","z","0",14.947998046875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","y","-inf",0.44482421875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","y","inf",0.43212890625],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","y","0",0.426025390625],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","x","-inf",0.427978515625],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","x","inf",0.44091796875],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","x","0",0.572998046875],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","a","-inf",0.18212890625],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","a","inf",0.162109375],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","a","0",0.197998046875],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","t","-inf",0.173095703125],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","t","inf",0.177978515625],["(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","t","0",0.159912109375],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","a","-inf",0.31298828125],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","a","inf",1.384033203125],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","a","0",1.968017578125],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","t","-inf",0.985107421875],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","t","inf",1.011962890625],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","t","0",2.73583984375],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","z","-inf",6.634033203125],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","z","inf",4.68896484375],["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","z","0",25.115966796875]],"time":67.796142578125,"type":"series"},{"count":[[3,191]],"egraph":[[2,4744,46,0.034824542],[1,333,46,0.0062965420000000005],[0,15,48,0.000367875]],"inputs":[["(-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))","(fma.f64 (log.f64 t) (-.f64 1/2 a) t)","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (cbrt.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (log.f64 (cbrt.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))) (log.f64 (sqrt.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (/.f64 1 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (-.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2)) (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3))) (neg.f64 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2))) (neg.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)) (+.f64 (pow.f64 (log.f64 z) 2) (-.f64 (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (*.f64 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (-.f64 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (-.f64 z 1)) (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 z (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (-.f64 z 1)) (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 z 1)) (exp.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 z (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 z 1)) (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 1 (-.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 1 (-.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (cbrt.f64 (log.f64 z)) 2) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (cbrt.f64 (log.f64 z)) 2) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (*.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (/.f64 1 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (/.f64 1 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (/.f64 1 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (cbrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (cbrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (-.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (-.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (-.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2)) (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 (log.f64 t) (-.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (cbrt.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) 3) (pow.f64 t 3)) (fma.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) (*.f64 (log.f64 t) (-.f64 1/2 a)) (-.f64 (*.f64 t t) (*.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) (*.f64 (log.f64 t) (-.f64 1/2 a))) (*.f64 t t)) (-.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)) t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 t) (exp.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 t)) (exp.f64 (*.f64 (log.f64 t) (-.f64 1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (log.f64 t) (-.f64 1/2 a))) (+.f64 1 (expm1.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 z) (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (/.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (*.f64 (log.f64 t) (-.f64 1/2 a))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 3) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)) (/.f64 1 (fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))) (pow.f64 (log.f64 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2)) (/.f64 1 (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))) (pow.f64 (log.f64 (+.f64 x y)) 2)) (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 3) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 3) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)) (fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))) (pow.f64 (log.f64 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 3) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)) (+.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (*.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2)) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 (+.f64 x y)) 3) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3))) (neg.f64 (fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))) (pow.f64 (log.f64 (+.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2))) (neg.f64 (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 (+.f64 x y) z)) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (fma.f64 (log.f64 (*.f64 (+.f64 x y) z)) (log.f64 (*.f64 (+.f64 x y) z)) (+.f64 (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2) (*.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 (*.f64 (+.f64 x y) z)) (log.f64 (*.f64 (+.f64 x y) z)) (neg.f64 (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2))) (+.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (pow.f64 (log.f64 (+.f64 x y)) 2)) (-.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 x y) (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (fma.f64 (+.f64 x y) (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (*.f64 (+.f64 x y) z) (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (log.f64 (*.f64 (+.f64 x y) z))) (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (*.f64 (+.f64 x y) z) (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (+.f64 1 (-.f64 (+.f64 x y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))) (+.f64 1 (-.f64 (+.f64 x y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (+.f64 x y) 1)) (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 x y) (+.f64 1 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (+.f64 x y) 1)) (+.f64 1 (expm1.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (log.f64 (*.f64 (+.f64 x y) z))) (exp.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (+.f64 x y) z) (exp.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (log.f64 (*.f64 (+.f64 x y) z))) (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (+.f64 x y) z) (/.f64 1 (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 (+.f64 x y) (/.f64 z (exp.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (log.f64 (*.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (neg.f64 (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 1 (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (+.f64 x y)) 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (neg.f64 (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 (+.f64 x y) z)) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (cbrt.f64 (log.f64 z)) 2) (fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (cbrt.f64 (log.f64 z)) 2) (neg.f64 (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (neg.f64 (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 x y))) (pow.f64 (cbrt.f64 (log.f64 (+.f64 x y))) 2) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 x y))) 2) (cbrt.f64 (log.f64 (+.f64 x y))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (fma.f64 -1 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (neg.f64 (-.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (log.f64 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (+.f64 x y))) (sqrt.f64 (log.f64 (+.f64 x y))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (pow.f64 (log.f64 z) 2))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)) (/.f64 1 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (sqrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (-.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))))))"]],"rules":[["egg-rr",73],["egg-rr",29],["egg-rr",89]],"stop":[["node limit",1]],"time":72.263916015625,"type":"rewrite"},{"count":[[311,269]],"egraph":[[3,7083,2322,0.027173832],[2,1990,2322,0.013344499],[1,584,2344,0.003727082],[0,165,2382,0.000849291]],"inputs":[["(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (log.f64 z) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 (-.f64 1/2 a) (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","t","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","t","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(+.f64 t (*.f64 1/2 (log.f64 t)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 -1 (*.f64 a (log.f64 t)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 -1 (*.f64 a (log.f64 t)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (log.f64 z) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (log.f64 z) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(fma.f64 (log.f64 t) (+.f64 a -1/2) (log.f64 z))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (*.f64 -1 t) (log.f64 z)) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (log.f64 z) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 1/2 (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(*.f64 (-.f64 1/2 a) (log.f64 t))","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","t","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) (-.f64 1/2 a))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","t","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) t)","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 t (*.f64 1/2 (log.f64 t)))","(fma.f64 1/2 (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(*.f64 -1 (*.f64 a (log.f64 t)))","(neg.f64 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) (neg.f64 a))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(*.f64 -1 (*.f64 a (log.f64 t)))","(neg.f64 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) (neg.f64 a))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(+.f64 (*.f64 -1 (*.f64 a (log.f64 t))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(fma.f64 (-.f64 1/2 a) (log.f64 t) t)","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 z) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 y))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (/.f64 x y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (+.f64 (log.f64 y) (/.f64 x y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (log.f64 y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (/.f64 x y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (log.f64 y)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (log.f64 y)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (log.f64 z)) (-.f64 (log.f64 x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (/.f64 y x) (+.f64 (-.f64 (log.f64 x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (fma.f64 (/.f64 -1/2 x) (/.f64 (*.f64 y y) x) (log.f64 z))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (log.f64 z) (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (log.f64 x)))) (-.f64 (/.f64 y x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x))) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 z) (log.f64 -1))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (-.f64 (+.f64 (log.f64 z) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (-.f64 (log.f64 z) (log.f64 (/.f64 -1 x))) (-.f64 (log.f64 -1) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 z) (log.f64 -1))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (-.f64 (-.f64 (+.f64 (log.f64 z) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (+.f64 (-.f64 (log.f64 z) (log.f64 (/.f64 -1 x))) (-.f64 (log.f64 -1) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 z) (log.f64 -1)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (-.f64 (+.f64 (log.f64 z) (log.f64 -1)) (log.f64 (/.f64 -1 x)))) (-.f64 (/.f64 y x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (+.f64 (-.f64 (log.f64 z) (log.f64 (/.f64 -1 x))) (-.f64 (log.f64 -1) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (log.f64 z)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 z) (log.f64 -1))))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (-.f64 (+.f64 (log.f64 z) (log.f64 -1)) (log.f64 (/.f64 -1 x))))) (-.f64 (/.f64 y x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (log.f64 z) (log.f64 -1))) (log.f64 (/.f64 -1 x))) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (log.f64 z)) (-.f64 (log.f64 x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (/.f64 y x) (+.f64 (-.f64 (log.f64 x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (fma.f64 (/.f64 -1/2 x) (/.f64 (*.f64 y y) x) (log.f64 z))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 z)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (log.f64 z) (fma.f64 -1/2 (/.f64 (/.f64 (*.f64 y y) x) x) (log.f64 x)))) (-.f64 (/.f64 y x) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x))) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 z) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 z) (log.f64 y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (/.f64 x y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (+.f64 (log.f64 y) (/.f64 x y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (log.f64 y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (/.f64 x y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (log.f64 y)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (log.f64 y)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (log.f64 z))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 z) (log.f64 -1))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (-.f64 (+.f64 (log.f64 z) (log.f64 -1)) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (log.f64 z) (-.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (log.f64 z)))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (log.f64 -1)))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 -1) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (+.f64 (log.f64 z) (log.f64 -1)) (-.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z))))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(+.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (log.f64 -1))) (-.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)))))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (-.f64 (+.f64 (+.f64 (log.f64 -1) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (log.f64 -1)))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (log.f64 (/.f64 -1 y))) (-.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x (*.f64 y y)) x) (log.f64 -1))) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (log.f64 (+.f64 y x))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))) (+.f64 (*.f64 (-.f64 1/2 a) (log.f64 t)) t))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (*.f64 (-.f64 1/2 a) (log.f64 t))))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (*.f64 (-.f64 1/2 a) (log.f64 t))))","(+.f64 (fma.f64 (log.f64 t) (+.f64 a -1/2) (log.f64 z)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 -1 (*.f64 (-.f64 1/2 a) (log.f64 (/.f64 1 t)))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x)))) (*.f64 (-.f64 1/2 a) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (+.f64 t (*.f64 1/2 (log.f64 t)))))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 1/2 (log.f64 t) t)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (log.f64 z) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)))","(+.f64 (-.f64 (log.f64 z) (fma.f64 (-.f64 1/2 a) (log.f64 t) t)) (log.f64 (+.f64 y x)))"]],"stop":[["node limit",1]],"time":67.031005859375,"type":"simplify"},{"compiler":[[6898,3216]],"time":60.447998046875,"type":"eval"},{"alts":[["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z)))","fresh",32.515542609469364],["(+.f64 (log.f64 (+.f64 x y)) (/.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)))))","fresh",27.77227370241718],["(+.f64 (log.f64 (+.f64 x y)) (pow.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3) 1/3))","fresh",48.54144254139251],["(fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","fresh",14.48551224499161],["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)))","fresh",0.7717214861602796],["(fma.f64 (sqrt.f64 (log.f64 (+.f64 x y))) (sqrt.f64 (log.f64 (+.f64 x y))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","fresh",16.23322723522317],["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z)))","fresh",32.01466752930533],["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))","fresh",1.1179707791063316],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","next",0.2930289650483855],["(-.f64 (/.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (/.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))","fresh",37.75441866674627],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))","fresh",0.7909128418954711]],"compiler":[[31,21],[37,25],[24,18],[36,16],[23,17],[26,15],[30,20],[62,38],[24,16],[54,30],[34,22],[31,21],[37,25],[24,18],[36,16],[23,17],[26,15],[30,20],[62,38],[24,16],[54,30],[34,22]],"count":[[271,11]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[269,11],"picked":[1,0]}],"min-error":[0.05859375],"time":84.721923828125,"type":"prune"},{"compiler":[[76,22]],"locations":[["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))",0.0234375,true],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))",0.09918873993272953,true],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))",0.24962523065654074,true],["(*.f64 a (log.f64 t))",0.2890625,true]],"time":14.320068359375,"type":"localize"},{"count":[[4,145]],"series":[["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","t","-inf",0.201904296875],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","t","inf",0.1708984375],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","t","0",0.176025390625],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","a","-inf",0.1611328125],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","a","inf",0.161865234375],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","a","0",0.169921875],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","x","-inf",0.22607421875],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","x","inf",0.22705078125],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","x","0",0.197021484375],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","y","-inf",0.255126953125],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","y","inf",0.208984375],["(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))","y","0",0.218017578125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","-inf",0.3798828125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","inf",0.3701171875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","0",0.27294921875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","-inf",0.22998046875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","inf",0.2041015625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","0",0.262939453125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","-inf",0.2978515625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","inf",0.293212890625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","0",0.2919921875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","-inf",0.29296875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","inf",0.31396484375],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","0",0.298828125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","-inf",0.26806640625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","inf",0.26904296875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","0",0.3740234375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","t","-inf",0.2490234375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","t","inf",0.2509765625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","t","0",8.927978515625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","a","-inf",0.176025390625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","a","inf",0.218994140625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","a","0",0.196044921875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","x","-inf",4.887939453125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","x","inf",0.255126953125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","x","0",0.257080078125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","y","-inf",0.31396484375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","y","inf",0.279052734375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","y","0",0.245849609375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","z","-inf",0.26513671875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","z","inf",0.2451171875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","z","0",0.281982421875],["(*.f64 a (log.f64 t))","t","-inf",3.989013671875],["(*.f64 a (log.f64 t))","t","inf",3.75390625],["(*.f64 a (log.f64 t))","t","0",3.949951171875],["(*.f64 a (log.f64 t))","a","-inf",0.261962890625],["(*.f64 a (log.f64 t))","a","inf",0.304931640625],["(*.f64 a (log.f64 t))","a","0",7.617919921875]],"time":44.489990234375,"type":"series"},{"count":[[4,156]],"egraph":[[2,5977,57,0.040451375],[1,385,57,0.007831833],[0,17,69,0.000395417]],"inputs":[["(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (log.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (log.f64 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (log.f64 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 t a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 t a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (log.f64 t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (log.f64 z) 2) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (/.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (/.f64 1 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3))) (neg.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2))) (neg.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (+.f64 y x))) 3) (pow.f64 (*.f64 a (log.f64 t)) 3)) (+.f64 (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x)))) (-.f64 (pow.f64 (*.f64 a (log.f64 t)) 2) (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 a (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (pow.f64 (log.f64 z) 2)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x)))) (pow.f64 (*.f64 a (log.f64 t)) 2)) (-.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (fma.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (+.f64 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 1 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) 1/2 t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) 1/2 t)) 2) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (+.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (log.f64 t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 -1 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (log.f64 (sqrt.f64 t))) 2)) (cbrt.f64 (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (sqrt.f64 (log.f64 (sqrt.f64 t)))) (sqrt.f64 (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (*.f64 a (log.f64 t)) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 y x))) (+.f64 (*.f64 a (log.f64 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 2) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2)) (/.f64 1 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (fma.f64 (log.f64 t) 1/2 t))) (-.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2)) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3))) (neg.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2))) (neg.f64 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (+.f64 (pow.f64 t 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t))) (neg.f64 (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (+.f64 (pow.f64 t 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3))))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (-.f64 t (log.f64 (sqrt.f64 t)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (-.f64 (*.f64 t t) (pow.f64 (log.f64 (sqrt.f64 t)) 2)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (-.f64 t (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (-.f64 t (log.f64 (sqrt.f64 t)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 (*.f64 t t) (pow.f64 (log.f64 (sqrt.f64 t)) 2)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 t (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3)) (+.f64 (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (+.f64 (pow.f64 (log.f64 (sqrt.f64 t)) 2) (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (log.f64 (sqrt.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) 3)) (+.f64 (pow.f64 (log.f64 z) 2) (-.f64 (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))) (*.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (-.f64 (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))) (*.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (pow.f64 (log.f64 (sqrt.f64 t)) 2)) (+.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (/.f64 1 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t))) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 t)) (neg.f64 (log.f64 (sqrt.f64 t))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a)))) (/.f64 (pow.f64 (*.f64 a (log.f64 t)) 2) (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 a (log.f64 t)) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (*.f64 (*.f64 a (log.f64 t)) (-.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (pow.f64 (*.f64 a (log.f64 t)) 2)) (/.f64 1 (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (*.f64 (*.f64 a (log.f64 t)) (-.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x))))) (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 a (log.f64 t)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (pow.f64 (*.f64 a (log.f64 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 a (log.f64 t)) 3)) (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (*.f64 (*.f64 a (log.f64 t)) (-.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 a (log.f64 t)) 3)) (+.f64 (pow.f64 (*.f64 a (log.f64 t)) 2) (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (*.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (pow.f64 (*.f64 a (log.f64 t)) 2)) (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 a (log.f64 t)) 3))) (neg.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (*.f64 (*.f64 a (log.f64 t)) (-.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (pow.f64 (*.f64 a (log.f64 t)) 2))) (neg.f64 (log.f64 (/.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 a (log.f64 t)) 2) (pow.f64 (log.f64 (+.f64 y x)) 2)) (-.f64 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (fma.f64 (+.f64 y x) (pow.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 (+.f64 y x) (pow.f64 t a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 y x))) 2) (cbrt.f64 (log.f64 (+.f64 y x))) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 2) (cbrt.f64 (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (+.f64 y x))) (sqrt.f64 (log.f64 (+.f64 y x))) (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (log.f64 t))) (sqrt.f64 (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))))))"]],"rules":[["egg-rr",37],["egg-rr",69],["egg-rr",37],["egg-rr",13]],"stop":[["node limit",1]],"time":75.77294921875,"type":"rewrite"},{"count":[[301,305]],"egraph":[[3,6435,3461,0.028316708],[2,2781,3495,0.013536125],[1,760,3678,0.004964708],[0,209,4036,0.001101333]],"inputs":[["(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (*.f64 a (log.f64 t)) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 a (log.f64 t)) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))))","(log.f64 (+.f64 y x))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1)))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (/.f64 y x))","(+.f64 (log.f64 z) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (/.f64 y x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (+.f64 (/.f64 y x) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (log.f64 z))) (fma.f64 a (log.f64 t) (log.f64 x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (+.f64 (/.f64 x y) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y))) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (log.f64 y)))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y)))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (log.f64 y)) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y))) (log.f64 z))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 (/.f64 -1 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y))) (log.f64 z)))","(+.f64 (+.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (log.f64 -1)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 (/.f64 -1 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(-.f64 (+.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (fma.f64 a (log.f64 t) (log.f64 -1))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)))) (log.f64 (/.f64 -1 y))))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (log.f64 -1)) (-.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 (/.f64 -1 y))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (+.f64 (/.f64 x y) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y))) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (log.f64 y)))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y)))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (log.f64 y)) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (/.f64 y x))","(+.f64 (log.f64 z) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (/.f64 y x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (+.f64 (/.f64 y x) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (log.f64 z))) (fma.f64 a (log.f64 t) (log.f64 x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z))","(+.f64 (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (log.f64 z))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (log.f64 z)))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 a (log.f64 t) (log.f64 z))))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (log.f64 z)))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 -1) (-.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (-.f64 (log.f64 -1) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 -1) (-.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (-.f64 (log.f64 -1) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 -1) (-.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (-.f64 (log.f64 -1) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 -1) (-.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))) (-.f64 (log.f64 -1) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (+.f64 t (*.f64 (log.f64 t) 1/2)))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x))) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y))) (-.f64 (/.f64 x y) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (+.f64 (log.f64 z) (/.f64 x y)) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)) (+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)) (+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y))) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)) (log.f64 (/.f64 -1 y)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y))) (log.f64 z))) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)))) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y))))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (fma.f64 a (log.f64 t) (log.f64 -1))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(-.f64 (+.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (log.f64 -1))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 y))) (-.f64 (/.f64 x y) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (+.f64 (log.f64 z) (/.f64 x y)) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)) (+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)) (+.f64 (log.f64 z) (+.f64 (log.f64 y) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (-.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (+.f64 t (*.f64 (log.f64 t) 1/2)))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x))) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (log.f64 x)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)) (log.f64 (/.f64 -1 x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z)) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (log.f64 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)) (+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (-.f64 (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))) (-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))) (-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 a (log.f64 t) (*.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y)))))) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (+.f64 -1/2 (/.f64 (*.f64 y 1/3) x)))) (+.f64 (log.f64 -1) (/.f64 y x))) (+.f64 (log.f64 (/.f64 -1 x)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (log.f64 z) (-.f64 (fma.f64 (log.f64 t) 1/2 t) (log.f64 (+.f64 y x))))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (*.f64 1/2 (log.f64 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))) (*.f64 -1/2 (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (*.f64 (log.f64 t) -1/2)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 (log.f64 t) (-.f64 a 1/2))))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))) (*.f64 1/2 (log.f64 t)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (+.f64 (log.f64 z) (*.f64 a (log.f64 t))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(+.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (*.f64 a (log.f64 t)) (log.f64 x))","(fma.f64 a (log.f64 t) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 a (log.f64 t) (log.f64 x))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 a (log.f64 t) (log.f64 x)))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y))))","(fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))","(fma.f64 a (log.f64 t) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y)))","(fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 y))))","(-.f64 (fma.f64 a (log.f64 t) (+.f64 (log.f64 -1) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 a (log.f64 t))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 a (log.f64 t))))))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 -1))) (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 a (log.f64 t)))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 a (log.f64 t)))))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (-.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 -1))) (log.f64 (/.f64 -1 y))))","(-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 a (log.f64 t)) (log.f64 y))","(fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))","(fma.f64 a (log.f64 t) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 y)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 a (log.f64 t) (log.f64 y))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (fma.f64 a (log.f64 t) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t)))","(fma.f64 a (log.f64 t) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 a (log.f64 t) (log.f64 x))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 a (log.f64 t) (log.f64 x)))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 a (log.f64 t) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))","(-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x)))","(fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))","(+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 a (log.f64 t) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (-.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (log.f64 (/.f64 -1 x))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(log.f64 (+.f64 y x))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(*.f64 a (log.f64 t))","(neg.f64 (*.f64 (neg.f64 (log.f64 t)) a))","(neg.f64 (*.f64 (neg.f64 a) (log.f64 t)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (log.f64 (+.f64 y x)))","(fma.f64 -1 (*.f64 (neg.f64 (log.f64 t)) a) (log.f64 (+.f64 y x)))","(-.f64 (log.f64 (+.f64 y x)) (*.f64 (neg.f64 (log.f64 t)) a))","(fma.f64 a (log.f64 t) (log.f64 (+.f64 y x)))"]],"stop":[["node limit",1]],"time":77.9130859375,"type":"simplify"},{"compiler":[[8745,3450]],"time":61.6220703125,"type":"eval"},{"alts":[["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","done",0.2930289650483855],["(-.f64 (/.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",31.471670244054884],["(+.f64 (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (*.f64 a (log.f64 t)) (fma.f64 (log.f64 t) 1/2 t)))","fresh",14.42340748993273],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (sqrt.f64 (*.f64 a (log.f64 t))) 2))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",30.221998840231308],["(log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))","fresh",51.25],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","next",0.49298785180657395],["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z)))","fresh",32.01466752930533],["(+.f64 (log.f64 (+.f64 x y)) (/.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)))))","fresh",27.77227370241718],["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))","fresh",1.1179707791063316],["(-.f64 (+.f64 (log.f64 z) (fma.f64 (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 2) (cbrt.f64 (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",0.4946090920381318],["(fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","fresh",14.48551224499161]],"compiler":[[24,16],[55,28],[22,14],[27,19],[21,14],[27,19],[30,20],[37,25],[62,38],[32,19],[36,16],[55,28],[22,14],[27,19],[21,14],[27,19],[30,20],[37,25],[62,38],[32,19],[36,16]],"count":[[316,11]],"kept":[{"done":[0,0],"fresh":[10,4],"new":[305,6],"picked":[1,1]}],"min-error":[0.0546875],"time":87.240966796875,"type":"prune"},{"compiler":[[98,35]],"locations":[["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))",0.09918873993272953,true],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))",0.24962523065654074,true],["(*.f64 a (log.f64 t))",0.2890625,false],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)",0.7426339356003986,true]],"time":20.56201171875,"type":"localize"},{"count":[[3,114]],"series":[["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","-inf",0.2998046875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","inf",0.2900390625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","t","0",0.2509765625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","-inf",0.300048828125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","inf",0.343017578125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","a","0",0.333984375],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","-inf",0.31103515625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","inf",0.31103515625],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","x","0",0.31689453125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","-inf",0.31201171875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","inf",0.321044921875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","y","0",0.302001953125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","-inf",0.257080078125],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","inf",0.27294921875],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","z","0",0.281982421875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","t","-inf",0.253173828125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","t","inf",0.27392578125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","t","0",0.18896484375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","a","-inf",0.31201171875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","a","inf",0.276123046875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","a","0",0.255859375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","x","-inf",0.31494140625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","x","inf",0.276123046875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","x","0",0.277099609375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","y","-inf",0.305908203125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","y","inf",0.276123046875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","y","0",0.284912109375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","z","-inf",0.27001953125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","z","inf",0.261962890625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","z","0",1.02197265625],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","t","-inf",1.43603515625],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","t","inf",1.52685546875],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","t","0",1.5361328125],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","a","-inf",1.544921875],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","a","inf",0.56494140625],["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","a","0",0.85986328125]],"time":17.48193359375,"type":"series"},{"count":[[3,139]],"egraph":[[2,6498,45,0.042813667],[1,455,45,0.008726667],[0,20,55,0.000507375]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (log.f64 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (log.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 t) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (log.f64 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (log.f64 t))) (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)) (cbrt.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 a (log.f64 t)))) (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (log.f64 t)) (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (cbrt.f64 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (*.f64 (cbrt.f64 (log.f64 t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 a (log.f64 t)) 1/6) (*.f64 (pow.f64 (*.f64 a (log.f64 t)) 1/6) (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a (log.f64 t))) (sqrt.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 t)) (*.f64 (sqrt.f64 (log.f64 t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))) 3) (cbrt.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 a (log.f64 t)) 1/6) 3) (pow.f64 (pow.f64 (*.f64 a (log.f64 t)) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (sqrt.f64 (log.f64 t))) (sqrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 t) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)) 1) (cbrt.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)))) (cbrt.f64 (cbrt.f64 (*.f64 a (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)) (cbrt.f64 a)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2)) (pow.f64 (*.f64 a (log.f64 t)) 1/6)) (pow.f64 (*.f64 a (log.f64 t)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 t a) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (log.f64 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 t a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (log.f64 t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (log.f64 z) 2) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (/.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (/.f64 1 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3))) (neg.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2))) (neg.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (+.f64 y x))) 3) (pow.f64 (*.f64 a (log.f64 t)) 3)) (+.f64 (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x)))) (-.f64 (pow.f64 (*.f64 a (log.f64 t)) 2) (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 a (log.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (pow.f64 (log.f64 z) 2)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x))) (neg.f64 (pow.f64 (*.f64 a (log.f64 t)) 2))) (-.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 a (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (fma.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (cbrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (sqrt.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 z) (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (+.f64 (log.f64 z) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 1 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) 1/2 t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) 1/2 t)) 2) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (+.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (log.f64 t)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 -1/2 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 -1 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (log.f64 (sqrt.f64 t))) 2)) (cbrt.f64 (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (*.f64 (neg.f64 (sqrt.f64 (log.f64 (sqrt.f64 t)))) (sqrt.f64 (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (*.f64 a (log.f64 t)) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 z (+.f64 y x))) (+.f64 (*.f64 a (log.f64 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 2)) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2)) (/.f64 1 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (fma.f64 (log.f64 t) 1/2 t))) (-.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2)) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 3))) (neg.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (fma.f64 (log.f64 t) 1/2 t) (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (pow.f64 (fma.f64 (log.f64 t) 1/2 t) 2))) (neg.f64 (+.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (+.f64 (pow.f64 t 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (+.f64 (pow.f64 t 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 t t (*.f64 (log.f64 (sqrt.f64 t)) (-.f64 (log.f64 (sqrt.f64 t)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (-.f64 t (log.f64 (sqrt.f64 t)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (-.f64 (*.f64 t t) (pow.f64 (log.f64 (sqrt.f64 t)) 2)))) (*.f64 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z)))) (-.f64 t (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (-.f64 t (log.f64 (sqrt.f64 t)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 (*.f64 t t) (pow.f64 (log.f64 (sqrt.f64 t)) 2)))) (*.f64 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (-.f64 t (log.f64 (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) 3) (pow.f64 (log.f64 (sqrt.f64 t)) 3)) (+.f64 (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (+.f64 (pow.f64 (log.f64 (sqrt.f64 t)) 2) (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (log.f64 (sqrt.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) 3)) (+.f64 (pow.f64 (log.f64 z) 2) (-.f64 (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))) (*.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 3) (pow.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (-.f64 (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))) (*.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (pow.f64 (log.f64 (sqrt.f64 t)) 2)) (+.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 2) (*.f64 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))) (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (fma.f64 (log.f64 t) 1/2 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) 1 (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) 2) (cbrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (/.f64 1 (+.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (log.f64 z))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2)) (/.f64 1 (log.f64 (/.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (neg.f64 (fma.f64 (log.f64 t) 1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t))) (cbrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (sqrt.f64 (-.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a)))) t)) (neg.f64 (log.f64 (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))))) (sqrt.f64 t)) (neg.f64 (log.f64 (sqrt.f64 t))))))))"]],"rules":[["egg-rr",69],["egg-rr",37],["egg-rr",33]],"stop":[["node limit",1]],"time":77.239013671875,"type":"rewrite"},{"count":[[253,245]],"egraph":[[3,6481,2817,0.027986292],[2,2807,2835,0.013577124999999999],[1,717,2916,0.004855917],[0,196,3428,0.001065667]],"inputs":[["(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(*.f64 -1 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 t)) a)))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(*.f64 1 (*.f64 a (log.f64 t)))","(*.f64 (log.f64 t) a)","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))))","(fma.f64 (log.f64 t) a (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) a (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))))","(fma.f64 (log.f64 t) a (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) a (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))))","(fma.f64 (log.f64 t) a (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) a (log.f64 -1)))","(+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))))","(fma.f64 (log.f64 t) a (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) a (log.f64 -1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))","(fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (/.f64 y x))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)) (/.f64 y x))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (log.f64 t) a (/.f64 y x)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))","(+.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))","(+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (log.f64 y)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 y))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (log.f64 y)) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (log.f64 z))))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (-.f64 (log.f64 z) (log.f64 (/.f64 -1 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)))))","(-.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (+.f64 (log.f64 z) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(-.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (+.f64 (log.f64 z) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (-.f64 (log.f64 z) (log.f64 (/.f64 -1 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z))))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)))))))","(-.f64 (+.f64 (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (log.f64 -1)) (fma.f64 a (log.f64 t) (log.f64 z))) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)))) (log.f64 (/.f64 -1 y))))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (log.f64 -1)) (-.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 (/.f64 -1 y))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y)))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 y))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y))))","(+.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (/.f64 x y))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))))","(+.f64 (/.f64 x y) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (log.f64 y)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 y))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (log.f64 y)) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)))","(fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (log.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))","(fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (/.f64 y x))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)) (/.f64 y x))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (fma.f64 (log.f64 t) a (/.f64 y x)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (/.f64 y x))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x)))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 x)) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (log.f64 z))))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x)))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))","(+.f64 (/.f64 y x) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x)))))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x)))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x))))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))) (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))) (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 z) (log.f64 (+.f64 y x)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 z)))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 a (log.f64 t) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (-.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (-.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (-.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (*.f64 -1 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (neg.f64 (log.f64 (/.f64 -1 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (-.f64 (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 (/.f64 -1 z)) (log.f64 -1))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(+.f64 (+.f64 (log.f64 -1) (-.f64 (log.f64 (+.f64 y x)) (log.f64 (/.f64 -1 z)))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 x)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 (/.f64 -1/2 x) (*.f64 (/.f64 y x) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (-.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 -1)) (+.f64 (log.f64 z) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(-.f64 (+.f64 (fma.f64 (log.f64 t) a (/.f64 x y)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (fma.f64 (log.f64 t) 1/2 t))) (log.f64 (/.f64 -1 y)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y)))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (/.f64 x y) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (/.f64 x y) (/.f64 (*.f64 -1/2 (*.f64 x x)) (*.f64 y y)))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (log.f64 -1)) (fma.f64 a (log.f64 t) (log.f64 z))) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))) (log.f64 (/.f64 -1 y))) (fma.f64 (log.f64 t) 1/2 t))","(-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (+.f64 (fma.f64 (log.f64 t) a (/.f64 x y)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z))) (fma.f64 (log.f64 t) 1/2 t)))) (log.f64 (/.f64 -1 y)))","(-.f64 (+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (*.f64 (+.f64 (/.f64 (*.f64 x -1/2) y) 1) (/.f64 x y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (log.f64 -1))) (+.f64 (log.f64 (/.f64 -1 y)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 y)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 y) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (log.f64 z) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (/.f64 x y) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (log.f64 y)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (log.f64 z)) (neg.f64 (neg.f64 (log.f64 y))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)) (-.f64 (fma.f64 a (log.f64 t) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (log.f64 z) (log.f64 y)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (/.f64 x (/.f64 y x)) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (+.f64 (+.f64 (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (log.f64 z)) (log.f64 y)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x)) (-.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (fma.f64 (log.f64 t) 1/2 t))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 z) (log.f64 x))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (log.f64 x)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (+.f64 (log.f64 z) (log.f64 x)) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 (/.f64 -1/2 x) (*.f64 (/.f64 y x) y) (log.f64 x)) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (log.f64 z)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (log.f64 -1) (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(-.f64 (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x))) (fma.f64 (log.f64 t) 1/2 t))","(+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t)))","(-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))) (log.f64 (/.f64 -1 x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (log.f64 z)))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (/.f64 y x) (-.f64 (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (/.f64 y x) (+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 -1) (log.f64 z)))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (fma.f64 1 (*.f64 a (log.f64 t)) (+.f64 (log.f64 -1) (log.f64 z))))) (+.f64 t (*.f64 (log.f64 t) 1/2))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 a (log.f64 t) (log.f64 z))) (log.f64 (/.f64 -1 x)))) (-.f64 (/.f64 y x) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (fma.f64 (/.f64 -1/2 x) (/.f64 y (/.f64 x y)) (/.f64 y x)) (+.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 y -1/2) x) 1) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (/.f64 y x) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 1 (*.f64 a (log.f64 t))))))))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))) (-.f64 (+.f64 (log.f64 -1) (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 (*.f64 -1/2 y) y) (*.f64 x x))) (fma.f64 a (log.f64 t) (log.f64 z)))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))) (-.f64 (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 (*.f64 y -1/2) x) (/.f64 y x)))))) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))) (-.f64 (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (fma.f64 (log.f64 t) a (*.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 -1/2 (/.f64 (*.f64 1/3 y) x))))) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z))) (*.f64 1/2 (log.f64 t)))","(+.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (*.f64 -1/2 (log.f64 t)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (log.f64 t) -1/2)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (*.f64 (log.f64 t) (-.f64 a 1/2)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 t))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))) (*.f64 1/2 (log.f64 t)))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 a (log.f64 (/.f64 1 t))))) (log.f64 (+.f64 y x))))) (*.f64 -1/2 (log.f64 (/.f64 1 t))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(*.f64 -1 t)","(neg.f64 t)","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))","(-.f64 (+.f64 (*.f64 -1 t) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))) (*.f64 1/2 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))))","(-.f64 (+.f64 (fma.f64 1 (*.f64 a (log.f64 t)) (log.f64 z)) (log.f64 (+.f64 y x))) (+.f64 t (*.f64 (log.f64 t) 1/2)))","(+.f64 (fma.f64 a (log.f64 t) (log.f64 z)) (-.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) 1/2 t)))","(+.f64 (+.f64 (log.f64 z) (log.f64 (+.f64 y x))) (-.f64 (*.f64 (log.f64 t) (-.f64 a 1/2)) t))","(-.f64 (+.f64 (log.f64 (+.f64 y x)) (-.f64 (log.f64 z) t)) (*.f64 (log.f64 t) (-.f64 1/2 a)))"]],"stop":[["node limit",1]],"time":71.074951171875,"type":"simplify"},{"compiler":[[7700,3161]],"time":54.656982421875,"type":"eval"},{"alts":[["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z)))","fresh",32.01466752930533],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","next",0.4363090431959217],["(+.f64 (log.f64 (+.f64 x y)) (/.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)))))","fresh",27.77227370241718],["(+.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (log.f64 z))","fresh",31.395700031321827],["(log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))","fresh",51.25],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","done",0.49298785180657395],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (sqrt.f64 (log.f64 t))) (sqrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",34.602226269536885],["(-.f64 (/.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",31.471670244054884],["(fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","fresh",14.48551224499161],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (cbrt.f64 a) (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",17.46328272481683],["(+.f64 (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (*.f64 a (log.f64 t)) (fma.f64 (log.f64 t) 1/2 t)))","fresh",14.42340748993273],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 (log.f64 t) (sqrt.f64 a)) (sqrt.f64 a)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",34.20354892365929]],"compiler":[[30,20],[31,20],[37,25],[22,15],[21,14],[27,19],[29,18],[55,28],[36,16],[30,20],[22,14],[28,18],[30,20],[31,20],[37,25],[22,15],[21,14],[29,18],[55,28],[36,16],[30,20],[22,14],[28,18]],"count":[[272,12]],"kept":[{"done":[1,0],"fresh":[9,4],"new":[261,7],"picked":[1,1]}],"min-error":[0.015625],"time":74.404052734375,"type":"prune"},{"compiler":[[120,47]],"locations":[["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))",0.24962523065654074,true],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))",0.2734375,true],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))",0.3359375,true],["(pow.f64 (cbrt.f64 (log.f64 t)) 2)",0.46322250976844204,true]],"time":25.966064453125,"type":"localize"},{"count":[[4,120]],"series":[["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","t","-inf",0.265869140625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","t","inf",0.198974609375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","t","0",0.2080078125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","a","-inf",0.178955078125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","a","inf",0.194091796875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","a","0",0.177001953125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","x","-inf",0.235107421875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","x","inf",0.2431640625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","x","0",0.22900390625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","y","-inf",0.23388671875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","y","inf",0.258056640625],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","y","0",0.223876953125],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","z","-inf",0.236083984375],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","z","inf",0.203857421875],["(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))","z","0",0.9951171875],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","t","-inf",1.471923828125],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","t","inf",1.10107421875],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","t","0",1.748779296875],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","a","-inf",0.300048828125],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","a","inf",0.33203125],["(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","a","0",1.52294921875],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","t","-inf",0.31396484375],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","t","inf",0.333984375],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","t","0",1.009033203125],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","a","-inf",0.27099609375],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","a","inf",0.2548828125],["(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","a","0",1.301025390625],["(pow.f64 (cbrt.f64 (log.f64 t)) 2)","t","-inf",1.262939453125],["(pow.f64 (cbrt.f64 (log.f64 t)) 2)","t","inf",1.2490234375],["(pow.f64 (cbrt.f64 (log.f64 t)) 2)","t","0",1.23095703125]],"time":18.291015625,"type":"series"},{"count":[[4,142]],"egraph":[[2,4906,40,0.036480792],[1,363,42,0.006682542],[0,17,44,0.000380958]],"inputs":[["(pow.f64 (cbrt.f64 (log.f64 t)) 2)","(*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))","(*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 t)) (cbrt.f64 (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (log.f64 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 t)) (pow.f64 (log.f64 t) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 t) 1/6) (*.f64 (pow.f64 (log.f64 t) 1/6) (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (log.f64 t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (log.f64 t))) (cbrt.f64 (pow.f64 (exp.f64 a) (log.f64 t))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (log.f64 t)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a) (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (log.f64 t) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log.f64 t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log.f64 t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (log.f64 t) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log.f64 t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (log.f64 t) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a) (log.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (log.f64 t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log.f64 t) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (log.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (log.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (log.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (log.f64 t) a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a)) (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a)))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (log.f64 t) a) 2) a) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (log.f64 t)) (sqrt.f64 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 4) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (log.f64 t) a) 2) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 t) 2) (pow.f64 a 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a 3) (pow.f64 (log.f64 t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 a) (*.f64 2/3 (log.f64 (log.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log.f64 a) (*.f64 2/3 (log.f64 (log.f64 t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (log.f64 z) 2) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))) (/.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 2) (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) (sqrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 3)) (/.f64 1 (fma.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z)) (pow.f64 (log.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2)) (/.f64 1 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z)) (pow.f64 (log.f64 z) 2)) (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 3)) (fma.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z)) (pow.f64 (log.f64 z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 3)) (+.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 3))) (neg.f64 (fma.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z)) (pow.f64 (log.f64 z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2))) (neg.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 (*.f64 z (+.f64 y x))) 3) (pow.f64 (*.f64 (log.f64 t) a) 3)) (fma.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (pow.f64 (*.f64 (log.f64 t) a) 2) (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (log.f64 t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 2) (pow.f64 (log.f64 z) 2)) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (log.f64 (*.f64 z (+.f64 y x))) (log.f64 (*.f64 z (+.f64 y x)))) (pow.f64 (*.f64 (log.f64 t) a) 2)) (-.f64 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (log.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 z (exp.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) (log.f64 t)) (exp.f64 (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (log.f64 t) a))) (exp.f64 (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) (log.f64 t)) (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (log.f64 t) a))) (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 z 1)) (exp.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 z (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 z 1)) (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (+.f64 1 (-.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))) (+.f64 1 (-.f64 z 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 z (+.f64 y x)) (pow.f64 (exp.f64 a) (log.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (log.f64 (*.f64 z (+.f64 y x)))) (+.f64 1 (expm1.f64 (*.f64 (log.f64 t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 z (+.f64 y x)) (+.f64 1 (expm1.f64 (*.f64 (log.f64 t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 t)) (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) (*.f64 a (cbrt.f64 (log.f64 t))) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (log.f64 t) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a) (cbrt.f64 (log.f64 t)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 t) a) 1 (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 z) 1 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (+.f64 y x)) 1 (fma.f64 (log.f64 t) a (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) 1 (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (log.f64 t) a) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 (*.f64 z (+.f64 y x))) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 (+.f64 y x))) (pow.f64 (cbrt.f64 (log.f64 (+.f64 y x))) 2) (fma.f64 (log.f64 t) a (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 y x))) 2) (cbrt.f64 (log.f64 (+.f64 y x))) (fma.f64 (log.f64 t) a (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (log.f64 t) a)) (pow.f64 (cbrt.f64 (*.f64 (log.f64 t) a)) 2) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (log.f64 t) a)) 2) (cbrt.f64 (*.f64 (log.f64 t) a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 z)) (pow.f64 (cbrt.f64 (log.f64 z)) 2) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) 2) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) (cbrt.f64 (log.f64 t))) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) 2) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) 2) (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) (log.f64 t)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (+.f64 y x))) (sqrt.f64 (log.f64 (+.f64 y x))) (fma.f64 (log.f64 t) a (log.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (log.f64 t) a)) (sqrt.f64 (*.f64 (log.f64 t) a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 z)) (sqrt.f64 (log.f64 z)) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 t)) (sqrt.f64 a)) (*.f64 (*.f64 (cbrt.f64 (log.f64 t)) (sqrt.f64 a)) (cbrt.f64 (log.f64 t))) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (sqrt.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) (log.f64 t)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 t) 1/6) (*.f64 (pow.f64 (log.f64 t) 1/6) (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (log.f64 (+.f64 y x)) 3) (pow.f64 (*.f64 (log.f64 t) a) 3)) (/.f64 1 (fma.f64 (*.f64 (log.f64 t) a) (-.f64 (*.f64 (log.f64 t) a) (log.f64 (+.f64 y x))) (pow.f64 (log.f64 (+.f64 y x)) 2))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (log.f64 (+.f64 y x)) 2) (pow.f64 (*.f64 (log.f64 t) a) 2)) (/.f64 1 (-.f64 (log.f64 (+.f64 y x)) (*.f64 (log.f64 t) a))) (log.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 (*.f64 z (+.f64 y x))) 1 (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 z (+.f64 y x)))) (cbrt.f64 (log.f64 (*.f64 z (+.f64 y x))))) (cbrt.f64 (log.f64 (*.f64 z (+.f64 y x)))) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 (*.f64 z (+.f64 y x)))) (sqrt.f64 (log.f64 (*.f64 z (+.f64 y x)))) (*.f64 (log.f64 t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 t)) a) (pow.f64 (cbrt.f64 (log.f64 t)) 2) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) 2)) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 t)) (*.f64 (cbrt.f64 (log.f64 t)) (sqrt.f64 a))) (*.f64 (cbrt.f64 (log.f64 t)) (sqrt.f64 a)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 (log.f64 t))) (sqrt.f64 (log.f64 t)) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 t))) (log.f64 (*.f64 z (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a) (pow.f64 (log.f64 t) 1/6)) (pow.f64 (log.f64 t) 1/6) (log.f64 (*.f64 z (+.f64 y x))))))))"]],"rules":[["egg-rr",87],["egg-rr",18],["egg-rr",16],["egg-rr",21]],"stop":[["node limit",1]],"time":68.780029296875,"type":"rewrite"},{"count":[[262,203]],"egraph":[[3,3618,1866,0.020219292],[2,1246,1876,0.007459667],[1,395,1894,0.0024689589999999997],[0,135,2024,0.000644667]],"inputs":[["(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 a (log.f64 t))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(*.f64 a (log.f64 t))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (log.f64 t) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 t)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 t)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 t)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 t)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(pow.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 t) 2))","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 (log.f64 t) a)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 t)) a))","(*.f64 (log.f64 t) a)","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (log.f64 t) a)","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (log.f64 t) a)","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (log.f64 t) a)","(*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))))","(*.f64 (log.f64 t) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 t) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 t)) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t)))) 2)) 1/3) a)","(*.f64 a (cbrt.f64 (pow.f64 (log.f64 t) 2)))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 t) 2)) a)","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 z))) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (+.f64 (log.f64 -1) (log.f64 (+.f64 y x))) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (+.f64 (log.f64 -1) (log.f64 (+.f64 y x))) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (+.f64 (log.f64 -1) (log.f64 (+.f64 y x))) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 -1) (+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 -1 z))))))","(+.f64 (+.f64 (log.f64 -1) (log.f64 (+.f64 y x))) (fma.f64 a (log.f64 t) (neg.f64 (log.f64 (/.f64 -1 z)))))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x))) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 (+.f64 y x)) (-.f64 (fma.f64 (log.f64 t) a (log.f64 -1)) (log.f64 (/.f64 -1 z))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x)))","(fma.f64 (log.f64 t) a (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (/.f64 y x))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (log.f64 x) (/.f64 y x)))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))","(+.f64 (+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x))) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (log.f64 x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x))))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x)))))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x)))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (*.f64 -1 (log.f64 (/.f64 1 y)))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))","(+.f64 (+.f64 (/.f64 x y) (log.f64 z)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (/.f64 x y)))","(+.f64 (log.f64 z) (+.f64 (/.f64 x y) (fma.f64 (log.f64 t) a (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (/.f64 x y)))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 y) x) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (*.f64 a (log.f64 t)))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 y) x) 1) (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a)))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 x y) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a))))","(-.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (log.f64 -1) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 -1) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y)))))","(-.f64 (+.f64 (/.f64 x y) (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z)))) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))))","(-.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 (log.f64 t) a (log.f64 z))) (+.f64 (log.f64 -1) (/.f64 x y))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (fma.f64 (/.f64 -1/2 y) (/.f64 (*.f64 x x) y) (log.f64 -1)) (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y)))))","(+.f64 (log.f64 -1) (+.f64 (fma.f64 (log.f64 t) a (fma.f64 (/.f64 x y) (*.f64 (/.f64 x y) -1/2) (log.f64 z))) (-.f64 (/.f64 x y) (log.f64 (/.f64 -1 y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (log.f64 -1) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (+.f64 (/.f64 x y) (log.f64 -1)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z))))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (fma.f64 (log.f64 t) a (log.f64 z))) (+.f64 (log.f64 -1) (/.f64 x y)))) (log.f64 (/.f64 -1 y)))","(+.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (/.f64 x y)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (fma.f64 (/.f64 -1/2 y) (/.f64 (*.f64 x x) y) (log.f64 z)))) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 x y) (-.f64 (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z))))) (log.f64 (/.f64 -1 y))))","(+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y)))","(+.f64 (/.f64 x y) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))","(+.f64 (+.f64 (/.f64 x y) (log.f64 z)) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (/.f64 x y)))","(+.f64 (log.f64 z) (+.f64 (/.f64 x y) (fma.f64 (log.f64 t) a (log.f64 y))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y)))))","(+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y)))))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z)) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (/.f64 x y)))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 y) x) 1) (/.f64 x y)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (/.f64 x y) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (log.f64 z) (+.f64 (*.f64 a (log.f64 t)) (log.f64 y))))))","(fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (/.f64 x y) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (neg.f64 (neg.f64 (log.f64 y))))))))","(+.f64 (+.f64 (fma.f64 (log.f64 t) a (log.f64 y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 z))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 x y)))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 x y))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 y))) (fma.f64 1/3 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 y) x) 1) (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))","(+.f64 (log.f64 z) (fma.f64 (log.f64 t) a (log.f64 x)))","(fma.f64 (log.f64 t) a (+.f64 (log.f64 z) (log.f64 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(+.f64 (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))) (/.f64 y x))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (log.f64 x) (/.f64 y x)))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (/.f64 y x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x)))))","(+.f64 (+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x))) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (log.f64 x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x))))","(+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (+.f64 (log.f64 z) (fma.f64 a (log.f64 t) (log.f64 x))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (log.f64 x)))))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (/.f64 y x)) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (log.f64 x))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (log.f64 z) (+.f64 (fma.f64 (log.f64 t) a (log.f64 x)) (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a)))","(-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (log.f64 (/.f64 -1 x)))","(+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x))))","(-.f64 (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z))) (log.f64 (/.f64 -1 x)))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))","(+.f64 (/.f64 y x) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a))))","(+.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (-.f64 (/.f64 y x) (log.f64 (/.f64 -1 x))))","(+.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (+.f64 (/.f64 y x) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z))) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t)))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a)))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (log.f64 (/.f64 -1 x)))))","(+.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (/.f64 y x)) (log.f64 (/.f64 -1 x))))","(+.f64 (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z))) (-.f64 (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x)) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 y x) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 -1) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (+.f64 (+.f64 (log.f64 -1) (log.f64 z)) (*.f64 (log.f64 t) a))))))","(+.f64 (/.f64 y x) (fma.f64 1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (+.f64 (log.f64 -1) (fma.f64 (log.f64 t) a (log.f64 z))) (log.f64 (/.f64 -1 x))))))","(+.f64 (/.f64 y x) (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 x x)) y) (fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (log.f64 -1) (-.f64 (fma.f64 (log.f64 t) a (log.f64 z)) (log.f64 (/.f64 -1 x)))))))","(fma.f64 1/3 (pow.f64 (/.f64 y x) 3) (+.f64 (fma.f64 (log.f64 t) a (+.f64 (log.f64 -1) (log.f64 z))) (-.f64 (*.f64 (+.f64 (*.f64 (/.f64 -1/2 x) y) 1) (/.f64 y x)) (log.f64 (/.f64 -1 x)))))","(+.f64 (log.f64 (+.f64 y x)) (log.f64 z))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(*.f64 a (log.f64 t))","(*.f64 (log.f64 t) a)","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (log.f64 z) (*.f64 a (log.f64 t))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 -1 (*.f64 a (log.f64 (/.f64 1 t)))) (+.f64 (log.f64 z) (log.f64 (+.f64 y x))))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))","(+.f64 (*.f64 a (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 t))))) (+.f64 (log.f64 (+.f64 y x)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (+.f64 (*.f64 (log.f64 t) a) (log.f64 z)))","(+.f64 (log.f64 (+.f64 y x)) (fma.f64 (log.f64 t) a (log.f64 z)))"]],"stop":[["node limit",1]],"time":59.997802734375,"type":"simplify"},{"compiler":[[5616,2271]],"time":40.55615234375,"type":"eval"},{"alts":[["(-.f64 (fma.f64 (sqrt.f64 (log.f64 (+.f64 y x))) (sqrt.f64 (log.f64 (+.f64 y x))) (fma.f64 (log.f64 t) a (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",16.223723487538493],["(-.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 3) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",14.652823585222915],["(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z)))","fresh",32.01466752930533],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) 3) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",0.5479117650476293],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","done",0.4363090431959217],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (pow.f64 (log.f64 t) 2) 1/3)) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",0.54642417995411],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (cbrt.f64 a) (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",17.46328272481683],["(log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))","fresh",51.25],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","done",0.49298785180657395],["(+.f64 (log.f64 (+.f64 x y)) (/.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)))))","fresh",27.77227370241718],["(-.f64 (fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",0.3684865038233252],["(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (*.f64 (*.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 t))))) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","fresh",0.5319867041216495]],"compiler":[[29,16],[25,17],[30,20],[34,23],[31,20],[32,22],[30,20],[21,14],[27,19],[37,25],[29,18],[41,23]],"count":[[215,12]],"kept":[{"done":[1,1],"fresh":[10,4],"new":[203,6],"picked":[1,1]}],"min-error":[0.0078125],"time":57.6728515625,"type":"prune"},{"accuracy":[0.28470379109026733],"baseline":[0.28470379109026733],"branch":[["x",0.28470379109026733,1],["y",0.28470379109026733,1],["z",0.28470379109026733,1],["t",0.28470379109026733,1],["a",0.28470379109026733,1],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))",0.28470379109026733,1],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",0.28470379109026733,1],["(log.f64 (+.f64 x y))",0.28470379109026733,1],["(+.f64 x y)",0.28470379109026733,1],["(log.f64 z)",0.28470379109026733,1],["(-.f64 a 1/2)",0.28470379109026733,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[21,15],[12,9],[9,7],[8,6],[7,6],[8,7],[857,343]],"count":[[32,1]],"inputs":[["(-.f64 (fma.f64 (sqrt.f64 (log.f64 (+.f64 y x))) (sqrt.f64 (log.f64 (+.f64 y x))) (fma.f64 (log.f64 t) a (log.f64 z))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) a (log.f64 (*.f64 z (+.f64 y x))))) 3) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 t)) 2) a)) 3) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (pow.f64 (log.f64 t) 2) 1/3)) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (fma.f64 (pow.f64 (cbrt.f64 (log.f64 z)) 2) (cbrt.f64 (log.f64 z)) (fma.f64 (log.f64 t) a (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (*.f64 (*.f64 (cbrt.f64 (log.f64 t)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 t))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 t))))) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (pow.f64 (cbrt.f64 (log.f64 t)) 2)) (cbrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (-.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) (fma.f64 (log.f64 t) 1/2 t)) (log.f64 z))","(log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 a (sqrt.f64 (log.f64 t))) (sqrt.f64 (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (/.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 (cbrt.f64 a) (log.f64 t))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 (*.f64 (log.f64 t) (sqrt.f64 a)) (sqrt.f64 a)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (/.f64 (+.f64 (pow.f64 (log.f64 z) 3) (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 3)) (+.f64 (pow.f64 (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))) 2) (-.f64 (pow.f64 (log.f64 z) 2) (*.f64 (log.f64 z) (log.f64 (*.f64 (+.f64 y x) (pow.f64 t a))))))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (*.f64 z (+.f64 y x))) (-.f64 (*.f64 a (log.f64 t)) (fma.f64 (log.f64 t) 1/2 t)))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (sqrt.f64 (*.f64 a (log.f64 t))) 2))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(log.f64 (/.f64 (*.f64 z (*.f64 (+.f64 y x) (pow.f64 t a))) (*.f64 (exp.f64 t) (sqrt.f64 t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 3))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (+.f64 (log.f64 z) (fma.f64 (pow.f64 (cbrt.f64 (*.f64 a (log.f64 t))) 2) (cbrt.f64 (*.f64 a (log.f64 t))) (log.f64 (+.f64 y x)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 z)))","(+.f64 (log.f64 (+.f64 x y)) (/.f64 1 (/.f64 (+.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (-.f64 (pow.f64 (log.f64 z) 2) (pow.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t) 2)))))","(+.f64 (log.f64 (+.f64 x y)) (pow.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3) 1/3))","(fma.f64 (*.f64 (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z)))) (cbrt.f64 (log.f64 (*.f64 (+.f64 x y) z))) (neg.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 3)))","(fma.f64 (sqrt.f64 (log.f64 (+.f64 x y))) (sqrt.f64 (log.f64 (+.f64 x y))) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (neg.f64 (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (sqrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) (log.f64 z)))","(+.f64 (log.f64 (+.f64 x y)) (fma.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (pow.f64 (cbrt.f64 (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))","(-.f64 (+.f64 (log.f64 z) (+.f64 (log.f64 (+.f64 y x)) (*.f64 a (log.f64 t)))) (+.f64 t (*.f64 1/2 (log.f64 t))))","(-.f64 (/.f64 (pow.f64 (log.f64 (+.f64 x y)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (/.f64 (pow.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)) 2) (+.f64 (log.f64 (/.f64 (+.f64 x y) z)) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))))","(fma.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) 2) (cbrt.f64 (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t))) (log.f64 (+.f64 x y)))","(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))","(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))"]],"link":["."],"name":["Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2"],"oracle":[64.0],"outputs":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))"]],"time":122.8701171875,"times":[["x",9.89599609375],["y",9.906982421875],["z",9.85400390625],["t",9.9560546875],["a",11.238037109375],["(+.f64 (-.f64 (+.f64 (log.f64 (+.f64 x y)) (log.f64 z)) t) (*.f64 (-.f64 a 1/2) (log.f64 t)))",10.171142578125],["(+.f64 (log.f64 (+.f64 x y)) (log.f64 z))",10.114990234375],["(log.f64 (+.f64 x y))",10.169921875],["(+.f64 x y)",9.934814453125],["(log.f64 z)",9.97900390625],["(-.f64 a 1/2)",6.43701171875]],"type":"regimes"},{"compiler":[[20,14]],"egraph":[[4,35,23,0.000163541],[3,33,23,0.00012804100000000002],[2,29,23,9.2958e-5],[1,21,23,5.9708000000000005e-5],[0,15,23,2.6916e-5]],"inputs":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (log.f64 (+.f64 x y)) (-.f64 (log.f64 z) (fma.f64 (log.f64 t) (-.f64 1/2 a) t)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.821044921875,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[20,14],[20,14],[20,14]],"remove-preprocessing":[["(sort x y)"]],"time":11.1201171875,"type":"end"}]