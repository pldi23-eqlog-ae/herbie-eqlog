[{"compiler":[[21,15]],"method":["search"],"sampling":[[12,0.29058954069728316,0.52852191630177,0.1808885430009468],[11,0.22037998724022145,0.629935715739748,0.1496842970200305],[10,0.15602122990458156,0.7098965960658461,0.13408217402957234],[9,0.10141379943797801,0.8113103955038241,0.08727580505819788],[8,0.062408491961832624,0.8737188874656567,0.06387262057251064],[7,0.0,0.9361273794274894,0.06387262057251064],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":142.39501953125,"type":"analyze"},{"outcomes":[["body",256,"invalid",86.1484375,1580],["body",4096,"valid",100.7763671875,415],["body",512,"valid",37.870849609375,377],["body",1024,"valid",107.773681640625,743],["body",2048,"valid",221.912353515625,1155],["body",256,"valid",309.8623046875,5566]],"time":874.89111328125,"type":"sample"},{"compiler":[[20,14]],"egraph":[[0,3,3,2.292e-6],[8,7171,88,0.046433875],[7,4446,88,0.035787792],[6,2223,88,0.019362499999999998],[5,1249,88,0.009319959],[4,756,88,0.004887875],[3,446,88,0.0026985409999999996],[2,220,88,0.001265458],[1,99,88,0.000506125],[0,38,104,0.000145125]],"inputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) a))","(*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) a) -1/2)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (/.f64 -1/2 a))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 (*.f64 4 b) c)))) (*.f64 2 b))","(/.f64 (+.f64 (neg.f64 a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 4 (*.f64 b c))))) (*.f64 b 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 c (*.f64 b -4)))) a) (*.f64 b 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a a (*.f64 b (*.f64 c -4)))) a) (*.f64 b 2))","(*.f64 -1/2 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b))","(*.f64 (/.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) b) -1/2)","(*.f64 (-.f64 a (sqrt.f64 (fma.f64 b (*.f64 c -4) (*.f64 a a)))) (/.f64 -1/2 b))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 c) a)))) (*.f64 2 c))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 a (*.f64 4 c))))) (*.f64 c 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4)))) b) (*.f64 c 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (*.f64 c 2))","(*.f64 -1/2 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) c))","(*.f64 (/.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 a (*.f64 c -4))))) c) -1/2)","(*.f64 (-.f64 b (sqrt.f64 (fma.f64 b b (*.f64 (*.f64 a c) -4)))) (/.f64 -1/2 c))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 (*.f64 4 a) b)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 c) (sqrt.f64 (-.f64 (*.f64 c c) (*.f64 b (*.f64 4 a))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 c c (*.f64 b (*.f64 a -4)))) c) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c))) c) (*.f64 a 2))","(*.f64 -1/2 (/.f64 (-.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))) a))","(*.f64 (/.f64 (-.f64 c (sqrt.f64 (fma.f64 b (*.f64 a -4) (*.f64 c c)))) a) -1/2)","(*.f64 (-.f64 c (sqrt.f64 (fma.f64 (*.f64 b a) -4 (*.f64 c c)))) (/.f64 -1/2 a))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":70.89697265625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[15,7877,22,0.092463459],[14,7735,22,0.07976491699999999],[13,7173,22,0.070283792],[12,7085,22,0.060326625],[11,6429,22,0.052094542],[10,5724,22,0.042248001],[9,4100,22,0.032310459],[8,2704,22,0.022316751],[7,1334,22,0.012748751],[6,747,22,0.006479959],[5,435,22,0.003392126],[4,266,22,0.0018137510000000002],[3,163,22,0.001008959],[2,72,22,0.000495334],[1,33,22,0.000201959],[0,15,26,6.9584e-5]],"inputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 4 (*.f64 a c))))) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 b b (*.f64 c (*.f64 a -4)))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 -4 (*.f64 a c) (*.f64 b b))) b) (*.f64 a 2))","(/.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (*.f64 a 2))","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (/.f64 1/2 a))"]],"stop":[["node limit",1]],"time":105.3798828125,"type":"simplify"},{"compiler":[[35,22]],"time":0.489013671875,"type":"eval"},{"alts":[["(*.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (/.f64 1/2 a))","fresh",36.57000472605632],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","next",36.50359847605632]],"compiler":[[18,12],[20,14],[18,12],[20,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[36.48406722605632],"time":1.56396484375,"type":"prune"},{"compiler":[[73,38]],"locations":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",0.0703125,true],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))",0.4180693557102868,true],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))",0.9960937500000001,true],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))",23.64914674034015,true]],"time":15.300048828125,"type":"localize"},{"count":[[4,84]],"series":[["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","-inf",0.39501953125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","inf",0.572021484375],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","c","0",0.4541015625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","-inf",0.4658203125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","inf",0.751953125],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","a","0",0.427978515625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","-inf",0.31103515625],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","inf",0.990966796875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","b","0",0.548095703125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","-inf",0.546875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","inf",0.41796875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","c","0",0.375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","-inf",0.277099609375],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","inf",0.319091796875],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","a","0",0.390869140625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","-inf",0.217041015625],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","inf",0.43798828125],["(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","b","0",0.27587890625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","-inf",0.201904296875],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","inf",0.2958984375],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","c","0",0.31689453125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","-inf",0.205078125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","inf",0.310791015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","a","0",0.342041015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","-inf",0.166015625],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","inf",0.2861328125],["(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","b","0",0.31298828125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","-inf",0.595947265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","inf",0.64697265625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","c","0",0.715087890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","-inf",0.39990234375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","inf",0.614013671875],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","a","0",0.386962890625],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","-inf",0.346923828125],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","inf",0.486083984375],["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","b","0",0.928955078125]],"time":16.317138671875,"type":"series"},{"count":[[4,333]],"egraph":[[2,4924,59,0.034151583],[1,342,62,0.006674999],[0,15,74,0.000400458]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))","(-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))","(+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c))))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3))) (sqrt.f64 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2))) (hypot.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 c (*.f64 a -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (*.f64 (*.f64 4 a) c)) (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (fma.f64 b b (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3))) (neg.f64 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2))) (neg.f64 (fma.f64 b b (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 c (*.f64 a -4)) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 c (*.f64 a -4)) (*.f64 c (*.f64 a -4))) (*.f64 (*.f64 b b) (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 3)) (+.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2) (-.f64 (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 c (*.f64 a -4)) (*.f64 c (*.f64 a -4)))) (-.f64 (*.f64 b b) (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))) (-.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (pow.f64 (pow.f64 (exp.f64 a) 4) c)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (+.f64 1 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -4))) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 c (*.f64 a -4))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 a) 4) c)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (neg.f64 (*.f64 a c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 a) (neg.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 c (*.f64 a -4) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1 (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 c (*.f64 a -4)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2 (sqrt.f64 (*.f64 a c))) (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 c) (*.f64 4 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 (*.f64 (*.f64 4 a) c) 3)) (/.f64 1 (fma.f64 (*.f64 (*.f64 4 a) c) (fma.f64 b b (*.f64 (*.f64 4 a) c)) (pow.f64 b 4))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 b b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 4 a) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (/.f64 1 (fma.f64 b b (*.f64 (*.f64 4 a) c))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a -4) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) (cbrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (*.f64 c (*.f64 a -4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) (sqrt.f64 (*.f64 c (*.f64 a -4))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (sqrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 2 (sqrt.f64 (*.f64 a c))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (-.f64 b (*.f64 2 (sqrt.f64 (*.f64 a c)))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (*.f64 a c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2))) (cbrt.f64 (*.f64 (*.f64 4 a) c)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) 1) c (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 a -4) (sqrt.f64 c)) (sqrt.f64 c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (*.f64 a c)) 4 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (*.f64 c (*.f64 a -4)) 1 (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 4 a) c))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 4 a) c) 2)) (*.f64 (*.f64 4 a) c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 c (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 c (*.f64 a -4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (fma.f64 c (*.f64 a -4) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (-.f64 (*.f64 (*.f64 4 a) c) (fma.f64 c (*.f64 a -4) (*.f64 (*.f64 4 a) c)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 (*.f64 4 a) c)) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 (*.f64 4 a) c))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (+.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (fma.f64 b b (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 (*.f64 4 a) c)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b b (fma.f64 c (*.f64 a -4) (*.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (fma.f64 b b (*.f64 b b)) (*.f64 (*.f64 4 a) c))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 b b)) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 2)) 1/2) (pow.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1/2) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (/.f64 1/2 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) (*.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (*.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (/.f64 1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 a) (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (/.f64 1 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1/2) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) a) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) a) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) 2) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) 1) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 1) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (*.f64 4 (*.f64 a a)))) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (cbrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 a a))) (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 2)) (sqrt.f64 (+.f64 a a))) (/.f64 (cbrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) (sqrt.f64 (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (/.f64 a (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) 3) (pow.f64 (+.f64 a a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 1))))))"]],"rules":[["egg-rr",43],["egg-rr",64],["egg-rr",194],["egg-rr",32]],"stop":[["node limit",1]],"time":81.468017578125,"type":"rewrite"},{"count":[[417,393]],"egraph":[[2,1614,1713,0.013732834],[1,424,1866,0.0030675420000000004],[0,126,1974,0.000644667]],"inputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(pow.f64 b 2)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -4 (*.f64 c a))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 b a))","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(*.f64 -1 (/.f64 c b))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -1 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (neg.f64 b))","(-.f64 (*.f64 (*.f64 (/.f64 c b) a) 2) b)","(-.f64 (*.f64 (/.f64 2 b) (*.f64 c a)) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b)))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b)))","(-.f64 (*.f64 2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))) b)","(-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -1 b))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (neg.f64 b))))","(fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (-.f64 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))) b))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","b","(+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b)))","(+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a))))","(fma.f64 -2 (*.f64 (/.f64 c b) a) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -2 (*.f64 (/.f64 c b) a) b))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) b)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 b (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (+.f64 b (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(+.f64 (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) b))","(+.f64 b (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -4 (*.f64 c a))","(*.f64 (*.f64 c a) -4)","(*.f64 c (*.f64 a -4))","(*.f64 a (*.f64 c -4))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(+.f64 (pow.f64 b 2) (*.f64 -4 (*.f64 c a)))","(+.f64 (*.f64 (*.f64 c a) -4) (*.f64 b b))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 b b (*.f64 a (*.f64 c -4)))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (*.f64 -2 b))","(fma.f64 2 (/.f64 c (/.f64 b a)) (*.f64 b -2))","(fma.f64 b -2 (*.f64 (*.f64 (/.f64 c b) a) 2))","(fma.f64 b -2 (*.f64 (/.f64 2 b) (*.f64 c a)))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(+.f64 (*.f64 2 (/.f64 (*.f64 c a) b)) (+.f64 (*.f64 -2 b) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))))))","(fma.f64 2 (/.f64 c (/.f64 b a)) (fma.f64 -2 b (fma.f64 4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))))","(fma.f64 (*.f64 (/.f64 c b) a) 2 (fma.f64 b -2 (fma.f64 2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (*.f64 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) 4))))","(+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)) 4 (*.f64 b -2)) (*.f64 2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 a 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -2 (/.f64 (*.f64 c a) b))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(/.f64 -2 (/.f64 b (*.f64 c a)))","(*.f64 (/.f64 c b) (*.f64 a -2))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (*.f64 -2 (/.f64 (*.f64 c a) b)))","(*.f64 -2 (+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 c (/.f64 b a))))","(*.f64 -2 (+.f64 (*.f64 (/.f64 c b) a) (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a)))))","(*.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a)))))","(fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3))))","(+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) b)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))) (*.f64 -2 (/.f64 (*.f64 c a) b)))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (*.f64 -2 (/.f64 c (/.f64 b a))))))","(fma.f64 -2 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) (*.f64 a a))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 a 4) b) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (fma.f64 -4 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))) (/.f64 -2 (/.f64 b (*.f64 c a))))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 c 4) b) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (fma.f64 -2 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) (*.f64 a a) (*.f64 (/.f64 c b) a)) (*.f64 -4 (*.f64 (/.f64 (pow.f64 a 3) (pow.f64 b 5)) (pow.f64 c 3)))))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (pow.f64 c 2) (pow.f64 a 2))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7)))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (*.f64 c c) (*.f64 a a))) 2) (*.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (*.f64 a (pow.f64 b 7))) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (*.f64 a (pow.f64 b 7))) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))","(*.f64 -1 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a)))","(+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a))","(-.f64 (/.f64 c b) (/.f64 b a))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (*.f64 -1 (/.f64 b a))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (/.f64 (neg.f64 b) a)))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (-.f64 (/.f64 c b) (/.f64 b a)))","(fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (-.f64 (/.f64 c b) (/.f64 b a)))","(+.f64 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3)) (+.f64 (/.f64 c b) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))) (*.f64 -1 (/.f64 b a)))))","(+.f64 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (+.f64 (/.f64 c b) (fma.f64 2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))) (/.f64 (neg.f64 b) a))))","(+.f64 (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)) (+.f64 (-.f64 (/.f64 c b) (/.f64 b a)) (*.f64 2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))))","(-.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (fma.f64 2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (/.f64 c b))) (/.f64 b a))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 c 2) (pow.f64 b 3))) 2))) b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (fma.f64 -1/4 (/.f64 (pow.f64 a 3) (/.f64 b (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 c c) (pow.f64 b 3))) 2)))) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 -1/4 (/.f64 b (*.f64 (pow.f64 a 3) (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))))))) (/.f64 c b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 b 5)) (pow.f64 c 3)) (*.f64 (/.f64 (*.f64 (pow.f64 a 3) -1/4) b) (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(*.f64 -1 (/.f64 c b))","(neg.f64 (/.f64 c b))","(/.f64 (neg.f64 c) b)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (*.f64 -1 (/.f64 c b)))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (neg.f64 (/.f64 c b)))","(-.f64 (/.f64 (neg.f64 c) b) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(neg.f64 (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5)))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b)) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 c 2) a) (pow.f64 b 3))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 c 4) (+.f64 (*.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6))) (pow.f64 (*.f64 -2 (/.f64 (pow.f64 a 2) (pow.f64 b 3))) 2))) (*.f64 a b))) (+.f64 (*.f64 -1 (/.f64 c b)) (*.f64 -2 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 2)) (pow.f64 b 5))))))","(fma.f64 -1 (/.f64 (*.f64 c c) (/.f64 (pow.f64 b 3) a)) (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (pow.f64 (*.f64 -2 (/.f64 (*.f64 a a) (pow.f64 b 3))) 2)) b)) (fma.f64 -1 (/.f64 c b) (*.f64 -2 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (*.f64 a a)))))))","(-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) a) (/.f64 (fma.f64 16 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 a 4) (pow.f64 b 6)))) b)) (fma.f64 -2 (/.f64 (*.f64 a a) (/.f64 (pow.f64 b 5) (pow.f64 c 3))) (/.f64 (neg.f64 c) b))) (/.f64 c (/.f64 (/.f64 (pow.f64 b 3) a) c)))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 c 4) (*.f64 b a)) (*.f64 (/.f64 (pow.f64 a 4) (pow.f64 b 6)) 20)) (-.f64 (/.f64 -2 (/.f64 (/.f64 (pow.f64 b 5) (pow.f64 c 3)) (*.f64 a a))) (fma.f64 (*.f64 (/.f64 c (pow.f64 b 3)) c) a (/.f64 c b))))"]],"stop":[["node limit",1]],"time":44.41796875,"type":"simplify"},{"compiler":[[11143,6821]],"time":112.7568359375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (*.f64 2 a))","fresh",37.94568837274467],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(/.f64 (exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (*.f64 2 a))","fresh",48.572609695944514],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","next",33.027683665086144],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a))","fresh",36.54103973582476],["(*.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) a))","fresh",47.53496574344038],["(pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","fresh",45.785488501677285],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","done",36.50359847605632]],"compiler":[[20,15],[7,5],[19,14],[36,26],[14,10],[10,6],[25,17],[30,21],[20,15],[20,14],[20,15],[7,5],[19,14],[36,26],[14,10],[10,6],[25,17],[30,21],[20,15]],"count":[[395,10]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[393,9],"picked":[1,1]}],"min-error":[4.390177267024691],"time":103.884033203125,"type":"prune"},{"compiler":[[123,82]],"locations":[["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))",0.1875,true],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)",0.24609375,true],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))",0.2603756883332108,true],["(sqrt.f64 (*.f64 c (*.f64 a -4)))",12.858422897326255,true]],"time":27.4541015625,"type":"localize"},{"count":[[4,2]],"series":[["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","a","-inf",1.501953125],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","a","inf",1.344970703125],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","a","0",1.052978515625],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","c","-inf",1.414794921875],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","c","inf",1.640869140625],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","c","0",1.29296875],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","b","-inf",0.5810546875],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","b","inf",0.926025390625],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","b","0",0.592041015625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","a","-inf",21.592041015625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","a","inf",26.73193359375],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","a","0",14.609130859375],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","c","-inf",6.8291015625],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","c","inf",10.927001953125],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","c","0",14.034912109375],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","b","-inf",1.572998046875],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","b","inf",1.81787109375],["(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","b","0",6.1591796875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","a","-inf",1.5458984375],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","a","inf",1.364013671875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","a","0",1.43408203125],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","c","-inf",2.02490234375],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","c","inf",2.758056640625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","c","0",1.7509765625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","b","-inf",0.392822265625],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","b","inf",0.7451171875],["(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","b","0",0.4560546875],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","a","-inf",0.387939453125],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","a","inf",0.35107421875],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","a","0",0.8740234375],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","c","-inf",0.4091796875],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","c","inf",0.367919921875],["(sqrt.f64 (*.f64 c (*.f64 a -4)))","c","0",0.73193359375]],"time":130.848876953125,"type":"series"},{"count":[[4,453]],"egraph":[[2,4547,71,0.034079333],[1,369,71,0.006875041],[0,17,71,0.0004825]],"inputs":[["(sqrt.f64 (*.f64 c (*.f64 a -4)))","(-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))","(pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))) (cbrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a -4)) (sqrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 c) (sqrt.f64 (*.f64 a -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 1/4) (pow.f64 (*.f64 c (*.f64 a -4)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 c a)) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 c (*.f64 a -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 c a) 1/2) (sqrt.f64 -4))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 c (*.f64 a -4)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 c (*.f64 a -4)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 c (*.f64 a -4))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 c (*.f64 a -4)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (neg.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 3)) (fma.f64 b b (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (neg.f64 (*.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (-.f64 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (*.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 1 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (cbrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (-.f64 (sqrt.f64 b) (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (+.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) b)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 1/6) (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2))) (cbrt.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (fma.f64 (neg.f64 (/.f64 -1/2 a)) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (*.f64 (/.f64 -1/2 a) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1))) (fma.f64 (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (*.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))) (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a)))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2)) (/.f64 1 a) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) -2) (/.f64 1 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a)) -1/2 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) a) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2)))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (cbrt.f64 (*.f64 a -2))) (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2)))) (/.f64 1 (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (sqrt.f64 (*.f64 a -2))) (/.f64 1 (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2)))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (cbrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2)))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))) (*.f64 (/.f64 (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (sqrt.f64 (*.f64 a -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 -2 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 -2 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 2)) (/.f64 (*.f64 a -2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (/.f64 (*.f64 a -2) (sqrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (*.f64 (*.f64 a -2) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 -2 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (neg.f64 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) 1) (*.f64 (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) 1) (*.f64 (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b (*.f64 a -2)) (*.f64 (*.f64 a -2) (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (*.f64 4 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) -2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (sqrt.f64 (*.f64 a -2))) (sqrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 b (/.f64 -1/2 a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 b (/.f64 -1/2 a)) (fma.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) (*.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 b (/.f64 -1/2 a)) (*.f64 b (/.f64 -1/2 a))) (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a)))) (fma.f64 b (/.f64 -1/2 a) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 b 3) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 3/2)) (/.f64 -1/2 a)) (fma.f64 b b (fma.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (fma.f64 c (*.f64 a -4) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 -1/2 a)) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2) (cbrt.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -2 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 3) (pow.f64 (*.f64 a -2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (/.f64 -1/2 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (/.f64 -1/2 a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b (/.f64 -1/2 a)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a)))) (cbrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (sqrt.f64 (*.f64 b (/.f64 -1/2 a))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (/.f64 b -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) a) (/.f64 (cbrt.f64 b) -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) a) (/.f64 (sqrt.f64 b) -2) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) -2) (/.f64 (sqrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) -2) (/.f64 (cbrt.f64 b) a) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) 1) (/.f64 (cbrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) 1) (/.f64 (sqrt.f64 b) (*.f64 a -2)) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 b (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (cbrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (pow.f64 (cbrt.f64 (*.f64 a -2)) 2)) (/.f64 (sqrt.f64 b) (cbrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 a -2))) (/.f64 b (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 b) 2) (sqrt.f64 (*.f64 a -2))) (/.f64 (cbrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (/.f64 (sqrt.f64 b) (sqrt.f64 (*.f64 a -2))) (neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b) (/.f64 -1/2 a))))))))"]],"rules":[["egg-rr",317],["egg-rr",21],["egg-rr",88],["egg-rr",27]],"stop":[["node limit",1]],"time":144.380126953125,"type":"rewrite"},{"count":[[455,456]],"egraph":[[9,86,10,0.001055459],[8,69,10,0.000903209],[7,58,10,0.000690834],[6,48,10,0.000537917],[5,40,10,0.000406292],[4,32,10,0.000303125],[3,26,10,0.000214625],[2,20,10,0.000141292],[1,13,10,8.6709e-5],[0,8,10,3.9292e-5]],"inputs":[["(*.f64 2 b)","(*.f64 -1 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 b)","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)"]],"stop":[["saturated",1]],"time":21.886962890625,"type":"simplify"},{"compiler":[[34540,23800]],"time":342.669921875,"type":"eval"},{"alts":[["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(/.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))","fresh",49.73067109758472],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a))","fresh",36.54103973582476],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","next",36.086916194520064],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 a -4)) (sqrt.f64 c)))) (*.f64 a -2))) 2))","fresh",50.62935220777878],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","done",36.50359847605632]],"compiler":[[7,5],[30,18],[14,10],[10,6],[25,17],[86,63],[37,27],[20,14],[7,5],[30,18],[14,10],[10,6],[25,17],[86,63],[37,27]],"count":[[582,8]],"kept":[{"done":[1,1],"fresh":[8,4],"new":[572,3],"picked":[1,0]}],"min-error":[4.355451358811244],"time":187.78515625,"type":"prune"},{"compiler":[[301,211]],"locations":[["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))",0.2109375,true],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))",5.762172712415128,true],["(sqrt.f64 (*.f64 c (*.f64 a -4)))",12.858422897326255,false],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))",42.17171808728401,true]],"time":66.23291015625,"type":"localize"},{"count":[[3,9]],"series":[["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","b","-inf",0.258056640625],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","b","inf",0.2529296875],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","b","0",0.3740234375],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","a","-inf",0.68896484375],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","a","inf",0.802001953125],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","a","0",0.39794921875],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","c","-inf",0.718994140625],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","c","inf",0.840087890625],["(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))","c","0",0.3759765625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","c","-inf",0.97607421875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","c","inf",1.174072265625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","c","0",0.93310546875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","a","-inf",0.93505859375],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","a","inf",0.990966796875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","a","0",0.780029296875],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","b","-inf",0.344970703125],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","b","inf",0.679931640625],["(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","b","0",0.302001953125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","b","-inf",0.43701171875],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","b","inf",0.994873046875],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","b","0",13.5361328125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","a","-inf",5.928955078125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","a","inf",5.930908203125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","a","0",1.77001953125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","c","-inf",6.652099609375],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","c","inf",7.953125],["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","c","0",2.45703125]],"time":58.095947265625,"type":"series"},{"count":[[3,128]],"egraph":[[2,5767,64,0.037482958],[1,474,64,0.008281917],[0,22,85,0.000611125]],"inputs":[["(fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))","(fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","(*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a) (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a)) (fma.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) -1 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) 2) (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (+.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4))) (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) (/.f64 -1/2 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1/2 (/.f64 a b)) 1) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -1/2 (/.f64 b a) 0) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) 2) (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 -1/2 (/.f64 a b)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (/.f64 -1/2 (/.f64 a b)) (/.f64 -1/2 (/.f64 a b)) (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (*.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 -1/2 (/.f64 a b)) (/.f64 -1/2 (/.f64 a b)) (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4))) (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 -1/2 (/.f64 a b))) (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 -1/2 (/.f64 a b))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) (exp.f64 (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) (exp.f64 (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1/2 (/.f64 a b))) (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a) (/.f64 -1/2 (/.f64 a b)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2) (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a)) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 a -2) (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b))) (/.f64 (*.f64 a -2) (cbrt.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4))) (/.f64 1 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) (/.f64 1 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 -1 (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2) (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 (*.f64 a 2) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a) (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 (*.f64 a -2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 -1 (*.f64 a 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 (*.f64 a 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b)) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (*.f64 (*.f64 a 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a) (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a) 1) (*.f64 -2 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 a 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) (*.f64 (*.f64 a -2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a) (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)) (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) -2) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) a) -2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (sqrt.f64 (*.f64 a -2))) (sqrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (+.f64 0 (+.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (*.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 0))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4))) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (cbrt.f64 (*.f64 (*.f64 a a) 4))) (cbrt.f64 (*.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b)) (*.f64 a -2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) 3) (pow.f64 (*.f64 a -2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) 3/2) (pow.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (/.f64 -1/2 a)) 3) (pow.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a))) 1))))))"]],"rules":[["egg-rr",64],["egg-rr",30],["egg-rr",34]],"stop":[["node limit",1]],"time":67.504150390625,"type":"rewrite"},{"count":[[137,137]],"egraph":[[9,188,50,0.001866832],[8,136,50,0.001592166],[7,104,50,0.001163208],[6,88,50,0.0009224999999999999],[5,80,50,0.0007119159999999999],[4,73,50,0.0005555829999999999],[3,67,50,0.00042774999999999996],[2,57,50,0.000315584],[1,34,50,0.000225917],[0,15,62,8.9542e-5]],"inputs":[["(+.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(/.f64 (+.f64 (*.f64 1/2 b) (*.f64 -1/2 b)) a)","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))","(*.f64 -1 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 -1/2 (/.f64 b a))","(*.f64 1/2 (/.f64 b a))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1/2 (/.f64 b a)) (*.f64 1/2 (/.f64 b a)))","(*.f64 (/.f64 b a) 0)","0","(/.f64 (+.f64 (*.f64 1/2 b) (*.f64 -1/2 b)) a)","(*.f64 (/.f64 b a) 0)","0","(*.f64 -1/2 (/.f64 b a))","(/.f64 -1/2 (/.f64 a b))","(*.f64 1/2 (/.f64 b a))","(*.f64 (/.f64 b a) 1/2)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 1/2 a) b)","(*.f64 b (/.f64 1/2 a))","(*.f64 -1 (/.f64 b a))","(neg.f64 (/.f64 b a))","(/.f64 (neg.f64 b) a)","(*.f64 -1/2 (/.f64 b a))","(/.f64 -1/2 (/.f64 a b))","(*.f64 -1/2 (/.f64 b a))","(/.f64 -1/2 (/.f64 a b))","(*.f64 -1/2 (/.f64 b a))","(/.f64 -1/2 (/.f64 a b))","(*.f64 1/2 (/.f64 b a))","(*.f64 (/.f64 b a) 1/2)","(/.f64 b (/.f64 a 1/2))","(*.f64 (/.f64 1/2 a) b)","(*.f64 b (/.f64 1/2 a))"]],"stop":[["saturated",1]],"time":15.0498046875,"type":"simplify"},{"compiler":[[28824,20307]],"time":287.97509765625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (+.f64 (pow.f64 (/.f64 -1/2 (/.f64 a b)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (/.f64 -1/2 (/.f64 a b)) (/.f64 -1/2 (/.f64 a b)) (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (*.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","fresh",63.41293113399376],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","done",36.086916194520064],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","fresh",51.9783068867363],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a))","next",36.54103973582476],["(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 a -4)) (sqrt.f64 c)))) (*.f64 a -2))) 2))","fresh",50.62935220777878],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","done",36.50359847605632],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","fresh",41.09168280933579]],"compiler":[[122,83],[86,63],[7,5],[14,10],[10,6],[25,17],[37,27],[20,14],[86,60],[122,83],[7,5],[14,10],[10,6],[25,17],[37,27],[86,60]],"count":[[371,9]],"kept":[{"done":[1,1],"fresh":[6,5],"new":[363,2],"picked":[1,1]}],"min-error":[4.339977452992905],"time":84.054931640625,"type":"prune"},{"compiler":[[102,51]],"locations":[["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))",0.4180693557102868,true],["(pow.f64 (cbrt.f64 c) 2)",0.4967575195368841,true],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))",0.6875000000000001,true],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))",23.64914674034015,true]],"time":21.587158203125,"type":"localize"},{"count":[[4,54]],"series":[["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","-inf",10.72705078125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","inf",0.593994140625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","c","0",0.572021484375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","-inf",0.39990234375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","inf",0.43017578125],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","a","0",0.433837890625],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","-inf",0.239990234375],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","inf",0.44091796875],["(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))","b","0",0.326904296875],["(pow.f64 (cbrt.f64 c) 2)","c","-inf",0.47607421875],["(pow.f64 (cbrt.f64 c) 2)","c","inf",0.328125],["(pow.f64 (cbrt.f64 c) 2)","c","0",0.30712890625],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","b","-inf",0.180908203125],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","b","inf",0.1611328125],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","b","0",1.06689453125],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","c","-inf",0.294921875],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","c","inf",0.30908203125],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","c","0",0.260986328125],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","a","-inf",0.289794921875],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","a","inf",0.383056640625],["(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","a","0",1.260986328125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","-inf",0.281982421875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","inf",0.388916015625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","b","0",1.01220703125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","-inf",0.9189453125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","inf",0.612060546875],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","c","0",1.010009765625],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","-inf",0.48095703125],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","inf",0.741943359375],["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","a","0",0.81689453125]],"time":26.23779296875,"type":"series"},{"count":[[4,153]],"egraph":[[2,3947,44,0.028107292],[1,316,52,0.0056815],[0,15,78,0.000400625]],"inputs":[["(sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))","(fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))","(pow.f64 (cbrt.f64 c) 2)","(+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 (*.f64 a -4) c)) b)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)) b)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a -4) c))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a -4) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 a -4) c) 1) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 a -4) c) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (*.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (*.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a -4) c) 3) (pow.f64 (*.f64 b b) 3)) (+.f64 (pow.f64 (*.f64 (*.f64 a -4) c) 2) (-.f64 (pow.f64 b 4) (*.f64 (*.f64 (*.f64 a -4) c) (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (*.f64 a -4) c) 2) (pow.f64 b 4)) (fma.f64 (*.f64 a -4) c (*.f64 b b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (*.f64 a -4) c)) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (*.f64 a -4) c)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (exp.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 a -4) c)) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 c) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 c) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 c) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 c) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 c) (cbrt.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 c) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 c) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 (*.f64 c (cbrt.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 c) 2)) (*.f64 (cbrt.f64 (cbrt.f64 c)) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 c (cbrt.f64 c))) (cbrt.f64 (pow.f64 (cbrt.f64 c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 c 1/6) (*.f64 (pow.f64 c 1/6) (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 c) (pow.f64 c 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 c) (cbrt.f64 (pow.f64 (cbrt.f64 c) 2))) (cbrt.f64 (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 c (cbrt.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 c) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 c c))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 c) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 c)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 b b) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (/.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 0) b)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2) (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (/.f64 1 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b))) (/.f64 1 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2)) (+.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b))) (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) (neg.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))) (neg.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) (*.f64 b b)) (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 b b (fma.f64 (*.f64 a -4) c (fma.f64 b b (*.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (+.f64 (pow.f64 b 3) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (-.f64 (*.f64 b b) (fma.f64 (*.f64 a -4) c (*.f64 b b)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))) (+.f64 1 (expm1.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (exp.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 b) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 b)) (+.f64 1 (expm1.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) 1 b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b -1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 b) (pow.f64 (cbrt.f64 b) 2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c)))) (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (neg.f64 (cbrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (neg.f64 (sqrt.f64 b)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) (pow.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)) 1/4) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 b (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b))) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 (*.f64 a -4) c (*.f64 b b)))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 b 4))) (sqrt.f64 (pow.f64 (cbrt.f64 b) 2)) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))) b)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 b)) (sqrt.f64 b) (hypot.f64 b (sqrt.f64 (*.f64 (*.f64 a -4) c))))))))"]],"rules":[["egg-rr",66],["egg-rr",21],["egg-rr",37],["egg-rr",29]],"stop":[["node limit",1]],"time":58.343017578125,"type":"rewrite"},{"count":[[207,192]],"egraph":[[4,7313,870,0.034312292],[3,5026,894,0.020866875],[2,1005,909,0.008728959],[1,300,971,0.002218667],[0,93,1191,0.00051725]],"inputs":[["b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(*.f64 -1 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))","(pow.f64 b 2)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(pow.f64 b 2)","(pow.f64 b 2)","(pow.f64 b 2)","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 16 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (pow.f64 1 1/3))) (pow.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 1 1/3))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(*.f64 -2 b)","(+.f64 (*.f64 -2 b) (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (/.f64 (pow.f64 c 2) (pow.f64 b 3)) (pow.f64 1 1/3))) 2) (*.f64 16 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 1 1/3)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))"]],"method":["egg-herbie"],"outputs":[["b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1)))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4))))","(+.f64 b (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4))))","b","b","b","b","(+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1)))","(fma.f64 -2 (/.f64 c (/.f64 b a)) b)","(fma.f64 -2 (*.f64 (/.f64 a b) c) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (+.f64 b (*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) b))","(fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) b)","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) b)","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 b (+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))))","(+.f64 b (fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(+.f64 b (fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 b (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4))))","(+.f64 b (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4))))","(*.f64 -1 b)","(neg.f64 b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 -1 b))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (neg.f64 b))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (neg.f64 b))","(fma.f64 (*.f64 (/.f64 a b) c) 2 (neg.f64 b))","(-.f64 (/.f64 2 (/.f64 (/.f64 b a) c)) b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -1 b)))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (neg.f64 b)))","(fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))) (neg.f64 b))","(-.f64 (*.f64 2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c))) b)","(-.f64 (*.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b)))) b)","(+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -1 b))))","(fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (fma.f64 4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) (neg.f64 b))))","(fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))) (fma.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) 4 (neg.f64 b)))","(-.f64 (fma.f64 2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4)) b)","(fma.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (-.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) 4)) b))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (-.f64 (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4)) b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(*.f64 -4 (*.f64 (*.f64 c a) 1))","(*.f64 -4 (*.f64 c a))","(*.f64 c (*.f64 a -4))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(*.f64 -4 (*.f64 (*.f64 c a) 1))","(*.f64 -4 (*.f64 c a))","(*.f64 c (*.f64 a -4))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(pow.f64 b 2)","(*.f64 b b)","(pow.f64 b 2)","(*.f64 b b)","(*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3)))","(*.f64 -4 (*.f64 (*.f64 c a) 1))","(*.f64 -4 (*.f64 c a))","(*.f64 c (*.f64 a -4))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(+.f64 (*.f64 -4 (*.f64 (*.f64 c a) (pow.f64 1 1/3))) (pow.f64 b 2))","(fma.f64 -4 (*.f64 (*.f64 c a) 1) (*.f64 b b))","(fma.f64 b b (*.f64 -4 (*.f64 c a)))","(fma.f64 b b (*.f64 c (*.f64 a -4)))","(fma.f64 c (*.f64 a -4) (*.f64 b b))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 a b) c))","(/.f64 -2 (/.f64 (/.f64 b a) c))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(*.f64 -2 (+.f64 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (*.f64 (/.f64 c (/.f64 b a)) 1)))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)))","(*.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 16 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (pow.f64 1 1/3))) (pow.f64 (*.f64 -2 (*.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 1 1/3))) 2)) (pow.f64 b 7))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 1 (*.f64 (pow.f64 c 4) (pow.f64 a 4))) (pow.f64 (*.f64 -2 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a)))) 2)) (pow.f64 b 7)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -1/2 (/.f64 (fma.f64 16 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) (*.f64 4 (*.f64 (pow.f64 c 4) (pow.f64 a 4)))) (pow.f64 b 7)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) 20) (pow.f64 b 7)) (fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(+.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(+.f64 (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4))) (/.f64 (*.f64 (*.f64 (pow.f64 c 4) (pow.f64 a 4)) -10) (pow.f64 b 7)))","(*.f64 -2 b)","(*.f64 b -2)","(+.f64 (*.f64 -2 b) (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(fma.f64 -2 b (*.f64 (*.f64 (/.f64 c (/.f64 b a)) 1) 2))","(fma.f64 (/.f64 c (/.f64 b a)) 2 (*.f64 b -2))","(fma.f64 (*.f64 (/.f64 a b) c) 2 (*.f64 b -2))","(fma.f64 b -2 (/.f64 2 (/.f64 (/.f64 b a) c)))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3)))))","(fma.f64 -2 b (*.f64 2 (+.f64 (*.f64 (/.f64 c (/.f64 b a)) 1) (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)))))","(fma.f64 b -2 (*.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)))))","(fma.f64 b -2 (*.f64 2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c))))","(fma.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (*.f64 b -2))","(+.f64 (*.f64 -2 b) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))) (+.f64 (*.f64 2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))))))","(fma.f64 -2 b (fma.f64 2 (*.f64 (/.f64 c (/.f64 b a)) 1) (fma.f64 2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (*.f64 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))) 4))))","(fma.f64 b -2 (fma.f64 2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))) (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) 4)))","(fma.f64 b -2 (fma.f64 2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (*.f64 (*.f64 (pow.f64 a 3) (/.f64 (pow.f64 c 3) (pow.f64 b 5))) 4)))","(fma.f64 b -2 (fma.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) 4))))","(fma.f64 b -2 (fma.f64 2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) 4))))","(*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))","(*.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1))","(*.f64 -2 (/.f64 c (/.f64 b a)))","(*.f64 -2 (*.f64 (/.f64 a b) c))","(/.f64 -2 (/.f64 (/.f64 b a) c))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))","(*.f64 -2 (+.f64 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (*.f64 (/.f64 c (/.f64 b a)) 1)))","(*.f64 -2 (+.f64 (/.f64 c (/.f64 b a)) (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a))))","(*.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)))","(*.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3)))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3)))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)))))","(fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3))))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4)))","(fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4)))","(+.f64 (*.f64 -2 (*.f64 (/.f64 (*.f64 (pow.f64 c 2) (pow.f64 a 2)) (pow.f64 b 3)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 -2 (*.f64 (/.f64 (pow.f64 c 2) (pow.f64 b 3)) (pow.f64 1 1/3))) 2) (*.f64 16 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (pow.f64 1 1/3)))) (pow.f64 a 4)) b)) (+.f64 (*.f64 -4 (*.f64 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5)) (pow.f64 1 1/3))) (*.f64 -2 (*.f64 (/.f64 (*.f64 c a) b) (pow.f64 1 1/3))))))","(fma.f64 -2 (/.f64 (*.f64 1 (*.f64 (*.f64 c c) (*.f64 a a))) (pow.f64 b 3)) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -2 (/.f64 (*.f64 (*.f64 c c) 1) (pow.f64 b 3))) 2) (*.f64 16 (*.f64 1 (/.f64 (pow.f64 c 4) (pow.f64 b 6))))) (/.f64 b (pow.f64 a 4))) (fma.f64 -2 (*.f64 (/.f64 c (/.f64 b a)) 1) (*.f64 -4 (*.f64 1 (/.f64 (pow.f64 c 3) (/.f64 (pow.f64 b 5) (pow.f64 a 3))))))))","(fma.f64 -2 (*.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a)) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 16 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) (*.f64 4 (/.f64 (pow.f64 c 4) (pow.f64 b 6)))) b) (pow.f64 a 4)) (fma.f64 -2 (/.f64 c (/.f64 b a)) (*.f64 -4 (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (pow.f64 b 5))))))","(fma.f64 -1/2 (*.f64 (pow.f64 a 4) (/.f64 (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20) b)) (fma.f64 -2 (fma.f64 (/.f64 c (/.f64 (pow.f64 b 3) c)) (*.f64 a a) (*.f64 (/.f64 a b) c)) (/.f64 (*.f64 (pow.f64 a 3) -4) (/.f64 (pow.f64 b 5) (pow.f64 c 3)))))","(fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20))) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (*.f64 (pow.f64 c 3) (pow.f64 a 3)) (/.f64 (pow.f64 b 5) -4))))","(fma.f64 -1/2 (/.f64 (pow.f64 a 4) (/.f64 b (*.f64 (/.f64 (pow.f64 c 4) (pow.f64 b 6)) 20))) (fma.f64 -2 (*.f64 c (+.f64 (/.f64 c (/.f64 (pow.f64 b 3) (*.f64 a a))) (/.f64 a b))) (/.f64 (pow.f64 (*.f64 c a) 3) (/.f64 (pow.f64 b 5) -4))))"]],"stop":[["node limit",1]],"time":58.22509765625,"type":"simplify"},{"compiler":[[4580,2833]],"time":48.927001953125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (+.f64 (pow.f64 (/.f64 -1/2 (/.f64 a b)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (/.f64 -1/2 (/.f64 a b)) (/.f64 -1/2 (/.f64 a b)) (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (*.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","fresh",63.41293113399376],["(/.f64 (/.f64 -2 (/.f64 (/.f64 b a) c)) (*.f64 2 a))","fresh",45.46630970628206],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","done",36.086916194520064],["(/.f64 (neg.f64 c) b)","fresh",38.18410318261545],["(/.f64 (*.f64 b -2) (*.f64 2 a))","fresh",44.28435283123305],["(/.f64 (+.f64 (neg.f64 b) (hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))) (*.f64 2 a))","fresh",48.173970080672596],["(-.f64 (/.f64 c b) (/.f64 b a))","fresh",44.5361859610908],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a))","done",36.54103973582476],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","done",36.50359847605632],["(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","fresh",41.09168280933579]],"compiler":[[122,83],[14,10],[86,63],[7,5],[10,8],[23,17],[10,6],[25,17],[20,14],[86,60]],"count":[[201,10]],"kept":[{"done":[2,2],"fresh":[6,4],"new":[192,3],"picked":[1,1]}],"min-error":[1.8930354830594016],"time":35.65087890625,"type":"prune"},{"accuracy":[8.107225346096225],"baseline":[33.027683665086144],"branch":[["a",23.785770628169317,7],["b",8.107225346096225,3],["c",24.78225622534769,9],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",13.336883079208496,5]],"compiler":[[4,3],[4,3],[4,3],[20,14],[573,373]],"count":[[19,3]],"inputs":[["(/.f64 (/.f64 -2 (/.f64 (/.f64 b a) c)) (*.f64 2 a))","(/.f64 (*.f64 b -2) (*.f64 2 a))","(/.f64 (+.f64 (neg.f64 b) (hypot.f64 b (*.f64 (*.f64 (cbrt.f64 c) (sqrt.f64 (*.f64 a -4))) (pow.f64 c 1/6)))) (*.f64 2 a))","(+.f64 (/.f64 (+.f64 (pow.f64 (/.f64 -1/2 (/.f64 a b)) 3) (pow.f64 (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)) 3)) (fma.f64 (/.f64 -1/2 (/.f64 a b)) (/.f64 -1/2 (/.f64 a b)) (-.f64 (/.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) (*.f64 (*.f64 a a) 4)) (*.f64 (/.f64 -1/2 (/.f64 a b)) (*.f64 (hypot.f64 (sqrt.f64 (*.f64 a (*.f64 -4 c))) b) (/.f64 -1/2 a)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (/.f64 (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4) (*.f64 -2 (/.f64 a (pow.f64 (fma.f64 c (*.f64 a -4) (*.f64 b b)) 1/4)))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","(/.f64 (-.f64 (*.f64 b b) (fma.f64 c (*.f64 a -4) (*.f64 b b))) (*.f64 (*.f64 a -2) (+.f64 b (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b))))","(+.f64 (fma.f64 -1/2 (/.f64 b a) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2))) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1) (*.f64 (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) (*.f64 a -2)) (/.f64 (sqrt.f64 (hypot.f64 (sqrt.f64 (*.f64 c (*.f64 a -4))) b)) 1))))","(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (*.f64 (sqrt.f64 (*.f64 a -4)) (sqrt.f64 c)))) (*.f64 a -2))) 2))","(/.f64 (+.f64 (neg.f64 b) (exp.f64 (log.f64 (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (*.f64 2 a))","(/.f64 (neg.f64 c) b)","(/.f64 (exp.f64 (log.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))))) (*.f64 2 a))","(*.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (*.f64 b b))) (*.f64 2 a))","(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (fma.f64 (*.f64 (*.f64 a -4) (pow.f64 (cbrt.f64 c) 2)) (cbrt.f64 c) (*.f64 b b)))) (*.f64 2 a))","(*.f64 (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) 2) (/.f64 (sqrt.f64 (+.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4)))))) a))","(pow.f64 (sqrt.f64 (/.f64 (-.f64 b (hypot.f64 b (sqrt.f64 (*.f64 c (*.f64 a -4))))) (*.f64 a -2))) 2)","(*.f64 (-.f64 (sqrt.f64 (fma.f64 a (*.f64 c -4) (*.f64 b b))) b) (/.f64 1/2 a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))"]],"link":["."],"name":["The quadratic formula (r1)"],"oracle":[63.98437910645585],"outputs":[["(-.f64 (/.f64 c b) (/.f64 b a))","(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))","(/.f64 (neg.f64 c) b)"]],"time":154.176025390625,"times":[["a",43.559814453125],["b",26.377197265625],["c",55.112060546875],["(/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a))",18.985107421875]],"type":"regimes"},{"bstep":[[2.9845788666958835e-158,3.562433016429675e-154,25.052978515625],[-7.874177670516464e+119,-7.530477332140231e+119,0.101806640625]],"compiler":[[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[8,6],[21,15],[22,16],[4,3]],"method":["binary-search","binary-search"],"time":25.42919921875,"type":"bsearch"},{"compiler":[[38,24]],"egraph":[[5,91,52,0.0006059580000000001],[4,90,52,0.000496958],[3,84,52,0.000377875],[2,72,52,0.000268125],[1,45,52,0.000165625],[0,27,54,6.5333e-5]],"inputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (neg.f64 c) b)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 (*.f64 4 a) c)))) (*.f64 2 a)) (/.f64 (neg.f64 c) b)))","(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (+.f64 (neg.f64 b) (sqrt.f64 (-.f64 (*.f64 b b) (*.f64 c (*.f64 a 4))))) (*.f64 a 2)) (/.f64 (neg.f64 c) b)))","(if (<=.f64 b -759999999999999979068889404044414119041239708346509121831960244070684225772873732885932780325582234038583434362304331776) (-.f64 (/.f64 c b) (/.f64 b a)) (if (<=.f64 b 463744502762071/15458150092069033378781407563727949377195709318825739994628941005806076569158241698144775066327690311849854464126008708709460314644171950622971634693868322994787923259293696) (/.f64 (-.f64 (sqrt.f64 (+.f64 (*.f64 b b) (*.f64 c (*.f64 a -4)))) b) (*.f64 a 2)) (/.f64 (neg.f64 c) b)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.8388671875,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[38,24]],"remove-preprocessing":[[]],"time":13.446044921875,"type":"end"}]