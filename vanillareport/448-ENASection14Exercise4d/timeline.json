[{"compiler":[[25,17]],"method":["search"],"sampling":[[12,0.08018590647134821,0.0030720167451884772,0.9167420767834633],[11,0.0792454931820048,0.00413781847311101,0.9166166883448842],[10,0.07824238567337183,0.006269421928956076,0.9154881923976721],[9,0.07824238567337183,0.008024860069063777,0.9137327542575644],[8,0.07623617065610588,0.012037290103595666,0.9117265392402985],[7,0.07623617065610588,0.016049720138127554,0.9077141092057666],[6,0.072223740621574,0.024074580207191332,0.9037016791712347],[5,0.072223740621574,0.03209944027625511,0.8956768191021709],[4,0.06419888055251022,0.048149160414382663,0.8876519590331071],[3,0.06419888055251022,0.06419888055251022,0.8716022388949796],[2,0.0,0.12839776110502044,0.8716022388949796],[1,0.0,0.12839776110502044,0.8716022388949796],[0,0.0,0.12839776110502044,0.8716022388949796]],"time":9.552001953125,"type":"analyze"},{"outcomes":[["body",256,"invalid",8.21484375,180],["body",512,"valid",99.944091796875,1152],["body",1024,"valid",144.662353515625,1160],["body",2048,"valid",5.78955078125,33],["body",256,"valid",281.5693359375,5911]],"time":550.463134765625,"type":"sample"},{"compiler":[[10,6]],"egraph":[[0,2,2,1.791e-6],[10,670,24,0.010814083],[9,660,24,0.009025791],[8,608,24,0.007106666],[7,506,24,0.005276083],[6,353,24,0.003385666],[5,210,24,0.001959791],[4,102,24,0.000907499],[3,63,24,0.00047583299999999994],[2,35,24,0.000255958],[1,21,24,0.000134416],[0,11,24,5.4416e-5]],"inputs":[["0","1"],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(-.f64 eps (sqrt.f64 (-.f64 (*.f64 eps eps) x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(-.f64 eps (sqrt.f64 (-.f64 (*.f64 eps eps) x)))","(-.f64 eps (sqrt.f64 (fma.f64 eps eps (neg.f64 x))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":33.116943359375,"type":"preprocess"},{"count":[[1,1]],"egraph":[[11,499,12,0.007557208],[10,495,12,0.006510374],[9,439,12,0.005443041],[8,361,12,0.004205208],[7,269,12,0.002957416],[6,196,12,0.001966708],[5,103,12,0.001104916],[4,55,12,0.000537541],[3,34,12,0.000315833],[2,20,12,0.00018316600000000001],[1,12,12,0.00010400000000000001],[0,7,12,4.5833e-5]],"inputs":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"stop":[["saturated",1]],"time":18.85791015625,"type":"simplify"},{"compiler":[[10,6]],"time":0.216064453125,"type":"eval"},{"alts":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","next",24.214644929817577]],"compiler":[[10,6],[10,6]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[24.214644929817577],"time":0.734130859375,"type":"prune"},{"compiler":[[26,6]],"locations":[["(-.f64 (*.f64 x x) eps)",0.00390625,true],["(sqrt.f64 (-.f64 (*.f64 x x) eps))",0.0078125,true],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",4.365915405152007,true]],"time":5.074951171875,"type":"localize"},{"count":[[3,48]],"series":[["(-.f64 (*.f64 x x) eps)","eps","-inf",0.178955078125],["(-.f64 (*.f64 x x) eps)","eps","inf",0.190185546875],["(-.f64 (*.f64 x x) eps)","eps","0",0.39697265625],["(-.f64 (*.f64 x x) eps)","x","-inf",0.157958984375],["(-.f64 (*.f64 x x) eps)","x","inf",0.26904296875],["(-.f64 (*.f64 x x) eps)","x","0",0.191162109375],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","eps","-inf",0.300048828125],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","eps","inf",0.30517578125],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","eps","0",0.17919921875],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","x","-inf",0.2080078125],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","x","inf",0.198974609375],["(sqrt.f64 (-.f64 (*.f64 x x) eps))","x","0",0.43798828125],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","-inf",0.385009765625],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","inf",0.656982421875],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","0",0.568115234375],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","-inf",0.325927734375],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","inf",0.85205078125],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","0",0.68701171875]],"time":6.755859375,"type":"series"},{"count":[[3,97]],"egraph":[[2,2429,28,0.0220575],[1,162,28,0.003245416],[0,7,28,0.00018725]],"inputs":[["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","(sqrt.f64 (-.f64 (*.f64 x x) eps))","(-.f64 (*.f64 x x) eps)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) (fma.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) 1 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) (fma.f64 (neg.f64 (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) (pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) 2) (cbrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) (sqrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2)) (/.f64 1 (fma.f64 x x (+.f64 (-.f64 (*.f64 x x) eps) (*.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (/.f64 1 (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x (+.f64 (-.f64 (*.f64 x x) eps) (*.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))) (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2)) (fma.f64 x x (+.f64 (-.f64 (*.f64 x x) eps) (*.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (neg.f64 (fma.f64 x x (+.f64 (-.f64 (*.f64 x x) eps) (*.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps)) (neg.f64 (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) 3)) (+.f64 (*.f64 x x) (-.f64 (*.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))) (*.f64 x (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))) (-.f64 x (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (-.f64 (*.f64 x x) eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2)) (sqrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) 1/2) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps))) (sqrt.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3))) (sqrt.f64 (+.f64 (pow.f64 x 4) (*.f64 eps (fma.f64 x x eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x x) eps) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 (cbrt.f64 eps)) (pow.f64 (cbrt.f64 eps) 2) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 (sqrt.f64 eps)) (sqrt.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 eps) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) eps) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (sqrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 x x) eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (*.f64 (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))) (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (/.f64 1 (+.f64 (pow.f64 x 4) (*.f64 eps (fma.f64 x x eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (/.f64 1 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (sqrt.f64 eps)) (-.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 x 4) (*.f64 eps (fma.f64 x x eps))) (-.f64 (pow.f64 x 6) (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x eps) (-.f64 (pow.f64 x 4) (*.f64 eps eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (+.f64 (pow.f64 x 4) (*.f64 eps (fma.f64 x x eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (fma.f64 x x eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3))) (neg.f64 (+.f64 (pow.f64 x 4) (*.f64 eps (fma.f64 x x eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps))) (neg.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 (neg.f64 eps) 3)) (+.f64 (pow.f64 x 4) (-.f64 (*.f64 (neg.f64 eps) (neg.f64 eps)) (*.f64 (*.f64 x x) (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (*.f64 (neg.f64 eps) (neg.f64 eps))) (-.f64 (*.f64 x x) (neg.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x x) eps) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (pow.f64 (cbrt.f64 x) 2) (neg.f64 eps))))))"]],"rules":[["egg-rr",40],["egg-rr",22],["egg-rr",35]],"stop":[["node limit",1]],"time":48.299072265625,"type":"rewrite"},{"count":[[145,135]],"egraph":[[4,4346,639,0.024406333000000002],[3,2542,641,0.012611916],[2,648,655,0.005168082],[1,222,663,0.001508416],[0,74,686,0.000387208]],"inputs":[["(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 eps 4) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 x 6))))) x)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(*.f64 -1 x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1 x))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 eps x))","(/.f64 (*.f64 1/2 eps) x)","(/.f64 eps (/.f64 x 1/2))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (*.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps))))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x))))","(*.f64 eps (+.f64 (/.f64 1/2 x) (/.f64 1/8 (/.f64 (pow.f64 x 3) eps))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x)))))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (*.f64 eps eps) (+.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) eps))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 eps eps) -1/8) 2) (*.f64 1/16 (pow.f64 eps 4))) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 (fma.f64 1/16 (pow.f64 eps 4) (*.f64 (pow.f64 eps 4) 1/64)) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5)))))","(fma.f64 1/2 (+.f64 (/.f64 eps x) (/.f64 (*.f64 (pow.f64 eps 4) 5/64) (pow.f64 x 7))) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/8 (*.f64 eps (/.f64 eps (pow.f64 x 3))) (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (/.f64 (*.f64 (pow.f64 eps 4) 5/128) (pow.f64 x 7)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (/.f64 (*.f64 (pow.f64 eps 4) 5/128) (pow.f64 x 7)))))","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(fma.f64 x 2 (*.f64 eps (/.f64 -1/2 x)))","(fma.f64 x 2 (/.f64 (*.f64 eps -1/2) x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) -1/8))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (*.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8)))","(fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (/.f64 (*.f64 eps -1/8) (*.f64 x x)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (*.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (*.f64 (/.f64 -1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 eps (/.f64 eps (pow.f64 x 3))) -1/8 (*.f64 (pow.f64 eps 3) (/.f64 -1/16 (pow.f64 x 5))))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (*.f64 (*.f64 eps eps) (+.f64 (/.f64 -1/8 (pow.f64 x 3)) (*.f64 (/.f64 -1/16 (pow.f64 x 5)) eps)))))","(*.f64 1/2 (/.f64 eps x))","(/.f64 (*.f64 1/2 eps) x)","(/.f64 eps (/.f64 x 1/2))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (*.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps))))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x))))","(*.f64 eps (+.f64 (/.f64 1/2 x) (/.f64 1/8 (/.f64 (pow.f64 x 3) eps))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x)))))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (*.f64 eps eps) (+.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) eps))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 eps 4) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (*.f64 1/16 (/.f64 1 (pow.f64 x 6))))) x)) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/2 (/.f64 (pow.f64 eps 4) (/.f64 x (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (/.f64 1/16 (pow.f64 x 6))))) (fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5)))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 eps 4) x) (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (/.f64 1/16 (pow.f64 x 6)))) (fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5)))))","(fma.f64 1/2 (*.f64 (+.f64 (pow.f64 (/.f64 -1/8 (pow.f64 x 3)) 2) (/.f64 1/16 (pow.f64 x 6))) (/.f64 (pow.f64 eps 4) x)) (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(+.f64 (fma.f64 1/8 (*.f64 eps (/.f64 eps (pow.f64 x 3))) (*.f64 (pow.f64 eps 3) (/.f64 1/16 (pow.f64 x 5)))) (*.f64 (/.f64 1/2 x) (+.f64 eps (*.f64 (pow.f64 eps 4) (+.f64 (/.f64 1/64 (pow.f64 x 6)) (/.f64 1/16 (pow.f64 x 6)))))))","(+.f64 (*.f64 (*.f64 eps eps) (+.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) eps))) (*.f64 (/.f64 1/2 x) (+.f64 eps (*.f64 (pow.f64 eps 4) (+.f64 (/.f64 1/64 (pow.f64 x 6)) (/.f64 1/16 (pow.f64 x 6)))))))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(fma.f64 -1/2 (/.f64 eps x) x)","(fma.f64 (/.f64 eps x) -1/2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 x))","(fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 (/.f64 eps x) -1/2 x))","(fma.f64 (*.f64 eps (/.f64 eps (pow.f64 x 3))) -1/8 (fma.f64 (/.f64 eps x) -1/2 x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 x)))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 (/.f64 eps x) -1/2 x)))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (*.f64 eps (/.f64 eps (pow.f64 x 3))) -1/8 (fma.f64 (/.f64 eps x) -1/2 x)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8 x)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x))","(fma.f64 1/2 (/.f64 eps x) (neg.f64 x))","(-.f64 (/.f64 (*.f64 1/2 eps) x) x)","(-.f64 (*.f64 1/2 (/.f64 eps x)) x)","(-.f64 (/.f64 eps (/.f64 x 1/2)) x)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 -1 x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (neg.f64 x)))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (neg.f64 x)))","(fma.f64 1/2 (/.f64 eps x) (-.f64 (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)) x))","(-.f64 (*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x)))) x)","(-.f64 (*.f64 eps (+.f64 (/.f64 1/2 x) (/.f64 1/8 (/.f64 (pow.f64 x 3) eps)))) x)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1 x))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (neg.f64 x))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))) x))","(-.f64 (fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))) x)","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (-.f64 (*.f64 (/.f64 eps x) (+.f64 1/2 (/.f64 (*.f64 eps 1/8) (*.f64 x x)))) x))","(-.f64 (*.f64 (*.f64 eps eps) (+.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) eps))) (fma.f64 (/.f64 eps x) -1/2 x))","x","(+.f64 (*.f64 -1/2 (/.f64 eps x)) x)","(fma.f64 -1/2 (/.f64 eps x) x)","(fma.f64 (/.f64 eps x) -1/2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 x))","(fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 (/.f64 eps x) -1/2 x))","(fma.f64 (*.f64 eps (/.f64 eps (pow.f64 x 3))) -1/8 (fma.f64 (/.f64 eps x) -1/2 x))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) x)))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) x)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 x)))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 (/.f64 eps x) -1/2 x)))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (*.f64 eps (/.f64 eps (pow.f64 x 3))) -1/8 (fma.f64 (/.f64 eps x) -1/2 x)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8 x)))","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(fma.f64 x x (neg.f64 eps))"]],"stop":[["node limit",1]],"time":44.14599609375,"type":"simplify"},{"compiler":[[2156,893]],"time":21.51611328125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","next",0.30078125],["(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","fresh",39.88798473881868],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","done",24.214644929817577]],"compiler":[[20,9],[17,13],[10,6],[20,9],[17,13]],"count":[[136,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[135,2],"picked":[1,1]}],"min-error":[0.00390625],"time":20.27587890625,"type":"prune"},{"compiler":[[60,9]],"locations":[["(-.f64 (*.f64 x x) eps)",0.00390625,false],["(sqrt.f64 (-.f64 (*.f64 x x) eps))",0.0078125,false],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",0.03125,true],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))",0.296875,true]],"time":8.096923828125,"type":"localize"},{"count":[[2,24]],"series":[["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","-inf",0.320068359375],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","inf",0.2978515625],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","eps","0",0.215087890625],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","-inf",0.2421875],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","inf",0.196044921875],["(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","x","0",0.221923828125],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","-inf",1.06103515625],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","inf",1.394775390625],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","0",0.34716796875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","-inf",0.7158203125],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","inf",0.40576171875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","0",0.726806640625]],"time":6.3251953125,"type":"series"},{"count":[[2,194]],"egraph":[[2,4073,22,0.0266295],[1,261,24,0.005043834],[0,10,30,0.000293542]],"inputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","(+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (/.f64 (fma.f64 x x (neg.f64 eps)) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 eps 3) (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 eps (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 eps 3) (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4)) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (/.f64 (fma.f64 x x (neg.f64 eps)) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2)) (/.f64 1 (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 eps (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 eps) 2) (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (cbrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 eps) (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 eps) (neg.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 eps 3) (*.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (*.f64 eps eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2)) (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2)) (+.f64 (fma.f64 x x (neg.f64 eps)) (-.f64 (*.f64 x x) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 eps eps)) (*.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (neg.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) (neg.f64 (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 x x (neg.f64 eps)) (*.f64 x x)) (-.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 x x (fma.f64 x x (neg.f64 eps))) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x (neg.f64 eps)) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (cbrt.f64 (fma.f64 x x (neg.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 2))) (sqrt.f64 (cbrt.f64 (fma.f64 x x (neg.f64 eps)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 x (sqrt.f64 (neg.f64 eps))) x)))))"]],"rules":[["egg-rr",55],["egg-rr",139]],"stop":[["node limit",1]],"time":59.40283203125,"type":"rewrite"},{"count":[[218,215]],"egraph":[[3,3865,565,0.018889167],[2,855,578,0.007014875],[1,259,594,0.001801958],[0,85,605,0.000430042]],"inputs":[["(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/32 (pow.f64 eps 4)) (*.f64 -1/128 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (*.f64 eps (pow.f64 x 5)))) (*.f64 -1/4 (/.f64 (*.f64 eps (+.f64 (*.f64 -1/4 (pow.f64 eps 2)) (*.f64 1/8 (pow.f64 eps 2)))) (pow.f64 x 5)))))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 eps 4)) (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2)) (pow.f64 x 7))) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 eps x))","(*.f64 (/.f64 1/2 x) eps)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 eps (*.f64 eps 1/8)) (pow.f64 x 3)))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))))","(fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/32 (pow.f64 eps 4)) (*.f64 -1/128 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 eps 4) -5/128) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))) (/.f64 (pow.f64 eps 4) (/.f64 (pow.f64 x 7) -5/128))))","(fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))))","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 x 2 (/.f64 -1/2 (/.f64 x eps)))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) -1/8))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (*.f64 (/.f64 -1/8 (pow.f64 x 3)) (*.f64 eps eps))))","(fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (*.f64 (/.f64 eps (*.f64 x x)) -1/8))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2) (*.f64 1/16 (pow.f64 eps 4))) (*.f64 eps (pow.f64 x 5)))) (*.f64 -1/4 (/.f64 (*.f64 eps (+.f64 (*.f64 -1/4 (pow.f64 eps 2)) (*.f64 1/8 (pow.f64 eps 2)))) (pow.f64 x 5)))))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (+.f64 (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -2 (/.f64 (fma.f64 1/16 (pow.f64 eps 4) (pow.f64 (*.f64 (*.f64 eps eps) -1/8) 2)) (*.f64 eps (pow.f64 x 5))) (*.f64 -1/4 (/.f64 eps (/.f64 (pow.f64 x 5) (*.f64 (*.f64 eps eps) -1/8)))))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 eps 3) -1/8) (pow.f64 x 5)) (*.f64 -2 (/.f64 (fma.f64 1/16 (pow.f64 eps 4) (*.f64 (pow.f64 eps 4) 1/64)) (*.f64 eps (pow.f64 x 5)))))))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -2 (/.f64 (*.f64 (pow.f64 eps 4) 5/64) (*.f64 eps (pow.f64 x 5))) (/.f64 (*.f64 (pow.f64 eps 3) 1/32) (pow.f64 x 5)))))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (+.f64 (/.f64 (*.f64 (pow.f64 eps 3) 1/32) (pow.f64 x 5)) (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (/.f64 (*.f64 (pow.f64 eps 4) -5/32) (*.f64 eps (pow.f64 x 5))))))))","(*.f64 1/2 (/.f64 eps x))","(*.f64 (/.f64 1/2 x) eps)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 eps (*.f64 eps 1/8)) (pow.f64 x 3)))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))))","(fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 eps 4) -5/128) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))) (/.f64 (pow.f64 eps 4) (/.f64 (pow.f64 x 7) -5/128))))","(fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))))","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 x 2 (/.f64 -1/2 (/.f64 x eps)))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) -1/8))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (*.f64 (/.f64 -1/8 (pow.f64 x 3)) (*.f64 eps eps))))","(fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (*.f64 (/.f64 eps (*.f64 x x)) -1/8))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (/.f64 -1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 x 2 (*.f64 (/.f64 -1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (*.f64 (/.f64 -1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(*.f64 1/2 (/.f64 eps x))","(*.f64 (/.f64 1/2 x) eps)","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 eps (*.f64 eps 1/8)) (pow.f64 x 3)))","(fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/8 (pow.f64 x 3)) (*.f64 eps eps)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))))","(fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 eps 4)) (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2)) (pow.f64 x 7))) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 eps 4) -5/128) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3)))) (/.f64 (pow.f64 eps 4) (/.f64 (pow.f64 x 7) -5/128))))","(fma.f64 1/2 (/.f64 eps x) (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 (/.f64 eps (*.f64 x x)) 1/8)))))","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 x 2 (/.f64 -1/2 (/.f64 x eps)))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) -1/8))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (*.f64 (/.f64 -1/8 (pow.f64 x 3)) (*.f64 eps eps))))","(fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (*.f64 (/.f64 eps (*.f64 x x)) -1/8))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (/.f64 -1/16 (/.f64 (pow.f64 x 5) (pow.f64 eps 3))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 x 2 (*.f64 (/.f64 -1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(fma.f64 x 2 (fma.f64 (/.f64 eps x) -1/2 (fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (*.f64 (/.f64 -1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))"]],"stop":[["node limit",1]],"time":37.632080078125,"type":"simplify"},{"compiler":[[7191,1926]],"time":47.241943359375,"type":"eval"},{"alts":[["(pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)","fresh",13.342128759768443],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) x))","fresh",0.38613134768442026],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","next",0.33431625976844204],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","done",24.214644929817577]],"compiler":[[13,9],[28,13],[36,14],[10,6],[13,9],[28,13],[36,14]],"count":[[300,4]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[297,3],"picked":[1,0]}],"min-error":[0],"time":73.31298828125,"type":"prune"},{"compiler":[[161,14]],"locations":[["(cbrt.f64 (-.f64 (*.f64 x x) eps))",0.1015625,true],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))",0.29134750976844204,true],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))",0.296875,true],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))",0.33431625976844204,true]],"time":15.9541015625,"type":"localize"},{"count":[[4,68]],"series":[["(cbrt.f64 (-.f64 (*.f64 x x) eps))","eps","-inf",0.28515625],["(cbrt.f64 (-.f64 (*.f64 x x) eps))","eps","inf",1.47119140625],["(cbrt.f64 (-.f64 (*.f64 x x) eps))","eps","0",0.662109375],["(cbrt.f64 (-.f64 (*.f64 x x) eps))","x","-inf",0.2451171875],["(cbrt.f64 (-.f64 (*.f64 x x) eps))","x","inf",0.3330078125],["(cbrt.f64 (-.f64 (*.f64 x x) eps))","x","0",1.089111328125],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","eps","-inf",1.7080078125],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","eps","inf",1.927978515625],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","eps","0",2.20703125],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","x","-inf",0.68505859375],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","x","inf",1.833984375],["(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","x","0",3.16796875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","eps","-inf",0.77294921875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","eps","inf",0.968017578125],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","eps","0",8.458984375],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","x","-inf",0.421875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","x","inf",0.2978515625],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","x","0",26.694091796875],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","-inf",0.259033203125],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","inf",0.262939453125],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","eps","0",0.5458984375],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","-inf",0.1611328125],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","inf",0.281005859375],["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","x","0",1.443115234375]],"time":56.760009765625,"type":"series"},{"count":[[4,345]],"egraph":[[2,5445,37,0.031131875],[1,358,38,0.0072959999999999995],[0,15,106,0.000397417]],"inputs":[["(*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps))))","(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","(*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps)))","(cbrt.f64 (-.f64 (*.f64 x x) eps))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x x) eps) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 eps) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) eps)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 (*.f64 x x) eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 x 6) (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))) (/.f64 (pow.f64 eps 3) (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 x 4) (fma.f64 x x eps)) (/.f64 (*.f64 eps eps) (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4)) (-.f64 (pow.f64 x 6) (pow.f64 eps 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x eps) (-.f64 (pow.f64 x 4) (*.f64 eps eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (fma.f64 x x eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3))) (neg.f64 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps))) (neg.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 (neg.f64 eps) 3)) (+.f64 (pow.f64 x 4) (-.f64 (*.f64 (neg.f64 eps) (neg.f64 eps)) (*.f64 (*.f64 x x) (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (*.f64 (neg.f64 eps) (neg.f64 eps))) (-.f64 (*.f64 x x) (neg.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x x) eps) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (exp.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (exp.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) x) (/.f64 1 (exp.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (/.f64 1 (exp.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 eps)) (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 eps)) (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 eps)) (+.f64 1 (expm1.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 eps)) (+.f64 1 (expm1.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 x x) eps)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x x (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) 1 (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) eps) 1 (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) eps) 1 (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) eps) 1 (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x x) eps) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x x) eps) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 eps) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (pow.f64 x 4)) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (pow.f64 x 4)) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (pow.f64 (cbrt.f64 x) 2) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 4)) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 eps eps)) (neg.f64 (cbrt.f64 eps)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (neg.f64 (sqrt.f64 eps)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (/.f64 1 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (/.f64 1 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3)) (/.f64 1 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (/.f64 1 (fma.f64 x x eps)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (/.f64 1 (fma.f64 x x eps)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (/.f64 1 (fma.f64 x x eps)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 eps)) (cbrt.f64 (neg.f64 eps))) (cbrt.f64 (neg.f64 eps)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 eps)) (sqrt.f64 (neg.f64 eps)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 eps)) (sqrt.f64 eps) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 eps (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (sqrt.f64 eps)) (-.f64 x (sqrt.f64 eps)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (sqrt.f64 eps)) (-.f64 x (sqrt.f64 eps)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x (sqrt.f64 eps)) (-.f64 x (sqrt.f64 eps)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (*.f64 eps eps))) (cbrt.f64 eps) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) 1) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) 1) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) 1) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2))) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2))) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2))) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (neg.f64 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 (neg.f64 eps) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)))) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)))) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)))) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (+.f64 (neg.f64 eps) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (fma.f64 (neg.f64 eps) 1 eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (fma.f64 (neg.f64 (cbrt.f64 eps)) (cbrt.f64 (*.f64 eps eps)) eps))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (+.f64 (neg.f64 eps) eps))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (/.f64 (-.f64 (*.f64 x x) eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 eps eps)) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (-.f64 (fma.f64 x x (-.f64 (*.f64 x x) eps)) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 eps (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 eps 3) (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 eps eps)) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 eps eps)) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 eps eps)) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 eps eps)) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 eps) (/.f64 1 (neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) eps (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 -1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 eps eps)) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (-.f64 (fma.f64 x x (-.f64 (*.f64 x x) eps)) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (-.f64 (fma.f64 x x (-.f64 (*.f64 x x) eps)) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (-.f64 (fma.f64 x x (-.f64 (*.f64 x x) eps)) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2))) (-.f64 (fma.f64 x x (-.f64 (*.f64 x x) eps)) (*.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) 1 (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (-.f64 (*.f64 x x) eps)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (hypot.f64 x (sqrt.f64 (neg.f64 eps)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x x) eps) 5/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 3/2) (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (-.f64 (*.f64 x x) eps) (pow.f64 (-.f64 (*.f64 x x) eps) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 5/6 (log.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 5/6 (log.f64 (-.f64 (*.f64 x x) eps))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 5/6)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2)) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (*.f64 (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6) (pow.f64 (-.f64 (*.f64 x x) eps) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/4) (pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (-.f64 (*.f64 x x) eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2) 1/3) (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps))) (cbrt.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 x 6) (pow.f64 eps 3))) (cbrt.f64 (fma.f64 eps (fma.f64 x x eps) (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x x) eps) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x x) eps) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (sqrt.f64 (neg.f64 eps))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 x x) eps)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (-.f64 (*.f64 x x) eps))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",16],["egg-rr",161],["egg-rr",140]],"stop":[["node limit",1]],"time":82.251953125,"type":"rewrite"},{"count":[[413,426]],"egraph":[[2,6221,2476,0.028522542],[1,1412,2825,0.0118895],[0,413,3077,0.00216725]],"inputs":[["(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/32 (pow.f64 eps 4)) (*.f64 -1/128 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 eps 4)) (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2)) (*.f64 eps (pow.f64 x 5)))) (*.f64 -1/4 (/.f64 (*.f64 eps (+.f64 (*.f64 -1/4 (pow.f64 eps 2)) (*.f64 1/8 (pow.f64 eps 2)))) (pow.f64 x 5)))))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (*.f64 1/72 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10)))) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)))","(+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 -1/864 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (pow.f64 eps 5))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 eps 15))) (*.f64 1/4320 (+.f64 (*.f64 -720 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3)))) (pow.f64 eps 10))) (+.f64 (*.f64 -720 (/.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 eps 5))) (*.f64 -240 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 eps 15)))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (*.f64 1/72 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10)))) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))))","(pow.f64 (pow.f64 x 5) 1/3)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 13)) 1/3) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 1/4320 (+.f64 (*.f64 240 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (*.f64 720 (+.f64 (*.f64 -4 (pow.f64 eps 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps))))))) (*.f64 1/864 (*.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3))))","(pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3)","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2))))))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 13)) 1/3) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 1/4320 (+.f64 (*.f64 240 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (*.f64 720 (+.f64 (*.f64 -4 (pow.f64 eps 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps))))))) (*.f64 1/864 (*.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))))","(pow.f64 (pow.f64 x 5) 1/3)","(+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10))))) (*.f64 25/72 (/.f64 1 (pow.f64 x 4)))))) (+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10))))) (*.f64 25/72 (/.f64 1 (pow.f64 x 4)))))) (+.f64 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/36 (+.f64 (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))))) (pow.f64 x 20))) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4))) (pow.f64 x 10))) (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 3) (pow.f64 x 30)))))) (*.f64 -5/72 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10)))) (pow.f64 x 2)))) (*.f64 125/1296 (/.f64 1 (pow.f64 x 6)))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3)) (+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3))))","(exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)) (*.f64 1/12 (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (+.f64 (*.f64 1/36 (+.f64 (*.f64 -6 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))))) (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4))))) (*.f64 -2 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3))))) (*.f64 -1/1296 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)) (*.f64 1/12 (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2)))))","(pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/12 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/12 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 13)) 1/6) (+.f64 (*.f64 1/36 (+.f64 (*.f64 2 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)) (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (*.f64 6 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))))))) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)) (*.f64 1/72 (*.f64 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))))))))))","(*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2))))))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 8)) 1/3) (/.f64 (pow.f64 x 6) (pow.f64 (cbrt.f64 -1) 8)))))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)))) (pow.f64 eps 3)) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) 1/8)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/32 (pow.f64 eps 4)) (*.f64 -1/128 (pow.f64 eps 4))) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 eps 4) -5/128) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))) (/.f64 (pow.f64 eps 4) (/.f64 (pow.f64 x 7) -5/128))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (/.f64 (*.f64 eps (*.f64 eps -1/8)) (pow.f64 x 3))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 eps 4)) (pow.f64 (*.f64 -1/8 (pow.f64 eps 2)) 2)) (*.f64 eps (pow.f64 x 5)))) (*.f64 -1/4 (/.f64 (*.f64 eps (+.f64 (*.f64 -1/4 (pow.f64 eps 2)) (*.f64 1/8 (pow.f64 eps 2)))) (pow.f64 x 5)))))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (+.f64 (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -2 (/.f64 (fma.f64 1/16 (pow.f64 eps 4) (pow.f64 (*.f64 (*.f64 eps eps) -1/8) 2)) (*.f64 eps (pow.f64 x 5))) (*.f64 -1/4 (/.f64 eps (/.f64 (pow.f64 x 5) (*.f64 (*.f64 eps eps) -1/8)))))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -2 (/.f64 (fma.f64 1/16 (pow.f64 eps 4) (*.f64 (pow.f64 eps 4) 1/64)) (*.f64 eps (pow.f64 x 5))) (*.f64 -1/4 (/.f64 (*.f64 (pow.f64 eps 3) -1/8) (pow.f64 x 5))))))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 -2 (/.f64 (*.f64 (pow.f64 eps 4) 5/64) (*.f64 eps (pow.f64 x 5))) (*.f64 (/.f64 -1/4 (pow.f64 x 5)) (*.f64 (pow.f64 eps 3) -1/8)))))))","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) 1/8)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 eps 4) -5/128) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (-.f64 (fma.f64 1/2 (/.f64 eps x) (/.f64 (*.f64 1/16 (pow.f64 eps 3)) (pow.f64 x 5))) (/.f64 (pow.f64 eps 4) (/.f64 (pow.f64 x 7) -5/128))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3)))))","(pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)","(pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))","(fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (*.f64 1/72 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10)))) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)))","(fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (fma.f64 (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6) (*.f64 (fma.f64 1/144 (fma.f64 -12 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 2) (pow.f64 eps 10)) (*.f64 -24 (/.f64 (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))) (pow.f64 eps 5)))) (*.f64 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 2) (pow.f64 eps 10)) 1/72)) (pow.f64 x 4)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)))","(fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (*.f64 (+.f64 (*.f64 (fma.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) 1/72 (+.f64 (*.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) -1/12) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6)) (pow.f64 eps 5))))) (pow.f64 x 4)) 1) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)))","(fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) -5/72) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 eps 3) -10) (pow.f64 eps 5)))) (pow.f64 x 4)) 1) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)))","(+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 -1/864 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (pow.f64 eps 5))) (+.f64 (*.f64 -1/1296 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 eps 15))) (*.f64 1/4320 (+.f64 (*.f64 -720 (/.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3)))) (pow.f64 eps 10))) (+.f64 (*.f64 -720 (/.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 eps 5))) (*.f64 -240 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 eps 15)))))))) (pow.f64 x 6))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (+.f64 (*.f64 1/144 (+.f64 (*.f64 -12 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10))) (*.f64 -24 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps)) (*.f64 -4 (pow.f64 eps 3))) (pow.f64 eps 5))))) (*.f64 1/72 (/.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 eps 10)))) (pow.f64 x 4))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6) (*.f64 (fma.f64 -1/864 (/.f64 (*.f64 5 (pow.f64 eps 4)) (/.f64 (pow.f64 eps 5) (fma.f64 -12 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 2) (pow.f64 eps 10)) (*.f64 -24 (/.f64 (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))) (pow.f64 eps 5)))))) (fma.f64 -1/1296 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3) (pow.f64 eps 15)) (*.f64 1/4320 (fma.f64 -720 (/.f64 (*.f64 5 (pow.f64 eps 4)) (/.f64 (pow.f64 eps 10) (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))))) (fma.f64 -720 (/.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 eps 5)) (*.f64 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3) (pow.f64 eps 15)) -240)))))) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (fma.f64 (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6) (*.f64 (fma.f64 1/144 (fma.f64 -12 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 2) (pow.f64 eps 10)) (*.f64 -24 (/.f64 (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))) (pow.f64 eps 5)))) (*.f64 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 2) (pow.f64 eps 10)) 1/72)) (pow.f64 x 4)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))))","(fma.f64 (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6) (*.f64 (fma.f64 -1/864 (*.f64 (/.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 eps 5)) (fma.f64 -12 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) (/.f64 -24 (/.f64 (pow.f64 eps 5) (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6)))))) (fma.f64 1/4320 (fma.f64 -720 (*.f64 (/.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 eps 10)) (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6))) (fma.f64 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3) (pow.f64 eps 15)) -240 (/.f64 (*.f64 (*.f64 -720 (*.f64 eps eps)) 10) (pow.f64 eps 5)))) (/.f64 -1/1296 (/.f64 (pow.f64 eps 15) (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3))))) (pow.f64 x 6)) (fma.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4)))) (*.f64 (+.f64 (*.f64 (fma.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) 1/72 (+.f64 (*.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) -1/12) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6)) (pow.f64 eps 5))))) (pow.f64 x 4)) 1) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 25)) 1/6) (*.f64 (*.f64 (*.f64 x x) (*.f64 5 (pow.f64 eps 4))) -1/6)) (*.f64 (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6) (+.f64 (+.f64 (*.f64 (+.f64 (*.f64 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) -5/72) (*.f64 -1/6 (/.f64 (*.f64 (pow.f64 eps 3) -10) (pow.f64 eps 5)))) (pow.f64 x 4)) 1) (*.f64 (fma.f64 -1/864 (*.f64 (/.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 eps 5)) (fma.f64 -12 (/.f64 (*.f64 25 (pow.f64 eps 8)) (pow.f64 eps 10)) (/.f64 -24 (/.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) -10))))) (fma.f64 1/4320 (fma.f64 -720 (*.f64 (/.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 eps 10)) (*.f64 (pow.f64 eps 3) -10)) (fma.f64 (/.f64 (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3) (pow.f64 eps 15)) -240 (/.f64 (*.f64 (*.f64 -720 (*.f64 eps eps)) 10) (pow.f64 eps 5)))) (/.f64 -1/1296 (/.f64 (pow.f64 eps 15) (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3))))) (pow.f64 x 6)))))","(pow.f64 (pow.f64 x 5) 1/3)","(cbrt.f64 (pow.f64 x 5))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3))","(fma.f64 1/6 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 eps -5)) (cbrt.f64 (pow.f64 x 5)))","(fma.f64 (*.f64 1/6 (cbrt.f64 (/.f64 1 x))) (*.f64 eps -5) (cbrt.f64 (pow.f64 x 5)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3)))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/72 (pow.f64 (*.f64 eps -5) 2) (*.f64 1/144 (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2))))) (fma.f64 1/6 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 eps -5)) (cbrt.f64 (pow.f64 x 5))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/144 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) (*.f64 1/72 (*.f64 (*.f64 eps eps) 25))) (fma.f64 (*.f64 1/6 (cbrt.f64 (/.f64 1 x))) (*.f64 eps -5) (cbrt.f64 (pow.f64 x 5))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 1/6 (*.f64 (*.f64 eps eps) 10)) (*.f64 (*.f64 (*.f64 eps eps) 25) -5/72)) (fma.f64 (*.f64 1/6 (cbrt.f64 (/.f64 1 x))) (*.f64 eps -5) (cbrt.f64 (pow.f64 x 5))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 13)) 1/3) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 1/4320 (+.f64 (*.f64 240 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (*.f64 720 (+.f64 (*.f64 -4 (pow.f64 eps 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps))))))) (*.f64 1/864 (*.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (pow.f64 x 5) 1/3))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 13))) (fma.f64 1/1296 (pow.f64 (*.f64 eps -5) 3) (fma.f64 1/4320 (fma.f64 240 (pow.f64 (*.f64 eps -5) 3) (fma.f64 -720 (*.f64 (*.f64 (*.f64 eps eps) 10) (*.f64 eps -5)) (*.f64 (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))) 720))) (*.f64 (*.f64 1/864 (*.f64 eps -5)) (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2)))))) (fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/72 (pow.f64 (*.f64 eps -5) 2) (*.f64 1/144 (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2))))) (fma.f64 1/6 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 eps -5)) (cbrt.f64 (pow.f64 x 5)))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 13))) (fma.f64 1/1296 (*.f64 (pow.f64 eps 3) -125) (fma.f64 1/4320 (fma.f64 (*.f64 (pow.f64 eps 3) -125) 240 (fma.f64 (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6)) 720 (*.f64 (*.f64 eps -5) (*.f64 (*.f64 -720 (*.f64 eps eps)) 10)))) (*.f64 (*.f64 eps -5) (*.f64 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) 1/864)))) (fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (fma.f64 1/144 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) (*.f64 1/72 (*.f64 (*.f64 eps eps) 25))) (fma.f64 (*.f64 1/6 (cbrt.f64 (/.f64 1 x))) (*.f64 eps -5) (cbrt.f64 (pow.f64 x 5)))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 13))) (+.f64 (*.f64 (*.f64 eps -5) (*.f64 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) 1/864)) (+.f64 (*.f64 (*.f64 (pow.f64 eps 3) -125) 73/1296) (*.f64 1/4320 (fma.f64 (*.f64 (pow.f64 eps 3) -10) 720 (*.f64 (*.f64 eps -5) (*.f64 (*.f64 -720 (*.f64 eps eps)) 10)))))) (fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 7))) (+.f64 (*.f64 1/6 (*.f64 (*.f64 eps eps) 10)) (*.f64 (*.f64 (*.f64 eps eps) 25) -5/72)) (fma.f64 (*.f64 1/6 (cbrt.f64 (/.f64 1 x))) (*.f64 eps -5) (cbrt.f64 (pow.f64 x 5)))))","(pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3)","(cbrt.f64 (neg.f64 (pow.f64 x 5)))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3))","(fma.f64 1/6 (*.f64 (*.f64 eps -5) (cbrt.f64 (/.f64 -1 x))) (cbrt.f64 (neg.f64 (pow.f64 x 5))))","(fma.f64 1/6 (*.f64 eps (*.f64 -5 (cbrt.f64 (/.f64 -1 x)))) (cbrt.f64 (neg.f64 (pow.f64 x 5))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2))))))))","(+.f64 (fma.f64 1/6 (*.f64 (*.f64 eps -5) (cbrt.f64 (/.f64 -1 x))) (cbrt.f64 (neg.f64 (pow.f64 x 5)))) (*.f64 (fma.f64 1/72 (pow.f64 (*.f64 eps -5) 2) (*.f64 1/144 (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2))))) (cbrt.f64 (/.f64 -1 (pow.f64 x 7)))))","(fma.f64 1/6 (*.f64 eps (*.f64 -5 (cbrt.f64 (/.f64 -1 x)))) (fma.f64 (fma.f64 1/144 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) (*.f64 1/72 (*.f64 (*.f64 eps eps) 25))) (cbrt.f64 (/.f64 -1 (pow.f64 x 7))) (cbrt.f64 (neg.f64 (pow.f64 x 5)))))","(fma.f64 1/6 (*.f64 eps (*.f64 -5 (cbrt.f64 (/.f64 -1 x)))) (fma.f64 (+.f64 (*.f64 1/6 (*.f64 (*.f64 eps eps) 10)) (*.f64 (*.f64 (*.f64 eps eps) 25) -5/72)) (cbrt.f64 (/.f64 -1 (pow.f64 x 7))) (cbrt.f64 (neg.f64 (pow.f64 x 5)))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 13)) 1/3) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 1/4320 (+.f64 (*.f64 240 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 3)) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (*.f64 720 (+.f64 (*.f64 -4 (pow.f64 eps 3)) (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps))))))) (*.f64 1/864 (*.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 (/.f64 -1 x) 1/3) (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 x 7)) 1/3) (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)) (*.f64 1/144 (+.f64 (*.f64 24 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2)))) (*.f64 -12 (pow.f64 (+.f64 (*.f64 -1 eps) (*.f64 -4 eps)) 2)))))))))","(fma.f64 (cbrt.f64 (/.f64 -1 (pow.f64 x 13))) (fma.f64 1/1296 (pow.f64 (*.f64 eps -5) 3) (fma.f64 1/4320 (fma.f64 240 (pow.f64 (*.f64 eps -5) 3) (fma.f64 -720 (*.f64 (*.f64 (*.f64 eps eps) 10) (*.f64 eps -5)) (*.f64 (fma.f64 -4 (pow.f64 eps 3) (neg.f64 (*.f64 eps (*.f64 (*.f64 eps eps) 6)))) 720))) (*.f64 (*.f64 1/864 (*.f64 eps -5)) (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2)))))) (+.f64 (fma.f64 1/6 (*.f64 (*.f64 eps -5) (cbrt.f64 (/.f64 -1 x))) (cbrt.f64 (neg.f64 (pow.f64 x 5)))) (*.f64 (fma.f64 1/72 (pow.f64 (*.f64 eps -5) 2) (*.f64 1/144 (fma.f64 24 (*.f64 (*.f64 eps eps) 10) (*.f64 -12 (pow.f64 (*.f64 eps -5) 2))))) (cbrt.f64 (/.f64 -1 (pow.f64 x 7))))))","(fma.f64 (fma.f64 1/1296 (*.f64 (pow.f64 eps 3) -125) (fma.f64 1/4320 (fma.f64 (*.f64 (pow.f64 eps 3) -125) 240 (fma.f64 (-.f64 (*.f64 (pow.f64 eps 3) -4) (*.f64 (pow.f64 eps 3) 6)) 720 (*.f64 (*.f64 eps -5) (*.f64 (*.f64 -720 (*.f64 eps eps)) 10)))) (*.f64 (*.f64 eps -5) (*.f64 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) 1/864)))) (cbrt.f64 (/.f64 -1 (pow.f64 x 13))) (fma.f64 1/6 (*.f64 eps (*.f64 -5 (cbrt.f64 (/.f64 -1 x)))) (fma.f64 (fma.f64 1/144 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) (*.f64 1/72 (*.f64 (*.f64 eps eps) 25))) (cbrt.f64 (/.f64 -1 (pow.f64 x 7))) (cbrt.f64 (neg.f64 (pow.f64 x 5))))))","(fma.f64 (+.f64 (*.f64 (*.f64 eps -5) (*.f64 (fma.f64 -12 (*.f64 (*.f64 eps eps) 25) (*.f64 (*.f64 eps eps) 240)) 1/864)) (+.f64 (*.f64 (*.f64 (pow.f64 eps 3) -125) 73/1296) (*.f64 1/4320 (fma.f64 (*.f64 (pow.f64 eps 3) -10) 720 (*.f64 (*.f64 eps -5) (*.f64 (*.f64 -720 (*.f64 eps eps)) 10)))))) (cbrt.f64 (/.f64 -1 (pow.f64 x 13))) (fma.f64 1/6 (*.f64 eps (*.f64 -5 (cbrt.f64 (/.f64 -1 x)))) (fma.f64 (+.f64 (*.f64 1/6 (*.f64 (*.f64 eps eps) 10)) (*.f64 (*.f64 (*.f64 eps eps) 25) -5/72)) (cbrt.f64 (/.f64 -1 (pow.f64 x 7))) (cbrt.f64 (neg.f64 (pow.f64 x 5))))))","(pow.f64 (pow.f64 x 5) 1/3)","(cbrt.f64 (pow.f64 x 5))","(+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3))","(fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10))))) (*.f64 25/72 (/.f64 1 (pow.f64 x 4)))))) (+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3)))","(fma.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 (*.f64 eps eps) (fma.f64 1/12 (fma.f64 -1 (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20)) (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6))) (pow.f64 x 10)))) (/.f64 25/72 (pow.f64 x 4)))) (fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5))))","(fma.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 eps (*.f64 eps (fma.f64 1/12 (-.f64 (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6)) (pow.f64 x 10))) (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20))) (/.f64 25/72 (pow.f64 x 4))))) (fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5))))","(+.f64 (*.f64 eps (*.f64 (cbrt.f64 (/.f64 1 x)) -5/6)) (*.f64 (+.f64 (*.f64 eps (*.f64 eps (fma.f64 1/12 (fma.f64 2 (/.f64 (*.f64 (pow.f64 x 6) 10) (pow.f64 x 10)) (/.f64 (*.f64 (pow.f64 x 16) -25) (pow.f64 x 20))) (/.f64 25/72 (pow.f64 x 4))))) 1) (cbrt.f64 (pow.f64 x 5))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3) (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10))))) (*.f64 25/72 (/.f64 1 (pow.f64 x 4)))))) (+.f64 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/36 (+.f64 (*.f64 -6 (/.f64 (*.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))))) (pow.f64 x 20))) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4))) (pow.f64 x 10))) (*.f64 2 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 3) (pow.f64 x 30)))))) (*.f64 -5/72 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 -4 (pow.f64 x 8)) (*.f64 -1 (pow.f64 x 8))) 2) (pow.f64 x 20))) (*.f64 2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))) (pow.f64 x 10)))) (pow.f64 x 2)))) (*.f64 125/1296 (/.f64 1 (pow.f64 x 6)))) (pow.f64 eps 3)) (pow.f64 (*.f64 1 (pow.f64 x 5)) 1/3)) (+.f64 (*.f64 -5/6 (*.f64 eps (pow.f64 (/.f64 1 x) 1/3))) (pow.f64 (pow.f64 x 5) 1/3))))","(fma.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 (*.f64 eps eps) (fma.f64 1/12 (fma.f64 -1 (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20)) (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6))) (pow.f64 x 10)))) (/.f64 25/72 (pow.f64 x 4)))) (fma.f64 (*.f64 (pow.f64 eps 3) (-.f64 (fma.f64 1/36 (fma.f64 -6 (/.f64 (*.f64 (pow.f64 x 8) -5) (/.f64 (pow.f64 x 20) (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6))))) (fma.f64 6 (/.f64 (fma.f64 -1 (*.f64 (pow.f64 x 4) 6) (*.f64 -4 (pow.f64 x 4))) (pow.f64 x 10)) (/.f64 (*.f64 2 (pow.f64 (*.f64 (pow.f64 x 8) -5) 3)) (pow.f64 x 30)))) (*.f64 -5/72 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20)) (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6))) (pow.f64 x 10)))) (*.f64 x x)))) (/.f64 125/1296 (pow.f64 x 6)))) (cbrt.f64 (pow.f64 x 5)) (fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5)))))","(+.f64 (fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5))) (*.f64 (cbrt.f64 (pow.f64 x 5)) (+.f64 (*.f64 eps (*.f64 eps (fma.f64 1/12 (-.f64 (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6)) (pow.f64 x 10))) (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20))) (/.f64 25/72 (pow.f64 x 4))))) (*.f64 (pow.f64 eps 3) (fma.f64 1/36 (fma.f64 -6 (*.f64 (/.f64 (*.f64 (pow.f64 x 8) -5) (pow.f64 x 20)) (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6))) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (pow.f64 x 8) 3) -125) (pow.f64 x 30)) (/.f64 (*.f64 6 (fma.f64 -4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -6))) (pow.f64 x 10)))) (fma.f64 -5/72 (/.f64 (-.f64 (*.f64 2 (/.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6)) (pow.f64 x 10))) (/.f64 (pow.f64 (*.f64 (pow.f64 x 8) -5) 2) (pow.f64 x 20))) (*.f64 x x)) (/.f64 -125/1296 (pow.f64 x 6))))))))","(+.f64 (fma.f64 -5/6 (*.f64 eps (cbrt.f64 (/.f64 1 x))) (cbrt.f64 (pow.f64 x 5))) (*.f64 (cbrt.f64 (pow.f64 x 5)) (*.f64 (*.f64 eps eps) (+.f64 (fma.f64 1/12 (fma.f64 2 (/.f64 (*.f64 (pow.f64 x 6) 10) (pow.f64 x 10)) (/.f64 (*.f64 (pow.f64 x 16) -25) (pow.f64 x 20))) (/.f64 25/72 (pow.f64 x 4))) (*.f64 eps (fma.f64 1/36 (fma.f64 -6 (*.f64 (/.f64 (*.f64 (pow.f64 x 8) -5) (pow.f64 x 20)) (*.f64 (pow.f64 x 6) 10)) (fma.f64 2 (/.f64 (*.f64 (pow.f64 (pow.f64 x 8) 3) -125) (pow.f64 x 30)) (/.f64 (*.f64 6 (*.f64 (pow.f64 x 4) -10)) (pow.f64 x 10)))) (fma.f64 (/.f64 -5/72 x) (/.f64 (fma.f64 2 (/.f64 (*.f64 (pow.f64 x 6) 10) (pow.f64 x 10)) (/.f64 (*.f64 (pow.f64 x 16) -25) (pow.f64 x 20))) x) (/.f64 -125/1296 (pow.f64 x 6)))))))))","(exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))","(pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps)))))","(pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1)))","(*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)))","(+.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (*.f64 -1/6 (/.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (/.f64 eps (*.f64 5 (*.f64 x x))))))","(fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))) eps) (*.f64 (*.f64 x x) 5)) (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))))","(fma.f64 -1/6 (*.f64 (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6)) (/.f64 (*.f64 (*.f64 x x) 5) eps)) (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6)))","(+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)) (*.f64 1/12 (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2))))","(+.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (fma.f64 -1/6 (/.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (/.f64 eps (*.f64 5 (*.f64 x x)))) (/.f64 (fma.f64 1/72 (pow.f64 (*.f64 5 (*.f64 x x)) 2) (*.f64 1/12 (fma.f64 -2 (fma.f64 -1 (*.f64 (pow.f64 x 4) 6) (*.f64 -4 (pow.f64 x 4))) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2))))) (/.f64 (*.f64 eps eps) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps)))))))))","(+.f64 (fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))) eps) (*.f64 (*.f64 x x) 5)) (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1)))) (*.f64 (/.f64 (fma.f64 1/72 (*.f64 25 (pow.f64 x 4)) (+.f64 (*.f64 -1/6 (fma.f64 -4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -6))) (*.f64 (*.f64 25 (pow.f64 x 4)) -1/12))) (*.f64 eps eps)) (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1)))))","(+.f64 (*.f64 -1/6 (*.f64 (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6)) (/.f64 (*.f64 (*.f64 x x) 5) eps))) (*.f64 (+.f64 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 x 4) -10)) (*.f64 (*.f64 25 (pow.f64 x 4)) -5/72)) (*.f64 eps eps)) 1) (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/72 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (+.f64 (*.f64 1/36 (+.f64 (*.f64 -6 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))))) (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4))))) (*.f64 -2 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3))))) (*.f64 -1/1296 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 3)) (+.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 -1/6 (/.f64 (*.f64 (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps)))))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2))) eps)) (/.f64 (*.f64 (+.f64 (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)) (*.f64 1/12 (+.f64 (*.f64 -2 (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -4 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))) (exp.f64 (*.f64 1/6 (+.f64 (log.f64 -1) (*.f64 -5 (log.f64 (/.f64 1 eps))))))) (pow.f64 eps 2)))))","(+.f64 (+.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (fma.f64 -1/6 (/.f64 (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))) (/.f64 eps (*.f64 5 (*.f64 x x)))) (/.f64 (fma.f64 1/72 (pow.f64 (*.f64 5 (*.f64 x x)) 2) (*.f64 1/12 (fma.f64 -2 (fma.f64 -1 (*.f64 (pow.f64 x 4) 6) (*.f64 -4 (pow.f64 x 4))) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2))))) (/.f64 (*.f64 eps eps) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))))))) (/.f64 (fma.f64 -1/72 (*.f64 (*.f64 5 (*.f64 x x)) (fma.f64 -2 (fma.f64 -1 (*.f64 (pow.f64 x 4) 6) (*.f64 -4 (pow.f64 x 4))) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2)))) (fma.f64 1/36 (fma.f64 -6 (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6))) (fma.f64 -6 (*.f64 (fma.f64 -1 (*.f64 (pow.f64 x 4) 6) (*.f64 -4 (pow.f64 x 4))) (*.f64 5 (*.f64 x x))) (*.f64 -2 (pow.f64 (*.f64 5 (*.f64 x x)) 3)))) (*.f64 -1/1296 (pow.f64 (*.f64 5 (*.f64 x x)) 3)))) (/.f64 (pow.f64 eps 3) (pow.f64 (exp.f64 1/6) (+.f64 (log.f64 -1) (*.f64 -5 (neg.f64 (log.f64 eps))))))))","(+.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))) (+.f64 (fma.f64 -1/6 (*.f64 (/.f64 (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))) eps) (*.f64 (*.f64 x x) 5)) (*.f64 (/.f64 (fma.f64 1/72 (*.f64 25 (pow.f64 x 4)) (+.f64 (*.f64 -1/6 (fma.f64 -4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -6))) (*.f64 (*.f64 25 (pow.f64 x 4)) -1/12))) (*.f64 eps eps)) (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1))))) (/.f64 (fma.f64 (*.f64 -5/72 (*.f64 x x)) (-.f64 (*.f64 -2 (fma.f64 -4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -6))) (*.f64 25 (pow.f64 x 4))) (fma.f64 -1/1296 (*.f64 125 (pow.f64 (*.f64 x x) 3)) (*.f64 1/36 (fma.f64 (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6)) -6 (fma.f64 (*.f64 -30 (*.f64 x x)) (fma.f64 -4 (pow.f64 x 4) (*.f64 (pow.f64 x 4) -6)) (*.f64 -2 (*.f64 125 (pow.f64 (*.f64 x x) 3)))))))) (/.f64 (pow.f64 eps 3) (pow.f64 (exp.f64 1/6) (fma.f64 -5 (neg.f64 (log.f64 eps)) (log.f64 -1)))))))","(+.f64 (fma.f64 -1/6 (*.f64 (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6)) (/.f64 (*.f64 (*.f64 x x) 5) eps)) (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6))) (*.f64 (*.f64 (pow.f64 -1 1/6) (pow.f64 (/.f64 1 eps) -5/6)) (+.f64 (/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 x 4) -10)) (*.f64 (*.f64 25 (pow.f64 x 4)) -5/72)) (*.f64 eps eps)) (/.f64 (fma.f64 (*.f64 -5/72 (*.f64 x x)) (fma.f64 -2 (*.f64 (pow.f64 x 4) -10) (*.f64 -25 (pow.f64 x 4))) (fma.f64 -1/1296 (*.f64 (pow.f64 x 6) 125) (*.f64 1/36 (fma.f64 (*.f64 (pow.f64 x 6) 10) -6 (fma.f64 (*.f64 -30 (*.f64 x x)) (*.f64 (pow.f64 x 4) -10) (*.f64 -2 (*.f64 (pow.f64 x 6) 125))))))) (pow.f64 eps 3)))))","(pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6)","(pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6))","(fma.f64 -1/6 (*.f64 (*.f64 5 (*.f64 x x)) (pow.f64 (/.f64 -1 eps) 1/6)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))","(fma.f64 -1/6 (*.f64 (*.f64 (*.f64 x x) 5) (pow.f64 (/.f64 -1 eps) 1/6)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/12 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))))))","(+.f64 (fma.f64 -1/6 (*.f64 (*.f64 5 (*.f64 x x)) (pow.f64 (/.f64 -1 eps) 1/6)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (fma.f64 1/12 (fma.f64 2 (*.f64 (pow.f64 x 4) 10) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2))) (*.f64 1/72 (pow.f64 (*.f64 5 (*.f64 x x)) 2)))))","(fma.f64 -1/6 (*.f64 (*.f64 (*.f64 x x) 5) (pow.f64 (/.f64 -1 eps) 1/6)) (fma.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (fma.f64 1/12 (-.f64 (*.f64 (pow.f64 x 4) 20) (*.f64 25 (pow.f64 x 4))) (*.f64 1/72 (*.f64 25 (pow.f64 x 4)))) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)))","(fma.f64 -1/6 (*.f64 (*.f64 (*.f64 x x) 5) (pow.f64 (/.f64 -1 eps) 1/6)) (fma.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/6 (*.f64 10 (pow.f64 x 4))) (*.f64 (*.f64 25 (pow.f64 x 4)) -5/72)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 -1 eps) 1/6) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 -1 (pow.f64 eps 5)) 1/6) (+.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/12 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 1/72 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2)))) (*.f64 -1 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 13)) 1/6) (+.f64 (*.f64 1/36 (+.f64 (*.f64 2 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)) (+.f64 (*.f64 -6 (*.f64 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))) (*.f64 6 (+.f64 (*.f64 4 (pow.f64 x 6)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 4 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4))))))))) (+.f64 (*.f64 1/1296 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 3)) (*.f64 1/72 (*.f64 (+.f64 (*.f64 2 (+.f64 (*.f64 8 (pow.f64 x 4)) (*.f64 2 (pow.f64 x 4)))) (*.f64 -1 (pow.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)) 2))) (+.f64 (*.f64 4 (pow.f64 x 2)) (pow.f64 x 2)))))))))))","(+.f64 (fma.f64 -1/6 (*.f64 (*.f64 5 (*.f64 x x)) (pow.f64 (/.f64 -1 eps) 1/6)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)) (fma.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (fma.f64 1/12 (fma.f64 2 (*.f64 (pow.f64 x 4) 10) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2))) (*.f64 1/72 (pow.f64 (*.f64 5 (*.f64 x x)) 2))) (neg.f64 (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 13)) 1/6) (fma.f64 1/36 (fma.f64 2 (pow.f64 (*.f64 5 (*.f64 x x)) 3) (fma.f64 -6 (*.f64 (*.f64 5 (*.f64 x x)) (*.f64 (pow.f64 x 4) 10)) (*.f64 6 (fma.f64 4 (pow.f64 x 6) (*.f64 (*.f64 x x) (*.f64 (pow.f64 x 4) 6)))))) (fma.f64 1/1296 (pow.f64 (*.f64 5 (*.f64 x x)) 3) (*.f64 (*.f64 1/72 (fma.f64 2 (*.f64 (pow.f64 x 4) 10) (neg.f64 (pow.f64 (*.f64 5 (*.f64 x x)) 2)))) (*.f64 5 (*.f64 x x)))))))))","(fma.f64 -1/6 (*.f64 (*.f64 (*.f64 x x) 5) (pow.f64 (/.f64 -1 eps) 1/6)) (-.f64 (fma.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (fma.f64 1/12 (-.f64 (*.f64 (pow.f64 x 4) 20) (*.f64 25 (pow.f64 x 4))) (*.f64 1/72 (*.f64 25 (pow.f64 x 4)))) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6)) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 13)) 1/6) (fma.f64 1/36 (fma.f64 2 (*.f64 125 (pow.f64 (*.f64 x x) 3)) (fma.f64 6 (fma.f64 4 (pow.f64 x 6) (*.f64 (pow.f64 x 6) 6)) (*.f64 -6 (*.f64 5 (*.f64 (pow.f64 x 6) 10))))) (fma.f64 1/72 (*.f64 5 (*.f64 (*.f64 x x) (-.f64 (*.f64 (pow.f64 x 4) 20) (*.f64 25 (pow.f64 x 4))))) (*.f64 1/1296 (*.f64 125 (pow.f64 (*.f64 x x) 3))))))))","(-.f64 (fma.f64 -1/6 (*.f64 (*.f64 (*.f64 x x) 5) (pow.f64 (/.f64 -1 eps) 1/6)) (fma.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 7)) 1/6) (+.f64 (*.f64 1/6 (*.f64 10 (pow.f64 x 4))) (*.f64 (*.f64 25 (pow.f64 x 4)) -5/72)) (pow.f64 (neg.f64 (pow.f64 eps 5)) 1/6))) (*.f64 (pow.f64 (/.f64 -1 (pow.f64 eps 13)) 1/6) (fma.f64 1/36 (fma.f64 2 (*.f64 (pow.f64 x 6) 125) (fma.f64 6 (*.f64 (pow.f64 x 6) 10) (*.f64 -6 (*.f64 5 (*.f64 (pow.f64 x 6) 10))))) (fma.f64 1/72 (*.f64 5 (*.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) 20 (*.f64 -25 (pow.f64 x 4))))) (*.f64 1/1296 (*.f64 (pow.f64 x 6) 125))))))","(*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 eps) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 (cbrt.f64 eps) (cbrt.f64 -1) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (cbrt.f64 eps) (cbrt.f64 -1)))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2))))))","(fma.f64 (cbrt.f64 eps) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 eps 5))) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))))))","(fma.f64 (cbrt.f64 eps) (cbrt.f64 -1) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 eps 5))) (*.f64 (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5)) -1/9))))","(+.f64 (*.f64 (pow.f64 (*.f64 eps 1) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 2)) 1/3) (/.f64 (pow.f64 x 2) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 5/81 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 8)) 1/3) (/.f64 (pow.f64 x 6) (pow.f64 (cbrt.f64 -1) 8)))))))","(fma.f64 (cbrt.f64 eps) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 eps 5))) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 5/81 (cbrt.f64 (/.f64 1 (pow.f64 eps 8)))) (/.f64 (pow.f64 x 6) (pow.f64 (cbrt.f64 -1) 8))))))","(fma.f64 (cbrt.f64 eps) (cbrt.f64 -1) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 eps 5))) (/.f64 (pow.f64 x 4) (pow.f64 (cbrt.f64 -1) 5))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 eps eps))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (/.f64 (pow.f64 x 6) (pow.f64 (cbrt.f64 -1) 8)) (*.f64 5/81 (cbrt.f64 (/.f64 1 (pow.f64 eps 8))))))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))","(+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 -1/3 eps) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18))))","(fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) eps)) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))","(fma.f64 -1/9 (*.f64 (*.f64 eps eps) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18))) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 -1/3 eps) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)))))","(fma.f64 -1/9 (*.f64 eps (*.f64 eps (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18)))) (fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) eps)) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 eps 2) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/9))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3)))) (pow.f64 eps 3)) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 -1/3 (*.f64 eps (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))","(fma.f64 -1/9 (*.f64 (*.f64 eps eps) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18))) (fma.f64 -1/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 x 4))))) (*.f64 (pow.f64 eps 3) (cbrt.f64 (/.f64 1 (pow.f64 x 4))))) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 -1/3 eps) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18))))))","(fma.f64 -1/9 (*.f64 eps (*.f64 eps (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 14)) 1/18)))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 x 4))) 5/27)) (pow.f64 eps 3)) (fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) eps)) (cbrt.f64 (*.f64 x x)))))"]],"stop":[["node limit",1]],"time":69.138916015625,"type":"simplify"},{"compiler":[[15742,6218]],"time":114.419189453125,"type":"eval"},{"alts":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","next",0.3203125],["(pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)","fresh",13.342128759768443],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","done",0.33431625976844204],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","done",24.214644929817577]],"compiler":[[24,12],[13,9],[36,14],[10,6],[24,12],[13,9]],"count":[[430,4]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[426,1],"picked":[1,1]}],"min-error":[0],"time":108.02197265625,"type":"prune"},{"compiler":[[84,12]],"locations":[["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))",0.03125,true],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))",0.1328125,true],["(*.f64 x (sqrt.f64 x))",0.203125,true],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))",0.296875,true]],"time":11.31787109375,"type":"localize"},{"count":[[4,25]],"series":[["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","eps","-inf",0.237060546875],["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","eps","inf",0.214111328125],["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","eps","0",0.199951171875],["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","x","-inf",0.364013671875],["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","x","inf",0.294921875],["(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))","x","0",0.338134765625],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","eps","-inf",0.14501953125],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","eps","inf",0.158203125],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","eps","0",0.386962890625],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","x","-inf",0.60302734375],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","x","inf",0.424072265625],["(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","x","0",0.260986328125],["(*.f64 x (sqrt.f64 x))","x","-inf",0.302978515625],["(*.f64 x (sqrt.f64 x))","x","inf",0.22705078125],["(*.f64 x (sqrt.f64 x))","x","0",0.27490234375],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","eps","-inf",0.708984375],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","eps","inf",0.44189453125],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","eps","0",0.30615234375],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","x","-inf",1.530029296875],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","x","inf",1.06103515625],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","x","0",0.634033203125]],"time":9.41015625,"type":"series"},{"count":[[4,290]],"egraph":[[2,4619,27,0.026793001],[1,315,29,0.005988792],[0,13,64,0.000339958]],"inputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","(*.f64 x (sqrt.f64 x))","(fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))","(+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))) (cbrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (/.f64 (fma.f64 x x eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) eps)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) eps) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 eps 3) (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) eps) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (exp.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 (exp.f64 x) (exp.f64 (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 eps 3) (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 eps (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 1 (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 1 (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) 1 (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 eps) 2) (*.f64 (cbrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (sqrt.f64 x)) (sqrt.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (sqrt.f64 x)) (sqrt.f64 x)) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (sqrt.f64 x)) (sqrt.f64 x)) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (sqrt.f64 x)) (sqrt.f64 x)) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 x 3/2)) (pow.f64 x 1/4) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 x 3/2)) (pow.f64 x 1/4) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 x 3/2)) (pow.f64 x 1/4) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 x 3/2)) (pow.f64 x 1/4) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 eps) (*.f64 (sqrt.f64 eps) (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (sqrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 1/4) (sqrt.f64 (pow.f64 x 3/2)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 1/4) (sqrt.f64 (pow.f64 x 3/2)) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 1/4) (sqrt.f64 (pow.f64 x 3/2)) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 1/4) (sqrt.f64 (pow.f64 x 3/2)) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) eps (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) eps (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) eps (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) 1) (/.f64 (cbrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) 1) (/.f64 (sqrt.f64 eps) (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 eps (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (cbrt.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 eps) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (/.f64 (sqrt.f64 eps) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 eps (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 eps) 2) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (/.f64 (cbrt.f64 eps) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (-.f64 (sqrt.f64 x) (pow.f64 (fma.f64 x x eps) 1/4)) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (hypot.f64 x (sqrt.f64 eps))) 1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))) (cbrt.f64 (fma.f64 x x eps)) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 eps eps) (-.f64 x (hypot.f64 x (sqrt.f64 eps))) (fma.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 x)) (*.f64 -1 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 x)) (*.f64 (neg.f64 (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 x)) (*.f64 (neg.f64 (pow.f64 (fma.f64 x x eps) 1/4)) (pow.f64 (fma.f64 x x eps) 1/4)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 x 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 x 3/2))) (cbrt.f64 (exp.f64 (pow.f64 x 3/2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 x 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x 3/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 x 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 x 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 x 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 x 3/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 x 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 x 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 x 3/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3/2 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) eps)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x x eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 eps (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x eps) (fma.f64 (neg.f64 (cbrt.f64 eps)) (pow.f64 (cbrt.f64 eps) 2) eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x x eps) (+.f64 eps eps))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 x x eps))) (cbrt.f64 (exp.f64 (fma.f64 x x eps))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x x eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x x eps)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x x eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x x) eps)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x x eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 x x 0) eps)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x x eps) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (sqrt.f64 eps)) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x x eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x eps)) (pow.f64 (cbrt.f64 (fma.f64 x x eps)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x x eps)) (*.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps))) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x x eps)) 2) (cbrt.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x x eps) 1/4) (*.f64 (pow.f64 (fma.f64 x x eps) 1/4) (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 x x eps) 1/4) 3) (pow.f64 (fma.f64 x x eps) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (sqrt.f64 eps)) (-.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 x (sqrt.f64 eps)) (cbrt.f64 (fma.f64 x x eps))) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 eps 3)) (+.f64 (pow.f64 x 4) (fma.f64 eps eps (*.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 6) (pow.f64 eps 3)) (+.f64 (pow.f64 x 4) (-.f64 (*.f64 eps eps) (*.f64 (*.f64 x x) eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (*.f64 eps eps)) (fma.f64 x x eps))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x x eps) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (sqrt.f64 eps)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x eps) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x x eps) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x x eps)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x x eps) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x x eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 x) x) (exp.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (exp.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (exp.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x x))) (+.f64 1 (expm1.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 eps) (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 eps)) (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 eps) (+.f64 1 (expm1.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 eps)) (+.f64 1 (expm1.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x x eps) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x x eps)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x x eps)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (-.f64 x (hypot.f64 x (sqrt.f64 eps)))) (/.f64 (fma.f64 x x eps) (-.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 eps (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2) (neg.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) (neg.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2)) (/.f64 1 (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))) (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)) (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 eps (-.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))) (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) eps))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2)) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2)) (+.f64 (fma.f64 x x eps) (-.f64 (*.f64 x x) (*.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) (neg.f64 (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 x x eps) (*.f64 x x)) (-.f64 (hypot.f64 x (sqrt.f64 eps)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 x x (fma.f64 x x eps)) (*.f64 x (hypot.f64 x (sqrt.f64 eps)))) (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 x x eps) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (hypot.f64 x (sqrt.f64 eps))) eps) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (/.f64 1 (exp.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (hypot.f64 x (sqrt.f64 eps))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (hypot.f64 x (sqrt.f64 eps)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x (hypot.f64 x (sqrt.f64 eps)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (neg.f64 (sqrt.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 x (sqrt.f64 eps)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (hypot.f64 x (sqrt.f64 eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (hypot.f64 x (sqrt.f64 eps))) (cbrt.f64 (fma.f64 x x eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (sqrt.f64 x)) (sqrt.f64 x)) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (neg.f64 (cbrt.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x x eps)) (cbrt.f64 (hypot.f64 x (sqrt.f64 eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x x eps) 1/4) (pow.f64 (fma.f64 x x eps) 1/4) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 x 3/2)) (pow.f64 x 1/4) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 1/4) (sqrt.f64 (pow.f64 x 3/2)) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 x (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (neg.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 x x eps)) 2)) (sqrt.f64 (cbrt.f64 (fma.f64 x x eps))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 x)) (sqrt.f64 (neg.f64 x)) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 x 4))) (sqrt.f64 (pow.f64 (cbrt.f64 x) 2)) (hypot.f64 x (sqrt.f64 eps)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (hypot.f64 x (sqrt.f64 eps)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x x eps)) 2) 1/2) (pow.f64 (cbrt.f64 (fma.f64 x x eps)) 1/2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (neg.f64 (hypot.f64 x (sqrt.f64 eps))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 x) (cbrt.f64 x)) (cbrt.f64 (sqrt.f64 x)) (hypot.f64 x (sqrt.f64 eps)))))))"]],"rules":[["egg-rr",73],["egg-rr",47],["egg-rr",17],["egg-rr",153]],"stop":[["node limit",1]],"time":63.722900390625,"type":"rewrite"},{"count":[[315,313]],"egraph":[[5,7437,263,0.032561335],[4,5912,263,0.019746501],[3,1195,263,0.009853667],[2,356,268,0.002571626],[1,135,268,0.000875084],[0,48,277,0.00023775]],"inputs":[["(/.f64 eps x)","(/.f64 eps x)","(*.f64 1/2 (/.f64 eps x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(*.f64 -1 eps)","(pow.f64 x 2)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(*.f64 -1 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","x","x","(*.f64 2 x)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 eps x)","(/.f64 eps x)","(*.f64 1/2 (/.f64 eps x))","(*.f64 (/.f64 eps x) 1/2)","(*.f64 eps (/.f64 1/2 x))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (*.f64 (/.f64 eps x) 1/2))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (*.f64 (/.f64 eps x) 1/2))","(fma.f64 (/.f64 eps x) 1/2 (/.f64 (*.f64 eps eps) (/.f64 (pow.f64 x 3) 1/8)))","(*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 1/8 (/.f64 eps (*.f64 x x)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) 1/2)))","(fma.f64 (/.f64 eps x) 1/2 (fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (*.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3))))","(fma.f64 (/.f64 1/16 (pow.f64 x 5)) (pow.f64 eps 3) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 1/8 (/.f64 eps (*.f64 x x))))))","(fma.f64 (/.f64 eps x) 1/2 (*.f64 (*.f64 eps eps) (+.f64 (/.f64 (*.f64 eps 1/16) (pow.f64 x 5)) (/.f64 1/8 (pow.f64 x 3)))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (+.f64 (*.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7))) (+.f64 (*.f64 1/2 (/.f64 eps x)) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/2 (/.f64 eps x) (*.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))))))","(fma.f64 1/8 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 eps x) 1/2))))","(fma.f64 1/8 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) (fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 (/.f64 eps x) 1/2 (*.f64 (/.f64 5/128 (pow.f64 x 7)) (pow.f64 eps 4)))))","(fma.f64 1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (*.f64 (/.f64 eps x) (+.f64 1/2 (*.f64 1/8 (/.f64 eps (*.f64 x x)))))))","(fma.f64 (/.f64 eps x) 1/2 (fma.f64 5/128 (/.f64 (pow.f64 eps 4) (pow.f64 x 7)) (*.f64 (*.f64 eps eps) (+.f64 (/.f64 (*.f64 eps 1/16) (pow.f64 x 5)) (/.f64 1/8 (pow.f64 x 3))))))","(*.f64 -1 eps)","(neg.f64 eps)","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(*.f64 -1 eps)","(neg.f64 eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","(+.f64 (*.f64 -1 eps) (pow.f64 x 2))","(fma.f64 -1 eps (*.f64 x x))","(-.f64 (*.f64 x x) eps)","x","x","(*.f64 2 x)","(*.f64 x 2)","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (*.f64 2 x))","(fma.f64 -1/2 (/.f64 eps x) (*.f64 x 2))","(fma.f64 (/.f64 eps x) -1/2 (*.f64 x 2))","(fma.f64 x 2 (/.f64 (*.f64 eps -1/2) x))","(fma.f64 x 2 (*.f64 (/.f64 eps x) -1/2))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3)))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8)))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (*.f64 x 2)))","(fma.f64 (*.f64 (/.f64 eps (pow.f64 x 3)) eps) -1/8 (fma.f64 x 2 (/.f64 (*.f64 eps -1/2) x)))","(fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (*.f64 -1/8 (/.f64 eps (*.f64 x x))))))","(fma.f64 x 2 (*.f64 eps (+.f64 (/.f64 -1/2 x) (/.f64 -1/8 (/.f64 (pow.f64 x 3) eps)))))","(+.f64 (*.f64 -1/2 (/.f64 eps x)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5))) (*.f64 -1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))))))","(fma.f64 -1/2 (/.f64 eps x) (fma.f64 2 x (fma.f64 -1/16 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) (*.f64 (/.f64 (*.f64 eps eps) (pow.f64 x 3)) -1/8))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 x 2 (fma.f64 (/.f64 eps (/.f64 (pow.f64 x 3) eps)) -1/8 (*.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16))))","(fma.f64 (/.f64 eps x) -1/2 (fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 x 2 (*.f64 (/.f64 -1/8 (pow.f64 x 3)) (*.f64 eps eps)))))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 x 2 (*.f64 (/.f64 eps x) (+.f64 -1/2 (*.f64 -1/8 (/.f64 eps (*.f64 x x)))))))","(fma.f64 (/.f64 (pow.f64 eps 3) (pow.f64 x 5)) -1/16 (fma.f64 x 2 (*.f64 eps (+.f64 (/.f64 -1/2 x) (/.f64 -1/8 (/.f64 (pow.f64 x 3) eps))))))"]],"stop":[["node limit",1]],"time":51.659912109375,"type":"simplify"},{"compiler":[[6789,1807]],"time":40.79296875,"type":"eval"},{"alts":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","done",0.3203125],["(pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)","fresh",13.342128759768443],["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","done",0.33431625976844204],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))","done",24.214644929817577]],"compiler":[[24,12],[13,9],[36,14],[10,6]],"count":[[317,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[313,0],"picked":[1,1]}],"min-error":[0],"time":39.569091796875,"type":"prune"},{"accuracy":[0.30078125],"baseline":[0.30078125],"branch":[["x",0.30078125,1],["eps",0.30078125,1],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",0.30078125,1]],"compiler":[[3,2],[3,2],[10,6],[136,48]],"count":[[7,1]],"inputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (fma.f64 (*.f64 x (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 eps)))))","(pow.f64 (/.f64 (+.f64 x (hypot.f64 x (sqrt.f64 (neg.f64 eps)))) eps) -1)","(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (fma.f64 (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) (pow.f64 (fma.f64 x x (neg.f64 eps)) 1/4) x))","(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (*.f64 (*.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)) (cbrt.f64 (-.f64 (*.f64 x x) eps))) (cbrt.f64 (sqrt.f64 (-.f64 (*.f64 x x) eps)))))))","(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))","(+.f64 (*.f64 1/8 (/.f64 (pow.f64 eps 2) (pow.f64 x 3))) (*.f64 1/2 (/.f64 eps x)))","(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))"]],"link":["."],"name":["ENA, Section 1.4, Exercise 4d"],"oracle":[62.822534455365385],"outputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))"]],"time":13.5,"times":[["x",3.930908203125],["eps",3.8330078125],["(-.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps)))",3.841064453125]],"type":"regimes"},{"compiler":[[20,9]],"egraph":[[4,39,27,0.000202625],[3,36,27,0.000155625],[2,30,27,0.00010829200000000001],[1,19,27,6.6167e-5],[0,10,27,2.675e-5]],"inputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (-.f64 (*.f64 x x) (*.f64 x x)) eps) (+.f64 x (sqrt.f64 (-.f64 (*.f64 x x) eps))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.950927734375,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[20,9]],"remove-preprocessing":[[]],"time":9.6240234375,"type":"end"}]